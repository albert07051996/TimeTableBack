using System;
using System.Collections.Generic;
using Microsoft.EntityFrameworkCore;
using Rmg.DAL.DataBase.Entities;

namespace Rmg.DAL.Database;

public partial class _710Context : DbContext
{
    public _710Context()
    {
    }

    public _710Context(DbContextOptions<_710Context> options)
        : base(options)
    {
    }

    public virtual DbSet<Aaccod> Aaccods { get; set; }

    public virtual DbSet<Aacmut> Aacmuts { get; set; }

    public virtual DbSet<Aactbl> Aactbls { get; set; }

    public virtual DbSet<Absence> Absences { get; set; }

    public virtual DbSet<AbsenceEntitlement> AbsenceEntitlements { get; set; }

    public virtual DbSet<AbsenceMainType> AbsenceMainTypes { get; set; }

    public virtual DbSet<AbsenceType> AbsenceTypes { get; set; }

    public virtual DbSet<AbsencesAudit> AbsencesAudits { get; set; }

    public virtual DbSet<Accncd> Accncds { get; set; }

    public virtual DbSet<AccountAdministration> AccountAdministrations { get; set; }

    public virtual DbSet<AccountCategory> AccountCategories { get; set; }

    public virtual DbSet<AccountCategoryName> AccountCategoryNames { get; set; }

    public virtual DbSet<AccountClass> AccountClasses { get; set; }

    public virtual DbSet<AccountClassName> AccountClassNames { get; set; }

    public virtual DbSet<AccountConversionType> AccountConversionTypes { get; set; }

    public virtual DbSet<AccountMandatory> AccountMandatories { get; set; }

    public virtual DbSet<AccountReportCategory> AccountReportCategories { get; set; }

    public virtual DbSet<AccountStatus> AccountStatuses { get; set; }

    public virtual DbSet<AccountType> AccountTypes { get; set; }

    public virtual DbSet<AccountTypeProperty> AccountTypeProperties { get; set; }

    public virtual DbSet<ActivityNotification> ActivityNotifications { get; set; }

    public virtual DbSet<Address> Addresses { get; set; }

    public virtual DbSet<AddressPostCode> AddressPostCodes { get; set; }

    public virtual DbSet<AddressState> AddressStates { get; set; }

    public virtual DbSet<AddressType> AddressTypes { get; set; }

    public virtual DbSet<Aehrpayroll> Aehrpayrolls { get; set; }

    public virtual DbSet<Afgper> Afgpers { get; set; }

    public virtual DbSet<Amuta> Amutas { get; set; }

    public virtual DbSet<Amutak> Amutaks { get; set; }

    public virtual DbSet<Artbst> Artbsts { get; set; }

    public virtual DbSet<Artext> Artexts { get; set; }

    public virtual DbSet<Artgrp> Artgrps { get; set; }

    public virtual DbSet<Artlev> Artlevs { get; set; }

    public virtual DbSet<Artlnk> Artlnks { get; set; }

    public virtual DbSet<Artom> Artoms { get; set; }

    public virtual DbSet<Artver> Artvers { get; set; }

    public virtual DbSet<Athrpayroll> Athrpayrolls { get; set; }

    public virtual DbSet<Attachment> Attachments { get; set; }

    public virtual DbSet<BackgroundJobSetting> BackgroundJobSettings { get; set; }

    public virtual DbSet<BacoAccessServer> BacoAccessServers { get; set; }

    public virtual DbSet<BacoAppLog> BacoAppLogs { get; set; }

    public virtual DbSet<BacoAppLogApp> BacoAppLogApps { get; set; }

    public virtual DbSet<BacoAppLogDay> BacoAppLogDays { get; set; }

    public virtual DbSet<BacoAppLogHour> BacoAppLogHours { get; set; }

    public virtual DbSet<BacoDelegation> BacoDelegations { get; set; }

    public virtual DbSet<BacoDiscussion> BacoDiscussions { get; set; }

    public virtual DbSet<BacoDiscussionCategory> BacoDiscussionCategories { get; set; }

    public virtual DbSet<BacoDiscussionCount> BacoDiscussionCounts { get; set; }

    public virtual DbSet<BacoDiscussionFixedGroup> BacoDiscussionFixedGroups { get; set; }

    public virtual DbSet<BacoDiscussionFixedType> BacoDiscussionFixedTypes { get; set; }

    public virtual DbSet<BacoDiscussionGrole> BacoDiscussionGroles { get; set; }

    public virtual DbSet<BacoDiscussionGroup> BacoDiscussionGroups { get; set; }

    public virtual DbSet<BacoDiscussionLayoutLanguage> BacoDiscussionLayoutLanguages { get; set; }

    public virtual DbSet<BacoDiscussionNewsLayout> BacoDiscussionNewsLayouts { get; set; }

    public virtual DbSet<BacoDiscussionPicture> BacoDiscussionPictures { get; set; }

    public virtual DbSet<BacoDiscussionState> BacoDiscussionStates { get; set; }

    public virtual DbSet<BacoDiscussionStdPicture> BacoDiscussionStdPictures { get; set; }

    public virtual DbSet<BacoDiscussionSubCategory> BacoDiscussionSubCategories { get; set; }

    public virtual DbSet<BacoDiscussionVersion> BacoDiscussionVersions { get; set; }

    public virtual DbSet<BacoErrorLog> BacoErrorLogs { get; set; }

    public virtual DbSet<BacoFreeNumber> BacoFreeNumbers { get; set; }

    public virtual DbSet<BacoFunction> BacoFunctions { get; set; }

    public virtual DbSet<BacoFunctionRole> BacoFunctionRoles { get; set; }

    public virtual DbSet<BacoLoginLog> BacoLoginLogs { get; set; }

    public virtual DbSet<BacoProcessLog> BacoProcessLogs { get; set; }

    public virtual DbSet<BacoProduct> BacoProducts { get; set; }

    public virtual DbSet<BacoSearchTemplate> BacoSearchTemplates { get; set; }

    public virtual DbSet<BacoSearchTemplateField> BacoSearchTemplateFields { get; set; }

    public virtual DbSet<BacoSetting> BacoSettings { get; set; }

    public virtual DbSet<BacoUserGroup> BacoUserGroups { get; set; }

    public virtual DbSet<Balance> Balances { get; set; }

    public virtual DbSet<BankAccount> BankAccounts { get; set; }

    public virtual DbSet<BankAccountsView> BankAccountsViews { get; set; }

    public virtual DbSet<BankAuthorization> BankAuthorizations { get; set; }

    public virtual DbSet<BankBalancePerCurrencyView> BankBalancePerCurrencyViews { get; set; }

    public virtual DbSet<BankFormat> BankFormats { get; set; }

    public virtual DbSet<BankName> BankNames { get; set; }

    public virtual DbSet<BankStatementHeadersExView> BankStatementHeadersExViews { get; set; }

    public virtual DbSet<BankStatementHeadersView> BankStatementHeadersViews { get; set; }

    public virtual DbSet<BankTransaction> BankTransactions { get; set; }

    public virtual DbSet<Barcode> Barcodes { get; set; }

    public virtual DbSet<Bdgmth> Bdgmths { get; set; }

    public virtual DbSet<Bdgtbl> Bdgtbls { get; set; }

    public virtual DbSet<Bdgvr> Bdgvrs { get; set; }

    public virtual DbSet<BdpictureRef> BdpictureRefs { get; set; }

    public virtual DbSet<BdviewColumn> BdviewColumns { get; set; }

    public virtual DbSet<Bedryf> Bedryfs { get; set; }

    public virtual DbSet<Betcd> Betcds { get; set; }

    public virtual DbSet<BinaryIncomingChunk> BinaryIncomingChunks { get; set; }

    public virtual DbSet<BinaryIncomingChunks2> BinaryIncomingChunks2s { get; set; }

    public virtual DbSet<BinaryIncomingChunks3> BinaryIncomingChunks3s { get; set; }

    public virtual DbSet<BinaryIncomingMessage> BinaryIncomingMessages { get; set; }

    public virtual DbSet<BinaryIncomingMessages2> BinaryIncomingMessages2s { get; set; }

    public virtual DbSet<BinaryIncomingMessages3> BinaryIncomingMessages3s { get; set; }

    public virtual DbSet<BinaryOutgoingChunk> BinaryOutgoingChunks { get; set; }

    public virtual DbSet<BinaryOutgoingChunks2> BinaryOutgoingChunks2s { get; set; }

    public virtual DbSet<BinaryOutgoingChunks3> BinaryOutgoingChunks3s { get; set; }

    public virtual DbSet<BinaryOutgoingMessage> BinaryOutgoingMessages { get; set; }

    public virtual DbSet<BinaryOutgoingMessages2> BinaryOutgoingMessages2s { get; set; }

    public virtual DbSet<BinaryOutgoingMessages3> BinaryOutgoingMessages3s { get; set; }

    public virtual DbSet<Blob> Blobs { get; set; }

    public virtual DbSet<Bnkacc> Bnkaccs { get; set; }

    public virtual DbSet<Bnkkop> Bnkkops { get; set; }

    public virtual DbSet<Btwavk> Btwavks { get; set; }

    public virtual DbSet<Btwkpl> Btwkpls { get; set; }

    public virtual DbSet<Btwkpp> Btwkpps { get; set; }

    public virtual DbSet<Btwtr> Btwtrs { get; set; }

    public virtual DbSet<Btwvrt> Btwvrts { get; set; }

    public virtual DbSet<Budget> Budgets { get; set; }

    public virtual DbSet<CardSetting> CardSettings { get; set; }

    public virtual DbSet<CiFreeField> CiFreeFields { get; set; }

    public virtual DbSet<Cicmpy> Cicmpies { get; set; }

    public virtual DbSet<Cicntp> Cicntps { get; set; }

    public virtual DbSet<Cisect> Cisects { get; set; }

    public virtual DbSet<Cisize> Cisizes { get; set; }

    public virtual DbSet<Classification> Classifications { get; set; }

    public virtual DbSet<ClientFile> ClientFiles { get; set; }

    public virtual DbSet<CnfaccessControl> CnfaccessControls { get; set; }

    public virtual DbSet<CnfaspControl> CnfaspControls { get; set; }

    public virtual DbSet<Cnfconfiguration> Cnfconfigurations { get; set; }

    public virtual DbSet<Cnfentity> Cnfentities { get; set; }

    public virtual DbSet<CnfentityAction> CnfentityActions { get; set; }

    public virtual DbSet<CnfentityChild> CnfentityChildren { get; set; }

    public virtual DbSet<CnfentityMonitor> CnfentityMonitors { get; set; }

    public virtual DbSet<CnfentityProperty> CnfentityProperties { get; set; }

    public virtual DbSet<CnfentityStatus> CnfentityStatuses { get; set; }

    public virtual DbSet<CnfentityTab> CnfentityTabs { get; set; }

    public virtual DbSet<CnfentityType> CnfentityTypes { get; set; }

    public virtual DbSet<CnffunctionalComponent> CnffunctionalComponents { get; set; }

    public virtual DbSet<CnfmandatoryInheritedProperty> CnfmandatoryInheritedProperties { get; set; }

    public virtual DbSet<CnfmenuApplication> CnfmenuApplications { get; set; }

    public virtual DbSet<CnfmenuSection> CnfmenuSections { get; set; }

    public virtual DbSet<CnfmenuTab> CnfmenuTabs { get; set; }

    public virtual DbSet<CnfmoduleDeployment> CnfmoduleDeployments { get; set; }

    public virtual DbSet<CnfreportParameter> CnfreportParameters { get; set; }

    public virtual DbSet<CnfruleDeployment> CnfruleDeployments { get; set; }

    public virtual DbSet<CnfsearchTemplate> CnfsearchTemplates { get; set; }

    public virtual DbSet<CnfstringValue> CnfstringValues { get; set; }

    public virtual DbSet<Cnhrpayroll> Cnhrpayrolls { get; set; }

    public virtual DbSet<Comment> Comments { get; set; }

    public virtual DbSet<CompanyClass> CompanyClasses { get; set; }

    public virtual DbSet<CompanyClassName> CompanyClassNames { get; set; }

    public virtual DbSet<CompanyEmployee> CompanyEmployees { get; set; }

    public virtual DbSet<CompanyLog> CompanyLogs { get; set; }

    public virtual DbSet<CompanyParticipation> CompanyParticipations { get; set; }

    public virtual DbSet<CompetenceMatchProfile> CompetenceMatchProfiles { get; set; }

    public virtual DbSet<ConsolidationBalance> ConsolidationBalances { get; set; }

    public virtual DbSet<ConsolidationStructure> ConsolidationStructures { get; set; }

    public virtual DbSet<ContractParameter> ContractParameters { get; set; }

    public virtual DbSet<CostcenterClass> CostcenterClasses { get; set; }

    public virtual DbSet<CostcenterClassName> CostcenterClassNames { get; set; }

    public virtual DbSet<Credit> Credits { get; set; }

    public virtual DbSet<Crmpage> Crmpages { get; set; }

    public virtual DbSet<CrmpageContent> CrmpageContents { get; set; }

    public virtual DbSet<CurrencyPeriodExchangeRate> CurrencyPeriodExchangeRates { get; set; }

    public virtual DbSet<Dagbk> Dagbks { get; set; }

    public virtual DbSet<DaylightSavingDate> DaylightSavingDates { get; set; }

    public virtual DbSet<DdbrowseInfo> DdbrowseInfos { get; set; }

    public virtual DbSet<Ddcolumn> Ddcolumns { get; set; }

    public virtual DbSet<Ddindex> Ddindexes { get; set; }

    public virtual DbSet<DdindexColumn> DdindexColumns { get; set; }

    public virtual DbSet<Ddreference> Ddreferences { get; set; }

    public virtual DbSet<DdreferenceColumn> DdreferenceColumns { get; set; }

    public virtual DbSet<Ddtable> Ddtables { get; set; }

    public virtual DbSet<Ddtest> Ddtests { get; set; }

    public virtual DbSet<Debitr> Debitrs { get; set; }

    public virtual DbSet<Dehrpayroll> Dehrpayrolls { get; set; }

    public virtual DbSet<Dehrpayrollcontract> Dehrpayrollcontracts { get; set; }

    public virtual DbSet<DeletionLog> DeletionLogs { get; set; }

    public virtual DbSet<DivisionCreditor> DivisionCreditors { get; set; }

    public virtual DbSet<DivisionDebtor> DivisionDebtors { get; set; }

    public virtual DbSet<DivisionPerson> DivisionPeople { get; set; }

    public virtual DbSet<Dnbdun> Dnbduns { get; set; }

    public virtual DbSet<Dnbdunsaggregate> Dnbdunsaggregates { get; set; }

    public virtual DbSet<DocumentCorporateTag> DocumentCorporateTags { get; set; }

    public virtual DbSet<DocumentReference> DocumentReferences { get; set; }

    public virtual DbSet<DocumentStatistic> DocumentStatistics { get; set; }

    public virtual DbSet<DocumentTypeCorporateTag> DocumentTypeCorporateTags { get; set; }

    public virtual DbSet<EbcBasicType> EbcBasicTypes { get; set; }

    public virtual DbSet<EbcBrowser> EbcBrowsers { get; set; }

    public virtual DbSet<EbcColumnGroup> EbcColumnGroups { get; set; }

    public virtual DbSet<EbcComponent> EbcComponents { get; set; }

    public virtual DbSet<EbcComponentRelation> EbcComponentRelations { get; set; }

    public virtual DbSet<EbcComponentRelationType> EbcComponentRelationTypes { get; set; }

    public virtual DbSet<EbcComponentType> EbcComponentTypes { get; set; }

    public virtual DbSet<EbcDataComponentType> EbcDataComponentTypes { get; set; }

    public virtual DbSet<EbcDataLog> EbcDataLogs { get; set; }

    public virtual DbSet<EbcDefaultState> EbcDefaultStates { get; set; }

    public virtual DbSet<EbcDefaultType> EbcDefaultTypes { get; set; }

    public virtual DbSet<EbcEnabledState> EbcEnabledStates { get; set; }

    public virtual DbSet<EbcEntity> EbcEntities { get; set; }

    public virtual DbSet<EbcEntityRelation> EbcEntityRelations { get; set; }

    public virtual DbSet<EbcGroup> EbcGroups { get; set; }

    public virtual DbSet<EbcLogCustom> EbcLogCustoms { get; set; }

    public virtual DbSet<EbcOperationPermission> EbcOperationPermissions { get; set; }

    public virtual DbSet<EbcOperationType> EbcOperationTypes { get; set; }

    public virtual DbSet<EbcProp> EbcProps { get; set; }

    public virtual DbSet<EbcPropRelation> EbcPropRelations { get; set; }

    public virtual DbSet<EbcPropRelationState> EbcPropRelationStates { get; set; }

    public virtual DbSet<EbcPropRelationType> EbcPropRelationTypes { get; set; }

    public virtual DbSet<EbcPropType> EbcPropTypes { get; set; }

    public virtual DbSet<EbdataQueueEntry> EbdataQueueEntries { get; set; }

    public virtual DbSet<EblogEntry> EblogEntries { get; set; }

    public virtual DbSet<Ebmodule> Ebmodules { get; set; }

    public virtual DbSet<EntityFinancialTransaction> EntityFinancialTransactions { get; set; }

    public virtual DbSet<Epavlk> Epavlks { get; set; }

    public virtual DbSet<Epavlr> Epavlrs { get; set; }

    public virtual DbSet<Eshrpayroll> Eshrpayrolls { get; set; }

    public virtual DbSet<Eshrpayrollcontract> Eshrpayrollcontracts { get; set; }

    public virtual DbSet<Evbswz> Evbswzs { get; set; }

    public virtual DbSet<Event> Events { get; set; }

    public virtual DbSet<EventShare> EventShares { get; set; }

    public virtual DbSet<Evloc> Evlocs { get; set; }

    public virtual DbSet<ExactLicense> ExactLicenses { get; set; }

    public virtual DbSet<ExactLicenseBackup> ExactLicenseBackups { get; set; }

    public virtual DbSet<ExactOption> ExactOptions { get; set; }

    public virtual DbSet<ExactTrialModule> ExactTrialModules { get; set; }

    public virtual DbSet<Facard> Facards { get; set; }

    public virtual DbSet<Fadpre> Fadpres { get; set; }

    public virtual DbSet<Fadprm> Fadprms { get; set; }

    public virtual DbSet<Fadprt> Fadprts { get; set; }

    public virtual DbSet<Fagrp> Fagrps { get; set; }

    public virtual DbSet<Fakcod> Fakcods { get; set; }

    public virtual DbSet<Fakvcd> Fakvcds { get; set; }

    public virtual DbSet<Fatran> Fatrans { get; set; }

    public virtual DbSet<Favorite> Favorites { get; set; }

    public virtual DbSet<FavoriteCategory> FavoriteCategories { get; set; }

    public virtual DbSet<Feed> Feeds { get; set; }

    public virtual DbSet<FeedAction> FeedActions { get; set; }

    public virtual DbSet<FeedAttachment> FeedAttachments { get; set; }

    public virtual DbSet<FeedFilterTab> FeedFilterTabs { get; set; }

    public virtual DbSet<FeedShare> FeedShares { get; set; }

    public virtual DbSet<FilteredIdentity> FilteredIdentities { get; set; }

    public virtual DbSet<Frhkrg> Frhkrgs { get; set; }

    public virtual DbSet<Frhsrg> Frhsrgs { get; set; }

    public virtual DbSet<Frhstx> Frhstxes { get; set; }

    public virtual DbSet<Frkrg> Frkrgs { get; set; }

    public virtual DbSet<Frsrg> Frsrgs { get; set; }

    public virtual DbSet<Frstx> Frstxes { get; set; }

    public virtual DbSet<Frvkrg> Frvkrgs { get; set; }

    public virtual DbSet<Frvsrg> Frvsrgs { get; set; }

    public virtual DbSet<Frvstx> Frvstxes { get; set; }

    public virtual DbSet<Gbkmut> Gbkmuts { get; set; }

    public virtual DbSet<GlhistoryMap> GlhistoryMaps { get; set; }

    public virtual DbSet<Glmap> Glmaps { get; set; }

    public virtual DbSet<GroupMember> GroupMembers { get; set; }

    public virtual DbSet<GroupPolicy> GroupPolicies { get; set; }

    public virtual DbSet<Grtbk> Grtbks { get; set; }

    public virtual DbSet<GuidRelation> GuidRelations { get; set; }

    public virtual DbSet<Hashtag> Hashtags { get; set; }

    public virtual DbSet<HashtagReference> HashtagReferences { get; set; }

    public virtual DbSet<HourEntryDraft> HourEntryDrafts { get; set; }

    public virtual DbSet<HourEntryFavourite> HourEntryFavourites { get; set; }

    public virtual DbSet<HrcompResource> HrcompResources { get; set; }

    public virtual DbSet<HrcompTran> HrcompTrans { get; set; }

    public virtual DbSet<HrcompanyPeriod> HrcompanyPeriods { get; set; }

    public virtual DbSet<Hrcompetency> Hrcompetencies { get; set; }

    public virtual DbSet<HrcompetencyRating> HrcompetencyRatings { get; set; }

    public virtual DbSet<Hrcomponent> Hrcomponents { get; set; }

    public virtual DbSet<Hrcomponentitemlink> Hrcomponentitemlinks { get; set; }

    public virtual DbSet<HreffectivedateDataLog> HreffectivedateDataLogs { get; set; }

    public virtual DbSet<HremployeePeriod> HremployeePeriods { get; set; }

    public virtual DbSet<HrerrorLog> HrerrorLogs { get; set; }

    public virtual DbSet<Hrfin> Hrfins { get; set; }

    public virtual DbSet<Hrfint> Hrfints { get; set; }

    public virtual DbSet<Hrfree> Hrfrees { get; set; }

    public virtual DbSet<HrfreeField> HrfreeFields { get; set; }

    public virtual DbSet<HrhumresLink> HrhumresLinks { get; set; }

    public virtual DbSet<Hrjbtl> Hrjbtls { get; set; }

    public virtual DbSet<Hrloc> Hrlocs { get; set; }

    public virtual DbSet<HrmactivityCompetenceLink> HrmactivityCompetenceLinks { get; set; }

    public virtual DbSet<HrmainFint> HrmainFints { get; set; }

    public virtual DbSet<HrmcompentenceReviewProfile> HrmcompentenceReviewProfiles { get; set; }

    public virtual DbSet<Hrmcompetence> Hrmcompetences { get; set; }

    public virtual DbSet<HrmcompetenceGroup> HrmcompetenceGroups { get; set; }

    public virtual DbSet<HrmcompetenceHierarchy> HrmcompetenceHierarchies { get; set; }

    public virtual DbSet<HrmcompetenceLink> HrmcompetenceLinks { get; set; }

    public virtual DbSet<HrmcompetenceProfile> HrmcompetenceProfiles { get; set; }

    public virtual DbSet<HrmcompetenceRelation> HrmcompetenceRelations { get; set; }

    public virtual DbSet<HrmfieldType> HrmfieldTypes { get; set; }

    public virtual DbSet<HrmformElement> HrmformElements { get; set; }

    public virtual DbSet<HrmformLayout> HrmformLayouts { get; set; }

    public virtual DbSet<HrmpersonalObjective> HrmpersonalObjectives { get; set; }

    public virtual DbSet<HrmpersonalObjectiveHeader> HrmpersonalObjectiveHeaders { get; set; }

    public virtual DbSet<HrmselectionValue> HrmselectionValues { get; set; }

    public virtual DbSet<Hrpasswd> Hrpasswds { get; set; }

    public virtual DbSet<Hrpayroll> Hrpayrolls { get; set; }

    public virtual DbSet<HrprocessLog> HrprocessLogs { get; set; }

    public virtual DbSet<HrprocessRequest> HrprocessRequests { get; set; }

    public virtual DbSet<HrprocessType> HrprocessTypes { get; set; }

    public virtual DbSet<Hrrole> Hrroles { get; set; }

    public virtual DbSet<HrroleDef> HrroleDefs { get; set; }

    public virtual DbSet<HrroleLevel> HrroleLevels { get; set; }

    public virtual DbSet<Hrsk> Hrsks { get; set; }

    public virtual DbSet<Hrwdoc> Hrwdocs { get; set; }

    public virtual DbSet<Humre> Humres { get; set; }

    public virtual DbSet<HumresAudit> HumresAudits { get; set; }

    public virtual DbSet<HyperinflationaryPeriod> HyperinflationaryPeriods { get; set; }

    public virtual DbSet<IntegerRelation> IntegerRelations { get; set; }

    public virtual DbSet<IntegrationServer> IntegrationServers { get; set; }

    public virtual DbSet<Intfac> Intfacs { get; set; }

    public virtual DbSet<Inthav> Inthavs { get; set; }

    public virtual DbSet<Inthi> Inthis { get; set; }

    public virtual DbSet<Intlev> Intlevs { get; set; }

    public virtual DbSet<Intmtf> Intmtfs { get; set; }

    public virtual DbSet<Intnr> Intnrs { get; set; }

    public virtual DbSet<Intreg> Intregs { get; set; }

    public virtual DbSet<Intshp> Intshps { get; set; }

    public virtual DbSet<Intstl> Intstls { get; set; }

    public virtual DbSet<Inttb> Inttbs { get; set; }

    public virtual DbSet<Inttra> Inttras { get; set; }

    public virtual DbSet<Inttum> Intta { get; set; }

    public virtual DbSet<InvoiceProposalGroup> InvoiceProposalGroups { get; set; }

    public virtual DbSet<InvoiceProposalLine> InvoiceProposalLines { get; set; }

    public virtual DbSet<InvoiceTextLine> InvoiceTextLines { get; set; }

    public virtual DbSet<Item> Items { get; set; }

    public virtual DbSet<ItemAccount> ItemAccounts { get; set; }

    public virtual DbSet<ItemAssortment> ItemAssortments { get; set; }

    public virtual DbSet<ItemAttachment> ItemAttachments { get; set; }

    public virtual DbSet<ItemAttachmentArchive> ItemAttachmentArchives { get; set; }

    public virtual DbSet<ItemBasket> ItemBaskets { get; set; }

    public virtual DbSet<ItemCatalog> ItemCatalogs { get; set; }

    public virtual DbSet<ItemClass> ItemClasses { get; set; }

    public virtual DbSet<ItemClassLink> ItemClassLinks { get; set; }

    public virtual DbSet<ItemClassName> ItemClassNames { get; set; }

    public virtual DbSet<ItemCopyRelease> ItemCopyReleases { get; set; }

    public virtual DbSet<ItemCountry> ItemCountries { get; set; }

    public virtual DbSet<ItemCountryTranslation> ItemCountryTranslations { get; set; }

    public virtual DbSet<ItemDivision> ItemDivisions { get; set; }

    public virtual DbSet<ItemDivisionAccount> ItemDivisionAccounts { get; set; }

    public virtual DbSet<ItemDivisionAssortment> ItemDivisionAssortments { get; set; }

    public virtual DbSet<ItemDivisionWarehouse> ItemDivisionWarehouses { get; set; }

    public virtual DbSet<ItemNumber> ItemNumbers { get; set; }

    public virtual DbSet<ItemOvertime> ItemOvertimes { get; set; }

    public virtual DbSet<ItemPrice> ItemPrices { get; set; }

    public virtual DbSet<ItemProcess> ItemProcesses { get; set; }

    public virtual DbSet<ItemProcessType> ItemProcessTypes { get; set; }

    public virtual DbSet<ItemRelation> ItemRelations { get; set; }

    public virtual DbSet<ItemRelationType> ItemRelationTypes { get; set; }

    public virtual DbSet<ItemRelationTypeState> ItemRelationTypeStates { get; set; }

    public virtual DbSet<ItemRelease> ItemReleases { get; set; }

    public virtual DbSet<ItemReleaseStatus> ItemReleaseStatuses { get; set; }

    public virtual DbSet<ItemTranslation> ItemTranslations { get; set; }

    public virtual DbSet<ItemTranslationLog> ItemTranslationLogs { get; set; }

    public virtual DbSet<ItemUnit> ItemUnits { get; set; }

    public virtual DbSet<ItemViewColumn> ItemViewColumns { get; set; }

    public virtual DbSet<KeySet> KeySets { get; set; }

    public virtual DbSet<KeySets2> KeySets2s { get; set; }

    public virtual DbSet<Kplkop> Kplkops { get; set; }

    public virtual DbSet<Kplvrd> Kplvrds { get; set; }

    public virtual DbSet<Ksdrek> Ksdreks { get; set; }

    public virtual DbSet<Ksprek> Kspreks { get; set; }

    public virtual DbSet<Kstdr> Kstdrs { get; set; }

    public virtual DbSet<Kstpl> Kstpls { get; set; }

    public virtual DbSet<Land> Lands { get; set; }

    public virtual DbSet<LandClass> LandClasses { get; set; }

    public virtual DbSet<LandClassName> LandClassNames { get; set; }

    public virtual DbSet<LastAction> LastActions { get; set; }

    public virtual DbSet<Laycrd> Laycrds { get; set; }

    public virtual DbSet<Laydeb> Laydebs { get; set; }

    public virtual DbSet<Layout> Layouts { get; set; }

    public virtual DbSet<Laytype> Laytypes { get; set; }

    public virtual DbSet<LicenseUserLog> LicenseUserLogs { get; set; }

    public virtual DbSet<LicenseUserLogEse> LicenseUserLogEses { get; set; }

    public virtual DbSet<LicenseUserLogGlb> LicenseUserLogGlbs { get; set; }

    public virtual DbSet<LicenseUserSnapshot> LicenseUserSnapshots { get; set; }

    public virtual DbSet<LicenseWscallAudit> LicenseWscallAudits { get; set; }

    public virtual DbSet<LicenseWscallLog> LicenseWscallLogs { get; set; }

    public virtual DbSet<Magaz> Magazs { get; set; }

    public virtual DbSet<MailMergePending> MailMergePendings { get; set; }

    public virtual DbSet<MailMessage> MailMessages { get; set; }

    public virtual DbSet<Mapfil> Mapfils { get; set; }

    public virtual DbSet<Mapfld> Mapflds { get; set; }

    public virtual DbSet<Mapfor> Mapfors { get; set; }

    public virtual DbSet<Mapmsc> Mapmscs { get; set; }

    public virtual DbSet<MasterResourceSchedule> MasterResourceSchedules { get; set; }

    public virtual DbSet<MatchingCompetence> MatchingCompetences { get; set; }

    public virtual DbSet<Myhrpayroll> Myhrpayrolls { get; set; }

    public virtual DbSet<Nlhrpayroll> Nlhrpayrolls { get; set; }

    public virtual DbSet<Nlsal> Nlsals { get; set; }

    public virtual DbSet<NlsalHrFint> NlsalHrFints { get; set; }

    public virtual DbSet<NlsalSetting> NlsalSettings { get; set; }

    public virtual DbSet<NoiseWord> NoiseWords { get; set; }

    public virtual DbSet<Note> Notes { get; set; }

    public virtual DbSet<NoteLinkTableField> NoteLinkTableFields { get; set; }

    public virtual DbSet<Number> Numbers { get; set; }

    public virtual DbSet<OneTimePass> OneTimePasses { get; set; }

    public virtual DbSet<OneTimePassRequest> OneTimePassRequests { get; set; }

    public virtual DbSet<OnlineSession> OnlineSessions { get; set; }

    public virtual DbSet<Operation> Operations { get; set; }

    public virtual DbSet<OppPivotCurrency> OppPivotCurrencies { get; set; }

    public virtual DbSet<Opportunity> Opportunities { get; set; }

    public virtual DbSet<OpportunityAccount> OpportunityAccounts { get; set; }

    public virtual DbSet<OpportunityContact> OpportunityContacts { get; set; }

    public virtual DbSet<OpportunityHistory> OpportunityHistories { get; set; }

    public virtual DbSet<OpportunityItem> OpportunityItems { get; set; }

    public virtual DbSet<OpportunityProject> OpportunityProjects { get; set; }

    public virtual DbSet<OpportunityReason> OpportunityReasons { get; set; }

    public virtual DbSet<OpportunityRole> OpportunityRoles { get; set; }

    public virtual DbSet<OpportunitySource> OpportunitySources { get; set; }

    public virtual DbSet<Ordlev> Ordlevs { get; set; }

    public virtual DbSet<Ordlog> Ordlogs { get; set; }

    public virtual DbSet<Ordsel> Ordsels { get; set; }

    public virtual DbSet<OrganizationStructure> OrganizationStructures { get; set; }

    public virtual DbSet<Orhkrg> Orhkrgs { get; set; }

    public virtual DbSet<Orhsrg> Orhsrgs { get; set; }

    public virtual DbSet<Orhstx> Orhstxes { get; set; }

    public virtual DbSet<Orkrg> Orkrgs { get; set; }

    public virtual DbSet<Orsrg> Orsrgs { get; set; }

    public virtual DbSet<Orstx> Orstxes { get; set; }

    public virtual DbSet<Orvkrg> Orvkrgs { get; set; }

    public virtual DbSet<Orvsrg> Orvsrgs { get; set; }

    public virtual DbSet<Orvstx> Orvstxes { get; set; }

    public virtual DbSet<OutstandingTerm> OutstandingTerms { get; set; }

    public virtual DbSet<OutstandingTermLink> OutstandingTermLinks { get; set; }

    public virtual DbSet<PartnerActivation> PartnerActivations { get; set; }

    public virtual DbSet<PartnerActivationLog> PartnerActivationLogs { get; set; }

    public virtual DbSet<PartnerActivationRequest> PartnerActivationRequests { get; set; }

    public virtual DbSet<PayrollPlusCategory> PayrollPlusCategories { get; set; }

    public virtual DbSet<PayrollPlusComponent> PayrollPlusComponents { get; set; }

    public virtual DbSet<PayrollPlusDepartment> PayrollPlusDepartments { get; set; }

    public virtual DbSet<PayrollPlusEmployee> PayrollPlusEmployees { get; set; }

    public virtual DbSet<PayrollPlusEmployerCost> PayrollPlusEmployerCosts { get; set; }

    public virtual DbSet<PayrollPlusFunction> PayrollPlusFunctions { get; set; }

    public virtual DbSet<PayrollPlusWageResult> PayrollPlusWageResults { get; set; }

    public virtual DbSet<Perdat> Perdats { get; set; }

    public virtual DbSet<PeriodMap> PeriodMaps { get; set; }

    public virtual DbSet<PeriodsHrmpivotAnalysis> PeriodsHrmpivotAnalyses { get; set; }

    public virtual DbSet<Person> Persons { get; set; }

    public virtual DbSet<PersonalDataClassification> PersonalDataClassifications { get; set; }

    public virtual DbSet<PersonalDataDocMgt> PersonalDataDocMgts { get; set; }

    public virtual DbSet<PersonalDataLogging> PersonalDataLoggings { get; set; }

    public virtual DbSet<PersonalDataMgt> PersonalDataMgts { get; set; }

    public virtual DbSet<PersonalDataPersonMgt> PersonalDataPersonMgts { get; set; }

    public virtual DbSet<PersonalDataReqMgt> PersonalDataReqMgts { get; set; }

    public virtual DbSet<PersonalItem> PersonalItems { get; set; }

    public virtual DbSet<Poll> Polls { get; set; }

    public virtual DbSet<PollAnswer> PollAnswers { get; set; }

    public virtual DbSet<PollVote> PollVotes { get; set; }

    public virtual DbSet<Portal> Portals { get; set; }

    public virtual DbSet<PortalFrame> PortalFrames { get; set; }

    public virtual DbSet<PortalUsage> PortalUsages { get; set; }

    public virtual DbSet<Pospreset> Pospresets { get; set; }

    public virtual DbSet<Prafd> Prafds { get; set; }

    public virtual DbSet<Pred> Preds { get; set; }

    public virtual DbSet<PrfreeField> PrfreeFields { get; set; }

    public virtual DbSet<Prmember> Prmembers { get; set; }

    public virtual DbSet<ProductionTimeEntry> ProductionTimeEntries { get; set; }

    public virtual DbSet<ProductivityReport> ProductivityReports { get; set; }

    public virtual DbSet<ProjectAccount> ProjectAccounts { get; set; }

    public virtual DbSet<ProjectBudgetLine> ProjectBudgetLines { get; set; }

    public virtual DbSet<ProjectDeliverable> ProjectDeliverables { get; set; }

    public virtual DbSet<ProjectDeliverableVersion> ProjectDeliverableVersions { get; set; }

    public virtual DbSet<ProjectItem> ProjectItems { get; set; }

    public virtual DbSet<ProjectItemRate> ProjectItemRates { get; set; }

    public virtual DbSet<Prproject> Prprojects { get; set; }

    public virtual DbSet<PublicHoliday> PublicHolidays { get; set; }

    public virtual DbSet<Pwfunc> Pwfuncs { get; set; }

    public virtual DbSet<Pwmagaz> Pwmagazs { get; set; }

    public virtual DbSet<Pwrole> Pwroles { get; set; }

    public virtual DbSet<Pwrprm> Pwrprms { get; set; }

    public virtual DbSet<Pwruc> Pwrucs { get; set; }

    public virtual DbSet<QiinvoiceHeader> QiinvoiceHeaders { get; set; }

    public virtual DbSet<QiinvoiceLine> QiinvoiceLines { get; set; }

    public virtual DbSet<QuotationHeader> QuotationHeaders { get; set; }

    public virtual DbSet<QuotationLine> QuotationLines { get; set; }

    public virtual DbSet<Rate> Rates { get; set; }

    public virtual DbSet<RatingAmount> RatingAmounts { get; set; }

    public virtual DbSet<RatioDefinition> RatioDefinitions { get; set; }

    public virtual DbSet<RatioFilterAccount> RatioFilterAccounts { get; set; }

    public virtual DbSet<Recipe> Recipes { get; set; }

    public virtual DbSet<Report> Reports { get; set; }

    public virtual DbSet<ReportCategory> ReportCategories { get; set; }

    public virtual DbSet<ReportParameter> ReportParameters { get; set; }

    public virtual DbSet<ReportSecurity> ReportSecurities { get; set; }

    public virtual DbSet<RequestAction> RequestActions { get; set; }

    public virtual DbSet<RequestField> RequestFields { get; set; }

    public virtual DbSet<RequestFieldLabel> RequestFieldLabels { get; set; }

    public virtual DbSet<RequestFieldOption> RequestFieldOptions { get; set; }

    public virtual DbSet<RequestItem> RequestItems { get; set; }

    public virtual DbSet<RequestItemRate> RequestItemRates { get; set; }

    public virtual DbSet<RequestNotification> RequestNotifications { get; set; }

    public virtual DbSet<RequestPaymentType> RequestPaymentTypes { get; set; }

    public virtual DbSet<RequestPriority> RequestPriorities { get; set; }

    public virtual DbSet<RequestStatHistory> RequestStatHistories { get; set; }

    public virtual DbSet<RequestStatus> RequestStatuses { get; set; }

    public virtual DbSet<RequestTask> RequestTasks { get; set; }

    public virtual DbSet<RequestTypeAction> RequestTypeActions { get; set; }

    public virtual DbSet<RequestTypeStatus> RequestTypeStatuses { get; set; }

    public virtual DbSet<RequestViewColumn> RequestViewColumns { get; set; }

    public virtual DbSet<ResellerNews> ResellerNews { get; set; }

    public virtual DbSet<ResourceStatus> ResourceStatuses { get; set; }

    public virtual DbSet<ResourceType> ResourceTypes { get; set; }

    public virtual DbSet<Routing> Routings { get; set; }

    public virtual DbSet<SalesCycleDefinition> SalesCycleDefinitions { get; set; }

    public virtual DbSet<SalesCycleDefinitionStage> SalesCycleDefinitionStages { get; set; }

    public virtual DbSet<ScgroupsOrderSetting> ScgroupsOrderSettings { get; set; }

    public virtual DbSet<ScpcustomPage> ScpcustomPages { get; set; }

    public virtual DbSet<ScpfavoriteItem> ScpfavoriteItems { get; set; }

    public virtual DbSet<ScpgeneralSetting> ScpgeneralSettings { get; set; }

    public virtual DbSet<ScpitemCategoriesLink> ScpitemCategoriesLinks { get; set; }

    public virtual DbSet<ScpitemCategory> ScpitemCategories { get; set; }

    public virtual DbSet<ScpitemsPerSession> ScpitemsPerSessions { get; set; }

    public virtual DbSet<ScplogSalesOrderHeader> ScplogSalesOrderHeaders { get; set; }

    public virtual DbSet<ScplogSalesOrderLine> ScplogSalesOrderLines { get; set; }

    public virtual DbSet<ScppageSetting> ScppageSettings { get; set; }

    public virtual DbSet<Scpportal> Scpportals { get; set; }

    public virtual DbSet<ScpportalsEditRight> ScpportalsEditRights { get; set; }

    public virtual DbSet<ScpshippingLink> ScpshippingLinks { get; set; }

    public virtual DbSet<ScpshoppingCart> ScpshoppingCarts { get; set; }

    public virtual DbSet<Scptranslation> Scptranslations { get; set; }

    public virtual DbSet<Scpuser> Scpusers { get; set; }

    public virtual DbSet<ScpwidgetSetting> ScpwidgetSettings { get; set; }

    public virtual DbSet<SearchHistory> SearchHistories { get; set; }

    public virtual DbSet<SearchTemplate> SearchTemplates { get; set; }

    public virtual DbSet<SearchTemplateField> SearchTemplateFields { get; set; }

    public virtual DbSet<SessionContext> SessionContexts { get; set; }

    public virtual DbSet<SessionContext2> SessionContext2s { get; set; }

    public virtual DbSet<SessionContext3> SessionContext3s { get; set; }

    public virtual DbSet<Setting> Settings { get; set; }

    public virtual DbSet<ShareCapital> ShareCapitals { get; set; }

    public virtual DbSet<ShareMovement> ShareMovements { get; set; }

    public virtual DbSet<ShareRegister> ShareRegisters { get; set; }

    public virtual DbSet<ShippingDay> ShippingDays { get; set; }

    public virtual DbSet<Slrconfig> Slrconfigs { get; set; }

    public virtual DbSet<SmsactivityType> SmsactivityTypes { get; set; }

    public virtual DbSet<SmsactivityTypeLine> SmsactivityTypeLines { get; set; }

    public virtual DbSet<SmsagreementSet> SmsagreementSets { get; set; }

    public virtual DbSet<SmsagreementSetLine> SmsagreementSetLines { get; set; }

    public virtual DbSet<SmsconfigAgreementRegistry> SmsconfigAgreementRegistries { get; set; }

    public virtual DbSet<Smsconfiguration> Smsconfigurations { get; set; }

    public virtual DbSet<SmsconfigurationChildrenView> SmsconfigurationChildrenViews { get; set; }

    public virtual DbSet<SmsconfigurationHeader> SmsconfigurationHeaders { get; set; }

    public virtual DbSet<Smscontract> Smscontracts { get; set; }

    public virtual DbSet<SmscontractAgreement> SmscontractAgreements { get; set; }

    public virtual DbSet<SmscontractItem> SmscontractItems { get; set; }

    public virtual DbSet<SmscontractLink> SmscontractLinks { get; set; }

    public virtual DbSet<SmscontractRate> SmscontractRates { get; set; }

    public virtual DbSet<SmscontractTemplate> SmscontractTemplates { get; set; }

    public virtual DbSet<SmscontractTemplateAgrSet> SmscontractTemplateAgrSets { get; set; }

    public virtual DbSet<SmscontractType> SmscontractTypes { get; set; }

    public virtual DbSet<SmscostExportView> SmscostExportViews { get; set; }

    public virtual DbSet<SmscreatedDocument> SmscreatedDocuments { get; set; }

    public virtual DbSet<SmsdefaultContractRatesHeader> SmsdefaultContractRatesHeaders { get; set; }

    public virtual DbSet<SmsdefaultContractRatesLine> SmsdefaultContractRatesLines { get; set; }

    public virtual DbSet<SmsdpcompressedPlanningHeadersView> SmsdpcompressedPlanningHeadersViews { get; set; }

    public virtual DbSet<SmsdpcompressedPlanningLinesView> SmsdpcompressedPlanningLinesViews { get; set; }

    public virtual DbSet<SmsdpdetailedPlanningHeadersView> SmsdpdetailedPlanningHeadersViews { get; set; }

    public virtual DbSet<SmsdpdetailedPlanningLinesView> SmsdpdetailedPlanningLinesViews { get; set; }

    public virtual DbSet<SmsdpserviceContractHeadersView> SmsdpserviceContractHeadersViews { get; set; }

    public virtual DbSet<SmsdpserviceContractItemAgreementsView> SmsdpserviceContractItemAgreementsViews { get; set; }

    public virtual DbSet<SmsdpserviceContractLinksView> SmsdpserviceContractLinksViews { get; set; }

    public virtual DbSet<SmsdpserviceSlipHeadersView> SmsdpserviceSlipHeadersViews { get; set; }

    public virtual DbSet<SmsdpserviceSlipLinesView> SmsdpserviceSlipLinesViews { get; set; }

    public virtual DbSet<SmsinvoiceAttachment> SmsinvoiceAttachments { get; set; }

    public virtual DbSet<SmsinvoiceDatum> SmsinvoiceData { get; set; }

    public virtual DbSet<SmsinvoiceExportHeadersView> SmsinvoiceExportHeadersViews { get; set; }

    public virtual DbSet<SmsinvoiceExportLinesView> SmsinvoiceExportLinesViews { get; set; }

    public virtual DbSet<SmsinvoiceHeader> SmsinvoiceHeaders { get; set; }

    public virtual DbSet<SmsinvoiceLine> SmsinvoiceLines { get; set; }

    public virtual DbSet<SmsinvoiceScheduleView> SmsinvoiceScheduleViews { get; set; }

    public virtual DbSet<SmsjobDetail> SmsjobDetails { get; set; }

    public virtual DbSet<SmsjobHeader> SmsjobHeaders { get; set; }

    public virtual DbSet<SmspmbatchLog> SmspmbatchLogs { get; set; }

    public virtual DbSet<Smspmdatum> Smspmdata { get; set; }

    public virtual DbSet<Smspmlset> Smspmlsets { get; set; }

    public virtual DbSet<SmspmplanView> SmspmplanViews { get; set; }

    public virtual DbSet<SmspmproposeView> SmspmproposeViews { get; set; }

    public virtual DbSet<Smspmschedule> Smspmschedules { get; set; }

    public virtual DbSet<Smspmtype> Smspmtypes { get; set; }

    public virtual DbSet<Smsproblem> Smsproblems { get; set; }

    public virtual DbSet<SmsproblemSolutionLink> SmsproblemSolutionLinks { get; set; }

    public virtual DbSet<SmsresourceGroup> SmsresourceGroups { get; set; }

    public virtual DbSet<SmsresourceGroupMember> SmsresourceGroupMembers { get; set; }

    public virtual DbSet<SmsresponseTime> SmsresponseTimes { get; set; }

    public virtual DbSet<SmsserviceActivity> SmsserviceActivities { get; set; }

    public virtual DbSet<SmsserviceActivityDocLink> SmsserviceActivityDocLinks { get; set; }

    public virtual DbSet<Smssolution> Smssolutions { get; set; }

    public virtual DbSet<SocialChatLine> SocialChatLines { get; set; }

    public virtual DbSet<SocialChatRoom> SocialChatRooms { get; set; }

    public virtual DbSet<SocialChatRoomMember> SocialChatRoomMembers { get; set; }

    public virtual DbSet<SocialGroup> SocialGroups { get; set; }

    public virtual DbSet<SocialIdentity> SocialIdentities { get; set; }

    public virtual DbSet<SocialLike> SocialLikes { get; set; }

    public virtual DbSet<SocialMediaReference> SocialMediaReferences { get; set; }

    public virtual DbSet<SocialMediaType> SocialMediaTypes { get; set; }

    public virtual DbSet<Source> Sources { get; set; }

    public virtual DbSet<Ssrsauthorization> Ssrsauthorizations { get; set; }

    public virtual DbSet<SsrsdataSource> SsrsdataSources { get; set; }

    public virtual DbSet<Ssrsdrillthrough> Ssrsdrillthroughs { get; set; }

    public virtual DbSet<SsrsdrillthroughParameter> SsrsdrillthroughParameters { get; set; }

    public virtual DbSet<SsrsmoduleSource> SsrsmoduleSources { get; set; }

    public virtual DbSet<SsrsparameterSource> SsrsparameterSources { get; set; }

    public virtual DbSet<SsrspersonAuthorization> SsrspersonAuthorizations { get; set; }

    public virtual DbSet<Ssrsreport> Ssrsreports { get; set; }

    public virtual DbSet<SsrsreportDataSource> SsrsreportDataSources { get; set; }

    public virtual DbSet<SsrsreportGroup> SsrsreportGroups { get; set; }

    public virtual DbSet<SsrsreportParameter> SsrsreportParameters { get; set; }

    public virtual DbSet<Ssrsschedule> Ssrsschedules { get; set; }

    public virtual DbSet<Ssrssubscription> Ssrssubscriptions { get; set; }

    public virtual DbSet<Staffl> Staffls { get; set; }

    public virtual DbSet<StepRelation> StepRelations { get; set; }

    public virtual DbSet<Stfom> Stfoms { get; set; }

    public virtual DbSet<StockOption> StockOptions { get; set; }

    public virtual DbSet<StringRelation> StringRelations { get; set; }

    public virtual DbSet<SubSector> SubSectors { get; set; }

    public virtual DbSet<Subledgermasterview> Subledgermasterviews { get; set; }

    public virtual DbSet<SynchronizationLog> SynchronizationLogs { get; set; }

    public virtual DbSet<Syscrc> Syscrcs { get; set; }

    public virtual DbSet<Sysmnu> Sysmnus { get; set; }

    public virtual DbSet<Sysmnuusr> Sysmnuusrs { get; set; }

    public virtual DbSet<Taal> Taals { get; set; }

    public virtual DbSet<Tag> Tags { get; set; }

    public virtual DbSet<TagIndividualWeight> TagIndividualWeights { get; set; }

    public virtual DbSet<TagReference> TagReferences { get; set; }

    public virtual DbSet<TaxSchedule> TaxSchedules { get; set; }

    public virtual DbSet<Taxcod> Taxcods { get; set; }

    public virtual DbSet<Taxdef> Taxdefs { get; set; }

    public virtual DbSet<Taxtransactionsview> Taxtransactionsviews { get; set; }

    public virtual DbSet<TempBalGraph> TempBalGraphs { get; set; }

    public virtual DbSet<TempCount> TempCounts { get; set; }

    public virtual DbSet<TempFinChart> TempFinCharts { get; set; }

    public virtual DbSet<TempFinMap> TempFinMaps { get; set; }

    public virtual DbSet<TempMonthPeriod> TempMonthPeriods { get; set; }

    public virtual DbSet<TempPeriod> TempPeriods { get; set; }

    public virtual DbSet<TempPeriodDate> TempPeriodDates { get; set; }

    public virtual DbSet<TempPeriodsPivotAnalysis> TempPeriodsPivotAnalyses { get; set; }

    public virtual DbSet<TempPeriodsPivotAnalysisDetail> TempPeriodsPivotAnalysisDetails { get; set; }

    public virtual DbSet<TempPsascheduledTable> TempPsascheduledTables { get; set; }

    public virtual DbSet<TempSchedule> TempSchedules { get; set; }

    public virtual DbSet<TempTable1> TempTable1s { get; set; }

    public virtual DbSet<Template> Templates { get; set; }

    public virtual DbSet<Term> Terms { get; set; }

    //public virtual DbSet<TimeZone> TimeZones { get; set; }

    public virtual DbSet<TimelineCoverPhoto> TimelineCoverPhotos { get; set; }

    public virtual DbSet<TimelinePersonalInfo> TimelinePersonalInfos { get; set; }

    public virtual DbSet<TimesheetBulkPlanning> TimesheetBulkPlannings { get; set; }

    public virtual DbSet<TimesheetCustomerRate> TimesheetCustomerRates { get; set; }

    public virtual DbSet<TimesheetDivisionSetting> TimesheetDivisionSettings { get; set; }

    public virtual DbSet<TimesheetIcsetting> TimesheetIcsettings { get; set; }

    public virtual DbSet<TimesheetInternalRate> TimesheetInternalRates { get; set; }

    public virtual DbSet<TimesheetProjectRate> TimesheetProjectRates { get; set; }

    public virtual DbSet<TransactionType> TransactionTypes { get; set; }

    public virtual DbSet<TransactionsPending> TransactionsPendings { get; set; }

    public virtual DbSet<UserPreference> UserPreferences { get; set; }

    public virtual DbSet<Ushrpayroll> Ushrpayrolls { get; set; }

    public virtual DbSet<Usrbar> Usrbars { get; set; }

    public virtual DbSet<Usrmnu> Usrmnus { get; set; }

    public virtual DbSet<Valutum> Valuta { get; set; }

    public virtual DbSet<Verslg> Verslgs { get; set; }

    public virtual DbSet<Viesresult> Viesresults { get; set; }

    public virtual DbSet<Viesvalidation> Viesvalidations { get; set; }

    public virtual DbSet<Voorrd> Voorrds { get; set; }

    public virtual DbSet<WbslineVersion> WbslineVersions { get; set; }

    public virtual DbSet<WebContent> WebContents { get; set; }

    public virtual DbSet<WebStyle> WebStyles { get; set; }

    public virtual DbSet<WeekTimesheet> WeekTimesheets { get; set; }

    public virtual DbSet<Widget> Widgets { get; set; }

    public virtual DbSet<Word> Words { get; set; }

    public virtual DbSet<WordMergeAuthorization> WordMergeAuthorizations { get; set; }

    public virtual DbSet<WordMergeDocument> WordMergeDocuments { get; set; }

    public virtual DbSet<WordMergeGroup> WordMergeGroups { get; set; }

    public virtual DbSet<WordMergeLog> WordMergeLogs { get; set; }

    public virtual DbSet<WordMergePersonAuthorization> WordMergePersonAuthorizations { get; set; }

    public virtual DbSet<WordReference> WordReferences { get; set; }

    public virtual DbSet<WordSynonym> WordSynonyms { get; set; }

    public virtual DbSet<WorkBreakdownStructureLine> WorkBreakdownStructureLines { get; set; }

    public virtual DbSet<WorkSchedule> WorkSchedules { get; set; }

    public virtual DbSet<WorkScheduleGroup> WorkScheduleGroups { get; set; }

    public virtual DbSet<WorkScheduleLink> WorkScheduleLinks { get; set; }

    public virtual DbSet<Workcenter> Workcenters { get; set; }

    public virtual DbSet<WorkflowOwnershipOption> WorkflowOwnershipOptions { get; set; }

    public virtual DbSet<Workspace> Workspaces { get; set; }

    public virtual DbSet<WorkspaceCustomization> WorkspaceCustomizations { get; set; }

    public virtual DbSet<WorkspaceNotification> WorkspaceNotifications { get; set; }

    public virtual DbSet<WorkspacePin> WorkspacePins { get; set; }

    public virtual DbSet<WorkspaceSharedAccount> WorkspaceSharedAccounts { get; set; }

    public virtual DbSet<WorkspaceSharedCostCenter> WorkspaceSharedCostCenters { get; set; }

    public virtual DbSet<WorkspaceSharedCostCenterGroup> WorkspaceSharedCostCenterGroups { get; set; }

    public virtual DbSet<WorkspaceSharedDivision> WorkspaceSharedDivisions { get; set; }

    public virtual DbSet<WorkspaceSharedJobGroup> WorkspaceSharedJobGroups { get; set; }

    public virtual DbSet<WorkspaceSharedJobTitle> WorkspaceSharedJobTitles { get; set; }

    public virtual DbSet<WorkspaceSharedPerson> WorkspaceSharedPeople { get; set; }

    public virtual DbSet<WorkspaceSharedProject> WorkspaceSharedProjects { get; set; }

    public virtual DbSet<WorkspaceSharedRole> WorkspaceSharedRoles { get; set; }

    public virtual DbSet<Xmldatum> Xmldata { get; set; }

    public virtual DbSet<Xmldefinition> Xmldefinitions { get; set; }

    public virtual DbSet<XmldefinitionsTemplate> XmldefinitionsTemplates { get; set; }

    public virtual DbSet<Xmlevent> Xmlevents { get; set; }

    public virtual DbSet<Xmlfile> Xmlfiles { get; set; }

    public virtual DbSet<XmlgltransactionsLog> XmlgltransactionsLogs { get; set; }

    public virtual DbSet<Xmlreplication> Xmlreplications { get; set; }

    public virtual DbSet<XmlreplicationSource> XmlreplicationSources { get; set; }

    public virtual DbSet<Xmltopic> Xmltopics { get; set; }

    public virtual DbSet<XmltopicDefinition> XmltopicDefinitions { get; set; }

    public virtual DbSet<XmltopicHistory> XmltopicHistories { get; set; }

    public virtual DbSet<XmltopicsDefinition> XmltopicsDefinitions { get; set; }

    public virtual DbSet<_1Add6m> _1Add6ms { get; set; }

    public virtual DbSet<_1Hrview> _1Hrviews { get; set; }

    public virtual DbSet<_1manager> _1managers { get; set; }

//    protected override void OnConfiguring(DbContextOptionsBuilder optionsBuilder)
//#warning To protect potentially sensitive information in your connection string, you should move it out of source code. You can avoid scaffolding the connection string by using the Name= syntax to read it from configuration - see https://go.microsoft.com/fwlink/?linkid=2131148. For more guidance on storing connection strings, see https://go.microsoft.com/fwlink/?LinkId=723263.
//        => optionsBuilder.UseSqlServer("Server=.\\SQL2019;Database=710;Trusted_Connection=True;TrustServerCertificate=True");

    protected override void OnModelCreating(ModelBuilder modelBuilder)
    {
        modelBuilder.Entity<Aaccod>(entity =>
        {
            entity.HasKey(e => e.Id).IsClustered(false);

            entity.ToTable("aaccod");

            entity.HasIndex(e => e.AnalytFld, "aaccod")
                .IsUnique()
                .IsClustered();

            entity.Property(e => e.Id).HasColumnName("ID");
            entity.Property(e => e.Active)
                .HasDefaultValue((byte)1)
                .HasColumnName("active");
            entity.Property(e => e.Adjustable)
                .HasDefaultValue((byte)1)
                .HasColumnName("adjustable");
            entity.Property(e => e.Allocation).HasColumnName("allocation");
            entity.Property(e => e.AnalytFieldname)
                .HasMaxLength(30)
                .HasColumnName("analyt_fieldname");
            entity.Property(e => e.AnalytFld)
                .HasMaxLength(20)
                .HasColumnName("analyt_fld");
            entity.Property(e => e.AnalytTbl)
                .HasMaxLength(10)
                .IsFixedLength()
                .HasColumnName("analyt_tbl");
            entity.Property(e => e.Balanced).HasColumnName("balanced");
            entity.Property(e => e.Capitals).HasColumnName("capitals");
            entity.Property(e => e.Descr300)
                .HasMaxLength(30)
                .HasColumnName("descr30_0");
            entity.Property(e => e.Descr301)
                .HasMaxLength(30)
                .HasColumnName("descr30_1");
            entity.Property(e => e.Descr302)
                .HasMaxLength(30)
                .HasColumnName("descr30_2");
            entity.Property(e => e.Descr303)
                .HasMaxLength(30)
                .HasColumnName("descr30_3");
            entity.Property(e => e.Descr304)
                .HasMaxLength(30)
                .HasColumnName("descr30_4");
            entity.Property(e => e.Expression)
                .HasMaxLength(200)
                .HasColumnName("expression");
            entity.Property(e => e.Length).HasColumnName("length");
            entity.Property(e => e.LinktoAssets).HasColumnName("linkto_assets");
            entity.Property(e => e.LinktoCreditors).HasColumnName("linkto_creditors");
            entity.Property(e => e.LinktoDebtors).HasColumnName("linkto_debtors");
            entity.Property(e => e.LinktoGlaccounts).HasColumnName("linkto_glaccounts");
            entity.Property(e => e.LinktoHumres).HasColumnName("linkto_humres");
            entity.Property(e => e.LinktoItems).HasColumnName("linkto_items");
            entity.Property(e => e.LinktoProjects).HasColumnName("linkto_projects");
            entity.Property(e => e.LinktoTable1).HasColumnName("linkto_table1");
            entity.Property(e => e.LinktoTable10).HasColumnName("linkto_table10");
            entity.Property(e => e.LinktoTable2).HasColumnName("linkto_table2");
            entity.Property(e => e.LinktoTable3).HasColumnName("linkto_table3");
            entity.Property(e => e.LinktoTable4).HasColumnName("linkto_table4");
            entity.Property(e => e.LinktoTable5).HasColumnName("linkto_table5");
            entity.Property(e => e.LinktoTable6).HasColumnName("linkto_table6");
            entity.Property(e => e.LinktoTable7).HasColumnName("linkto_table7");
            entity.Property(e => e.LinktoTable8).HasColumnName("linkto_table8");
            entity.Property(e => e.LinktoTable9).HasColumnName("linkto_table9");
            entity.Property(e => e.Mandatory).HasColumnName("mandatory");
            entity.Property(e => e.MultipleLines).HasColumnName("multiple_lines");
            entity.Property(e => e.Positive).HasColumnName("positive");
            entity.Property(e => e.SeqNo).HasColumnName("seq_no");
            entity.Property(e => e.Syscreated)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("syscreated");
            entity.Property(e => e.Syscreator).HasColumnName("syscreator");
            entity.Property(e => e.Sysguid)
                .HasDefaultValueSql("(newid())")
                .HasColumnName("sysguid");
            entity.Property(e => e.Sysmodified)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("sysmodified");
            entity.Property(e => e.Sysmodifier).HasColumnName("sysmodifier");
            entity.Property(e => e.Timestamp)
                .IsRowVersion()
                .IsConcurrencyToken()
                .HasColumnName("timestamp");
            entity.Property(e => e.Xprecision).HasColumnName("xprecision");
        });

        modelBuilder.Entity<Aacmut>(entity =>
        {
            entity.HasKey(e => e.MutnrAam).IsClustered(false);

            entity.ToTable("aacmut");

            entity.HasIndex(e => e.MutnrAam, "aacmut_Index").IsClustered();

            entity.HasIndex(e => new { e.Typerecord, e.Taxtype, e.Taxcode, e.Entryorigin, e.Entrylevel, e.MutnrAam }, "aactax").IsUnique();

            entity.HasIndex(e => new { e.Typerecord, e.Status, e.Reknr, e.Artcode, e.Artgrp, e.Crdnr, e.Debnr, e.Bkjrcode, e.Periode, e.Datum, e.MutnrAam }, "aammut").IsUnique();

            entity.HasIndex(e => new { e.AmutasId, e.Typerecord }, "amutas");

            entity.HasIndex(e => new { e.Typerecord, e.Manurecode, e.Mutcode, e.Deliverydate, e.MutnrAam }, "ecgmmc").IsUnique();

            entity.HasIndex(e => new { e.Typerecord, e.Manurecode, e.Mutnragro, e.MutnrAam }, "ecgmut").IsUnique();

            entity.HasIndex(e => new { e.Typerecord, e.Bkjrcode, e.Manurecode, e.Sprodcodever, e.Seqnr53, e.MutnrAam }, "ecgved").IsUnique();

            entity.HasIndex(e => new { e.Typerecord, e.Bkjrcode, e.Manurecode, e.Sprodcodever, e.Deliverydate, e.Seqnr53, e.MutnrAam }, "ecgves").IsUnique();

            entity.HasIndex(e => e.AaCreditorId1, "ix_aa_creditor_id1");

            entity.HasIndex(e => e.AaCreditorId2, "ix_aa_creditor_id2");

            entity.HasIndex(e => e.AaDebtorId1, "ix_aa_debtor_id1");

            entity.HasIndex(e => e.Crdnr, "ix_crdnr");

            entity.HasIndex(e => e.Debnr, "ix_debnr");

            entity.HasIndex(e => new { e.AmutakId, e.AmutasId, e.GbkmutId, e.TmutakId, e.TmutasId, e.MutnrAam }, "lnkamk").IsUnique();

            entity.HasIndex(e => new { e.FrkrgId, e.FrsrgId, e.FrvkrgId, e.FrvsrgId, e.FrhkrgId, e.FrhsrgId, e.MutnrAam }, "lnkfrk").IsUnique();

            entity.HasIndex(e => new { e.OrkrgId, e.OrsrgId, e.OrvkrgId, e.OrvsrgId, e.OrhkrgId, e.OrhsrgId, e.MutnrAam }, "lnkkrg").IsUnique();

            entity.HasIndex(e => new { e.EvfakkId, e.EvfaksId, e.FakkrgId, e.EvbstkId, e.EvbstsId, e.FaksrgId, e.MutnrAam }, "lnkvfk").IsUnique();

            entity.HasIndex(e => new { e.EvontkId, e.EvontsId, e.EvhonkId, e.EvhonsId, e.MutnrAam }, "lnkvok").IsUnique();

            entity.Property(e => e.MutnrAam).HasColumnName("mutnr_aam");
            entity.Property(e => e.AaAmountdc1).HasColumnName("aa_amountdc1");
            entity.Property(e => e.AaAmountdc2).HasColumnName("aa_amountdc2");
            entity.Property(e => e.AaAmountdc3).HasColumnName("aa_amountdc3");
            entity.Property(e => e.AaAmountdc4).HasColumnName("aa_amountdc4");
            entity.Property(e => e.AaAmountdc5).HasColumnName("aa_amountdc5");
            entity.Property(e => e.AaAmountfc1).HasColumnName("aa_amountfc1");
            entity.Property(e => e.AaAmountfc2).HasColumnName("aa_amountfc2");
            entity.Property(e => e.AaAmountfc3).HasColumnName("aa_amountfc3");
            entity.Property(e => e.AaAmountfc4).HasColumnName("aa_amountfc4");
            entity.Property(e => e.AaAmountfc5).HasColumnName("aa_amountfc5");
            entity.Property(e => e.AaAssetcode1)
                .HasMaxLength(20)
                .HasColumnName("aa_assetcode1");
            entity.Property(e => e.AaAssetcode2)
                .HasMaxLength(20)
                .HasColumnName("aa_assetcode2");
            entity.Property(e => e.AaBankaccno1)
                .HasMaxLength(34)
                .HasColumnName("aa_bankaccno1");
            entity.Property(e => e.AaBankaccno2)
                .HasMaxLength(34)
                .HasColumnName("aa_bankaccno2");
            entity.Property(e => e.AaCostcenter1)
                .HasMaxLength(8)
                .IsFixedLength()
                .HasColumnName("aa_costcenter1");
            entity.Property(e => e.AaCostcenter2)
                .HasMaxLength(8)
                .IsFixedLength()
                .HasColumnName("aa_costcenter2");
            entity.Property(e => e.AaCostunit1)
                .HasMaxLength(8)
                .IsFixedLength()
                .HasColumnName("aa_costunit1");
            entity.Property(e => e.AaCostunit2)
                .HasMaxLength(8)
                .IsFixedLength()
                .HasColumnName("aa_costunit2");
            entity.Property(e => e.AaCountry1)
                .HasMaxLength(3)
                .IsFixedLength()
                .HasColumnName("aa_country1");
            entity.Property(e => e.AaCountry2)
                .HasMaxLength(3)
                .IsFixedLength()
                .HasColumnName("aa_country2");
            entity.Property(e => e.AaCreditorId1)
                .HasMaxLength(6)
                .IsFixedLength()
                .HasColumnName("aa_creditor_id1");
            entity.Property(e => e.AaCreditorId2)
                .HasMaxLength(6)
                .IsFixedLength()
                .HasColumnName("aa_creditor_id2");
            entity.Property(e => e.AaDate1)
                .HasColumnType("datetime")
                .HasColumnName("aa_date1");
            entity.Property(e => e.AaDate2)
                .HasColumnType("datetime")
                .HasColumnName("aa_date2");
            entity.Property(e => e.AaDate3)
                .HasColumnType("datetime")
                .HasColumnName("aa_date3");
            entity.Property(e => e.AaDate4)
                .HasColumnType("datetime")
                .HasColumnName("aa_date4");
            entity.Property(e => e.AaDate5)
                .HasColumnType("datetime")
                .HasColumnName("aa_date5");
            entity.Property(e => e.AaDebtorId1)
                .HasMaxLength(6)
                .IsFixedLength()
                .HasColumnName("aa_debtor_id1");
            entity.Property(e => e.AaDebtorId2)
                .HasMaxLength(6)
                .IsFixedLength()
                .HasColumnName("aa_debtor_id2");
            entity.Property(e => e.AaDelMethod1)
                .HasMaxLength(5)
                .IsFixedLength()
                .HasColumnName("aa_del_method1");
            entity.Property(e => e.AaDelMethod2)
                .HasMaxLength(5)
                .IsFixedLength()
                .HasColumnName("aa_del_method2");
            entity.Property(e => e.AaGlAcc1)
                .HasMaxLength(9)
                .IsFixedLength()
                .HasColumnName("aa_gl_acc1");
            entity.Property(e => e.AaGlAcc2)
                .HasMaxLength(9)
                .IsFixedLength()
                .HasColumnName("aa_gl_acc2");
            entity.Property(e => e.AaItemcode1)
                .HasMaxLength(30)
                .HasColumnName("aa_itemcode1");
            entity.Property(e => e.AaItemcode2)
                .HasMaxLength(30)
                .HasColumnName("aa_itemcode2");
            entity.Property(e => e.AaItemgroup1)
                .HasMaxLength(4)
                .IsFixedLength()
                .HasColumnName("aa_itemgroup1");
            entity.Property(e => e.AaItemgroup2)
                .HasMaxLength(4)
                .IsFixedLength()
                .HasColumnName("aa_itemgroup2");
            entity.Property(e => e.AaJournal1)
                .HasMaxLength(3)
                .IsFixedLength()
                .HasColumnName("aa_journal1");
            entity.Property(e => e.AaJournal2)
                .HasMaxLength(3)
                .IsFixedLength()
                .HasColumnName("aa_journal2");
            entity.Property(e => e.AaNoYes1).HasColumnName("aa_NoYes1");
            entity.Property(e => e.AaNoYes2).HasColumnName("aa_NoYes2");
            entity.Property(e => e.AaPoMethod1)
                .HasMaxLength(3)
                .IsFixedLength()
                .HasColumnName("aa_po_method1");
            entity.Property(e => e.AaPoMethod2)
                .HasMaxLength(3)
                .IsFixedLength()
                .HasColumnName("aa_po_method2");
            entity.Property(e => e.AaPricedc1).HasColumnName("aa_pricedc1");
            entity.Property(e => e.AaPricedc2).HasColumnName("aa_pricedc2");
            entity.Property(e => e.AaPricefc1).HasColumnName("aa_pricefc1");
            entity.Property(e => e.AaPricefc2).HasColumnName("aa_pricefc2");
            entity.Property(e => e.AaQuantity1).HasColumnName("aa_quantity1");
            entity.Property(e => e.AaQuantity2).HasColumnName("aa_quantity2");
            entity.Property(e => e.AaQuantity3).HasColumnName("aa_quantity3");
            entity.Property(e => e.AaQuantity4).HasColumnName("aa_quantity4");
            entity.Property(e => e.AaQuantity5).HasColumnName("aa_quantity5");
            entity.Property(e => e.AaResId1).HasColumnName("aa_res_id1");
            entity.Property(e => e.AaResId2).HasColumnName("aa_res_id2");
            entity.Property(e => e.AaTable1)
                .HasMaxLength(20)
                .HasColumnName("aa_table1");
            entity.Property(e => e.AaTable2)
                .HasMaxLength(20)
                .HasColumnName("aa_table2");
            entity.Property(e => e.AaTable3)
                .HasMaxLength(20)
                .HasColumnName("aa_table3");
            entity.Property(e => e.AaTable4)
                .HasMaxLength(20)
                .HasColumnName("aa_table4");
            entity.Property(e => e.AaTable5)
                .HasMaxLength(20)
                .HasColumnName("aa_table5");
            entity.Property(e => e.AaText1)
                .HasMaxLength(50)
                .HasColumnName("aa_text1");
            entity.Property(e => e.AaText2)
                .HasMaxLength(50)
                .HasColumnName("aa_text2");
            entity.Property(e => e.AaText3)
                .HasMaxLength(50)
                .HasColumnName("aa_text3");
            entity.Property(e => e.AaText4)
                .HasMaxLength(50)
                .HasColumnName("aa_text4");
            entity.Property(e => e.AaText5)
                .HasMaxLength(50)
                .HasColumnName("aa_text5");
            entity.Property(e => e.AaWarehouse1)
                .HasMaxLength(4)
                .IsFixedLength()
                .HasColumnName("aa_warehouse1");
            entity.Property(e => e.AaWarehouse2)
                .HasMaxLength(4)
                .IsFixedLength()
                .HasColumnName("aa_warehouse2");
            entity.Property(e => e.AaXrate1).HasColumnName("aa_xrate1");
            entity.Property(e => e.AaXrate2).HasColumnName("aa_xrate2");
            entity.Property(e => e.AaYesNo1).HasColumnName("aa_YesNo1");
            entity.Property(e => e.AaYesNo2).HasColumnName("aa_YesNo2");
            entity.Property(e => e.Aantal).HasColumnName("aantal");
            entity.Property(e => e.AmutakId).HasColumnName("amutak_id");
            entity.Property(e => e.AmutasId).HasColumnName("amutas_id");
            entity.Property(e => e.AnalytGrp)
                .HasMaxLength(20)
                .HasColumnName("analyt_grp");
            entity.Property(e => e.Application)
                .HasMaxLength(30)
                .HasColumnName("application");
            entity.Property(e => e.Artcode)
                .HasMaxLength(30)
                .HasColumnName("artcode");
            entity.Property(e => e.Artgrp)
                .HasMaxLength(4)
                .IsFixedLength()
                .HasColumnName("artgrp");
            entity.Property(e => e.Baseinvoicedc).HasColumnName("baseinvoicedc");
            entity.Property(e => e.Baseinvoicefc).HasColumnName("baseinvoicefc");
            entity.Property(e => e.Basetaxdc).HasColumnName("basetaxdc");
            entity.Property(e => e.Basetaxfc).HasColumnName("basetaxfc");
            entity.Property(e => e.Basetaxfc1).HasColumnName("basetaxfc1");
            entity.Property(e => e.Basetaxfc2).HasColumnName("basetaxfc2");
            entity.Property(e => e.Basetaxfc3).HasColumnName("basetaxfc3");
            entity.Property(e => e.Basetaxrc).HasColumnName("basetaxrc");
            entity.Property(e => e.Bedrag).HasColumnName("bedrag");
            entity.Property(e => e.Betcond)
                .HasMaxLength(2)
                .IsFixedLength()
                .HasColumnName("betcond");
            entity.Property(e => e.Bkjrcode).HasColumnName("bkjrcode");
            entity.Property(e => e.Btwvrtnr)
                .HasMaxLength(2)
                .IsFixedLength()
                .HasColumnName("btwvrtnr");
            entity.Property(e => e.Calmethod)
                .HasMaxLength(1)
                .IsFixedLength()
                .HasColumnName("calmethod");
            entity.Property(e => e.Crdcat)
                .HasMaxLength(2)
                .IsFixedLength()
                .HasColumnName("crdcat");
            entity.Property(e => e.Crdnote).HasColumnName("crdnote");
            entity.Property(e => e.Crdnr)
                .HasMaxLength(12)
                .HasColumnName("crdnr");
            entity.Property(e => e.Curreturn)
                .HasMaxLength(3)
                .IsFixedLength()
                .HasColumnName("curreturn");
            entity.Property(e => e.Dagbknr)
                .HasMaxLength(3)
                .IsFixedLength()
                .HasColumnName("dagbknr");
            entity.Property(e => e.Datedelivery)
                .HasColumnType("datetime")
                .HasColumnName("datedelivery");
            entity.Property(e => e.Dateinvoice)
                .HasColumnType("datetime")
                .HasColumnName("dateinvoice");
            entity.Property(e => e.Datepayment)
                .HasColumnType("datetime")
                .HasColumnName("datepayment");
            entity.Property(e => e.Dateregister)
                .HasMaxLength(1)
                .IsFixedLength()
                .HasColumnName("dateregister");
            entity.Property(e => e.Datereturn)
                .HasColumnType("datetime")
                .HasColumnName("datereturn");
            entity.Property(e => e.Datum)
                .HasColumnType("datetime")
                .HasColumnName("datum");
            entity.Property(e => e.Debcat)
                .HasMaxLength(2)
                .IsFixedLength()
                .HasColumnName("debcat");
            entity.Property(e => e.Debnr)
                .HasMaxLength(12)
                .HasColumnName("debnr");
            entity.Property(e => e.Deliverydate)
                .HasColumnType("datetime")
                .HasColumnName("deliverydate");
            entity.Property(e => e.Descr30)
                .HasMaxLength(30)
                .HasColumnName("descr30");
            entity.Property(e => e.Docnumber)
                .HasMaxLength(30)
                .HasColumnName("docnumber");
            entity.Property(e => e.Entrylevel)
                .HasMaxLength(1)
                .IsFixedLength()
                .HasColumnName("entrylevel");
            entity.Property(e => e.Entrynr)
                .HasMaxLength(8)
                .IsFixedLength()
                .HasColumnName("entrynr");
            entity.Property(e => e.Entryorigin)
                .HasMaxLength(1)
                .IsFixedLength()
                .HasColumnName("entryorigin");
            entity.Property(e => e.EvbstkId).HasColumnName("evbstk_id");
            entity.Property(e => e.EvbstsId).HasColumnName("evbsts_id");
            entity.Property(e => e.EvfakkId).HasColumnName("evfakk_id");
            entity.Property(e => e.EvfaksId).HasColumnName("evfaks_id");
            entity.Property(e => e.EvhonkId).HasColumnName("evhonk_id");
            entity.Property(e => e.EvhonsId).HasColumnName("evhons_id");
            entity.Property(e => e.EvontkId).HasColumnName("evontk_id");
            entity.Property(e => e.EvontsId).HasColumnName("evonts_id");
            entity.Property(e => e.FakkrgId).HasColumnName("fakkrg_id");
            entity.Property(e => e.FaksrgId).HasColumnName("faksrg_id");
            entity.Property(e => e.Faktuurnr)
                .HasMaxLength(8)
                .IsFixedLength()
                .HasColumnName("faktuurnr");
            entity.Property(e => e.Fnitrogen).HasColumnName("fnitrogen");
            entity.Property(e => e.Fphosphate).HasColumnName("fphosphate");
            entity.Property(e => e.Freefield1)
                .HasMaxLength(75)
                .HasColumnName("freefield1");
            entity.Property(e => e.Freefield10).HasColumnName("freefield10");
            entity.Property(e => e.Freefield11).HasColumnName("freefield11");
            entity.Property(e => e.Freefield12).HasColumnName("freefield12");
            entity.Property(e => e.Freefield13).HasColumnName("freefield13");
            entity.Property(e => e.Freefield14)
                .HasColumnType("datetime")
                .HasColumnName("freefield14");
            entity.Property(e => e.Freefield15)
                .HasColumnType("datetime")
                .HasColumnName("freefield15");
            entity.Property(e => e.Freefield16)
                .HasColumnType("datetime")
                .HasColumnName("freefield16");
            entity.Property(e => e.Freefield17).HasColumnName("freefield17");
            entity.Property(e => e.Freefield18).HasColumnName("freefield18");
            entity.Property(e => e.Freefield19).HasColumnName("freefield19");
            entity.Property(e => e.Freefield2)
                .HasMaxLength(75)
                .HasColumnName("freefield2");
            entity.Property(e => e.Freefield20).HasColumnName("freefield20");
            entity.Property(e => e.Freefield3)
                .HasMaxLength(75)
                .HasColumnName("freefield3");
            entity.Property(e => e.Freefield4)
                .HasMaxLength(75)
                .HasColumnName("freefield4");
            entity.Property(e => e.Freefield5)
                .HasMaxLength(75)
                .HasColumnName("freefield5");
            entity.Property(e => e.Freefield6)
                .HasMaxLength(75)
                .HasColumnName("freefield6");
            entity.Property(e => e.Freefield7)
                .HasMaxLength(75)
                .HasColumnName("freefield7");
            entity.Property(e => e.Freefield8).HasColumnName("freefield8");
            entity.Property(e => e.Freefield9).HasColumnName("freefield9");
            entity.Property(e => e.FrhkrgId).HasColumnName("frhkrg_id");
            entity.Property(e => e.FrhsrgId).HasColumnName("frhsrg_id");
            entity.Property(e => e.FrkrgId).HasColumnName("frkrg_id");
            entity.Property(e => e.FrsrgId).HasColumnName("frsrg_id");
            entity.Property(e => e.FrvkrgId).HasColumnName("frvkrg_id");
            entity.Property(e => e.FrvsrgId).HasColumnName("frvsrg_id");
            entity.Property(e => e.GbkmutId).HasColumnName("gbkmut_id");
            entity.Property(e => e.GbkmutNr)
                .HasMaxLength(10)
                .IsFixedLength()
                .HasColumnName("gbkmut_nr");
            entity.Property(e => e.Inclexcl)
                .HasMaxLength(1)
                .IsFixedLength()
                .HasColumnName("inclexcl");
            entity.Property(e => e.Invoicetype)
                .HasMaxLength(1)
                .IsFixedLength()
                .HasColumnName("invoicetype");
            entity.Property(e => e.Koers).HasColumnName("koers");
            entity.Property(e => e.Kstdrcode)
                .HasMaxLength(8)
                .IsFixedLength()
                .HasColumnName("kstdrcode");
            entity.Property(e => e.Kstplcode)
                .HasMaxLength(8)
                .IsFixedLength()
                .HasColumnName("kstplcode");
            entity.Property(e => e.Kstsrt)
                .HasMaxLength(8)
                .IsFixedLength()
                .HasColumnName("kstsrt");
            entity.Property(e => e.Landcode)
                .HasMaxLength(3)
                .IsFixedLength()
                .HasColumnName("landcode");
            entity.Property(e => e.Levwijze)
                .HasMaxLength(5)
                .IsFixedLength()
                .HasColumnName("levwijze");
            entity.Property(e => e.Line)
                .HasMaxLength(4)
                .IsFixedLength()
                .HasColumnName("line");
            entity.Property(e => e.Magcode)
                .HasMaxLength(4)
                .IsFixedLength()
                .HasColumnName("magcode");
            entity.Property(e => e.Manurecode)
                .HasMaxLength(2)
                .IsFixedLength()
                .HasColumnName("manurecode");
            entity.Property(e => e.Mutcode)
                .HasMaxLength(4)
                .IsFixedLength()
                .HasColumnName("mutcode");
            entity.Property(e => e.Mutdate)
                .HasColumnType("datetime")
                .HasColumnName("mutdate");
            entity.Property(e => e.Mutnragro)
                .HasMaxLength(10)
                .IsFixedLength()
                .HasColumnName("mutnragro");
            entity.Property(e => e.Mutreason)
                .HasMaxLength(1)
                .IsFixedLength()
                .HasColumnName("mutreason");
            entity.Property(e => e.Mutsort)
                .HasMaxLength(1)
                .IsFixedLength()
                .HasColumnName("mutsort");
            entity.Property(e => e.Mutsource)
                .HasMaxLength(1)
                .IsFixedLength()
                .HasColumnName("mutsource");
            entity.Property(e => e.Mutstatus)
                .HasMaxLength(1)
                .IsFixedLength()
                .HasColumnName("mutstatus");
            entity.Property(e => e.Oms25)
                .HasMaxLength(25)
                .HasColumnName("oms25");
            entity.Property(e => e.OrhkrgId).HasColumnName("orhkrg_id");
            entity.Property(e => e.OrhsrgId).HasColumnName("orhsrg_id");
            entity.Property(e => e.Origdest)
                .HasMaxLength(1)
                .IsFixedLength()
                .HasColumnName("origdest");
            entity.Property(e => e.OrkrgId).HasColumnName("orkrg_id");
            entity.Property(e => e.OrsrgId).HasColumnName("orsrg_id");
            entity.Property(e => e.OrvkrgId).HasColumnName("orvkrg_id");
            entity.Property(e => e.OrvsrgId).HasColumnName("orvsrg_id");
            entity.Property(e => e.Percentage).HasColumnName("percentage");
            entity.Property(e => e.Percentage1).HasColumnName("percentage1");
            entity.Property(e => e.Percentage2).HasColumnName("percentage2");
            entity.Property(e => e.Percentage3).HasColumnName("percentage3");
            entity.Property(e => e.Percnonded).HasColumnName("percnonded");
            entity.Property(e => e.Periode)
                .HasMaxLength(3)
                .IsFixedLength()
                .HasColumnName("periode");
            entity.Property(e => e.Prodcode)
                .HasMaxLength(9)
                .IsFixedLength()
                .HasColumnName("prodcode");
            entity.Property(e => e.Projcode)
                .HasMaxLength(8)
                .IsFixedLength()
                .HasColumnName("projcode");
            entity.Property(e => e.Projgrp)
                .HasMaxLength(8)
                .IsFixedLength()
                .HasColumnName("projgrp");
            entity.Property(e => e.Qtyanimal).HasColumnName("qtyanimal");
            entity.Property(e => e.Quantity1).HasColumnName("quantity1");
            entity.Property(e => e.Quantity2).HasColumnName("quantity2");
            entity.Property(e => e.Ratereturn).HasColumnName("ratereturn");
            entity.Property(e => e.Reknr)
                .HasMaxLength(9)
                .IsFixedLength()
                .HasColumnName("reknr");
            entity.Property(e => e.Reknr2)
                .HasMaxLength(9)
                .IsFixedLength()
                .HasColumnName("reknr_2");
            entity.Property(e => e.RepresentId).HasColumnName("represent_id");
            entity.Property(e => e.ResId).HasColumnName("res_id");
            entity.Property(e => e.Returnbox)
                .HasMaxLength(8)
                .IsFixedLength()
                .HasColumnName("returnbox");
            entity.Property(e => e.Seqnr5)
                .HasMaxLength(5)
                .IsFixedLength()
                .HasColumnName("seqnr5");
            entity.Property(e => e.Seqnr53)
                .HasMaxLength(5)
                .IsFixedLength()
                .HasColumnName("seqnr53");
            entity.Property(e => e.Sprodcodefor)
                .HasMaxLength(9)
                .IsFixedLength()
                .HasColumnName("sprodcodefor");
            entity.Property(e => e.Sprodcodever)
                .HasMaxLength(9)
                .IsFixedLength()
                .HasColumnName("sprodcodever");
            entity.Property(e => e.Status)
                .HasMaxLength(1)
                .IsFixedLength()
                .HasColumnName("status");
            entity.Property(e => e.Storno).HasColumnName("storno");
            entity.Property(e => e.Syscreated)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("syscreated");
            entity.Property(e => e.Syscreator).HasColumnName("syscreator");
            entity.Property(e => e.Sysguid)
                .HasDefaultValueSql("(newid())")
                .HasColumnName("sysguid");
            entity.Property(e => e.Sysmodified)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("sysmodified");
            entity.Property(e => e.Sysmodifier).HasColumnName("sysmodifier");
            entity.Property(e => e.Taalcode)
                .HasMaxLength(3)
                .IsFixedLength()
                .HasColumnName("taalcode");
            entity.Property(e => e.Taxamntchgdc).HasColumnName("taxamntchgdc");
            entity.Property(e => e.Taxamntchgfc).HasColumnName("taxamntchgfc");
            entity.Property(e => e.Taxamntchgrc).HasColumnName("taxamntchgrc");
            entity.Property(e => e.Taxamntnddc).HasColumnName("taxamntnddc");
            entity.Property(e => e.Taxamntndfc).HasColumnName("taxamntndfc");
            entity.Property(e => e.Taxamntndrc).HasColumnName("taxamntndrc");
            entity.Property(e => e.Taxamountdc).HasColumnName("taxamountdc");
            entity.Property(e => e.Taxamountfc).HasColumnName("taxamountfc");
            entity.Property(e => e.Taxamountfc1).HasColumnName("taxamountfc1");
            entity.Property(e => e.Taxamountfc2).HasColumnName("taxamountfc2");
            entity.Property(e => e.Taxamountfc3).HasColumnName("taxamountfc3");
            entity.Property(e => e.Taxamountrc).HasColumnName("taxamountrc");
            entity.Property(e => e.Taxcode)
                .HasMaxLength(8)
                .IsFixedLength()
                .HasColumnName("taxcode");
            entity.Property(e => e.Taxcode1)
                .HasMaxLength(8)
                .IsFixedLength()
                .HasColumnName("taxcode1");
            entity.Property(e => e.Taxcode2)
                .HasMaxLength(8)
                .IsFixedLength()
                .HasColumnName("taxcode2");
            entity.Property(e => e.Taxcode3)
                .HasMaxLength(8)
                .IsFixedLength()
                .HasColumnName("taxcode3");
            entity.Property(e => e.Taxcorrection).HasColumnName("taxcorrection");
            entity.Property(e => e.Taxperiod)
                .HasMaxLength(3)
                .IsFixedLength()
                .HasColumnName("taxperiod");
            entity.Property(e => e.Taxreport1).HasColumnName("taxreport1");
            entity.Property(e => e.Taxreport2).HasColumnName("taxreport2");
            entity.Property(e => e.Taxreturn).HasColumnName("taxreturn");
            entity.Property(e => e.Taxstatus)
                .HasMaxLength(1)
                .IsFixedLength()
                .HasColumnName("taxstatus");
            entity.Property(e => e.Taxtype)
                .HasMaxLength(8)
                .IsFixedLength()
                .HasColumnName("taxtype");
            entity.Property(e => e.Taxtype1)
                .HasMaxLength(8)
                .IsFixedLength()
                .HasColumnName("taxtype1");
            entity.Property(e => e.Taxtype2)
                .HasMaxLength(8)
                .IsFixedLength()
                .HasColumnName("taxtype2");
            entity.Property(e => e.Taxtype3)
                .HasMaxLength(8)
                .IsFixedLength()
                .HasColumnName("taxtype3");
            entity.Property(e => e.Taxyear).HasColumnName("taxyear");
            entity.Property(e => e.Timestamp)
                .IsRowVersion()
                .IsConcurrencyToken()
                .HasColumnName("timestamp");
            entity.Property(e => e.TmutakId).HasColumnName("tmutak_id");
            entity.Property(e => e.TmutasId).HasColumnName("tmutas_id");
            entity.Property(e => e.Typeagro)
                .HasMaxLength(1)
                .IsFixedLength()
                .HasColumnName("typeagro");
            entity.Property(e => e.Typerecord)
                .HasMaxLength(1)
                .IsFixedLength()
                .HasColumnName("typerecord");
            entity.Property(e => e.ValBdr).HasColumnName("val_bdr");
            entity.Property(e => e.Valcode)
                .HasMaxLength(3)
                .IsFixedLength()
                .HasColumnName("valcode");
            entity.Property(e => e.Vatnumber)
                .HasMaxLength(20)
                .HasColumnName("vatnumber");
            entity.Property(e => e.Withholding).HasColumnName("withholding");
            entity.Property(e => e.Wnitrogen).HasColumnName("wnitrogen");
            entity.Property(e => e.Wphosphate).HasColumnName("wphosphate");
        });

        modelBuilder.Entity<Aactbl>(entity =>
        {
            entity.HasKey(e => e.Id).IsClustered(false);

            entity.ToTable("aactbl");

            entity.HasIndex(e => new { e.AnalytFld, e.AnalytCde }, "aactbl")
                .IsUnique()
                .IsClustered();

            entity.Property(e => e.Id).HasColumnName("ID");
            entity.Property(e => e.Active).HasColumnName("active");
            entity.Property(e => e.AnalytCde)
                .HasMaxLength(12)
                .HasColumnName("analyt_cde");
            entity.Property(e => e.AnalytFld)
                .HasMaxLength(20)
                .HasColumnName("analyt_fld");
            entity.Property(e => e.Descr300)
                .HasMaxLength(30)
                .HasColumnName("descr30_0");
            entity.Property(e => e.Descr301)
                .HasMaxLength(30)
                .HasColumnName("descr30_1");
            entity.Property(e => e.Descr302)
                .HasMaxLength(30)
                .HasColumnName("descr30_2");
            entity.Property(e => e.Descr303)
                .HasMaxLength(30)
                .HasColumnName("descr30_3");
            entity.Property(e => e.Descr304)
                .HasMaxLength(30)
                .HasColumnName("descr30_4");
            entity.Property(e => e.Syscreated)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("syscreated");
            entity.Property(e => e.Syscreator).HasColumnName("syscreator");
            entity.Property(e => e.Sysguid)
                .HasDefaultValueSql("(newid())")
                .HasColumnName("sysguid");
            entity.Property(e => e.Sysmodified)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("sysmodified");
            entity.Property(e => e.Sysmodifier).HasColumnName("sysmodifier");
            entity.Property(e => e.Timestamp)
                .IsRowVersion()
                .IsConcurrencyToken()
                .HasColumnName("timestamp");
        });

        modelBuilder.Entity<Absence>(entity =>
        {
            entity.HasKey(e => e.Id).IsClustered(false);

            entity.ToTable(tb =>
                {
                    tb.HasTrigger("DisactivateOldRequest");
                    tb.HasTrigger("DisactivateOldRequestPreviousType");
                    tb.HasTrigger("HRChange");
                    tb.HasTrigger("HRLogToAbsences");
                    tb.HasTrigger("NLCPayrollComponentChange");
                    tb.HasTrigger("PayrollComponentChange");
                    tb.HasTrigger("RejectSameTypeRequest");
                    tb.HasTrigger("UpdateAdditionalNumber");
                    tb.HasTrigger("UpdatePayrollComponent");
                    tb.HasTrigger("ZTemplateHRHiring");
                    tb.HasTrigger("changeBacoDiscussion");
                    tb.HasTrigger("track_absences_changes");
                });

            entity.HasIndex(e => e.DeliverableCode, "Absences_Deliverablecode");

            entity.HasIndex(e => new { e.WorkBreakdownStructureLine, e.Type, e.Status }, "Absences_Wbsline");

            entity.HasIndex(e => new { e.Approver, e.Type }, "Approver_Type");

            entity.HasIndex(e => new { e.Syscreated, e.CustomerId, e.CustomerResellerId }, "CreatedCustomerAndReseller");

            entity.HasIndex(e => e.CustomerContactId, "CustomerContactID");

            entity.HasIndex(e => new { e.CustomerId, e.Type }, "CustomerID_Type");

            entity.HasIndex(e => new { e.CustomerResellerId, e.Type }, "CustomerResellerID_Type");

            entity.HasIndex(e => e.DocumentId, "DocumentID");

            entity.HasIndex(e => new { e.EmpId, e.Type }, "EmpID_Type").IsClustered();

            entity.HasIndex(e => e.EntryGuid, "EntryGuid");

            entity.HasIndex(e => e.ExchangeLink, "ExchangeLink");

            entity.HasIndex(e => e.FinancialEntryKey, "FinancialEntryGuid");

            entity.HasIndex(e => e.Hid, "HID");

            entity.HasIndex(e => new { e.EmpId, e.Status }, "IXAbsences_EmpIDStatus");

            entity.HasIndex(e => new { e.Type, e.FreeGuidField01, e.FreeGuidField02 }, "IX_Absences_FG1_FG2_Type");

            entity.HasIndex(e => e.ItemNumberId2, "IX_Absences_ItemNumberID2");

            entity.HasIndex(e => new { e.Syscreated, e.Hid }, "IX_Absences_Syscreated_HID");

            entity.HasIndex(e => new { e.Type, e.FreeGuidField03 }, "IX_Absences_Type_FreeGuidField_03");

            entity.HasIndex(e => e.InvoiceAccount, "InvoiceAccount");

            entity.HasIndex(e => e.ItemCode2, "ItemCode_2");

            entity.HasIndex(e => new { e.ItemCode, e.Type, e.Status }, "ItemCode_Type_Status");

            entity.HasIndex(e => e.ItemNumberId, "ItemNumberID");

            entity.HasIndex(e => e.OpportunityId, "OpportunityID");

            entity.HasIndex(e => e.OrderNumber, "OrderNumber");

            entity.HasIndex(e => e.ParentRequest, "ParentRequest");

            entity.HasIndex(e => new { e.ProcessNumber, e.Status, e.BillCustomer }, "ProcessNumberStatusBilling");

            entity.HasIndex(e => new { e.Processor, e.Type }, "Processor_Type");

            entity.HasIndex(e => e.ProjectNumber, "ProjectNumber");

            entity.HasIndex(e => e.PurchaseNumber, "PurchaseNumber");

            entity.HasIndex(e => new { e.Realizer, e.Type }, "Realizer_Type");

            entity.HasIndex(e => e.ReferenceNumber, "ReferenceNumber");

            entity.HasIndex(e => new { e.RejectedBy, e.Type }, "RejectedBy_Type");

            entity.HasIndex(e => e.RelatedRequestId, "RelatedRequestID");

            entity.HasIndex(e => new { e.SecurityLevel, e.Syscreated }, "SecurityLevel_syscreated");

            entity.HasIndex(e => new { e.StartDate, e.Type }, "StartDate_Type");

            entity.HasIndex(e => e.TemplateId, "TemplateID");

            entity.HasIndex(e => new { e.Type, e.Buildup }, "Type_BuildUp");

            entity.HasIndex(e => new { e.Type, e.EmpId, e.Syscreated }, "Type_EmpID_Syscreated");

            entity.HasIndex(e => new { e.Type, e.StartDate }, "Type_StartDate");

            entity.HasIndex(e => new { e.Type, e.Syscreated }, "Type_syscreated");

            entity.HasIndex(e => e.Syscreated, "syscreated");

            entity.HasIndex(e => new { e.Syscreator, e.Type }, "syscreator_Type");

            entity.HasIndex(e => new { e.Syscreator, e.Syscreated }, "syscreator_syscreated");

            entity.HasIndex(e => e.Sysmodified, "sysmodified");

            entity.HasIndex(e => e.Timestamp, "timestamp");

            entity.Property(e => e.Id)
                .ValueGeneratedNever()
                .HasColumnName("ID");
            entity.Property(e => e.AbsenceBasis)
                .HasMaxLength(1)
                .IsFixedLength();
            entity.Property(e => e.AmountFc).HasColumnName("AmountFC");
            entity.Property(e => e.AmountFcactual).HasColumnName("AmountFCActual");
            entity.Property(e => e.Approved).HasColumnType("datetime");
            entity.Property(e => e.Currency)
                .HasMaxLength(3)
                .IsFixedLength();
            entity.Property(e => e.CurrencyActual)
                .HasMaxLength(3)
                .IsFixedLength();
            entity.Property(e => e.CustomerContactId).HasColumnName("CustomerContactID");
            entity.Property(e => e.CustomerId).HasColumnName("CustomerID");
            entity.Property(e => e.CustomerResellerId).HasColumnName("CustomerResellerID");
            entity.Property(e => e.DeliverableCode).HasMaxLength(30);
            entity.Property(e => e.Description).HasMaxLength(255);
            entity.Property(e => e.Division)
                .HasMaxLength(3)
                .IsFixedLength();
            entity.Property(e => e.DocumentId).HasColumnName("DocumentID");
            entity.Property(e => e.DocumentId2).HasColumnName("DocumentID_2");
            entity.Property(e => e.EmpId).HasColumnName("EmpID");
            entity.Property(e => e.EndDate).HasColumnType("datetime");
            entity.Property(e => e.EndDateActual).HasColumnType("datetime");
            entity.Property(e => e.ExchangeLink).HasMaxLength(512);
            entity.Property(e => e.ExpiryDate).HasColumnType("datetime");
            entity.Property(e => e.FollowUpDate).HasColumnType("datetime");
            entity.Property(e => e.FreeBoolField01).HasColumnName("FreeBoolField_01");
            entity.Property(e => e.FreeBoolField02).HasColumnName("FreeBoolField_02");
            entity.Property(e => e.FreeBoolField03).HasColumnName("FreeBoolField_03");
            entity.Property(e => e.FreeBoolField04).HasColumnName("FreeBoolField_04");
            entity.Property(e => e.FreeBoolField05).HasColumnName("FreeBoolField_05");
            entity.Property(e => e.FreeDateField01)
                .HasColumnType("datetime")
                .HasColumnName("FreeDateField_01");
            entity.Property(e => e.FreeDateField02)
                .HasColumnType("datetime")
                .HasColumnName("FreeDateField_02");
            entity.Property(e => e.FreeDateField03)
                .HasColumnType("datetime")
                .HasColumnName("FreeDateField_03");
            entity.Property(e => e.FreeDateField04)
                .HasColumnType("datetime")
                .HasColumnName("FreeDateField_04");
            entity.Property(e => e.FreeDateField05)
                .HasColumnType("datetime")
                .HasColumnName("FreeDateField_05");
            entity.Property(e => e.FreeGuidField01).HasColumnName("FreeGuidField_01");
            entity.Property(e => e.FreeGuidField02).HasColumnName("FreeGuidField_02");
            entity.Property(e => e.FreeGuidField03).HasColumnName("FreeGuidField_03");
            entity.Property(e => e.FreeGuidField04).HasColumnName("FreeGuidField_04");
            entity.Property(e => e.FreeGuidField05).HasColumnName("FreeGuidField_05");
            entity.Property(e => e.FreeGuidField06).HasColumnName("FreeGuidField_06");
            entity.Property(e => e.FreeGuidField07).HasColumnName("FreeGuidField_07");
            entity.Property(e => e.FreeGuidField08).HasColumnName("FreeGuidField_08");
            entity.Property(e => e.FreeGuidField09).HasColumnName("FreeGuidField_09");
            entity.Property(e => e.FreeGuidField10).HasColumnName("FreeGuidField_10");
            entity.Property(e => e.FreeIntField01).HasColumnName("FreeIntField_01");
            entity.Property(e => e.FreeIntField02).HasColumnName("FreeIntField_02");
            entity.Property(e => e.FreeIntField03).HasColumnName("FreeIntField_03");
            entity.Property(e => e.FreeIntField04).HasColumnName("FreeIntField_04");
            entity.Property(e => e.FreeIntField05).HasColumnName("FreeIntField_05");
            entity.Property(e => e.FreeNumberField01).HasColumnName("FreeNumberField_01");
            entity.Property(e => e.FreeNumberField02).HasColumnName("FreeNumberField_02");
            entity.Property(e => e.FreeNumberField03).HasColumnName("FreeNumberField_03");
            entity.Property(e => e.FreeNumberField04).HasColumnName("FreeNumberField_04");
            entity.Property(e => e.FreeNumberField05).HasColumnName("FreeNumberField_05");
            entity.Property(e => e.FreeTextField01)
                .HasMaxLength(60)
                .HasColumnName("FreeTextField_01");
            entity.Property(e => e.FreeTextField02)
                .HasMaxLength(60)
                .HasColumnName("FreeTextField_02");
            entity.Property(e => e.FreeTextField03)
                .HasMaxLength(60)
                .HasColumnName("FreeTextField_03");
            entity.Property(e => e.FreeTextField04)
                .HasMaxLength(60)
                .HasColumnName("FreeTextField_04");
            entity.Property(e => e.FreeTextField05)
                .HasMaxLength(60)
                .HasColumnName("FreeTextField_05");
            entity.Property(e => e.FreeTextField06)
                .HasMaxLength(60)
                .HasColumnName("FreeTextField_06");
            entity.Property(e => e.FreeTextField07)
                .HasMaxLength(60)
                .HasColumnName("FreeTextField_07");
            entity.Property(e => e.FreeTextField08)
                .HasMaxLength(60)
                .HasColumnName("FreeTextField_08");
            entity.Property(e => e.FreeTextField09)
                .HasMaxLength(60)
                .HasColumnName("FreeTextField_09");
            entity.Property(e => e.FreeTextField10)
                .HasMaxLength(60)
                .HasColumnName("FreeTextField_10");
            entity.Property(e => e.FreeTextField11)
                .HasMaxLength(60)
                .HasColumnName("FreeTextField_11");
            entity.Property(e => e.FreeTextField12)
                .HasMaxLength(60)
                .HasColumnName("FreeTextField_12");
            entity.Property(e => e.FreeTextField13)
                .HasMaxLength(60)
                .HasColumnName("FreeTextField_13");
            entity.Property(e => e.FreeTextField14)
                .HasMaxLength(60)
                .HasColumnName("FreeTextField_14");
            entity.Property(e => e.FreeTextField15)
                .HasMaxLength(60)
                .HasColumnName("FreeTextField_15");
            entity.Property(e => e.Hid)
                .ValueGeneratedOnAdd()
                .HasColumnName("HID");
            entity.Property(e => e.InvoicePostponeDate).HasColumnType("datetime");
            entity.Property(e => e.ItemCode).HasMaxLength(30);
            entity.Property(e => e.ItemCode2)
                .HasMaxLength(30)
                .HasColumnName("ItemCode_2");
            entity.Property(e => e.ItemCount2).HasColumnName("ItemCount_2");
            entity.Property(e => e.ItemCountActual2).HasColumnName("ItemCountActual_2");
            entity.Property(e => e.ItemCountry)
                .HasMaxLength(3)
                .IsFixedLength();
            entity.Property(e => e.ItemCountry2)
                .HasMaxLength(3)
                .IsFixedLength()
                .HasColumnName("ItemCountry_2");
            entity.Property(e => e.ItemNumberId).HasColumnName("ItemNumberID");
            entity.Property(e => e.ItemNumberId2).HasColumnName("ItemNumberID_2");
            entity.Property(e => e.LineId).HasColumnName("LineID");
            entity.Property(e => e.OpportunityId).HasColumnName("OpportunityID");
            entity.Property(e => e.OpportunityStage).HasMaxLength(60);
            entity.Property(e => e.OrderNumber).HasMaxLength(30);
            entity.Property(e => e.Priority).HasDefaultValue(3);
            entity.Property(e => e.ProcessNumber).HasMaxLength(30);
            entity.Property(e => e.Processed).HasColumnType("datetime");
            entity.Property(e => e.ProjectNumber).HasMaxLength(20);
            entity.Property(e => e.PurchaseNumber).HasMaxLength(30);
            entity.Property(e => e.Realized).HasColumnType("datetime");
            entity.Property(e => e.ReferenceNumber).HasMaxLength(40);
            entity.Property(e => e.Rejected).HasColumnType("datetime");
            entity.Property(e => e.RelatedRequestId).HasColumnName("RelatedRequestID");
            entity.Property(e => e.RelatedRequestId2).HasColumnName("RelatedRequestID2");
            entity.Property(e => e.RelatedRequestId3).HasColumnName("RelatedRequestID3");
            entity.Property(e => e.RelatedRequestId4).HasColumnName("RelatedRequestID4");
            entity.Property(e => e.ReleaseId).HasColumnName("ReleaseID");
            entity.Property(e => e.ReleaseId2).HasColumnName("ReleaseID_2");
            entity.Property(e => e.SecurityLevel).HasDefaultValue(10);
            entity.Property(e => e.StartDate).HasColumnType("datetime");
            entity.Property(e => e.StartDateActual).HasColumnType("datetime");
            entity.Property(e => e.StatusChanged).HasColumnType("datetime");
            entity.Property(e => e.Syscreated)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("syscreated");
            entity.Property(e => e.Syscreator).HasColumnName("syscreator");
            entity.Property(e => e.Sysmodified)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("sysmodified");
            entity.Property(e => e.Sysmodifier).HasColumnName("sysmodifier");
            entity.Property(e => e.TemplateId).HasColumnName("TemplateID");
            entity.Property(e => e.Timestamp)
                .IsRowVersion()
                .IsConcurrencyToken()
                .HasColumnName("timestamp");
        });

        modelBuilder.Entity<AbsenceEntitlement>(entity =>
        {
            entity.HasKey(e => e.Id).IsClustered(false);

            entity.HasIndex(e => new { e.AbsenceType, e.EmpId }, "AbsenceType").IsClustered();

            entity.HasIndex(e => new { e.AbsenceType, e.CompanyCode }, "AbsenceTypeComp");

            entity.Property(e => e.Id)
                .ValueGeneratedNever()
                .HasColumnName("ID");
            entity.Property(e => e.CompanyCode)
                .HasMaxLength(3)
                .IsFixedLength();
            entity.Property(e => e.EffectiveExpiryPeriod)
                .HasMaxLength(3)
                .IsFixedLength();
            entity.Property(e => e.EmpId).HasColumnName("EmpID");
            entity.Property(e => e.JobGroup)
                .HasMaxLength(10)
                .IsFixedLength();
            entity.Property(e => e.NonStatutoryEntitlementUnit)
                .HasMaxLength(1)
                .IsFixedLength();
            entity.Property(e => e.StatutoryEntitlementUnit)
                .HasMaxLength(1)
                .IsFixedLength();
            entity.Property(e => e.Syscreated)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("syscreated");
            entity.Property(e => e.Syscreator).HasColumnName("syscreator");
            entity.Property(e => e.Sysmodified)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("sysmodified");
            entity.Property(e => e.Sysmodifier).HasColumnName("sysmodifier");
        });

        modelBuilder.Entity<AbsenceMainType>(entity =>
        {
            entity.Property(e => e.Id)
                .ValueGeneratedNever()
                .HasColumnName("ID");
            entity.Property(e => e.Description).HasMaxLength(60);
            entity.Property(e => e.DescriptionTermId).HasColumnName("DescriptionTermID");
            entity.Property(e => e.Syscreated)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("syscreated");
            entity.Property(e => e.Syscreator).HasColumnName("syscreator");
            entity.Property(e => e.Sysmodified)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("sysmodified");
            entity.Property(e => e.Sysmodifier).HasColumnName("sysmodifier");
            entity.Property(e => e.TypeCaption).HasMaxLength(60);
            entity.Property(e => e.TypeCaptionTermId).HasColumnName("TypeCaptionTermID");
            entity.Property(e => e.ViewColumn1).HasColumnName("ViewColumn_1");
            entity.Property(e => e.ViewColumn10).HasColumnName("ViewColumn_10");
            entity.Property(e => e.ViewColumn2).HasColumnName("ViewColumn_2");
            entity.Property(e => e.ViewColumn3).HasColumnName("ViewColumn_3");
            entity.Property(e => e.ViewColumn4).HasColumnName("ViewColumn_4");
            entity.Property(e => e.ViewColumn5).HasColumnName("ViewColumn_5");
            entity.Property(e => e.ViewColumn6).HasColumnName("ViewColumn_6");
            entity.Property(e => e.ViewColumn7).HasColumnName("ViewColumn_7");
            entity.Property(e => e.ViewColumn8).HasColumnName("ViewColumn_8");
            entity.Property(e => e.ViewColumn9).HasColumnName("ViewColumn_9");
            entity.Property(e => e.ViewType).HasDefaultValue(1);
        });

        modelBuilder.Entity<AbsenceType>(entity =>
        {
            entity.HasIndex(e => new { e.Hidden, e.MainType }, "IX_AbsenceTypes_Hidden");

            entity.Property(e => e.Id)
                .ValueGeneratedNever()
                .HasColumnName("ID");
            entity.Property(e => e.AccountCompletionStatus)
                .HasMaxLength(1)
                .IsFixedLength();
            entity.Property(e => e.AccountCompletionType)
                .HasMaxLength(1)
                .IsFixedLength();
            entity.Property(e => e.Active).HasDefaultValue(true);
            entity.Property(e => e.ApproveAccStatus)
                .HasMaxLength(1)
                .IsFixedLength();
            entity.Property(e => e.ApproveAccType)
                .HasMaxLength(1)
                .IsFixedLength();
            entity.Property(e => e.ApproveText).HasMaxLength(40);
            entity.Property(e => e.Approver).HasDefaultValue(1);
            entity.Property(e => e.AutoApprove).HasDefaultValue(true);
            entity.Property(e => e.Basis)
                .HasMaxLength(1)
                .IsFixedLength();
            entity.Property(e => e.BusinessLogic)
                .HasMaxLength(1)
                .HasDefaultValue("G")
                .IsFixedLength();
            entity.Property(e => e.Calculate).HasDefaultValue(true);
            entity.Property(e => e.CreateAccStatus)
                .HasMaxLength(1)
                .IsFixedLength();
            entity.Property(e => e.CreateAccType)
                .HasMaxLength(1)
                .IsFixedLength();
            entity.Property(e => e.CreateRole1).HasColumnName("CreateRole_1");
            entity.Property(e => e.CreateRole2).HasColumnName("CreateRole_2");
            entity.Property(e => e.CreateRole3).HasColumnName("CreateRole_3");
            entity.Property(e => e.CreateRoleLevel1).HasColumnName("CreateRoleLevel_1");
            entity.Property(e => e.CreateRoleLevel2).HasColumnName("CreateRoleLevel_2");
            entity.Property(e => e.CreateRoleLevel3).HasColumnName("CreateRoleLevel_3");
            entity.Property(e => e.CreateSecurityLevel).HasDefaultValue(10);
            entity.Property(e => e.CustomerCaption).HasMaxLength(60);
            entity.Property(e => e.CustomerSelection).HasMaxLength(255);
            entity.Property(e => e.DefaultEndTime).HasColumnType("datetime");
            entity.Property(e => e.DefaultItemCode).HasMaxLength(30);
            entity.Property(e => e.DefaultItemCode2)
                .HasMaxLength(30)
                .HasColumnName("DefaultItemCode_2");
            entity.Property(e => e.DefaultProjectNumber).HasMaxLength(20);
            entity.Property(e => e.DefaultQuantity2).HasColumnName("DefaultQuantity_2");
            entity.Property(e => e.DefaultStartTime).HasColumnType("datetime");
            entity.Property(e => e.DeleteAttachmentsOnCompletion).HasDefaultValue(true);
            entity.Property(e => e.DeleteRole1).HasColumnName("DeleteRole_1");
            entity.Property(e => e.DeleteRoleLevel1).HasColumnName("DeleteRoleLevel_1");
            entity.Property(e => e.Description).HasMaxLength(60);
            entity.Property(e => e.DescriptionTermId).HasColumnName("DescriptionTermID");
            entity.Property(e => e.DueDays).HasDefaultValue(1);
            entity.Property(e => e.DurationInDays).HasDefaultValue(true);
            entity.Property(e => e.EditCreator).HasDefaultValue(true);
            entity.Property(e => e.EditSecurityLevel).HasDefaultValue(true);
            entity.Property(e => e.EmployeeCaption).HasMaxLength(60);
            entity.Property(e => e.EmployeeMandatory).HasDefaultValue(true);
            entity.Property(e => e.EmployeeSelection).HasMaxLength(255);
            entity.Property(e => e.FinancialEntryKeyMandatory).HasDefaultValue(false);
            entity.Property(e => e.FreeBoolEditAfterApproval01)
                .HasDefaultValue(true)
                .HasColumnName("FreeBoolEditAfterApproval_01");
            entity.Property(e => e.FreeBoolEditAfterApproval02)
                .HasDefaultValue(true)
                .HasColumnName("FreeBoolEditAfterApproval_02");
            entity.Property(e => e.FreeBoolEditAfterApproval03)
                .HasDefaultValue(true)
                .HasColumnName("FreeBoolEditAfterApproval_03");
            entity.Property(e => e.FreeBoolIndexed01).HasColumnName("FreeBoolIndexed_01");
            entity.Property(e => e.FreeBoolIndexed02).HasColumnName("FreeBoolIndexed_02");
            entity.Property(e => e.FreeBoolIndexed03).HasColumnName("FreeBoolIndexed_03");
            entity.Property(e => e.FreeBoolLabel01)
                .HasMaxLength(60)
                .HasColumnName("FreeBoolLabel_01");
            entity.Property(e => e.FreeBoolLabel02)
                .HasMaxLength(60)
                .HasColumnName("FreeBoolLabel_02");
            entity.Property(e => e.FreeBoolLabel03)
                .HasMaxLength(60)
                .HasColumnName("FreeBoolLabel_03");
            entity.Property(e => e.FreeDateEditAfterApproval01)
                .HasDefaultValue(true)
                .HasColumnName("FreeDateEditAfterApproval_01");
            entity.Property(e => e.FreeDateEditAfterApproval02)
                .HasDefaultValue(true)
                .HasColumnName("FreeDateEditAfterApproval_02");
            entity.Property(e => e.FreeDateEditAfterApproval03)
                .HasDefaultValue(true)
                .HasColumnName("FreeDateEditAfterApproval_03");
            entity.Property(e => e.FreeDateIndexed01).HasColumnName("FreeDateIndexed_01");
            entity.Property(e => e.FreeDateIndexed02).HasColumnName("FreeDateIndexed_02");
            entity.Property(e => e.FreeDateIndexed03).HasColumnName("FreeDateIndexed_03");
            entity.Property(e => e.FreeDateLabel01)
                .HasMaxLength(60)
                .HasColumnName("FreeDateLabel_01");
            entity.Property(e => e.FreeDateLabel02)
                .HasMaxLength(60)
                .HasColumnName("FreeDateLabel_02");
            entity.Property(e => e.FreeDateLabel03)
                .HasMaxLength(60)
                .HasColumnName("FreeDateLabel_03");
            entity.Property(e => e.FreeDateMandatory01).HasColumnName("FreeDateMandatory_01");
            entity.Property(e => e.FreeDateMandatory02).HasColumnName("FreeDateMandatory_02");
            entity.Property(e => e.FreeDateMandatory03).HasColumnName("FreeDateMandatory_03");
            entity.Property(e => e.FreeNumberEditAfterApproval01)
                .HasDefaultValue(true)
                .HasColumnName("FreeNumberEditAfterApproval_01");
            entity.Property(e => e.FreeNumberEditAfterApproval02)
                .HasDefaultValue(true)
                .HasColumnName("FreeNumberEditAfterApproval_02");
            entity.Property(e => e.FreeNumberEditAfterApproval03)
                .HasDefaultValue(true)
                .HasColumnName("FreeNumberEditAfterApproval_03");
            entity.Property(e => e.FreeNumberLabel01)
                .HasMaxLength(60)
                .HasColumnName("FreeNumberLabel_01");
            entity.Property(e => e.FreeNumberLabel02)
                .HasMaxLength(60)
                .HasColumnName("FreeNumberLabel_02");
            entity.Property(e => e.FreeNumberLabel03)
                .HasMaxLength(60)
                .HasColumnName("FreeNumberLabel_03");
            entity.Property(e => e.FreeNumberMandatory01).HasColumnName("FreeNumberMandatory_01");
            entity.Property(e => e.FreeNumberMandatory02).HasColumnName("FreeNumberMandatory_02");
            entity.Property(e => e.FreeNumberMandatory03).HasColumnName("FreeNumberMandatory_03");
            entity.Property(e => e.FreeTextEditAfterApproval01)
                .HasDefaultValue(true)
                .HasColumnName("FreeTextEditAfterApproval_01");
            entity.Property(e => e.FreeTextEditAfterApproval02)
                .HasDefaultValue(true)
                .HasColumnName("FreeTextEditAfterApproval_02");
            entity.Property(e => e.FreeTextEditAfterApproval03)
                .HasDefaultValue(true)
                .HasColumnName("FreeTextEditAfterApproval_03");
            entity.Property(e => e.FreeTextEditAfterApproval04)
                .HasDefaultValue(true)
                .HasColumnName("FreeTextEditAfterApproval_04");
            entity.Property(e => e.FreeTextEditAfterApproval05)
                .HasDefaultValue(true)
                .HasColumnName("FreeTextEditAfterApproval_05");
            entity.Property(e => e.FreeTextIndexed01).HasColumnName("FreeTextIndexed_01");
            entity.Property(e => e.FreeTextIndexed02).HasColumnName("FreeTextIndexed_02");
            entity.Property(e => e.FreeTextIndexed03).HasColumnName("FreeTextIndexed_03");
            entity.Property(e => e.FreeTextIndexed04).HasColumnName("FreeTextIndexed_04");
            entity.Property(e => e.FreeTextIndexed05).HasColumnName("FreeTextIndexed_05");
            entity.Property(e => e.FreeTextLabel01)
                .HasMaxLength(60)
                .HasColumnName("FreeTextLabel_01");
            entity.Property(e => e.FreeTextLabel02)
                .HasMaxLength(60)
                .HasColumnName("FreeTextLabel_02");
            entity.Property(e => e.FreeTextLabel03)
                .HasMaxLength(60)
                .HasColumnName("FreeTextLabel_03");
            entity.Property(e => e.FreeTextLabel04)
                .HasMaxLength(60)
                .HasColumnName("FreeTextLabel_04");
            entity.Property(e => e.FreeTextLabel05)
                .HasMaxLength(60)
                .HasColumnName("FreeTextLabel_05");
            entity.Property(e => e.FreeTextMandatory01).HasColumnName("FreeTextMandatory_01");
            entity.Property(e => e.FreeTextMandatory02).HasColumnName("FreeTextMandatory_02");
            entity.Property(e => e.FreeTextMandatory03).HasColumnName("FreeTextMandatory_03");
            entity.Property(e => e.FreeTextMandatory04).HasColumnName("FreeTextMandatory_04");
            entity.Property(e => e.FreeTextMandatory05).HasColumnName("FreeTextMandatory_05");
            entity.Property(e => e.FullText).HasDefaultValue(true);
            entity.Property(e => e.Gloffset)
                .HasMaxLength(9)
                .IsFixedLength()
                .HasColumnName("GLOffset");
            entity.Property(e => e.Glorigin).HasColumnName("GLOrigin");
            entity.Property(e => e.IconFileId).HasColumnName("IconFileID");
            entity.Property(e => e.IconType)
                .HasMaxLength(1)
                .IsFixedLength();
            entity.Property(e => e.IncludeRequestDescriptionInTask).HasDefaultValue(false);
            entity.Property(e => e.IncrementFactor)
                .HasMaxLength(1)
                .IsFixedLength();
            entity.Property(e => e.InformHr).HasColumnName("InformHR");
            entity.Property(e => e.ItemAvailability2).HasColumnName("ItemAvailability_2");
            entity.Property(e => e.ItemAvailabilityAfterApproval).HasDefaultValue(-1);
            entity.Property(e => e.ItemAvailabilityAfterApproval2)
                .HasDefaultValue(-1)
                .HasColumnName("ItemAvailabilityAfterApproval_2");
            entity.Property(e => e.ItemCaption).HasMaxLength(60);
            entity.Property(e => e.ItemCaption2)
                .HasMaxLength(60)
                .HasColumnName("ItemCaption_2");
            entity.Property(e => e.ItemCountMandatory2).HasColumnName("ItemCountMandatory_2");
            entity.Property(e => e.ItemCountry2).HasColumnName("ItemCountry_2");
            entity.Property(e => e.ItemMandatory2).HasColumnName("ItemMandatory_2");
            entity.Property(e => e.ItemNumberAvailability2).HasColumnName("ItemNumberAvailability_2");
            entity.Property(e => e.ItemNumberCaption).HasMaxLength(60);
            entity.Property(e => e.ItemNumberCaption2)
                .HasMaxLength(60)
                .HasColumnName("ItemNumberCaption_2");
            entity.Property(e => e.ItemNumberMandatory2).HasColumnName("ItemNumberMandatory_2");
            entity.Property(e => e.ItemSelection).HasMaxLength(255);
            entity.Property(e => e.ItemSelection2)
                .HasMaxLength(255)
                .HasColumnName("ItemSelection_2");
            entity.Property(e => e.ItemsInCustomerLicence2).HasColumnName("ItemsInCustomerLicence_2");
            entity.Property(e => e.LineDefinitionId).HasColumnName("LineDefinitionID");
            entity.Property(e => e.MainType).HasDefaultValue(1);
            entity.Property(e => e.Message0)
                .HasMaxLength(255)
                .HasColumnName("Message_0");
            entity.Property(e => e.Message1)
                .HasMaxLength(255)
                .HasColumnName("Message_1");
            entity.Property(e => e.Message2)
                .HasMaxLength(255)
                .HasColumnName("Message_2");
            entity.Property(e => e.Message3)
                .HasMaxLength(255)
                .HasColumnName("Message_3");
            entity.Property(e => e.Message4)
                .HasMaxLength(255)
                .HasColumnName("Message_4");
            entity.Property(e => e.NumberType).HasDefaultValue((short)1);
            entity.Property(e => e.PolicyDocId).HasColumnName("PolicyDocID");
            entity.Property(e => e.ProcessAccStatus)
                .HasMaxLength(1)
                .IsFixedLength();
            entity.Property(e => e.ProcessAccType)
                .HasMaxLength(1)
                .IsFixedLength();
            entity.Property(e => e.ProcessorSelectAccount).HasDefaultValue(false);
            entity.Property(e => e.ProcessorSelectItem2).HasColumnName("ProcessorSelectItem_2");
            entity.Property(e => e.ProcessorSelectItemNumber2).HasColumnName("ProcessorSelectItemNumber_2");
            entity.Property(e => e.RealizeAccStatus)
                .HasMaxLength(1)
                .IsFixedLength();
            entity.Property(e => e.RealizeAccType)
                .HasMaxLength(1)
                .IsFixedLength();
            entity.Property(e => e.RejectAccStatus)
                .HasMaxLength(1)
                .IsFixedLength();
            entity.Property(e => e.RejectAccType)
                .HasMaxLength(1)
                .IsFixedLength();
            entity.Property(e => e.ReopenCompleted).HasDefaultValue(1);
            entity.Property(e => e.RequestCommentsCaption).HasMaxLength(60);
            entity.Property(e => e.ResourceCompletionStatus)
                .HasMaxLength(1)
                .IsFixedLength();
            entity.Property(e => e.ResourceCompletionType)
                .HasMaxLength(1)
                .IsFixedLength();
            entity.Property(e => e.SecurityLevel).HasDefaultValue(10);
            entity.Property(e => e.ServiceDivision).HasMaxLength(3);
            entity.Property(e => e.ServiceType)
                .HasMaxLength(1)
                .HasDefaultValue("C")
                .IsFixedLength();
            entity.Property(e => e.ShowActualDatesInOpen).HasDefaultValue(true);
            entity.Property(e => e.ShowCustomerOnNew).HasDefaultValue(true);
            entity.Property(e => e.ShowDatesOnNew).HasDefaultValue(true);
            entity.Property(e => e.ShowDocumentOnNew).HasDefaultValue(true);
            entity.Property(e => e.ShowEmployeeOnNew).HasDefaultValue(true);
            entity.Property(e => e.ShowFinancialEntryKeyOnNew).HasDefaultValue(true);
            entity.Property(e => e.ShowItemNumberOnNew).HasDefaultValue(true);
            entity.Property(e => e.ShowItemNumberOnNew2)
                .HasDefaultValue(true)
                .HasColumnName("ShowItemNumberOnNew_2");
            entity.Property(e => e.ShowItemOnNew).HasDefaultValue(true);
            entity.Property(e => e.ShowItemOnNew2)
                .HasDefaultValue(true)
                .HasColumnName("ShowItemOnNew_2");
            entity.Property(e => e.ShowProjectNumberOnNew).HasDefaultValue(true);
            entity.Property(e => e.ShowReferenceNumberOnNew).HasDefaultValue(true);
            entity.Property(e => e.StartDateMandatory).HasDefaultValue(true);
            entity.Property(e => e.Syscreated)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("syscreated");
            entity.Property(e => e.Syscreator).HasColumnName("syscreator");
            entity.Property(e => e.Sysguid)
                .HasDefaultValueSql("(newid())")
                .HasColumnName("sysguid");
            entity.Property(e => e.Sysmodified)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("sysmodified");
            entity.Property(e => e.Sysmodifier).HasColumnName("sysmodifier");
            entity.Property(e => e.TakeOwnershipForProcessing).HasDefaultValue(1);
            entity.Property(e => e.TakeOwnershipForRealization).HasDefaultValue(1);
            entity.Property(e => e.TransSubType)
                .HasMaxLength(1)
                .HasDefaultValue("N")
                .IsFixedLength();
            entity.Property(e => e.TransType)
                .HasMaxLength(1)
                .HasDefaultValue("N")
                .IsFixedLength();
            entity.Property(e => e.UseDuration).HasDefaultValue(true);
            entity.Property(e => e.UseEmployee).HasDefaultValue(true);
            entity.Property(e => e.UseEndDate).HasDefaultValue(true);
            entity.Property(e => e.UseFinancialEntryKey).HasDefaultValue(false);
            entity.Property(e => e.UseItem2).HasColumnName("UseItem_2");
            entity.Property(e => e.UseItemCount2).HasColumnName("UseItemCount_2");
            entity.Property(e => e.UseItemCountry2).HasColumnName("UseItemCountry_2");
            entity.Property(e => e.UseItemNumber2).HasColumnName("UseItemNumber_2");
            entity.Property(e => e.UseRelease2).HasColumnName("UseRelease_2");
            entity.Property(e => e.UseStartDate).HasDefaultValue(true);
            entity.Property(e => e.UseTime).HasDefaultValue(true);
            entity.Property(e => e.UseTimestamp).HasDefaultValue(true);
            entity.Property(e => e.UseWorkscheduleForDurationCalculation).HasDefaultValue(true);
            entity.Property(e => e.Vatorigin).HasColumnName("VATOrigin");
            entity.Property(e => e.WorkflowCommentsCaption).HasMaxLength(60);
        });

        modelBuilder.Entity<AbsencesAudit>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("Absences_audit");

            entity.Property(e => e.DateCreated)
                .HasColumnType("datetime")
                .HasColumnName("dateCreated");
            entity.Property(e => e.FieldName)
                .HasMaxLength(50)
                .HasColumnName("fieldName");
            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.NewValue)
                .HasMaxLength(50)
                .HasColumnName("newValue");
            entity.Property(e => e.OldValue)
                .HasMaxLength(50)
                .HasColumnName("oldValue");
        });

        modelBuilder.Entity<Accncd>(entity =>
        {
            entity.HasKey(e => e.Id).IsClustered(false);

            entity.ToTable("accncd");

            entity.HasIndex(e => e.Accncd1, "accncd")
                .IsUnique()
                .IsClustered();

            entity.Property(e => e.Id).HasColumnName("ID");
            entity.Property(e => e.AantTests).HasColumnName("aant_tests");
            entity.Property(e => e.Accncd1)
                .HasMaxLength(3)
                .IsFixedLength()
                .HasColumnName("accncd");
            entity.Property(e => e.Accnmask)
                .HasMaxLength(80)
                .HasColumnName("accnmask");
            entity.Property(e => e.Addinddig1)
                .HasDefaultValue((byte)1)
                .HasColumnName("addinddig1");
            entity.Property(e => e.Addinddig2)
                .HasDefaultValue((byte)1)
                .HasColumnName("addinddig2");
            entity.Property(e => e.EnOf)
                .HasMaxLength(1)
                .IsFixedLength()
                .HasColumnName("en_of");
            entity.Property(e => e.Modulus1).HasColumnName("modulus1");
            entity.Property(e => e.Modulus2).HasColumnName("modulus2");
            entity.Property(e => e.Oms400)
                .HasMaxLength(40)
                .HasColumnName("oms40_0");
            entity.Property(e => e.Oms401)
                .HasMaxLength(40)
                .HasColumnName("oms40_1");
            entity.Property(e => e.Oms402)
                .HasMaxLength(40)
                .HasColumnName("oms40_2");
            entity.Property(e => e.Oms403)
                .HasMaxLength(40)
                .HasColumnName("oms40_3");
            entity.Property(e => e.Oms404)
                .HasMaxLength(40)
                .HasColumnName("oms40_4");
            entity.Property(e => e.Proeftype)
                .HasMaxLength(1)
                .IsFixedLength()
                .HasColumnName("proeftype");
            entity.Property(e => e.Syscreated)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("syscreated");
            entity.Property(e => e.Syscreator).HasColumnName("syscreator");
            entity.Property(e => e.Sysguid)
                .HasDefaultValueSql("(newid())")
                .HasColumnName("sysguid");
            entity.Property(e => e.Sysmodified)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("sysmodified");
            entity.Property(e => e.Sysmodifier).HasColumnName("sysmodifier");
            entity.Property(e => e.Timestamp)
                .IsRowVersion()
                .IsConcurrencyToken()
                .HasColumnName("timestamp");
            entity.Property(e => e.TotSort)
                .HasMaxLength(6)
                .IsFixedLength()
                .HasColumnName("tot_sort");
            entity.Property(e => e.UseBranch).HasColumnName("use_branch");
            entity.Property(e => e.VanafSort)
                .HasMaxLength(6)
                .IsFixedLength()
                .HasColumnName("vanaf_sort");
            entity.Property(e => e.Wtabel10).HasColumnName("wtabel1_0");
            entity.Property(e => e.Wtabel11).HasColumnName("wtabel1_1");
            entity.Property(e => e.Wtabel110).HasColumnName("wtabel1_10");
            entity.Property(e => e.Wtabel111).HasColumnName("wtabel1_11");
            entity.Property(e => e.Wtabel112).HasColumnName("wtabel1_12");
            entity.Property(e => e.Wtabel113).HasColumnName("wtabel1_13");
            entity.Property(e => e.Wtabel114).HasColumnName("wtabel1_14");
            entity.Property(e => e.Wtabel115).HasColumnName("wtabel1_15");
            entity.Property(e => e.Wtabel116).HasColumnName("wtabel1_16");
            entity.Property(e => e.Wtabel117).HasColumnName("wtabel1_17");
            entity.Property(e => e.Wtabel118).HasColumnName("wtabel1_18");
            entity.Property(e => e.Wtabel119).HasColumnName("wtabel1_19");
            entity.Property(e => e.Wtabel12).HasColumnName("wtabel1_2");
            entity.Property(e => e.Wtabel120).HasColumnName("wtabel1_20");
            entity.Property(e => e.Wtabel121).HasColumnName("wtabel1_21");
            entity.Property(e => e.Wtabel122).HasColumnName("wtabel1_22");
            entity.Property(e => e.Wtabel123).HasColumnName("wtabel1_23");
            entity.Property(e => e.Wtabel124).HasColumnName("wtabel1_24");
            entity.Property(e => e.Wtabel125).HasColumnName("wtabel1_25");
            entity.Property(e => e.Wtabel126).HasColumnName("wtabel1_26");
            entity.Property(e => e.Wtabel127).HasColumnName("wtabel1_27");
            entity.Property(e => e.Wtabel128).HasColumnName("wtabel1_28");
            entity.Property(e => e.Wtabel129).HasColumnName("wtabel1_29");
            entity.Property(e => e.Wtabel13).HasColumnName("wtabel1_3");
            entity.Property(e => e.Wtabel130).HasColumnName("wtabel1_30");
            entity.Property(e => e.Wtabel131).HasColumnName("wtabel1_31");
            entity.Property(e => e.Wtabel132).HasColumnName("wtabel1_32");
            entity.Property(e => e.Wtabel133).HasColumnName("wtabel1_33");
            entity.Property(e => e.Wtabel14).HasColumnName("wtabel1_4");
            entity.Property(e => e.Wtabel15).HasColumnName("wtabel1_5");
            entity.Property(e => e.Wtabel16).HasColumnName("wtabel1_6");
            entity.Property(e => e.Wtabel17).HasColumnName("wtabel1_7");
            entity.Property(e => e.Wtabel18).HasColumnName("wtabel1_8");
            entity.Property(e => e.Wtabel19).HasColumnName("wtabel1_9");
            entity.Property(e => e.Wtabel20).HasColumnName("wtabel2_0");
            entity.Property(e => e.Wtabel21).HasColumnName("wtabel2_1");
            entity.Property(e => e.Wtabel210).HasColumnName("wtabel2_10");
            entity.Property(e => e.Wtabel211).HasColumnName("wtabel2_11");
            entity.Property(e => e.Wtabel212).HasColumnName("wtabel2_12");
            entity.Property(e => e.Wtabel213).HasColumnName("wtabel2_13");
            entity.Property(e => e.Wtabel214).HasColumnName("wtabel2_14");
            entity.Property(e => e.Wtabel215).HasColumnName("wtabel2_15");
            entity.Property(e => e.Wtabel216).HasColumnName("wtabel2_16");
            entity.Property(e => e.Wtabel217).HasColumnName("wtabel2_17");
            entity.Property(e => e.Wtabel218).HasColumnName("wtabel2_18");
            entity.Property(e => e.Wtabel219).HasColumnName("wtabel2_19");
            entity.Property(e => e.Wtabel22).HasColumnName("wtabel2_2");
            entity.Property(e => e.Wtabel220).HasColumnName("wtabel2_20");
            entity.Property(e => e.Wtabel221).HasColumnName("wtabel2_21");
            entity.Property(e => e.Wtabel222).HasColumnName("wtabel2_22");
            entity.Property(e => e.Wtabel223).HasColumnName("wtabel2_23");
            entity.Property(e => e.Wtabel224).HasColumnName("wtabel2_24");
            entity.Property(e => e.Wtabel225).HasColumnName("wtabel2_25");
            entity.Property(e => e.Wtabel226).HasColumnName("wtabel2_26");
            entity.Property(e => e.Wtabel227).HasColumnName("wtabel2_27");
            entity.Property(e => e.Wtabel228).HasColumnName("wtabel2_28");
            entity.Property(e => e.Wtabel229).HasColumnName("wtabel2_29");
            entity.Property(e => e.Wtabel23).HasColumnName("wtabel2_3");
            entity.Property(e => e.Wtabel230).HasColumnName("wtabel2_30");
            entity.Property(e => e.Wtabel231).HasColumnName("wtabel2_31");
            entity.Property(e => e.Wtabel232).HasColumnName("wtabel2_32");
            entity.Property(e => e.Wtabel233).HasColumnName("wtabel2_33");
            entity.Property(e => e.Wtabel24).HasColumnName("wtabel2_4");
            entity.Property(e => e.Wtabel25).HasColumnName("wtabel2_5");
            entity.Property(e => e.Wtabel26).HasColumnName("wtabel2_6");
            entity.Property(e => e.Wtabel27).HasColumnName("wtabel2_7");
            entity.Property(e => e.Wtabel28).HasColumnName("wtabel2_8");
            entity.Property(e => e.Wtabel29).HasColumnName("wtabel2_9");
        });

        modelBuilder.Entity<AccountAdministration>(entity =>
        {
            entity.HasKey(e => e.Id).IsClustered(false);

            entity.HasIndex(e => new { e.Account, e.ServerName, e.DataBaseName, e.Type }, "AccountAdministrations")
                .IsUnique()
                .IsClustered();

            entity.Property(e => e.Id).HasColumnName("ID");
            entity.Property(e => e.BackupDirectory).HasMaxLength(500);
            entity.Property(e => e.DataBaseName).HasMaxLength(30);
            entity.Property(e => e.Date1).HasColumnType("datetime");
            entity.Property(e => e.Date10).HasColumnType("datetime");
            entity.Property(e => e.Date2).HasColumnType("datetime");
            entity.Property(e => e.Date3).HasColumnType("datetime");
            entity.Property(e => e.Date4).HasColumnType("datetime");
            entity.Property(e => e.Date5).HasColumnType("datetime");
            entity.Property(e => e.Date6).HasColumnType("datetime");
            entity.Property(e => e.Date7).HasColumnType("datetime");
            entity.Property(e => e.Date8).HasColumnType("datetime");
            entity.Property(e => e.Date9).HasColumnType("datetime");
            entity.Property(e => e.Description).HasMaxLength(80);
            entity.Property(e => e.Description1).HasMaxLength(80);
            entity.Property(e => e.Description10).HasMaxLength(80);
            entity.Property(e => e.Description2).HasMaxLength(80);
            entity.Property(e => e.Description3).HasMaxLength(80);
            entity.Property(e => e.Description4).HasMaxLength(80);
            entity.Property(e => e.Description5).HasMaxLength(80);
            entity.Property(e => e.Description6).HasMaxLength(80);
            entity.Property(e => e.Description7).HasMaxLength(80);
            entity.Property(e => e.Description8).HasMaxLength(80);
            entity.Property(e => e.Description9).HasMaxLength(80);
            entity.Property(e => e.Extra).HasMaxLength(150);
            entity.Property(e => e.IntervalType)
                .HasMaxLength(1)
                .IsFixedLength();
            entity.Property(e => e.ServerName).HasMaxLength(30);
            entity.Property(e => e.Syscreated)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("syscreated");
            entity.Property(e => e.Syscreator).HasColumnName("syscreator");
            entity.Property(e => e.Sysguid)
                .HasDefaultValueSql("(newid())")
                .HasColumnName("sysguid");
            entity.Property(e => e.Sysmodified)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("sysmodified");
            entity.Property(e => e.Sysmodifier).HasColumnName("sysmodifier");
            entity.Property(e => e.Timestamp)
                .IsRowVersion()
                .IsConcurrencyToken()
                .HasColumnName("timestamp");
            entity.Property(e => e.Type)
                .HasMaxLength(1)
                .HasDefaultValue("N")
                .IsFixedLength();
            entity.Property(e => e.Url)
                .HasMaxLength(500)
                .HasColumnName("URL");
            entity.Property(e => e.WebServer).HasMaxLength(100);
        });

        modelBuilder.Entity<AccountCategory>(entity =>
        {
            entity.HasKey(e => e.Id).IsClustered(false);

            entity.HasIndex(e => new { e.CategoryId, e.AccountCategoryCode }, "IX_AccountCategories")
                .IsUnique()
                .IsClustered();

            entity.Property(e => e.Id)
                .ValueGeneratedNever()
                .HasColumnName("ID");
            entity.Property(e => e.AccountCategoryCode).HasMaxLength(30);
            entity.Property(e => e.CategoryId).HasColumnName("CategoryID");
            entity.Property(e => e.Description).HasMaxLength(60);
            entity.Property(e => e.Syscreated)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("syscreated");
            entity.Property(e => e.Syscreator).HasColumnName("syscreator");
            entity.Property(e => e.Sysguid)
                .HasDefaultValueSql("(newid())")
                .HasColumnName("sysguid");
            entity.Property(e => e.Sysmodified)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("sysmodified");
            entity.Property(e => e.Sysmodifier).HasColumnName("sysmodifier");
        });

        modelBuilder.Entity<AccountCategoryName>(entity =>
        {
            entity.HasKey(e => e.CategoryId);

            entity.Property(e => e.CategoryId)
                .ValueGeneratedNever()
                .HasColumnName("CategoryID");
            entity.Property(e => e.Description).HasMaxLength(60);
            entity.Property(e => e.Syscreated)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("syscreated");
            entity.Property(e => e.Syscreator).HasColumnName("syscreator");
            entity.Property(e => e.Sysguid)
                .HasDefaultValueSql("(newid())")
                .HasColumnName("sysguid");
            entity.Property(e => e.Sysmodified)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("sysmodified");
            entity.Property(e => e.Sysmodifier).HasColumnName("sysmodifier");
        });

        modelBuilder.Entity<AccountClass>(entity =>
        {
            entity.HasKey(e => e.Id).IsClustered(false);

            entity.HasIndex(e => e.AccountClassCode, "IX_AccountClassCode");

            entity.HasIndex(e => new { e.ClassId, e.AccountClassCode }, "IX_AccountClasses")
                .IsUnique()
                .IsClustered();

            entity.Property(e => e.Id)
                .HasDefaultValueSql("(newid())")
                .HasColumnName("ID");
            entity.Property(e => e.AccountClassCode).HasMaxLength(30);
            entity.Property(e => e.ClassId).HasColumnName("ClassID");
            entity.Property(e => e.Description).HasMaxLength(160);
            entity.Property(e => e.Description0)
                .HasMaxLength(160)
                .HasColumnName("Description_0");
            entity.Property(e => e.Description1)
                .HasMaxLength(160)
                .HasColumnName("Description_1");
            entity.Property(e => e.Description2)
                .HasMaxLength(160)
                .HasColumnName("Description_2");
            entity.Property(e => e.Description3)
                .HasMaxLength(160)
                .HasColumnName("Description_3");
            entity.Property(e => e.Description4)
                .HasMaxLength(160)
                .HasColumnName("Description_4");
            entity.Property(e => e.IdentId)
                .ValueGeneratedOnAdd()
                .HasColumnName("IdentID");
            entity.Property(e => e.Sysguid)
                .HasDefaultValueSql("(newid())")
                .HasColumnName("sysguid");
            entity.Property(e => e.Timestamp)
                .IsRowVersion()
                .IsConcurrencyToken()
                .HasColumnName("timestamp");
        });

        modelBuilder.Entity<AccountClassName>(entity =>
        {
            entity.HasKey(e => e.ClassId);

            entity.Property(e => e.ClassId).HasColumnName("ClassID");
            entity.Property(e => e.CompanyCode)
                .HasMaxLength(3)
                .IsFixedLength();
            entity.Property(e => e.Description).HasMaxLength(60);
            entity.Property(e => e.Description0)
                .HasMaxLength(60)
                .HasColumnName("Description_0");
            entity.Property(e => e.Description1)
                .HasMaxLength(60)
                .HasColumnName("Description_1");
            entity.Property(e => e.Description2)
                .HasMaxLength(60)
                .HasColumnName("Description_2");
            entity.Property(e => e.Description3)
                .HasMaxLength(60)
                .HasColumnName("Description_3");
            entity.Property(e => e.Description4)
                .HasMaxLength(60)
                .HasColumnName("Description_4");
            entity.Property(e => e.Sysguid)
                .HasDefaultValueSql("(newid())")
                .HasColumnName("sysguid");
            entity.Property(e => e.Timestamp)
                .IsRowVersion()
                .IsConcurrencyToken()
                .HasColumnName("timestamp");
        });

        modelBuilder.Entity<AccountConversionType>(entity =>
        {
            entity.HasKey(e => e.AccountConversionType1);

            entity.Property(e => e.AccountConversionType1)
                .ValueGeneratedNever()
                .HasColumnName("AccountConversionType");
            entity.Property(e => e.Description).HasMaxLength(60);
            entity.Property(e => e.DescriptionTermId).HasColumnName("DescriptionTermID");
            entity.Property(e => e.Timestamp)
                .IsRowVersion()
                .IsConcurrencyToken()
                .HasColumnName("timestamp");
        });

        modelBuilder.Entity<AccountMandatory>(entity =>
        {
            entity.ToTable("AccountMandatory");

            entity.Property(e => e.Id)
                .HasDefaultValueSql("(newid())")
                .HasColumnName("ID");
            entity.Property(e => e.AccountType)
                .HasMaxLength(1)
                .IsFixedLength();
            entity.Property(e => e.General).HasMaxLength(1000);
            entity.Property(e => e.Syscreated)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("syscreated");
            entity.Property(e => e.Syscreator).HasColumnName("syscreator");
            entity.Property(e => e.Sysmodified)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("sysmodified");
            entity.Property(e => e.Sysmodifier).HasColumnName("sysmodifier");
        });

        modelBuilder.Entity<AccountReportCategory>(entity =>
        {
            entity.HasKey(e => e.AccountReportCategory1).HasName("PK_AccountReportCategory");

            entity.Property(e => e.AccountReportCategory1)
                .ValueGeneratedNever()
                .HasColumnName("AccountReportCategory");
            entity.Property(e => e.Description).HasMaxLength(60);
            entity.Property(e => e.DescriptionSuffix).HasMaxLength(60);
            entity.Property(e => e.DescriptionSuffixTermId).HasColumnName("DescriptionSuffixTermID");
            entity.Property(e => e.DescriptionTermId).HasColumnName("DescriptionTermID");
            entity.Property(e => e.Multiplier).HasDefaultValue(1.0);
            entity.Property(e => e.Timestamp)
                .IsRowVersion()
                .IsConcurrencyToken()
                .HasColumnName("timestamp");
            entity.Property(e => e.Visible).HasDefaultValue(true);
        });

        modelBuilder.Entity<AccountStatus>(entity =>
        {
            entity.HasKey(e => e.Status);

            entity.ToTable("AccountStatus");

            entity.Property(e => e.Status)
                .HasMaxLength(1)
                .IsFixedLength();
            entity.Property(e => e.Description).HasMaxLength(60);
            entity.Property(e => e.Syscreated)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("syscreated");
            entity.Property(e => e.Syscreator).HasColumnName("syscreator");
            entity.Property(e => e.Sysmodified)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("sysmodified");
            entity.Property(e => e.Sysmodifier).HasColumnName("sysmodifier");
            entity.Property(e => e.TermId).HasColumnName("TermID");
        });

        modelBuilder.Entity<AccountType>(entity =>
        {
            entity.HasKey(e => e.Type);

            entity.Property(e => e.Type)
                .HasMaxLength(1)
                .IsFixedLength();
            entity.Property(e => e.Description).HasMaxLength(60);
            entity.Property(e => e.Syscreated)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("syscreated");
            entity.Property(e => e.Syscreator).HasColumnName("syscreator");
            entity.Property(e => e.Sysmodified)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("sysmodified");
            entity.Property(e => e.Sysmodifier).HasColumnName("sysmodifier");
            entity.Property(e => e.TermId).HasColumnName("TermID");
        });

        modelBuilder.Entity<AccountTypeProperty>(entity =>
        {
            entity.HasKey(e => e.Id).IsClustered(false);

            entity.HasIndex(e => new { e.AccountType, e.AccountLevel, e.AccountStatus }, "Type")
                .IsUnique()
                .IsClustered();

            entity.Property(e => e.Id)
                .ValueGeneratedNever()
                .HasColumnName("ID");
            entity.Property(e => e.AccManagerFunctionId).HasColumnName("AccManagerFunctionID");
            entity.Property(e => e.AccountStatus)
                .HasMaxLength(1)
                .IsFixedLength();
            entity.Property(e => e.AccountType)
                .HasMaxLength(1)
                .IsFixedLength();
            entity.Property(e => e.AddressFunctionId).HasColumnName("AddressFunctionID");
            entity.Property(e => e.ChamberOfCommerceEditMode).HasDefaultValueSql("(N'1')");
            entity.Property(e => e.ChamberOfCommerceFunctionId).HasColumnName("ChamberOfCommerceFunctionID");
            entity.Property(e => e.CodeFunctionId).HasColumnName("CodeFunctionID");
            entity.Property(e => e.DatabaseFunctionId).HasColumnName("DatabaseFunctionID");
            entity.Property(e => e.DocumentFunctionId).HasColumnName("DocumentFunctionID");
            entity.Property(e => e.DunNumberEditMode).HasDefaultValueSql("(N'1')");
            entity.Property(e => e.DunNumberFunctionId).HasColumnName("DunNumberFunctionID");
            entity.Property(e => e.EditEmployeeFunctionId).HasColumnName("EditEmployeeFunctionID");
            entity.Property(e => e.FreeFieldsFunctionId).HasColumnName("FreeFieldsFunctionID");
            entity.Property(e => e.LastLoginFunctionId).HasColumnName("LastLoginFunctionID");
            entity.Property(e => e.LinkActiveFunctionId).HasColumnName("LinkActiveFunctionID");
            entity.Property(e => e.LinkAddressesFunctionId).HasColumnName("LinkAddressesFunctionID");
            entity.Property(e => e.LinkAp).HasColumnName("LinkAP");
            entity.Property(e => e.LinkApfunctionId).HasColumnName("LinkAPFunctionID");
            entity.Property(e => e.LinkAr).HasColumnName("LinkAR");
            entity.Property(e => e.LinkArfunctionId).HasColumnName("LinkARFunctionID");
            entity.Property(e => e.LinkBlockedFunctionId).HasColumnName("LinkBlockedFunctionID");
            entity.Property(e => e.LinkBudgetFunctionId).HasColumnName("LinkBudgetFunctionID");
            entity.Property(e => e.LinkContractsFunctionId).HasColumnName("LinkContractsFunctionID");
            entity.Property(e => e.LinkCreditFunctionId).HasColumnName("LinkCreditFunctionID");
            entity.Property(e => e.LinkCustomersFunctionId).HasColumnName("LinkCustomersFunctionID");
            entity.Property(e => e.LinkDocumentsFunctionId).HasColumnName("LinkDocumentsFunctionID");
            entity.Property(e => e.LinkEditFunctionId).HasColumnName("LinkEditFunctionID");
            entity.Property(e => e.LinkExitFunctionId).HasColumnName("LinkExitFunctionID");
            entity.Property(e => e.LinkItemsFunctionId).HasColumnName("LinkItemsFunctionID");
            entity.Property(e => e.LinkLabelFunctionId).HasColumnName("LinkLabelFunctionID");
            entity.Property(e => e.LinkLogFunctionId).HasColumnName("LinkLogFunctionID");
            entity.Property(e => e.LinkMailMergeFunctionId).HasColumnName("LinkMailMergeFunctionID");
            entity.Property(e => e.LinkMapFunctionId).HasColumnName("LinkMapFunctionID");
            entity.Property(e => e.LinkPassiveFunctionId).HasColumnName("LinkPassiveFunctionID");
            entity.Property(e => e.LinkPasswordFunctionId).HasColumnName("LinkPasswordFunctionID");
            entity.Property(e => e.LinkPersonsFunctionId).HasColumnName("LinkPersonsFunctionID");
            entity.Property(e => e.LinkPilotFunctionId).HasColumnName("LinkPilotFunctionID");
            entity.Property(e => e.LinkProjectFunctionId).HasColumnName("LinkProjectFunctionID");
            entity.Property(e => e.LinkProspectsFunctionId).HasColumnName("LinkProspectsFunctionID");
            entity.Property(e => e.LinkPurchaseFunctionId).HasColumnName("LinkPurchaseFunctionID");
            entity.Property(e => e.LinkReferenceFunctionId).HasColumnName("LinkReferenceFunctionID");
            entity.Property(e => e.LinkRequestsFunctionId).HasColumnName("LinkRequestsFunctionID");
            entity.Property(e => e.LinkSalesStatisticsFunctionId).HasColumnName("LinkSalesStatisticsFunctionID");
            entity.Property(e => e.LinkValidateFunctionId).HasColumnName("LinkValidateFunctionID");
            entity.Property(e => e.LogoFunctionId).HasColumnName("LogoFunctionID");
            entity.Property(e => e.MonitorFunctionId).HasColumnName("MonitorFunctionID");
            entity.Property(e => e.NotesFunctionId).HasColumnName("NotesFunctionID");
            entity.Property(e => e.RelationFunctionId).HasColumnName("RelationFunctionID");
            entity.Property(e => e.SalesPersonEditMode).HasDefaultValueSql("(N'1')");
            entity.Property(e => e.SalesPersonFunctionId).HasColumnName("SalesPersonFunctionID");
            entity.Property(e => e.SectorFunctionId).HasColumnName("SectorFunctionID");
            entity.Property(e => e.SourceEditMode).HasDefaultValueSql("(N'1')");
            entity.Property(e => e.SourceFunctionId).HasColumnName("SourceFunctionID");
            entity.Property(e => e.StatusFunctionId).HasColumnName("StatusFunctionID");
            entity.Property(e => e.SubsidiariesFunctionId).HasColumnName("SubsidiariesFunctionID");
            entity.Property(e => e.Syscreated)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("syscreated");
            entity.Property(e => e.Syscreator).HasColumnName("syscreator");
            entity.Property(e => e.Sysmodified)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("sysmodified");
            entity.Property(e => e.Sysmodifier).HasColumnName("sysmodifier");
            entity.Property(e => e.TypeFunctionId).HasColumnName("TypeFunctionID");
            entity.Property(e => e.WebAccessFunctionId).HasColumnName("WebAccessFunctionID");
        });

        modelBuilder.Entity<ActivityNotification>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__Activity__3214EC271EEA53F4");

            entity.ToTable("ActivityNotification");

            entity.HasIndex(e => new { e.ReceiverId, e.ActionDate }, "IX_ActivityNotification_ReceiverID_ActionDate");

            entity.HasIndex(e => new { e.ReceiverId, e.OwnerId, e.SenderId, e.Type }, "IX_ActivityNotification_ReceiverOwnerSender");

            entity.Property(e => e.Id)
                .ValueGeneratedNever()
                .HasColumnName("ID");
            entity.Property(e => e.OwnerId).HasColumnName("OwnerID");
            entity.Property(e => e.ReceiverId).HasColumnName("ReceiverID");
            entity.Property(e => e.SenderId).HasColumnName("SenderID");
        });

        modelBuilder.Entity<Address>(entity =>
        {
            entity.HasKey(e => e.Id).IsClustered(false);

            entity.HasIndex(e => new { e.Account, e.ContactPerson, e.Type }, "AddressAccountContactType")
                .IsUnique()
                .IsClustered();

            entity.HasIndex(e => e.City, "AddressCity");

            entity.HasIndex(e => new { e.Account, e.AddressCode }, "AddressCode");

            entity.HasIndex(e => new { e.ContactPerson, e.Type }, "AddressContactType").IsUnique();

            entity.HasIndex(e => e.Country, "AddressCountry");

            entity.HasIndex(e => e.Fax, "AddressFax");

            entity.HasIndex(e => e.AddressLine1, "AddressLine1");

            entity.HasIndex(e => e.Phone, "AddressPhone");

            entity.HasIndex(e => e.PostCode, "AddressPostCode");

            entity.HasIndex(e => e.Type, "AddressTypes");

            entity.HasIndex(e => e.Idcol, "ix_IDCol").IsUnique();

            entity.Property(e => e.Id)
                .HasDefaultValueSql("(newid())")
                .HasColumnName("ID");
            entity.Property(e => e.AddressCode).HasMaxLength(15);
            entity.Property(e => e.AddressLine1)
                .HasMaxLength(100)
                .UseCollation("SQL_Latin1_General_CP1_CI_AI");
            entity.Property(e => e.AddressLine2)
                .HasMaxLength(100)
                .UseCollation("SQL_Latin1_General_CP1_CI_AI");
            entity.Property(e => e.AddressLine3)
                .HasMaxLength(100)
                .UseCollation("SQL_Latin1_General_CP1_CI_AI");
            entity.Property(e => e.City)
                .HasMaxLength(100)
                .UseCollation("SQL_Latin1_General_CP1_CI_AI");
            entity.Property(e => e.Country)
                .HasMaxLength(3)
                .IsFixedLength();
            entity.Property(e => e.County)
                .HasMaxLength(100)
                .UseCollation("SQL_Latin1_General_CP1_CI_AI");
            entity.Property(e => e.Datefield1)
                .HasColumnType("datetime")
                .HasColumnName("datefield1");
            entity.Property(e => e.Datefield2)
                .HasColumnType("datetime")
                .HasColumnName("datefield2");
            entity.Property(e => e.Datefield3)
                .HasColumnType("datetime")
                .HasColumnName("datefield3");
            entity.Property(e => e.Datefield4)
                .HasColumnType("datetime")
                .HasColumnName("datefield4");
            entity.Property(e => e.Datefield5)
                .HasColumnType("datetime")
                .HasColumnName("datefield5");
            entity.Property(e => e.EdiDcid)
                .HasMaxLength(30)
                .HasColumnName("EDI_DCID");
            entity.Property(e => e.EdiStoreId)
                .HasMaxLength(30)
                .HasColumnName("EDI_StoreID");
            entity.Property(e => e.EdiStoreName)
                .HasMaxLength(30)
                .HasColumnName("EDI_StoreName");
            entity.Property(e => e.Fax).HasMaxLength(50);
            entity.Property(e => e.Fobcode)
                .HasMaxLength(3)
                .IsFixedLength()
                .HasColumnName("FOBCode");
            entity.Property(e => e.Idcol)
                .ValueGeneratedOnAdd()
                .HasColumnName("IDCol");
            entity.Property(e => e.Notes).UseCollation("SQL_Latin1_General_CP1_CI_AI");
            entity.Property(e => e.Numberfield1).HasColumnName("numberfield1");
            entity.Property(e => e.Numberfield2).HasColumnName("numberfield2");
            entity.Property(e => e.Numberfield3).HasColumnName("numberfield3");
            entity.Property(e => e.Numberfield4).HasColumnName("numberfield4");
            entity.Property(e => e.Numberfield5).HasColumnName("numberfield5");
            entity.Property(e => e.Phone).HasMaxLength(50);
            entity.Property(e => e.PoNumber).HasMaxLength(55);
            entity.Property(e => e.PostCode)
                .HasMaxLength(20)
                .UseCollation("SQL_Latin1_General_CP1_CI_AI");
            entity.Property(e => e.ShipVia)
                .HasMaxLength(5)
                .IsFixedLength();
            entity.Property(e => e.StateCode)
                .HasMaxLength(3)
                .IsFixedLength();
            entity.Property(e => e.Syscreated)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("syscreated");
            entity.Property(e => e.Syscreator).HasColumnName("syscreator");
            entity.Property(e => e.Sysmodified)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("sysmodified");
            entity.Property(e => e.Sysmodifier).HasColumnName("sysmodifier");
            entity.Property(e => e.TaxCode)
                .HasMaxLength(3)
                .IsFixedLength();
            entity.Property(e => e.TaxCode2)
                .HasMaxLength(3)
                .IsFixedLength();
            entity.Property(e => e.TaxCode3)
                .HasMaxLength(3)
                .IsFixedLength();
            entity.Property(e => e.TaxSchedule)
                .HasMaxLength(5)
                .IsFixedLength();
            entity.Property(e => e.Textfield1)
                .HasMaxLength(80)
                .UseCollation("SQL_Latin1_General_CP1_CI_AI")
                .HasColumnName("textfield1");
            entity.Property(e => e.Textfield2)
                .HasMaxLength(80)
                .UseCollation("SQL_Latin1_General_CP1_CI_AI")
                .HasColumnName("textfield2");
            entity.Property(e => e.Textfield3)
                .HasMaxLength(80)
                .UseCollation("SQL_Latin1_General_CP1_CI_AI")
                .HasColumnName("textfield3");
            entity.Property(e => e.Textfield4)
                .HasMaxLength(80)
                .UseCollation("SQL_Latin1_General_CP1_CI_AI")
                .HasColumnName("textfield4");
            entity.Property(e => e.Textfield5)
                .HasMaxLength(80)
                .UseCollation("SQL_Latin1_General_CP1_CI_AI")
                .HasColumnName("textfield5");
            entity.Property(e => e.Timestamp)
                .IsRowVersion()
                .IsConcurrencyToken();
            entity.Property(e => e.Type)
                .HasMaxLength(3)
                .IsFixedLength();
            entity.Property(e => e.Upszone)
                .HasMaxLength(4)
                .IsFixedLength()
                .HasColumnName("UPSZone");
            entity.Property(e => e.Warehouse)
                .HasMaxLength(4)
                .IsFixedLength()
                .HasColumnName("warehouse");
        });

        modelBuilder.Entity<AddressPostCode>(entity =>
        {
            entity.HasKey(e => e.Id).IsClustered(false);

            entity.HasIndex(e => new { e.City, e.CountryCode, e.PostCode }, "ix_CityCountryPostCode");

            entity.HasIndex(e => new { e.CountryCode, e.StateCode, e.PostCode }, "ix_CountryPostCode").IsClustered();

            entity.HasIndex(e => e.Idcol, "ix_IDCol").IsUnique();

            entity.Property(e => e.Id)
                .HasDefaultValueSql("(newid())")
                .HasColumnName("ID");
            entity.Property(e => e.City).HasMaxLength(100);
            entity.Property(e => e.CountryCode)
                .HasMaxLength(3)
                .IsFixedLength();
            entity.Property(e => e.Idcol)
                .ValueGeneratedOnAdd()
                .HasColumnName("IDCol");
            entity.Property(e => e.PostCode).HasMaxLength(20);
            entity.Property(e => e.StateCode)
                .HasMaxLength(3)
                .IsFixedLength();
        });

        modelBuilder.Entity<AddressState>(entity =>
        {
            entity.HasKey(e => e.Id).IsClustered(false);

            entity.HasIndex(e => new { e.CountryCode, e.StateCode }, "ix_StateCountry")
                .IsUnique()
                .IsClustered();

            entity.Property(e => e.Id)
                .HasDefaultValueSql("(newid())")
                .HasColumnName("ID");
            entity.Property(e => e.CountryCode)
                .HasMaxLength(3)
                .IsFixedLength();
            entity.Property(e => e.IdEx).ValueGeneratedOnAdd();
            entity.Property(e => e.Name).HasMaxLength(100);
            entity.Property(e => e.StateCode)
                .HasMaxLength(3)
                .IsFixedLength();
        });

        modelBuilder.Entity<AddressType>(entity =>
        {
            entity.HasIndex(e => new { e.IsUserDefined, e.Id }, "IsUserDefinedType").IsUnique();

            entity.HasIndex(e => e.Idcol, "ix_IDCol").IsUnique();

            entity.Property(e => e.Id)
                .HasMaxLength(3)
                .IsFixedLength()
                .HasColumnName("ID");
            entity.Property(e => e.Description).HasMaxLength(50);
            entity.Property(e => e.Idcol)
                .ValueGeneratedOnAdd()
                .HasColumnName("IDCol");
            entity.Property(e => e.Syscreated)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("syscreated");
            entity.Property(e => e.Syscreator).HasColumnName("syscreator");
            entity.Property(e => e.Sysguid)
                .HasDefaultValueSql("(newid())")
                .HasColumnName("sysguid");
            entity.Property(e => e.Sysmodified)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("sysmodified");
            entity.Property(e => e.Sysmodifier).HasColumnName("sysmodifier");
        });

        modelBuilder.Entity<Aehrpayroll>(entity =>
        {
            entity
                .HasNoKey()
                .ToView("aehrpayroll");

            entity.Property(e => e.Check)
                .HasMaxLength(1)
                .IsFixedLength();
            entity.Property(e => e.Contract).HasColumnName("contract");
            entity.Property(e => e.Country)
                .HasMaxLength(3)
                .IsFixedLength()
                .HasColumnName("country");
            entity.Property(e => e.Description)
                .HasMaxLength(50)
                .HasColumnName("description");
            entity.Property(e => e.DocAttachmentId).HasColumnName("DocAttachmentID");
            entity.Property(e => e.Enddate)
                .HasColumnType("datetime")
                .HasColumnName("enddate");
            entity.Property(e => e.Ges).HasColumnName("GES");
            entity.Property(e => e.Id)
                .ValueGeneratedOnAdd()
                .HasColumnName("ID");
            entity.Property(e => e.JobTitle)
                .HasMaxLength(12)
                .HasColumnName("job_title");
            entity.Property(e => e.PaymentPeriod)
                .HasMaxLength(1)
                .IsFixedLength()
                .HasColumnName("payment_period");
            entity.Property(e => e.Payrollyear).HasColumnName("payrollyear");
            entity.Property(e => e.Period).HasColumnName("period");
            entity.Property(e => e.RatioAmount)
                .HasMaxLength(1)
                .IsFixedLength();
            entity.Property(e => e.ResId).HasColumnName("res_id");
            entity.Property(e => e.ResidentStatus)
                .HasMaxLength(1)
                .IsFixedLength()
                .HasColumnName("resident_status");
            entity.Property(e => e.Sliptext1)
                .HasMaxLength(70)
                .HasColumnName("sliptext1");
            entity.Property(e => e.Sliptext2)
                .HasMaxLength(70)
                .HasColumnName("sliptext2");
            entity.Property(e => e.Sliptext3)
                .HasMaxLength(70)
                .HasColumnName("sliptext3");
            entity.Property(e => e.Startdate)
                .HasColumnType("datetime")
                .HasColumnName("startdate");
            entity.Property(e => e.Syscreated)
                .HasColumnType("datetime")
                .HasColumnName("syscreated");
            entity.Property(e => e.Syscreator).HasColumnName("syscreator");
            entity.Property(e => e.Sysguid).HasColumnName("sysguid");
            entity.Property(e => e.Sysmodified)
                .HasColumnType("datetime")
                .HasColumnName("sysmodified");
            entity.Property(e => e.Sysmodifier).HasColumnName("sysmodifier");
            entity.Property(e => e.Timestamp)
                .IsRowVersion()
                .IsConcurrencyToken()
                .HasColumnName("timestamp");
            entity.Property(e => e.Type)
                .HasMaxLength(1)
                .IsFixedLength()
                .HasColumnName("type");
            entity.Property(e => e.UnpaidLeave)
                .HasMaxLength(8)
                .IsFixedLength();
        });

        modelBuilder.Entity<Afgper>(entity =>
        {
            entity.HasKey(e => e.Id).IsClustered(false);

            entity.ToTable("afgper");

            entity.HasIndex(e => new { e.Bkjrcode, e.Periode, e.Dagbknr }, "afgper")
                .IsUnique()
                .IsClustered();

            entity.Property(e => e.Id).HasColumnName("ID");
            entity.Property(e => e.Bkjrcode).HasColumnName("bkjrcode");
            entity.Property(e => e.Dagbknr)
                .HasMaxLength(3)
                .IsFixedLength()
                .HasColumnName("dagbknr");
            entity.Property(e => e.Periode)
                .HasMaxLength(3)
                .IsFixedLength()
                .HasColumnName("periode");
            entity.Property(e => e.Syscreated)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("syscreated");
            entity.Property(e => e.Syscreator).HasColumnName("syscreator");
            entity.Property(e => e.Sysguid)
                .HasDefaultValueSql("(newid())")
                .HasColumnName("sysguid");
            entity.Property(e => e.Sysmodified)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("sysmodified");
            entity.Property(e => e.Sysmodifier).HasColumnName("sysmodifier");
            entity.Property(e => e.Timestamp)
                .IsRowVersion()
                .IsConcurrencyToken()
                .HasColumnName("timestamp");
        });

        modelBuilder.Entity<Amuta>(entity =>
        {
            entity.HasKey(e => e.Id).IsClustered(false);

            entity.ToTable("amutas");

            entity.HasIndex(e => new { e.Artcode, e.Id }, "amitem").IsUnique();

            entity.HasIndex(e => new { e.Project, e.Id }, "amproj").IsUnique();

            entity.HasIndex(e => new { e.Crdnr, e.Bkjrcode, e.Periode, e.Id }, "amscrd").IsUnique();

            entity.HasIndex(e => new { e.Bkjrcode, e.Dagbknr, e.Bkstnr, e.Id }, "amsdag").IsUnique();

            entity.HasIndex(e => new { e.Debnr, e.Bkjrcode, e.Periode, e.Id }, "amsdeb").IsUnique();

            entity.HasIndex(e => new { e.VolgnrPfb, e.Id }, "amspfb").IsUnique();

            entity.HasIndex(e => new { e.Reknr, e.Bkjrcode, e.Periode, e.Id }, "amsrek").IsUnique();

            entity.HasIndex(e => new { e.Bkjrcode, e.Periode, e.Dagbknr, e.Volgnr5, e.Regel }, "amutas")
                .IsUnique()
                .IsClustered();

            entity.HasIndex(e => e.Kstplcode, "ix_amutas_kstplcode");

            entity.HasIndex(e => e.Orderdebtor, "ix_orderdebtor");

            entity.HasIndex(e => e.Warehouse, "ix_warehouse");

            entity.Property(e => e.Id).HasColumnName("ID");
            entity.Property(e => e.Aantal).HasColumnName("aantal");
            entity.Property(e => e.AdresCd)
                .HasMaxLength(6)
                .IsFixedLength()
                .HasColumnName("adres_cd");
            entity.Property(e => e.AdresNr)
                .HasMaxLength(10)
                .IsFixedLength()
                .HasColumnName("adres_nr");
            entity.Property(e => e.Afldat)
                .HasColumnType("datetime")
                .HasColumnName("afldat");
            entity.Property(e => e.Amstext).HasColumnName("amstext");
            entity.Property(e => e.Artcode)
                .HasMaxLength(30)
                .HasColumnName("artcode");
            entity.Property(e => e.BankTransactionGuid).HasColumnName("BankTransactionGUID");
            entity.Property(e => e.Bankacc)
                .HasMaxLength(34)
                .HasColumnName("bankacc");
            entity.Property(e => e.Bdrkredbep).HasColumnName("bdrkredbep");
            entity.Property(e => e.Bdrkredbp2).HasColumnName("bdrkredbp2");
            entity.Property(e => e.BedrVvaf1).HasColumnName("bedr_vvaf1");
            entity.Property(e => e.BedrVvaf2).HasColumnName("bedr_vvaf2");
            entity.Property(e => e.BedrVvaf3).HasColumnName("bedr_vvaf3");
            entity.Property(e => e.BedrVvaf4).HasColumnName("bedr_vvaf4");
            entity.Property(e => e.BedrVvaf5).HasColumnName("bedr_vvaf5");
            entity.Property(e => e.Bedrag).HasColumnName("bedrag");
            entity.Property(e => e.Betaalref)
                .HasMaxLength(35)
                .HasColumnName("betaalref");
            entity.Property(e => e.Betcond)
                .HasMaxLength(2)
                .IsFixedLength()
                .HasColumnName("betcond");
            entity.Property(e => e.Betwijze)
                .HasMaxLength(1)
                .IsFixedLength()
                .HasColumnName("betwijze");
            entity.Property(e => e.Bkjrcode).HasColumnName("bkjrcode");
            entity.Property(e => e.Bkstnr)
                .HasMaxLength(8)
                .IsFixedLength()
                .HasColumnName("bkstnr");
            entity.Property(e => e.BkstnrVrz)
                .HasMaxLength(8)
                .IsFixedLength()
                .HasColumnName("bkstnr_vrz");
            entity.Property(e => e.BtwBdr).HasColumnName("btw_bdr");
            entity.Property(e => e.BtwCode)
                .HasMaxLength(3)
                .IsFixedLength()
                .HasColumnName("btw_code");
            entity.Property(e => e.BtwGrond).HasColumnName("btw_grond");
            entity.Property(e => e.BtwNummer)
                .HasMaxLength(20)
                .HasColumnName("btw_nummer");
            entity.Property(e => e.Btwvrtnr)
                .HasMaxLength(2)
                .IsFixedLength()
                .HasColumnName("btwvrtnr");
            entity.Property(e => e.CashRegisterAccount).HasMaxLength(34);
            entity.Property(e => e.CmpWwn).HasColumnName("cmp_wwn");
            entity.Property(e => e.CompCode)
                .HasMaxLength(8)
                .IsFixedLength()
                .HasColumnName("comp_code");
            entity.Property(e => e.Crdnote).HasColumnName("crdnote");
            entity.Property(e => e.Crdnr)
                .HasMaxLength(6)
                .IsFixedLength()
                .HasColumnName("crdnr");
            entity.Property(e => e.Dagbknr)
                .HasMaxLength(3)
                .IsFixedLength()
                .HasColumnName("dagbknr");
            entity.Property(e => e.Datum)
                .HasColumnType("datetime")
                .HasColumnName("datum");
            entity.Property(e => e.Debnr)
                .HasMaxLength(6)
                .IsFixedLength()
                .HasColumnName("debnr");
            entity.Property(e => e.DocAttachmentId).HasColumnName("DocAttachmentID");
            entity.Property(e => e.Docdate)
                .HasColumnType("datetime")
                .HasColumnName("docdate");
            entity.Property(e => e.Docnumber)
                .HasMaxLength(30)
                .HasColumnName("docnumber");
            entity.Property(e => e.DocumentId).HasColumnName("DocumentID");
            entity.Property(e => e.Entryorigin)
                .HasMaxLength(1)
                .IsFixedLength()
                .HasColumnName("entryorigin");
            entity.Property(e => e.Exvalbdr).HasColumnName("exvalbdr");
            entity.Property(e => e.Exvalcode)
                .HasMaxLength(3)
                .IsFixedLength()
                .HasColumnName("exvalcode");
            entity.Property(e => e.Facode)
                .HasMaxLength(20)
                .HasColumnName("facode");
            entity.Property(e => e.Faktuurnr)
                .HasMaxLength(8)
                .IsFixedLength()
                .HasColumnName("faktuurnr");
            entity.Property(e => e.Freefield1)
                .HasMaxLength(75)
                .HasColumnName("freefield1");
            entity.Property(e => e.Freefield2)
                .HasMaxLength(75)
                .HasColumnName("freefield2");
            entity.Property(e => e.Freefield3)
                .HasMaxLength(75)
                .HasColumnName("freefield3");
            entity.Property(e => e.Freefield4).HasColumnName("freefield4");
            entity.Property(e => e.Freefield5).HasColumnName("freefield5");
            entity.Property(e => e.Guids)
                .HasMaxLength(38)
                .HasColumnName("guids");
            entity.Property(e => e.IbtdeliveryNr)
                .HasMaxLength(8)
                .HasColumnName("IBTDeliveryNr");
            entity.Property(e => e.IntArea).HasMaxLength(10);
            entity.Property(e => e.IntDeliveryMethod).HasMaxLength(10);
            entity.Property(e => e.IntLandAssembly).HasMaxLength(3);
            entity.Property(e => e.IntLandDestOrig)
                .HasMaxLength(3)
                .IsFixedLength();
            entity.Property(e => e.IntLandIso)
                .HasMaxLength(3)
                .IsFixedLength()
                .HasColumnName("IntLandISO");
            entity.Property(e => e.IntPort).HasMaxLength(10);
            entity.Property(e => e.IntStandardCode).HasMaxLength(10);
            entity.Property(e => e.IntStatNr).HasMaxLength(9);
            entity.Property(e => e.IntSystem).HasMaxLength(10);
            entity.Property(e => e.IntTransA).HasMaxLength(10);
            entity.Property(e => e.IntTransB).HasMaxLength(10);
            entity.Property(e => e.IntTransShipment).HasMaxLength(10);
            entity.Property(e => e.IntTransportMethod).HasMaxLength(10);
            entity.Property(e => e.Koers).HasColumnName("koers");
            entity.Property(e => e.Koers3).HasColumnName("koers3");
            entity.Property(e => e.Kredbep)
                .HasMaxLength(1)
                .IsFixedLength()
                .HasColumnName("kredbep");
            entity.Property(e => e.Kstdrcode)
                .HasMaxLength(8)
                .IsFixedLength()
                .HasColumnName("kstdrcode");
            entity.Property(e => e.Kstplcode)
                .HasMaxLength(8)
                .IsFixedLength()
                .HasColumnName("kstplcode");
            entity.Property(e => e.Levverw)
                .HasMaxLength(1)
                .IsFixedLength()
                .HasColumnName("levverw");
            entity.Property(e => e.MatchNr)
                .HasMaxLength(15)
                .HasColumnName("match_nr");
            entity.Property(e => e.NatmovCode)
                .HasMaxLength(4)
                .IsFixedLength()
                .HasColumnName("natmov_code");
            entity.Property(e => e.Oms25)
                .HasMaxLength(60)
                .HasColumnName("oms25");
            entity.Property(e => e.Orderdebtor).HasColumnName("orderdebtor");
            entity.Property(e => e.PayrollSubtype)
                .HasMaxLength(4)
                .IsFixedLength();
            entity.Property(e => e.Periode)
                .HasMaxLength(3)
                .IsFixedLength()
                .HasColumnName("periode");
            entity.Property(e => e.Pricelist).HasMaxLength(15);
            entity.Property(e => e.Project)
                .HasMaxLength(20)
                .HasColumnName("project");
            entity.Property(e => e.Projmutnr)
                .HasMaxLength(10)
                .IsFixedLength()
                .HasColumnName("projmutnr");
            entity.Property(e => e.Regel)
                .HasMaxLength(4)
                .IsFixedLength()
                .HasColumnName("regel");
            entity.Property(e => e.Reknr)
                .HasMaxLength(9)
                .IsFixedLength()
                .HasColumnName("reknr");
            entity.Property(e => e.ResId).HasColumnName("res_id");
            entity.Property(e => e.Resperiod)
                .HasMaxLength(3)
                .IsFixedLength()
                .HasColumnName("resperiod");
            entity.Property(e => e.Serialnumber)
                .HasMaxLength(30)
                .HasColumnName("serialnumber");
            entity.Property(e => e.Shipment).HasMaxLength(30);
            entity.Property(e => e.Storno).HasColumnName("storno");
            entity.Property(e => e.Syscreated)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("syscreated");
            entity.Property(e => e.Syscreator).HasColumnName("syscreator");
            entity.Property(e => e.Sysguid)
                .HasDefaultValueSql("(newid())")
                .HasColumnName("sysguid");
            entity.Property(e => e.Sysmodified)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("sysmodified");
            entity.Property(e => e.Sysmodifier).HasColumnName("sysmodifier");
            entity.Property(e => e.TaxCode2)
                .HasMaxLength(3)
                .IsFixedLength();
            entity.Property(e => e.TaxCode3)
                .HasMaxLength(3)
                .IsFixedLength();
            entity.Property(e => e.TaxCode4)
                .HasMaxLength(3)
                .IsFixedLength();
            entity.Property(e => e.TaxCode5)
                .HasMaxLength(3)
                .IsFixedLength();
            entity.Property(e => e.Timestamp)
                .IsRowVersion()
                .IsConcurrencyToken()
                .HasColumnName("timestamp");
            entity.Property(e => e.TransactionNumber).HasMaxLength(20);
            entity.Property(e => e.Transbkjr).HasColumnName("transbkjr");
            entity.Property(e => e.Transsubtype)
                .HasMaxLength(1)
                .HasDefaultValue("N")
                .IsFixedLength()
                .HasColumnName("transsubtype");
            entity.Property(e => e.Transtype)
                .HasMaxLength(1)
                .HasDefaultValue("N")
                .IsFixedLength()
                .HasColumnName("transtype");
            entity.Property(e => e.Unitcode)
                .HasMaxLength(8)
                .IsFixedLength();
            entity.Property(e => e.ValBdr).HasColumnName("val_bdr");
            entity.Property(e => e.ValbtwBdr).HasColumnName("valbtw_bdr");
            entity.Property(e => e.Valcode)
                .HasMaxLength(3)
                .IsFixedLength()
                .HasColumnName("valcode");
            entity.Property(e => e.Verschil)
                .HasMaxLength(1)
                .IsFixedLength()
                .HasColumnName("verschil");
            entity.Property(e => e.Vervdatfak)
                .HasColumnType("datetime")
                .HasColumnName("vervdatfak");
            entity.Property(e => e.Vervdatkrd)
                .HasColumnType("datetime")
                .HasColumnName("vervdatkrd");
            entity.Property(e => e.Vervdtkrd2)
                .HasColumnType("datetime")
                .HasColumnName("vervdtkrd2");
            entity.Property(e => e.Volgnr5)
                .HasMaxLength(5)
                .IsFixedLength()
                .HasColumnName("volgnr5");
            entity.Property(e => e.VolgnrPfb)
                .HasMaxLength(8)
                .IsFixedLength()
                .HasColumnName("volgnr_pfb");
            entity.Property(e => e.Vooruitbet).HasColumnName("vooruitbet");
            entity.Property(e => e.Voucher).HasColumnName("voucher");
            entity.Property(e => e.Warehouse)
                .HasMaxLength(4)
                .IsFixedLength()
                .HasColumnName("warehouse");
            entity.Property(e => e.WarehouseLocation)
                .HasMaxLength(10)
                .IsFixedLength()
                .HasColumnName("warehouse_location");
            entity.Property(e => e.Weeknummer)
                .HasMaxLength(2)
                .IsFixedLength()
                .HasColumnName("weeknummer");
            entity.Property(e => e.Wisselkrs).HasColumnName("wisselkrs");
        });

        modelBuilder.Entity<Amutak>(entity =>
        {
            entity.HasKey(e => e.Id).IsClustered(false);

            entity.ToTable("amutak");

            entity.HasIndex(e => e.Entrytype, "EntryType");

            entity.HasIndex(e => new { e.Entryorigin, e.Faktuurnr, e.Debnr, e.Bkstnr }, "IX_amutak_InvoiceProcess");

            entity.HasIndex(e => e.Sysguid, "IX_amutak_sysguid").IsUnique();

            entity.HasIndex(e => new { e.Dagbknr, e.Status, e.Sysguid }, "JournalStatusEntryGuid");

            entity.HasIndex(e => new { e.Bkjrcode, e.Dagbknr, e.Bkstnr, e.Id }, "amkbks").IsUnique();

            entity.HasIndex(e => new { e.Crdnr, e.Bkjrcode, e.Periode, e.Id }, "amkcrd").IsUnique();

            entity.HasIndex(e => new { e.Debnr, e.Bkjrcode, e.Periode, e.Id }, "amkdeb").IsUnique();

            entity.HasIndex(e => new { e.Status, e.Bkjrcode, e.Periode, e.Dagbknr, e.Volgnr5, e.Id }, "amksta").IsUnique();

            entity.HasIndex(e => new { e.Bkjrcode, e.Periode, e.Dagbknr, e.Volgnr5 }, "amutak")
                .IsUnique()
                .IsClustered();

            entity.HasIndex(e => e.Kstplcode, "ix_amutak_kstplcode");

            entity.HasIndex(e => e.Orderdebtor, "ix_orderdebtor");

            entity.Property(e => e.Id).HasColumnName("ID");
            entity.Property(e => e.AdresCd)
                .HasMaxLength(6)
                .IsFixedLength()
                .HasColumnName("adres_cd");
            entity.Property(e => e.AdresNr)
                .HasMaxLength(10)
                .IsFixedLength()
                .HasColumnName("adres_nr");
            entity.Property(e => e.Afldat)
                .HasColumnType("datetime")
                .HasColumnName("afldat");
            entity.Property(e => e.Amktext).HasColumnName("amktext");
            entity.Property(e => e.Bankacc)
                .HasMaxLength(34)
                .HasColumnName("bankacc");
            entity.Property(e => e.Banksubtyp)
                .HasMaxLength(1)
                .IsFixedLength()
                .HasColumnName("banksubtyp");
            entity.Property(e => e.Bdrkredbep).HasColumnName("bdrkredbep");
            entity.Property(e => e.Bdrkredbp2).HasColumnName("bdrkredbp2");
            entity.Property(e => e.BedrVvaf1).HasColumnName("bedr_vvaf1");
            entity.Property(e => e.BedrVvaf2).HasColumnName("bedr_vvaf2");
            entity.Property(e => e.BedrVvaf3).HasColumnName("bedr_vvaf3");
            entity.Property(e => e.BedrVvaf4).HasColumnName("bedr_vvaf4");
            entity.Property(e => e.BedrVvaf5).HasColumnName("bedr_vvaf5");
            entity.Property(e => e.Bedrag).HasColumnName("bedrag");
            entity.Property(e => e.Beginsaldo).HasColumnName("beginsaldo");
            entity.Property(e => e.Betaalref)
                .HasMaxLength(35)
                .HasColumnName("betaalref");
            entity.Property(e => e.Betcond)
                .HasMaxLength(2)
                .IsFixedLength()
                .HasColumnName("betcond");
            entity.Property(e => e.Betwijze)
                .HasMaxLength(1)
                .IsFixedLength()
                .HasColumnName("betwijze");
            entity.Property(e => e.Bkjrcode).HasColumnName("bkjrcode");
            entity.Property(e => e.Bkstnr)
                .HasMaxLength(8)
                .IsFixedLength()
                .HasColumnName("bkstnr");
            entity.Property(e => e.BtwNummer)
                .HasMaxLength(20)
                .HasColumnName("btw_nummer");
            entity.Property(e => e.CashRegisterAccount).HasMaxLength(34);
            entity.Property(e => e.CmpWwn).HasColumnName("cmp_wwn");
            entity.Property(e => e.Crdnote).HasColumnName("crdnote");
            entity.Property(e => e.Crdnr)
                .HasMaxLength(6)
                .IsFixedLength()
                .HasColumnName("crdnr");
            entity.Property(e => e.Dagbknr)
                .HasMaxLength(3)
                .IsFixedLength()
                .HasColumnName("dagbknr");
            entity.Property(e => e.Datum)
                .HasColumnType("datetime")
                .HasColumnName("datum");
            entity.Property(e => e.Debnr)
                .HasMaxLength(6)
                .IsFixedLength()
                .HasColumnName("debnr");
            entity.Property(e => e.DelResIdentry).HasColumnName("DEL_res_identry");
            entity.Property(e => e.DocAttachmentId).HasColumnName("DocAttachmentID");
            entity.Property(e => e.Docdate)
                .HasColumnType("datetime")
                .HasColumnName("docdate");
            entity.Property(e => e.Docnumber)
                .HasMaxLength(30)
                .HasColumnName("docnumber");
            entity.Property(e => e.DocumentId).HasColumnName("DocumentID");
            entity.Property(e => e.Eindsaldo).HasColumnName("eindsaldo");
            entity.Property(e => e.Entryorigin)
                .HasMaxLength(1)
                .IsFixedLength()
                .HasColumnName("entryorigin");
            entity.Property(e => e.Entrytype)
                .HasMaxLength(1)
                .HasDefaultValue("N")
                .IsFixedLength()
                .HasColumnName("entrytype");
            entity.Property(e => e.Faktuurnr)
                .HasMaxLength(8)
                .IsFixedLength()
                .HasColumnName("faktuurnr");
            entity.Property(e => e.Freefield1)
                .HasMaxLength(75)
                .HasColumnName("freefield1");
            entity.Property(e => e.Freefield2)
                .HasMaxLength(75)
                .HasColumnName("freefield2");
            entity.Property(e => e.Freefield3)
                .HasMaxLength(75)
                .HasColumnName("freefield3");
            entity.Property(e => e.Freefield4).HasColumnName("freefield4");
            entity.Property(e => e.Freefield5).HasColumnName("freefield5");
            entity.Property(e => e.GrekBdr).HasColumnName("grek_bdr");
            entity.Property(e => e.Guids)
                .HasMaxLength(38)
                .HasColumnName("guids");
            entity.Property(e => e.Koers).HasColumnName("koers");
            entity.Property(e => e.Kredbep)
                .HasMaxLength(1)
                .IsFixedLength()
                .HasColumnName("kredbep");
            entity.Property(e => e.Kstdrcode)
                .HasMaxLength(8)
                .IsFixedLength()
                .HasColumnName("kstdrcode");
            entity.Property(e => e.Kstplcode)
                .HasMaxLength(8)
                .IsFixedLength()
                .HasColumnName("kstplcode");
            entity.Property(e => e.MatchFakt)
                .HasMaxLength(8)
                .IsFixedLength()
                .HasColumnName("match_fakt");
            entity.Property(e => e.MatchNr)
                .HasMaxLength(15)
                .HasColumnName("match_nr");
            entity.Property(e => e.Oms25)
                .HasMaxLength(60)
                .HasColumnName("oms25");
            entity.Property(e => e.Oorsprong)
                .HasMaxLength(1)
                .IsFixedLength()
                .HasColumnName("oorsprong");
            entity.Property(e => e.Orderdebtor).HasColumnName("orderdebtor");
            entity.Property(e => e.Percentag).HasColumnName("percentag");
            entity.Property(e => e.Percentag2).HasColumnName("percentag2");
            entity.Property(e => e.Periode)
                .HasMaxLength(3)
                .IsFixedLength()
                .HasColumnName("periode");
            entity.Property(e => e.Project)
                .HasMaxLength(20)
                .HasColumnName("project");
            entity.Property(e => e.Reknr)
                .HasMaxLength(9)
                .IsFixedLength()
                .HasColumnName("reknr");
            entity.Property(e => e.Selcode)
                .HasMaxLength(2)
                .IsFixedLength();
            entity.Property(e => e.Status)
                .HasMaxLength(1)
                .IsFixedLength()
                .HasColumnName("status");
            entity.Property(e => e.Storno).HasColumnName("storno");
            entity.Property(e => e.StructM).HasColumnName("struct_m");
            entity.Property(e => e.Syscreated)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("syscreated");
            entity.Property(e => e.Syscreator).HasColumnName("syscreator");
            entity.Property(e => e.Sysguid)
                .HasDefaultValueSql("(newid())")
                .HasColumnName("sysguid");
            entity.Property(e => e.Sysmodified)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("sysmodified");
            entity.Property(e => e.Sysmodifier).HasColumnName("sysmodifier");
            entity.Property(e => e.Timestamp)
                .IsRowVersion()
                .IsConcurrencyToken()
                .HasColumnName("timestamp");
            entity.Property(e => e.Transper)
                .HasMaxLength(3)
                .IsFixedLength()
                .HasColumnName("transper");
            entity.Property(e => e.Transreknr)
                .HasMaxLength(9)
                .IsFixedLength()
                .HasColumnName("transreknr");
            entity.Property(e => e.ValBdr).HasColumnName("val_bdr");
            entity.Property(e => e.Valcode)
                .HasMaxLength(3)
                .IsFixedLength()
                .HasColumnName("valcode");
            entity.Property(e => e.Vervdatfak)
                .HasColumnType("datetime")
                .HasColumnName("vervdatfak");
            entity.Property(e => e.Vervdatkrd)
                .HasColumnType("datetime")
                .HasColumnName("vervdatkrd");
            entity.Property(e => e.Vervdtkrd2)
                .HasColumnType("datetime")
                .HasColumnName("vervdtkrd2");
            entity.Property(e => e.Volgnr5)
                .HasMaxLength(5)
                .IsFixedLength()
                .HasColumnName("volgnr5");
            entity.Property(e => e.Weeknummer)
                .HasMaxLength(2)
                .IsFixedLength()
                .HasColumnName("weeknummer");
            entity.Property(e => e.Wisselkrs).HasColumnName("wisselkrs");
        });

        modelBuilder.Entity<Artbst>(entity =>
        {
            entity
                .HasNoKey()
                .ToView("artbst");

            entity.Property(e => e.AantVerp).HasColumnName("aant_verp");
            entity.Property(e => e.ArSoort)
                .HasMaxLength(1)
                .IsFixedLength()
                .HasColumnName("ar_soort");
            entity.Property(e => e.Artcode)
                .HasMaxLength(30)
                .HasColumnName("artcode");
            entity.Property(e => e.Artgrp)
                .HasMaxLength(4)
                .HasColumnName("artgrp");
            entity.Property(e => e.Backordart).HasColumnName("backordart");
            entity.Property(e => e.Bestadvc)
                .HasMaxLength(1)
                .IsFixedLength()
                .HasColumnName("bestadvc");
            entity.Property(e => e.Brutogew).HasColumnName("brutogew");
            entity.Property(e => e.BtwInk)
                .HasMaxLength(3)
                .IsFixedLength()
                .HasColumnName("btw_ink");
            entity.Property(e => e.BtwVerk)
                .HasMaxLength(3)
                .IsFixedLength()
                .HasColumnName("btw_verk");
            entity.Property(e => e.BtwVlevy)
                .HasMaxLength(3)
                .IsFixedLength()
                .HasColumnName("btw_vlevy");
            entity.Property(e => e.Class01)
                .HasMaxLength(30)
                .HasColumnName("Class_01");
            entity.Property(e => e.Class02)
                .HasMaxLength(30)
                .HasColumnName("Class_02");
            entity.Property(e => e.Class03)
                .HasMaxLength(30)
                .HasColumnName("Class_03");
            entity.Property(e => e.Class04)
                .HasMaxLength(30)
                .HasColumnName("Class_04");
            entity.Property(e => e.Class05)
                .HasMaxLength(30)
                .HasColumnName("Class_05");
            entity.Property(e => e.Class06)
                .HasMaxLength(30)
                .HasColumnName("Class_06");
            entity.Property(e => e.Class07)
                .HasMaxLength(30)
                .HasColumnName("Class_07");
            entity.Property(e => e.Class08)
                .HasMaxLength(30)
                .HasColumnName("Class_08");
            entity.Property(e => e.Class09)
                .HasMaxLength(30)
                .HasColumnName("Class_09");
            entity.Property(e => e.Class10)
                .HasMaxLength(30)
                .HasColumnName("Class_10");
            entity.Property(e => e.Condition)
                .HasMaxLength(1)
                .IsFixedLength()
                .HasColumnName("condition");
            entity.Property(e => e.Discount).HasColumnName("discount");
            entity.Property(e => e.Divisible).HasColumnName("divisible");
            entity.Property(e => e.EenhVerk)
                .HasMaxLength(5)
                .IsFixedLength()
                .HasColumnName("eenh_verk");
            entity.Property(e => e.Explode).HasColumnName("explode");
            entity.Property(e => e.Freefield1).HasColumnName("freefield1");
            entity.Property(e => e.Freefield10)
                .HasMaxLength(255)
                .HasColumnName("freefield10");
            entity.Property(e => e.Freefield11)
                .HasColumnType("datetime")
                .HasColumnName("freefield11");
            entity.Property(e => e.Freefield12)
                .HasColumnType("datetime")
                .HasColumnName("freefield12");
            entity.Property(e => e.Freefield13).HasColumnName("freefield13");
            entity.Property(e => e.Freefield14).HasColumnName("freefield14");
            entity.Property(e => e.Freefield15).HasColumnName("freefield15");
            entity.Property(e => e.Freefield16).HasColumnName("freefield16");
            entity.Property(e => e.Freefield17).HasColumnName("freefield17");
            entity.Property(e => e.Freefield18).HasColumnName("freefield18");
            entity.Property(e => e.Freefield19).HasColumnName("freefield19");
            entity.Property(e => e.Freefield2).HasColumnName("freefield2");
            entity.Property(e => e.Freefield20).HasColumnName("freefield20");
            entity.Property(e => e.Freefield3).HasColumnName("freefield3");
            entity.Property(e => e.Freefield4)
                .HasMaxLength(255)
                .HasColumnName("freefield4");
            entity.Property(e => e.Freefield5)
                .HasMaxLength(255)
                .HasColumnName("freefield5");
            entity.Property(e => e.Freefield6)
                .HasMaxLength(255)
                .HasColumnName("freefield6");
            entity.Property(e => e.Freefield7)
                .HasMaxLength(255)
                .HasColumnName("freefield7");
            entity.Property(e => e.Freefield8)
                .HasMaxLength(255)
                .HasColumnName("freefield8");
            entity.Property(e => e.Freefield9)
                .HasMaxLength(255)
                .HasColumnName("freefield9");
            entity.Property(e => e.FromSynergy).HasColumnName("from_synergy");
            entity.Property(e => e.Id)
                .ValueGeneratedOnAdd()
                .HasColumnName("ID");
            entity.Property(e => e.IntfacInk)
                .HasMaxLength(3)
                .IsFixedLength()
                .HasColumnName("intfac_ink");
            entity.Property(e => e.IntfacVrk)
                .HasMaxLength(3)
                .IsFixedLength()
                .HasColumnName("intfac_vrk");
            entity.Property(e => e.KortOms)
                .HasMaxLength(13)
                .HasColumnName("kort_oms");
            entity.Property(e => e.LevCrdnr)
                .HasMaxLength(6)
                .IsFixedLength()
                .HasColumnName("lev_crdnr");
            entity.Property(e => e.Magcode)
                .HasMaxLength(4)
                .HasColumnName("magcode");
            entity.Property(e => e.Nettogew).HasColumnName("nettogew");
            entity.Property(e => e.Oms300)
                .HasMaxLength(255)
                .HasColumnName("oms30_0");
            entity.Property(e => e.Oms301)
                .HasMaxLength(60)
                .HasColumnName("oms30_1");
            entity.Property(e => e.Oms302)
                .HasMaxLength(60)
                .HasColumnName("oms30_2");
            entity.Property(e => e.Oms303)
                .HasMaxLength(60)
                .HasColumnName("oms30_3");
            entity.Property(e => e.Oms304)
                .HasMaxLength(60)
                .HasColumnName("oms30_4");
            entity.Property(e => e.Orderink).HasColumnName("orderink");
            entity.Property(e => e.Picturefile)
                .HasMaxLength(128)
                .HasColumnName("picturefile");
            entity.Property(e => e.Property)
                .HasMaxLength(1)
                .IsFixedLength()
                .HasColumnName("property");
            entity.Property(e => e.Samengest).HasColumnName("samengest");
            entity.Property(e => e.SerieArt)
                .HasMaxLength(1)
                .IsFixedLength()
                .HasColumnName("serie_art");
            entity.Property(e => e.Stateenh).HasColumnName("stateenh");
            entity.Property(e => e.Statistnr)
                .HasMaxLength(9)
                .IsFixedLength()
                .HasColumnName("statistnr");
            entity.Property(e => e.Status)
                .HasMaxLength(1)
                .IsFixedLength()
                .HasColumnName("status");
            entity.Property(e => e.Syscreated)
                .HasColumnType("datetime")
                .HasColumnName("syscreated");
            entity.Property(e => e.Syscreator).HasColumnName("syscreator");
            entity.Property(e => e.Sysguid).HasColumnName("sysguid");
            entity.Property(e => e.Sysmodified)
                .HasColumnType("datetime")
                .HasColumnName("sysmodified");
            entity.Property(e => e.Sysmodifier).HasColumnName("sysmodifier");
            entity.Property(e => e.Tekst)
                .HasMaxLength(160)
                .HasColumnName("tekst");
            entity.Property(e => e.Timestamp)
                .IsRowVersion()
                .IsConcurrencyToken()
                .HasColumnName("timestamp");
            entity.Property(e => e.VerkpVerp).HasColumnName("verkp_verp");
            entity.Property(e => e.VerpOms)
                .HasMaxLength(8)
                .IsFixedLength()
                .HasColumnName("verp_oms");
            entity.Property(e => e.Vmargin).HasColumnName("vmargin");
            entity.Property(e => e.Voorrart).HasColumnName("voorrart");
            entity.Property(e => e.Vvp).HasColumnName("vvp");
            entity.Property(e => e.Vwrd1).HasColumnName("vwrd1");
            entity.Property(e => e.Vwrd2).HasColumnName("vwrd2");
        });

        modelBuilder.Entity<Artext>(entity =>
        {
            entity.HasKey(e => e.Id).IsClustered(false);

            entity.ToTable("artext");

            entity.HasIndex(e => new { e.ExArtcode, e.Artcode }, "artext")
                .IsUnique()
                .IsClustered();

            entity.Property(e => e.Id).HasColumnName("ID");
            entity.Property(e => e.Artcode)
                .HasMaxLength(30)
                .HasColumnName("artcode");
            entity.Property(e => e.BreedteI).HasColumnName("breedte_i");
            entity.Property(e => e.ExArtcode)
                .HasMaxLength(2)
                .IsFixedLength()
                .HasColumnName("ex_artcode");
            entity.Property(e => e.Syscreated)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("syscreated");
            entity.Property(e => e.Syscreator).HasColumnName("syscreator");
            entity.Property(e => e.Sysguid)
                .HasDefaultValueSql("(newid())")
                .HasColumnName("sysguid");
            entity.Property(e => e.Sysmodified)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("sysmodified");
            entity.Property(e => e.Sysmodifier).HasColumnName("sysmodifier");
            entity.Property(e => e.Tekst)
                .HasMaxLength(160)
                .HasColumnName("tekst");
            entity.Property(e => e.Timestamp)
                .IsRowVersion()
                .IsConcurrencyToken()
                .HasColumnName("timestamp");
        });

        modelBuilder.Entity<Artgrp>(entity =>
        {
            entity
                .HasNoKey()
                .ToView("artgrp");

            entity.Property(e => e.Artgrp1)
                .HasMaxLength(4)
                .HasColumnName("artgrp");
            entity.Property(e => e.Freefield1).HasColumnName("freefield1");
            entity.Property(e => e.Freefield10)
                .HasMaxLength(75)
                .IsFixedLength()
                .HasColumnName("freefield10");
            entity.Property(e => e.Freefield11)
                .HasColumnType("datetime")
                .HasColumnName("freefield11");
            entity.Property(e => e.Freefield12)
                .HasColumnType("datetime")
                .HasColumnName("freefield12");
            entity.Property(e => e.Freefield13).HasColumnName("freefield13");
            entity.Property(e => e.Freefield14).HasColumnName("freefield14");
            entity.Property(e => e.Freefield15).HasColumnName("freefield15");
            entity.Property(e => e.Freefield16).HasColumnName("freefield16");
            entity.Property(e => e.Freefield17).HasColumnName("freefield17");
            entity.Property(e => e.Freefield18).HasColumnName("freefield18");
            entity.Property(e => e.Freefield19).HasColumnName("freefield19");
            entity.Property(e => e.Freefield2).HasColumnName("freefield2");
            entity.Property(e => e.Freefield20).HasColumnName("freefield20");
            entity.Property(e => e.Freefield3).HasColumnName("freefield3");
            entity.Property(e => e.Freefield4)
                .HasMaxLength(75)
                .IsFixedLength()
                .HasColumnName("freefield4");
            entity.Property(e => e.Freefield5)
                .HasMaxLength(75)
                .IsFixedLength()
                .HasColumnName("freefield5");
            entity.Property(e => e.Freefield6)
                .HasMaxLength(75)
                .IsFixedLength()
                .HasColumnName("freefield6");
            entity.Property(e => e.Freefield7)
                .HasMaxLength(75)
                .IsFixedLength()
                .HasColumnName("freefield7");
            entity.Property(e => e.Freefield8)
                .HasMaxLength(75)
                .IsFixedLength()
                .HasColumnName("freefield8");
            entity.Property(e => e.Freefield9)
                .HasMaxLength(75)
                .IsFixedLength()
                .HasColumnName("freefield9");
            entity.Property(e => e.Groepnaam0)
                .HasMaxLength(60)
                .HasColumnName("groepnaam_0");
            entity.Property(e => e.Groepnaam1)
                .HasMaxLength(60)
                .HasColumnName("groepnaam_1");
            entity.Property(e => e.Groepnaam2)
                .HasMaxLength(60)
                .HasColumnName("groepnaam_2");
            entity.Property(e => e.Groepnaam3)
                .HasMaxLength(60)
                .HasColumnName("groepnaam_3");
            entity.Property(e => e.Groepnaam4)
                .HasMaxLength(60)
                .HasColumnName("groepnaam_4");
            entity.Property(e => e.Id)
                .ValueGeneratedOnAdd()
                .HasColumnName("ID");
            entity.Property(e => e.Kstdrcode)
                .HasMaxLength(8)
                .HasColumnName("kstdrcode");
            entity.Property(e => e.RekKort)
                .HasMaxLength(9)
                .HasColumnName("rek_kort");
            entity.Property(e => e.RekKstpv)
                .HasMaxLength(9)
                .HasColumnName("rek_kstpv");
            entity.Property(e => e.RekOhw)
                .HasMaxLength(9)
                .HasColumnName("rek_ohw");
            entity.Property(e => e.RekOmz)
                .HasMaxLength(9)
                .HasColumnName("rek_omz");
            entity.Property(e => e.RekPrv)
                .HasMaxLength(9)
                .HasColumnName("rek_prv");
            entity.Property(e => e.RekScws)
                .HasMaxLength(9)
                .HasColumnName("rek_scws");
            entity.Property(e => e.RekVoorr)
                .HasMaxLength(9)
                .HasColumnName("rek_voorr");
            entity.Property(e => e.Statistnr)
                .HasMaxLength(9)
                .HasColumnName("statistnr");
            entity.Property(e => e.Syscreated)
                .HasColumnType("datetime")
                .HasColumnName("syscreated");
            entity.Property(e => e.Syscreator).HasColumnName("syscreator");
            entity.Property(e => e.Sysguid).HasColumnName("sysguid");
            entity.Property(e => e.Sysmodified)
                .HasColumnType("datetime")
                .HasColumnName("sysmodified");
            entity.Property(e => e.Sysmodifier).HasColumnName("sysmodifier");
            entity.Property(e => e.Timestamp)
                .IsRowVersion()
                .IsConcurrencyToken()
                .HasColumnName("timestamp");
        });

        modelBuilder.Entity<Artlev>(entity =>
        {
            entity
                .HasNoKey()
                .ToView("artlev");

            entity.Property(e => e.Aantverpi).HasColumnName("aantverpi");
            entity.Property(e => e.Artcode)
                .HasMaxLength(30)
                .IsFixedLength()
                .HasColumnName("artcode");
            entity.Property(e => e.Artcodlev)
                .HasMaxLength(30)
                .IsFixedLength()
                .HasColumnName("artcodlev");
            entity.Property(e => e.Barcode)
                .HasMaxLength(60)
                .HasColumnName("barcode");
            entity.Property(e => e.Bestdatl)
                .HasColumnType("datetime")
                .HasColumnName("bestdatl");
            entity.Property(e => e.Bestgr).HasColumnName("bestgr");
            entity.Property(e => e.BestnL)
                .HasMaxLength(8)
                .IsFixedLength()
                .HasColumnName("bestn_l");
            entity.Property(e => e.BtwInk)
                .HasMaxLength(3)
                .IsFixedLength()
                .HasColumnName("btw_ink");
            entity.Property(e => e.EenhInk)
                .HasMaxLength(5)
                .IsFixedLength()
                .HasColumnName("eenh_ink");
            entity.Property(e => e.Gip).HasColumnName("gip");
            entity.Property(e => e.Id)
                .ValueGeneratedOnAdd()
                .HasColumnName("ID");
            entity.Property(e => e.InkpVerp).HasColumnName("inkp_verp");
            entity.Property(e => e.LevCrdnr)
                .HasMaxLength(6)
                .IsFixedLength()
                .HasColumnName("lev_crdnr");
            entity.Property(e => e.Levb).HasColumnName("levb");
            entity.Property(e => e.Levt).HasColumnName("levt");
            entity.Property(e => e.OmrFact).HasColumnName("omr_fact");
            entity.Property(e => e.Ontvdatl)
                .HasColumnType("datetime")
                .HasColumnName("ontvdatl");
            entity.Property(e => e.Prafspr).HasColumnName("prafspr");
            entity.Property(e => e.Qtypack).HasColumnName("qtypack");
            entity.Property(e => e.Qtyunit).HasColumnName("qtyunit");
            entity.Property(e => e.Syscreated)
                .HasColumnType("datetime")
                .HasColumnName("syscreated");
            entity.Property(e => e.Syscreator).HasColumnName("syscreator");
            entity.Property(e => e.Sysguid).HasColumnName("sysguid");
            entity.Property(e => e.Sysmodified)
                .HasColumnType("datetime")
                .HasColumnName("sysmodified");
            entity.Property(e => e.Sysmodifier).HasColumnName("sysmodifier");
            entity.Property(e => e.Timestamp)
                .IsRowVersion()
                .IsConcurrencyToken()
                .HasColumnName("timestamp");
            entity.Property(e => e.TotNontv).HasColumnName("tot_nontv");
            entity.Property(e => e.VerpOms)
                .HasMaxLength(8)
                .IsFixedLength()
                .HasColumnName("verp_oms");
        });

        modelBuilder.Entity<Artlnk>(entity =>
        {
            entity.HasKey(e => e.Id).IsClustered(false);

            entity.ToTable("artlnk");

            entity.HasIndex(e => new { e.Artcode, e.Id }, "artlnk")
                .IsUnique()
                .IsClustered();

            entity.Property(e => e.Id).HasColumnName("ID");
            entity.Property(e => e.Artcode)
                .HasMaxLength(30)
                .HasColumnName("artcode");
            entity.Property(e => e.Bestand)
                .HasMaxLength(55)
                .HasColumnName("bestand");
            entity.Property(e => e.Document)
                .HasMaxLength(55)
                .HasColumnName("document");
            entity.Property(e => e.Syscreated)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("syscreated");
            entity.Property(e => e.Syscreator).HasColumnName("syscreator");
            entity.Property(e => e.Sysguid)
                .HasDefaultValueSql("(newid())")
                .HasColumnName("sysguid");
            entity.Property(e => e.Sysmodified)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("sysmodified");
            entity.Property(e => e.Sysmodifier).HasColumnName("sysmodifier");
            entity.Property(e => e.Timestamp)
                .IsRowVersion()
                .IsConcurrencyToken()
                .HasColumnName("timestamp");
        });

        modelBuilder.Entity<Artom>(entity =>
        {
            entity.HasKey(e => e.Id).IsClustered(false);

            entity.ToTable("artoms");

            entity.HasIndex(e => e.ExArtcode, "artoms")
                .IsUnique()
                .IsClustered();

            entity.Property(e => e.Id).HasColumnName("ID");
            entity.Property(e => e.ExArtcode)
                .HasMaxLength(2)
                .IsFixedLength()
                .HasColumnName("ex_artcode");
            entity.Property(e => e.Oms200)
                .HasMaxLength(20)
                .HasColumnName("oms20_0");
            entity.Property(e => e.Oms201)
                .HasMaxLength(20)
                .HasColumnName("oms20_1");
            entity.Property(e => e.Oms202)
                .HasMaxLength(20)
                .HasColumnName("oms20_2");
            entity.Property(e => e.Oms203)
                .HasMaxLength(20)
                .HasColumnName("oms20_3");
            entity.Property(e => e.Oms204)
                .HasMaxLength(20)
                .HasColumnName("oms20_4");
            entity.Property(e => e.Syscreated)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("syscreated");
            entity.Property(e => e.Syscreator).HasColumnName("syscreator");
            entity.Property(e => e.Sysguid)
                .HasDefaultValueSql("(newid())")
                .HasColumnName("sysguid");
            entity.Property(e => e.Sysmodified)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("sysmodified");
            entity.Property(e => e.Sysmodifier).HasColumnName("sysmodifier");
            entity.Property(e => e.Timestamp)
                .IsRowVersion()
                .IsConcurrencyToken()
                .HasColumnName("timestamp");
        });

        modelBuilder.Entity<Artver>(entity =>
        {
            entity.HasKey(e => e.Id).IsClustered(false);

            entity.ToTable("artver");

            entity.HasIndex(e => new { e.Artcode, e.Priority, e.Subart }, "artpri").IsUnique();

            entity.HasIndex(e => new { e.Artcode, e.Subart }, "artver")
                .IsUnique()
                .IsClustered();

            entity.HasIndex(e => new { e.Subart, e.Artcode }, "subart").IsUnique();

            entity.Property(e => e.Id).HasColumnName("ID");
            entity.Property(e => e.Artcode)
                .HasMaxLength(30)
                .HasColumnName("artcode");
            entity.Property(e => e.Priority).HasColumnName("priority");
            entity.Property(e => e.Subart)
                .HasMaxLength(30)
                .HasColumnName("subart");
            entity.Property(e => e.Syscreated)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("syscreated");
            entity.Property(e => e.Syscreator).HasColumnName("syscreator");
            entity.Property(e => e.Sysguid)
                .HasDefaultValueSql("(newid())")
                .HasColumnName("sysguid");
            entity.Property(e => e.Sysmodified)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("sysmodified");
            entity.Property(e => e.Sysmodifier).HasColumnName("sysmodifier");
            entity.Property(e => e.Timestamp)
                .IsRowVersion()
                .IsConcurrencyToken()
                .HasColumnName("timestamp");
        });

        modelBuilder.Entity<Athrpayroll>(entity =>
        {
            entity
                .HasNoKey()
                .ToView("athrpayroll");

            entity.Property(e => e.AbfnDate)
                .HasColumnType("datetime")
                .HasColumnName("abfn_date");
            entity.Property(e => e.AbfnMvk)
                .HasMaxLength(8)
                .IsFixedLength()
                .HasColumnName("abfn_mvk");
            entity.Property(e => e.AbfnPerc).HasColumnName("abfn_perc");
            entity.Property(e => e.AlterstBttoVorBeg).HasColumnName("Alterst_Btto_VorBeg");
            entity.Property(e => e.AlterstSzVorBeg).HasColumnName("Alterst_SZ_VorBeg");
            entity.Property(e => e.Anstellart)
                .HasMaxLength(1)
                .IsFixedLength();
            entity.Property(e => e.ArbeiterAngestellter)
                .HasMaxLength(1)
                .IsFixedLength()
                .HasColumnName("Arbeiter_Angestellter");
            entity.Property(e => e.BauAuto)
                .HasMaxLength(1)
                .IsFixedLength()
                .HasColumnName("Bau_Auto");
            entity.Property(e => e.BauKvNr).HasColumnName("Bau_KvNr");
            entity.Property(e => e.BauUrlaub).HasColumnName("Bau_Urlaub");
            entity.Property(e => e.BetrRatBetrag).HasColumnName("BetrRat_Betrag");
            entity.Property(e => e.Contract).HasColumnName("contract");
            entity.Property(e => e.Country)
                .HasMaxLength(3)
                .IsFixedLength()
                .HasColumnName("country");
            entity.Property(e => e.DatAblaufArbeitsbew)
                .HasColumnType("datetime")
                .HasColumnName("Dat_Ablauf_Arbeitsbew");
            entity.Property(e => e.DatAustritt1)
                .HasColumnType("datetime")
                .HasColumnName("Dat_Austritt1");
            entity.Property(e => e.DatAustritt2)
                .HasColumnType("datetime")
                .HasColumnName("Dat_Austritt2");
            entity.Property(e => e.DatAustritt3)
                .HasColumnType("datetime")
                .HasColumnName("Dat_Austritt3");
            entity.Property(e => e.DatAustritt4)
                .HasColumnType("datetime")
                .HasColumnName("Dat_Austritt4");
            entity.Property(e => e.DatAustritt5)
                .HasColumnType("datetime")
                .HasColumnName("Dat_Austritt5");
            entity.Property(e => e.DatBegAufenthaltsgen)
                .HasColumnType("datetime")
                .HasColumnName("Dat_Beg_Aufenthaltsgen");
            entity.Property(e => e.DatBegKarenz)
                .HasColumnType("datetime")
                .HasColumnName("Dat_Beg_Karenz");
            entity.Property(e => e.DatBegLehre)
                .HasColumnType("datetime")
                .HasColumnName("Dat_Beg_Lehre");
            entity.Property(e => e.DatBegPr)
                .HasColumnType("datetime")
                .HasColumnName("Dat_Beg_Pr");
            entity.Property(e => e.DatEintritt1)
                .HasColumnType("datetime")
                .HasColumnName("Dat_Eintritt1");
            entity.Property(e => e.DatEintritt2)
                .HasColumnType("datetime")
                .HasColumnName("Dat_Eintritt2");
            entity.Property(e => e.DatEintritt3)
                .HasColumnType("datetime")
                .HasColumnName("Dat_Eintritt3");
            entity.Property(e => e.DatEintritt4)
                .HasColumnType("datetime")
                .HasColumnName("Dat_Eintritt4");
            entity.Property(e => e.DatEintritt5)
                .HasColumnType("datetime")
                .HasColumnName("Dat_Eintritt5");
            entity.Property(e => e.DatEndAufenthaltsgen)
                .HasColumnType("datetime")
                .HasColumnName("Dat_End_Aufenthaltsgen");
            entity.Property(e => e.DatEndKarenz)
                .HasColumnType("datetime")
                .HasColumnName("Dat_End_Karenz");
            entity.Property(e => e.DatEndLehre)
                .HasColumnType("datetime")
                .HasColumnName("Dat_End_Lehre");
            entity.Property(e => e.DatEndPr)
                .HasColumnType("datetime")
                .HasColumnName("Dat_End_Pr");
            entity.Property(e => e.DatErstEintritt)
                .HasColumnType("datetime")
                .HasColumnName("Dat_ErstEintritt");
            entity.Property(e => e.DatVorruck)
                .HasColumnType("datetime")
                .HasColumnName("Dat_Vorruck");
            entity.Property(e => e.Description)
                .HasMaxLength(50)
                .HasColumnName("description");
            entity.Property(e => e.DocAttachmentId).HasColumnName("DocAttachmentID");
            entity.Property(e => e.EhePartnerName)
                .HasMaxLength(30)
                .HasColumnName("EhePartner_Name");
            entity.Property(e => e.EhePartnerVersNr)
                .HasMaxLength(15)
                .HasColumnName("EhePartner_VersNr");
            entity.Property(e => e.Enddate)
                .HasColumnType("datetime")
                .HasColumnName("enddate");
            entity.Property(e => e.Gemeinde)
                .HasMaxLength(8)
                .IsFixedLength();
            entity.Property(e => e.GewBetrag).HasColumnName("Gew_Betrag");
            entity.Property(e => e.GewNr)
                .HasMaxLength(15)
                .HasColumnName("Gew_Nr");
            entity.Property(e => e.Gkk)
                .HasMaxLength(8)
                .IsFixedLength();
            entity.Property(e => e.Hinweis1).HasMaxLength(70);
            entity.Property(e => e.Hinweis2).HasMaxLength(70);
            entity.Property(e => e.Hinweis3).HasMaxLength(70);
            entity.Property(e => e.Id)
                .ValueGeneratedOnAdd()
                .HasColumnName("ID");
            entity.Property(e => e.IsDbPfl)
                .HasMaxLength(1)
                .IsFixedLength()
                .HasColumnName("IsDB_Pfl");
            entity.Property(e => e.IsDzPfl)
                .HasMaxLength(1)
                .IsFixedLength()
                .HasColumnName("IsDz_Pfl");
            entity.Property(e => e.IsGeringBesch)
                .HasMaxLength(1)
                .IsFixedLength()
                .HasColumnName("IsGering_Besch");
            entity.Property(e => e.IsKommPfl)
                .HasMaxLength(1)
                .IsFixedLength()
                .HasColumnName("IsKomm_Pfl");
            entity.Property(e => e.IsNoSzanspruch).HasColumnName("IsNoSZAnspruch");
            entity.Property(e => e.IsSeghigh).HasColumnName("IsSEGHigh");
            entity.Property(e => e.IsUbahnPfl)
                .HasMaxLength(1)
                .IsFixedLength()
                .HasColumnName("IsUbahn_Pfl");
            entity.Property(e => e.IsUnterbrechung1).HasColumnName("Is_Unterbrechung1");
            entity.Property(e => e.IsUnterbrechung2).HasColumnName("Is_Unterbrechung2");
            entity.Property(e => e.IsUnterbrechung3).HasColumnName("Is_Unterbrechung3");
            entity.Property(e => e.IsUnterbrechung4).HasColumnName("Is_Unterbrechung4");
            entity.Property(e => e.IsUnterbrechung5).HasColumnName("Is_Unterbrechung5");
            entity.Property(e => e.JobTitle)
                .HasMaxLength(12)
                .HasColumnName("job_title");
            entity.Property(e => e.JuengstesKindName)
                .HasMaxLength(30)
                .HasColumnName("JuengstesKind_Name");
            entity.Property(e => e.JuengstesKindVersNr)
                .HasMaxLength(15)
                .HasColumnName("JuengstesKind_VersNr");
            entity.Property(e => e.Kollektivvertrag).HasMaxLength(30);
            entity.Property(e => e.PaymentPeriod)
                .HasMaxLength(1)
                .IsFixedLength()
                .HasColumnName("payment_period");
            entity.Property(e => e.PendlerPauschale)
                .HasMaxLength(1)
                .IsFixedLength()
                .HasColumnName("Pendler_Pauschale");
            entity.Property(e => e.Period).HasColumnName("period");
            entity.Property(e => e.Religion)
                .HasMaxLength(1)
                .IsFixedLength();
            entity.Property(e => e.ResId).HasColumnName("res_id");
            entity.Property(e => e.Startdate)
                .HasColumnType("datetime")
                .HasColumnName("startdate");
            entity.Property(e => e.SvNz)
                .HasMaxLength(8)
                .IsFixedLength()
                .HasColumnName("SV_Nz");
            entity.Property(e => e.SvRechtlBesch)
                .HasMaxLength(1)
                .IsFixedLength()
                .HasColumnName("SV_Rechtl_Besch");
            entity.Property(e => e.SvSz)
                .HasMaxLength(8)
                .IsFixedLength()
                .HasColumnName("SV_Sz");
            entity.Property(e => e.Syscreated)
                .HasColumnType("datetime")
                .HasColumnName("syscreated");
            entity.Property(e => e.Syscreator).HasColumnName("syscreator");
            entity.Property(e => e.Sysguid).HasColumnName("sysguid");
            entity.Property(e => e.Sysmodified)
                .HasColumnType("datetime")
                .HasColumnName("sysmodified");
            entity.Property(e => e.Sysmodifier).HasColumnName("sysmodifier");
            entity.Property(e => e.Timestamp)
                .IsRowVersion()
                .IsConcurrencyToken()
                .HasColumnName("timestamp");
            entity.Property(e => e.Type)
                .HasMaxLength(1)
                .IsFixedLength()
                .HasColumnName("type");
            entity.Property(e => e.UseFehlerindikation).HasColumnName("Use_Fehlerindikation");
            entity.Property(e => e.UseL16).HasColumnName("Use_L16");
            entity.Property(e => e.VorAnzahlMon).HasColumnName("Vor_Anzahl_Mon");
            entity.Property(e => e.VorBezug67).HasColumnName("Vor_Bezug67");
            entity.Property(e => e.VorBrutto).HasColumnName("Vor_Brutto");
            entity.Property(e => e.VorSz671).HasColumnName("Vor_Sz671");
            entity.Property(e => e.VorSz677).HasColumnName("Vor_Sz677");
            entity.Property(e => e.VorSzSv).HasColumnName("Vor_SzSv");
            entity.Property(e => e.ZusSteuerkriterien)
                .HasMaxLength(1)
                .IsFixedLength()
                .HasColumnName("Zus_Steuerkriterien");
        });

        modelBuilder.Entity<Attachment>(entity =>
        {
            entity.ToTable(tb => tb.HasTrigger("Attachments_Size"));

            entity.HasIndex(e => e.Entity, "IX_Attachments_Entity");

            entity.HasIndex(e => new { e.Entity, e.EntityType }, "IX_Attachments_EntityType");

            entity.HasIndex(e => e.AttachmentFileExtension, "IX_Attachments_MailMerge");

            entity.Property(e => e.Id)
                .HasDefaultValueSql("(newsequentialid())")
                .HasColumnName("ID");
            entity.Property(e => e.Attachment1).HasColumnName("Attachment");
            entity.Property(e => e.AttachmentFileExtension).HasMaxLength(20);
            entity.Property(e => e.AttachmentFileName).HasMaxLength(255);
            entity.Property(e => e.AttachmentUrl)
                .HasMaxLength(500)
                .HasColumnName("AttachmentURL");
            entity.Property(e => e.VersionId)
                .HasMaxLength(20)
                .HasColumnName("VersionID");
        });

        modelBuilder.Entity<BackgroundJobSetting>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK_BackgroundJobSetting");

            entity.Property(e => e.Id)
                .ValueGeneratedNever()
                .HasColumnName("ID");
            entity.Property(e => e.Assembly).HasMaxLength(255);
            entity.Property(e => e.Class).HasMaxLength(255);
            entity.Property(e => e.Interval).HasDefaultValue((byte)1);
            entity.Property(e => e.Parameters).HasMaxLength(255);
            entity.Property(e => e.Syscreated)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("syscreated");
            entity.Property(e => e.Syscreator).HasColumnName("syscreator");
            entity.Property(e => e.Sysmodified)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("sysmodified");
            entity.Property(e => e.Sysmodifier).HasColumnName("sysmodifier");
        });

        modelBuilder.Entity<BacoAccessServer>(entity =>
        {
            entity.Property(e => e.Id).HasColumnName("ID");
            entity.Property(e => e.CheckIpaddress)
                .HasDefaultValue(true)
                .HasColumnName("CheckIPAddress");
            entity.Property(e => e.Ipaddress)
                .HasMaxLength(80)
                .HasColumnName("IPAddress");
            entity.Property(e => e.MacAddress).HasMaxLength(48);
            entity.Property(e => e.MachineName).HasMaxLength(80);
        });

        modelBuilder.Entity<BacoAppLog>(entity =>
        {
            entity.HasKey(e => e.Id).IsClustered(false);

            entity.ToTable("BacoAppLog");

            entity.HasIndex(e => new { e.App, e.Created }, "App_Created");

            entity.HasIndex(e => new { e.App, e.DataKey, e.Created }, "App_DataKey_Created");

            entity.HasIndex(e => e.Created, "Created");

            entity.HasIndex(e => new { e.CustomerId, e.Created }, "CustomerID_Created");

            entity.HasIndex(e => new { e.HumresId, e.Created }, "HumresID_Created").IsClustered();

            entity.HasIndex(e => new { e.SessionId, e.Created }, "SessionID_Created");

            entity.Property(e => e.Id)
                .HasDefaultValueSql("(newid())")
                .HasColumnName("ID");
            entity.Property(e => e.App).HasMaxLength(80);
            entity.Property(e => e.ClientAddress).HasMaxLength(57);
            entity.Property(e => e.Created)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime");
            entity.Property(e => e.CustomerId).HasColumnName("CustomerID");
            entity.Property(e => e.DataKey).HasMaxLength(40);
            entity.Property(e => e.DelegateId).HasColumnName("DelegateID");
            entity.Property(e => e.HostName).HasMaxLength(30);
            entity.Property(e => e.HumresId).HasColumnName("HumresID");
            entity.Property(e => e.QueryString).HasMaxLength(1000);
            entity.Property(e => e.ServerAddress).HasMaxLength(57);
            entity.Property(e => e.ServerName).HasMaxLength(30);
            entity.Property(e => e.SessionId).HasColumnName("SessionID");
            entity.Property(e => e.Spid).HasColumnName("SPID");
        });

        modelBuilder.Entity<BacoAppLogApp>(entity =>
        {
            entity.HasKey(e => new { e.Day, e.Rank });

            entity.Property(e => e.Day).HasColumnType("smalldatetime");
            entity.Property(e => e.App).HasMaxLength(40);
        });

        modelBuilder.Entity<BacoAppLogDay>(entity =>
        {
            entity.HasKey(e => e.Day);

            entity.Property(e => e.Day).HasColumnType("smalldatetime");
        });

        modelBuilder.Entity<BacoAppLogHour>(entity =>
        {
            entity.HasKey(e => new { e.Day, e.Hour });

            entity.Property(e => e.Day).HasColumnType("smalldatetime");
        });

        modelBuilder.Entity<BacoDelegation>(entity =>
        {
            entity.HasKey(e => new { e.DelegatedFrom, e.DelegatedTo });

            entity.Property(e => e.Enabled).HasDefaultValue(true);
        });

        modelBuilder.Entity<BacoDiscussion>(entity =>
        {
            entity.HasIndex(e => new { e.ParentId, e.CreatedBy, e.JobLevel, e.Status }, "BacoDiscussionsIdx1");

            entity.HasIndex(e => new { e.GroupId, e.Category, e.SubCategory, e.IsTemplate }, "BacoDiscussionsIdx10");

            entity.HasIndex(e => new { e.Company, e.Status }, "BacoDiscussionsIdx11");

            entity.HasIndex(e => e.Assortment, "BacoDiscussionsIdx13");

            entity.HasIndex(e => new { e.NewsType, e.LanguageId, e.ModifiedDate }, "BacoDiscussionsIdx14");

            entity.HasIndex(e => new { e.HumResId, e.JobLevel }, "BacoDiscussionsIdx15");

            entity.HasIndex(e => new { e.CmpWwn, e.JobLevel }, "BacoDiscussionsIdx16");

            entity.HasIndex(e => new { e.ItemCode, e.JobLevel }, "BacoDiscussionsIdx17");

            entity.HasIndex(e => new { e.ModifiedDate, e.Status, e.NewsType, e.JobLevel }, "BacoDiscussionsIdx18").IsDescending(true, false, false, false);

            entity.HasIndex(e => e.IsTemplate, "BacoDiscussionsIdx19");

            entity.HasIndex(e => e.CreatedDate, "BacoDiscussionsIdx2");

            entity.HasIndex(e => e.IsMailMerge, "BacoDiscussionsIdx20");

            entity.HasIndex(e => new { e.CreatedBy, e.ModifiedDate }, "BacoDiscussionsIdx21");

            entity.HasIndex(e => e.EntryKey, "BacoDiscussionsIdx23");

            entity.HasIndex(e => e.OpportunityId, "BacoDiscussionsIdx24");

            entity.HasIndex(e => new { e.ModifiedDate, e.Id }, "BacoDiscussionsIdx25");

            entity.HasIndex(e => new { e.Category, e.SubCategory, e.Hid }, "BacoDiscussionsIdx3");

            entity.HasIndex(e => new { e.CreatedBy, e.ViewDate }, "BacoDiscussionsIdx4");

            entity.HasIndex(e => e.Hid, "BacoDiscussionsIdx5");

            entity.HasIndex(e => new { e.Status, e.Hid }, "BacoDiscussionsIdx6");

            entity.HasIndex(e => new { e.CreatedBy, e.CreatedDate }, "BacoDiscussionsIdx7");

            entity.HasIndex(e => new { e.ModifiedDate, e.GroupId, e.Category }, "BacoDiscussionsIdx8");

            entity.HasIndex(e => new { e.ViewDate, e.GroupId, e.Category }, "BacoDiscussionsIdx9");

            entity.HasIndex(e => e.ProjectNr, "BacodiscussionsIdx22");

            entity.HasIndex(e => e.CntId, "IX_BacoDiscussions_CntID");

            entity.HasIndex(e => new { e.Status, e.ExpiryDate }, "IX_BacoDiscussions_DocSchedule");

            entity.HasIndex(e => new { e.ItemNumberId, e.JobLevel }, "IX_BacoDiscussions_ItemnumberidJoblevel");

            entity.HasIndex(e => e.OrderNumber, "IX_BacoDiscussions_OrderNumber");

            entity.HasIndex(e => new { e.OurRef, e.YourRef }, "IX_BacoDiscussions_OurRefYourRef");

            entity.HasIndex(e => new { e.Owner, e.OwnerType }, "IX_BacoDiscussions_OwnerOwnerType");

            entity.HasIndex(e => new { e.ParentId, e.ViewDate }, "IX_BacoDiscussions_ParentIdViewDate");

            entity.HasIndex(e => new { e.Type, e.JobLevel, e.Status }, "IX_BacoDiscussions_TypeJobLevelStatus");

            entity.HasIndex(e => new { e.ViewRightsOwner, e.ViewRightsType }, "IX_BacoDiscussions_ViewRightOwnerType");

            entity.HasIndex(e => e.Timestamp, "timestamp");

            entity.Property(e => e.Id)
                .HasDefaultValueSql("(newid())")
                .HasColumnName("ID");
            entity.Property(e => e.AttachmentType)
                .HasMaxLength(1)
                .IsFixedLength();
            entity.Property(e => e.Category).HasMaxLength(30);
            entity.Property(e => e.CheckedOut).HasColumnType("datetime");
            entity.Property(e => e.Class021)
                .HasMaxLength(30)
                .HasColumnName("Class_02_1");
            entity.Property(e => e.Class022)
                .HasMaxLength(30)
                .HasColumnName("Class_02_2");
            entity.Property(e => e.CntId).HasColumnName("cnt_id");
            entity.Property(e => e.Company)
                .HasMaxLength(3)
                .IsFixedLength();
            entity.Property(e => e.CreatedByFullName).HasMaxLength(64);
            entity.Property(e => e.CreatedDate)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime");
            entity.Property(e => e.ExpiryDate).HasColumnType("datetime");
            entity.Property(e => e.Filename).HasMaxLength(255);
            entity.Property(e => e.FpintroText)
                .HasMaxLength(200)
                .HasColumnName("FPIntroText");
            entity.Property(e => e.GroupId).HasColumnName("GroupID");
            entity.Property(e => e.Hid)
                .ValueGeneratedOnAdd()
                .HasColumnName("HID");
            entity.Property(e => e.HumResId).HasColumnName("HumResID");
            entity.Property(e => e.ItemCode).HasMaxLength(30);
            entity.Property(e => e.ItemNumberId).HasColumnName("ItemNumberID");
            entity.Property(e => e.LanguageId)
                .HasMaxLength(3)
                .IsFixedLength()
                .HasColumnName("LanguageID");
            entity.Property(e => e.ModifiedDate)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime");
            entity.Property(e => e.OpportunityId).HasColumnName("OpportunityID");
            entity.Property(e => e.OrderNumber)
                .HasMaxLength(8)
                .IsFixedLength();
            entity.Property(e => e.OurRef)
                .HasMaxLength(8)
                .IsFixedLength();
            entity.Property(e => e.OwnerTypeRoleRefPoint)
                .HasMaxLength(1)
                .IsFixedLength();
            entity.Property(e => e.OwnerTypeValue).HasMaxLength(50);
            entity.Property(e => e.ParentId).HasColumnName("ParentID");
            entity.Property(e => e.ProjectNr).HasMaxLength(20);
            entity.Property(e => e.ReportId).HasColumnName("ReportID");
            entity.Property(e => e.ShipmentMethod)
                .HasMaxLength(5)
                .IsFixedLength();
            entity.Property(e => e.SmsconfigurationId).HasColumnName("SMSConfigurationID");
            entity.Property(e => e.SmscontractId).HasColumnName("SMSContractID");
            entity.Property(e => e.Source)
                .HasMaxLength(1)
                .IsFixedLength();
            entity.Property(e => e.Status).HasDefaultValue(1);
            entity.Property(e => e.StatusText).HasMaxLength(100);
            entity.Property(e => e.SubCategory).HasMaxLength(30);
            entity.Property(e => e.Subject).HasMaxLength(256);
            entity.Property(e => e.Timestamp)
                .IsRowVersion()
                .IsConcurrencyToken()
                .HasColumnName("timestamp");
            entity.Property(e => e.Version).HasMaxLength(20);
            entity.Property(e => e.ViewDate)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime");
            entity.Property(e => e.ViewRightTypeRoleRefPoint)
                .HasMaxLength(1)
                .IsFixedLength();
            entity.Property(e => e.ViewRightsType).HasDefaultValue((short)0);
            entity.Property(e => e.ViewRightsTypeValue).HasMaxLength(50);
            entity.Property(e => e.Warehouse)
                .HasMaxLength(4)
                .IsFixedLength();
            entity.Property(e => e.YourRef).HasMaxLength(30);
        });

        modelBuilder.Entity<BacoDiscussionCategory>(entity =>
        {
            entity.HasIndex(e => new { e.GroupId, e.Category }, "BDCategories01").IsUnique();

            entity.Property(e => e.Id)
                .HasDefaultValueSql("(newid())")
                .HasColumnName("ID");
            entity.Property(e => e.Category).HasMaxLength(30);
            entity.Property(e => e.GroupId).HasColumnName("GroupID");
            entity.Property(e => e.TemplateId).HasColumnName("TemplateID");
        });

        modelBuilder.Entity<BacoDiscussionCount>(entity =>
        {
            entity.HasNoKey();

            entity.HasIndex(e => new { e.GroupId, e.Category, e.SubCategory, e.JobLevel }, "BDCountsIdx01")
                .IsUnique()
                .IsClustered();

            entity.Property(e => e.Category).HasMaxLength(30);
            entity.Property(e => e.GroupId).HasColumnName("GroupID");
            entity.Property(e => e.SubCategory).HasMaxLength(30);
        });

        modelBuilder.Entity<BacoDiscussionFixedGroup>(entity =>
        {
            entity.HasKey(e => e.Id).IsClustered(false);

            entity.HasIndex(e => e.Description, "IX_BacoDiscussionFixedGroups_Desc").IsClustered();

            entity.Property(e => e.Id)
                .HasDefaultValueSql("(newid())")
                .HasColumnName("ID");
            entity.Property(e => e.CreatedBy).HasDefaultValue(0);
            entity.Property(e => e.CreatedDate)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime");
            entity.Property(e => e.Description).HasMaxLength(60);
            entity.Property(e => e.ModifiedBy).HasDefaultValue(0);
            entity.Property(e => e.ModifiedDate)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime");
        });

        modelBuilder.Entity<BacoDiscussionFixedType>(entity =>
        {
            entity.HasKey(e => e.TypeId).HasName("PK_BacoDiscussionFixedTypes_TypeId");

            entity.Property(e => e.TypeId)
                .ValueGeneratedNever()
                .HasColumnName("TypeID");
            entity.Property(e => e.AcLabel)
                .HasMaxLength(255)
                .HasColumnName("Ac_Label");
            entity.Property(e => e.AcSelection)
                .HasMaxLength(255)
                .HasColumnName("Ac_Selection");
            entity.Property(e => e.AcType)
                .HasMaxLength(1)
                .IsFixedLength()
                .HasColumnName("Ac_Type");
            entity.Property(e => e.AcUse)
                .HasDefaultValue((byte)0)
                .HasColumnName("Ac_Use");
            entity.Property(e => e.ActionOldMajorVersion)
                .HasMaxLength(1)
                .HasDefaultValue("A")
                .IsFixedLength();
            entity.Property(e => e.Active).HasDefaultValue((byte)1);
            entity.Property(e => e.AllowReplies).HasDefaultValue(true);
            entity.Property(e => e.AllowScripting).HasDefaultValue(true);
            entity.Property(e => e.ApUse)
                .HasDefaultValue((byte)1)
                .HasColumnName("Ap_Use");
            entity.Property(e => e.ApprovalRoleRefPoint)
                .HasMaxLength(1)
                .IsFixedLength();
            entity.Property(e => e.ArchiveMethods)
                .HasMaxLength(1)
                .HasDefaultValue("N")
                .IsFixedLength();
            entity.Property(e => e.AsDefault).HasColumnName("As_Default");
            entity.Property(e => e.AsUse)
                .HasDefaultValue((byte)0)
                .HasColumnName("As_Use");
            entity.Property(e => e.Attachment).HasDefaultValue((byte)1);
            entity.Property(e => e.BlockHiddenManEntry)
                .HasMaxLength(1)
                .HasDefaultValue("A")
                .IsFixedLength();
            entity.Property(e => e.CrLevel1).HasColumnName("Cr_Level1");
            entity.Property(e => e.CrLevel2).HasColumnName("Cr_Level2");
            entity.Property(e => e.CrLevel3).HasColumnName("Cr_Level3");
            entity.Property(e => e.CrRole1).HasColumnName("Cr_Role1");
            entity.Property(e => e.CrRole2).HasColumnName("Cr_Role2");
            entity.Property(e => e.CrRole3).HasColumnName("Cr_Role3");
            entity.Property(e => e.CrSecurity)
                .HasDefaultValue((short)10)
                .HasColumnName("Cr_Security");
            entity.Property(e => e.CrSystemGen)
                .HasDefaultValue((byte)0)
                .HasColumnName("Cr_SystemGen");
            entity.Property(e => e.CreatedDate)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime");
            entity.Property(e => e.DefGroupId).HasColumnName("DefGroupID");
            entity.Property(e => e.DefSecurity).HasDefaultValue((short)10);
            entity.Property(e => e.DeleteRights)
                .HasMaxLength(1)
                .HasDefaultValue("Y")
                .IsFixedLength();
            entity.Property(e => e.Description).HasMaxLength(200);
            entity.Property(e => e.EditRightTypeRoleRefPoint)
                .HasMaxLength(1)
                .IsFixedLength();
            entity.Property(e => e.EditRights)
                .HasMaxLength(1)
                .HasDefaultValue("Y")
                .IsFixedLength();
            entity.Property(e => e.EditRightsTypeValue).HasMaxLength(50);
            entity.Property(e => e.EditSecurity).HasDefaultValue((byte)1);
            entity.Property(e => e.EditViewRights).HasDefaultValue(true);
            entity.Property(e => e.FiOurRef).HasColumnName("Fi_OurRef");
            entity.Property(e => e.FiSelection)
                .HasMaxLength(255)
                .HasColumnName("Fi_Selection");
            entity.Property(e => e.FiUse)
                .HasDefaultValue((byte)0)
                .HasColumnName("Fi_Use");
            entity.Property(e => e.FiYourRef).HasColumnName("Fi_YourRef");
            entity.Property(e => e.FullText).HasDefaultValue(true);
            entity.Property(e => e.GroupId).HasColumnName("GroupID");
            entity.Property(e => e.ItDefault)
                .HasMaxLength(30)
                .HasColumnName("It_Default");
            entity.Property(e => e.ItLabel)
                .HasMaxLength(255)
                .HasColumnName("It_Label");
            entity.Property(e => e.ItSelection)
                .HasMaxLength(255)
                .HasColumnName("It_Selection");
            entity.Property(e => e.ItStatus)
                .HasMaxLength(1)
                .IsFixedLength()
                .HasColumnName("It_Status");
            entity.Property(e => e.ItUse)
                .HasDefaultValue((byte)0)
                .HasColumnName("It_Use");
            entity.Property(e => e.ItUseNumber).HasColumnName("It_UseNumber");
            entity.Property(e => e.ModifiedDate)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime");
            entity.Property(e => e.OpportunityDefault).HasColumnName("Opportunity_Default");
            entity.Property(e => e.OpportunitySelection)
                .HasMaxLength(255)
                .HasColumnName("Opportunity_Selection");
            entity.Property(e => e.OpportunityUse).HasColumnName("Opportunity_Use");
            entity.Property(e => e.OrderNumberUse).HasColumnName("OrderNumber_Use");
            entity.Property(e => e.PaymentReferenceUse).HasColumnName("PaymentReference_Use");
            entity.Property(e => e.PrDefault)
                .HasMaxLength(20)
                .HasColumnName("Pr_Default");
            entity.Property(e => e.PrSelection)
                .HasMaxLength(255)
                .HasColumnName("Pr_Selection");
            entity.Property(e => e.PrUse)
                .HasDefaultValue((byte)0)
                .HasColumnName("Pr_Use");
            entity.Property(e => e.ReLabel)
                .HasMaxLength(255)
                .HasColumnName("Re_Label");
            entity.Property(e => e.ReSelection)
                .HasMaxLength(255)
                .HasColumnName("Re_Selection");
            entity.Property(e => e.ReStatus)
                .HasMaxLength(1)
                .IsFixedLength()
                .HasColumnName("Re_Status");
            entity.Property(e => e.ReType)
                .HasMaxLength(1)
                .IsFixedLength()
                .HasColumnName("Re_Type");
            entity.Property(e => e.ReUse)
                .HasDefaultValue((byte)0)
                .HasColumnName("Re_Use");
            entity.Property(e => e.SecApUse)
                .HasDefaultValue((byte)0)
                .HasColumnName("Sec_Ap_Use");
            entity.Property(e => e.ShipmentMethodUse).HasColumnName("ShipmentMethod_Use");
            entity.Property(e => e.SmsConfigDefault).HasColumnName("Sms_Config_Default");
            entity.Property(e => e.SmsConfigSelection)
                .HasMaxLength(255)
                .HasColumnName("Sms_Config_Selection");
            entity.Property(e => e.SmsConfigUse)
                .HasDefaultValue((byte)0)
                .HasColumnName("Sms_Config_Use");
            entity.Property(e => e.SmsContractDefault).HasColumnName("Sms_Contract_Default");
            entity.Property(e => e.SmsContractSelection)
                .HasMaxLength(255)
                .HasColumnName("Sms_Contract_Selection");
            entity.Property(e => e.SmsContractUse)
                .HasDefaultValue((byte)0)
                .HasColumnName("Sms_Contract_Use");
            entity.Property(e => e.TemplateId).HasColumnName("TemplateID");
            entity.Property(e => e.UseCompany).HasDefaultValue((byte)1);
            entity.Property(e => e.UseInBackOffice).HasDefaultValue(true);
            entity.Property(e => e.UseLanguageId)
                .HasDefaultValue((byte)1)
                .HasColumnName("UseLanguageID");
            entity.Property(e => e.UseOwner).HasDefaultValue((byte)1);
            entity.Property(e => e.UsePublish).HasDefaultValue((byte)1);
            entity.Property(e => e.UseRating).HasDefaultValue((byte)1);
            entity.Property(e => e.UseStatistics).HasDefaultValue((byte)1);
            entity.Property(e => e.VersionType)
                .HasMaxLength(1)
                .HasDefaultValue("N")
                .IsFixedLength();
            entity.Property(e => e.ViewRightTypeRoleRefPoint)
                .HasMaxLength(1)
                .IsFixedLength();
            entity.Property(e => e.ViewRightsTypeValue).HasMaxLength(50);
            entity.Property(e => e.WarehouseUse).HasColumnName("Warehouse_Use");
        });

        modelBuilder.Entity<BacoDiscussionGrole>(entity =>
        {
            entity.HasKey(e => e.Id).IsClustered(false);

            entity.ToTable("BacoDiscussionGRoles");

            entity.HasIndex(e => e.Id, "BacoDiscussionGRoles_Index").IsClustered();

            entity.HasIndex(e => e.DocumentTypeId, "IX_BDGRoles_DocumentTypeRole");

            entity.Property(e => e.Id)
                .ValueGeneratedNever()
                .HasColumnName("ID");
            entity.Property(e => e.ApprovalRefPoint)
                .HasMaxLength(1)
                .IsFixedLength();
            entity.Property(e => e.DocumentTypeId).HasColumnName("DocumentTypeID");
            entity.Property(e => e.RoleId).HasColumnName("RoleID");
            entity.Property(e => e.SubCategoryId).HasColumnName("SubCategoryID");
        });

        modelBuilder.Entity<BacoDiscussionGroup>(entity =>
        {
            entity.Property(e => e.Id)
                .ValueGeneratedNever()
                .HasColumnName("ID");
            entity.Property(e => e.AllowReplies).HasDefaultValue(true);
            entity.Property(e => e.Description).HasMaxLength(100);
            entity.Property(e => e.GroupIconFileName).HasMaxLength(255);
            entity.Property(e => e.TemplateId).HasColumnName("TemplateID");
            entity.Property(e => e.UseCompGroup).HasDefaultValue((byte)1);
            entity.Property(e => e.UseCompany).HasDefaultValue((byte)1);
            entity.Property(e => e.UseHumResId).HasColumnName("UseHumResID");
            entity.Property(e => e.UseLanguageId).HasColumnName("UseLanguageID");
            entity.Property(e => e.UseReports).HasDefaultValue((byte)0);
        });

        modelBuilder.Entity<BacoDiscussionLayoutLanguage>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("BacoDiscussionLayoutLanguage");

            entity.HasIndex(e => e.Id, "BacoDiscussionLayoutLanguage_Index").IsClustered();

            entity.Property(e => e.BdlayoutId)
                .HasMaxLength(10)
                .IsFixedLength()
                .HasColumnName("BDLayoutID");
            entity.Property(e => e.Id).HasColumnName("ID");
            entity.Property(e => e.Taalcode)
                .HasMaxLength(3)
                .IsFixedLength();
        });

        modelBuilder.Entity<BacoDiscussionNewsLayout>(entity =>
        {
            entity.HasKey(e => e.BdlayoutId);

            entity.Property(e => e.BdlayoutId)
                .HasMaxLength(10)
                .IsFixedLength()
                .HasColumnName("BDLayoutID");
            entity.Property(e => e.Bedrnr)
                .HasMaxLength(3)
                .IsFixedLength();
            entity.Property(e => e.Condition).HasMaxLength(2048);
            entity.Property(e => e.ConditionDivision).HasMaxLength(60);
            entity.Property(e => e.ConditionJobLevelOperator)
                .HasMaxLength(2)
                .IsFixedLength();
            entity.Property(e => e.ConditionLanguage).HasMaxLength(60);
            entity.Property(e => e.DefaultImage).HasMaxLength(128);
            entity.Property(e => e.Description).HasMaxLength(40);
            entity.Property(e => e.EditorialDocId).HasColumnName("EditorialDocID");
            entity.Property(e => e.Enabled).HasDefaultValue((byte)1);
            entity.Property(e => e.FooterDocId).HasColumnName("FooterDocID");
            entity.Property(e => e.FooterPage).HasMaxLength(128);
            entity.Property(e => e.HeaderDocId).HasColumnName("HeaderDocID");
            entity.Property(e => e.HeaderPage).HasMaxLength(128);
            entity.Property(e => e.HlbackGround)
                .HasMaxLength(128)
                .HasColumnName("HLBackGround");
            entity.Property(e => e.ImageHlbackground).HasColumnName("ImageHLBackground");
            entity.Property(e => e.MaxHeadlines).HasDefaultValue((short)8);
            entity.Property(e => e.MaxNews).HasDefaultValue((short)10);
            entity.Property(e => e.UseSelectionCombo).HasDefaultValue((byte)1);
        });

        modelBuilder.Entity<BacoDiscussionPicture>(entity =>
        {
            entity.Property(e => e.Id)
                .HasDefaultValueSql("(newid())")
                .HasColumnName("ID");
            entity.Property(e => e.CreatedDate)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime");
            entity.Property(e => e.Filename).HasMaxLength(255);
        });

        modelBuilder.Entity<BacoDiscussionState>(entity =>
        {
            entity.HasKey(e => e.State);

            entity.Property(e => e.State).ValueGeneratedNever();
            entity.Property(e => e.Description).HasMaxLength(30);
            entity.Property(e => e.TermId).HasColumnName("TermID");
        });

        modelBuilder.Entity<BacoDiscussionStdPicture>(entity =>
        {
            entity.Property(e => e.Id)
                .HasDefaultValueSql("(newid())")
                .HasColumnName("ID");
            entity.Property(e => e.Description).HasMaxLength(30);
            entity.Property(e => e.Filename).HasMaxLength(255);
            entity.Property(e => e.Type).HasMaxLength(30);
        });

        modelBuilder.Entity<BacoDiscussionSubCategory>(entity =>
        {
            entity.HasIndex(e => new { e.GroupId, e.Category, e.SubCategory }, "BDSubCategories01").IsUnique();

            entity.Property(e => e.Id)
                .HasDefaultValueSql("(newid())")
                .HasColumnName("ID");
            entity.Property(e => e.Category).HasMaxLength(30);
            entity.Property(e => e.CategoryId).HasColumnName("CategoryID");
            entity.Property(e => e.CheckField).HasDefaultValue(0);
            entity.Property(e => e.DocumentTypeId).HasColumnName("DocumentTypeID");
            entity.Property(e => e.ForumDescription).HasMaxLength(255);
            entity.Property(e => e.FullText).HasDefaultValue(true);
            entity.Property(e => e.GroupId).HasColumnName("GroupID");
            entity.Property(e => e.SecurityLevel).HasDefaultValue(10);
            entity.Property(e => e.SubCategory).HasMaxLength(30);
        });

        modelBuilder.Entity<BacoDiscussionVersion>(entity =>
        {
            entity.HasIndex(e => e.Hid, "BacoDiscussionVersionsIdx1");

            entity.HasIndex(e => e.CreatedDate, "BacoDiscussionVersionsIdx2");

            entity.HasIndex(e => e.ModifiedDate, "BacoDiscussionVersionsIdx3");

            entity.HasIndex(e => new { e.Status, e.Hid }, "BacoDiscussionVersionsIdx4");

            entity.HasIndex(e => new { e.CreatedBy, e.CreatedDate }, "BacoDiscussionVersionsIdx5");

            entity.HasIndex(e => new { e.ModifiedBy, e.ModifiedDate }, "BacoDiscussionVersionsIdx6");

            entity.HasIndex(e => new { e.StartDate, e.Status }, "BacoDiscussionVersionsIdx7");

            entity.HasIndex(e => new { e.DocumentId, e.Version }, "DocumentVersion").IsUnique();

            entity.HasIndex(e => e.Timestamp, "timestamp");

            entity.Property(e => e.Id)
                .HasDefaultValueSql("(newid())")
                .HasColumnName("ID");
            entity.Property(e => e.CheckedOut).HasColumnType("datetime");
            entity.Property(e => e.CreatedDate)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime");
            entity.Property(e => e.DocumentId).HasColumnName("DocumentID");
            entity.Property(e => e.Filename).HasMaxLength(255);
            entity.Property(e => e.FpintroText)
                .HasMaxLength(200)
                .HasColumnName("FPIntroText");
            entity.Property(e => e.Hid)
                .ValueGeneratedOnAdd()
                .HasColumnName("HID");
            entity.Property(e => e.ModifiedDate)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime");
            entity.Property(e => e.StartDate).HasColumnType("datetime");
            entity.Property(e => e.Status).HasDefaultValue(1);
            entity.Property(e => e.StatusText).HasMaxLength(100);
            entity.Property(e => e.Subject).HasMaxLength(256);
            entity.Property(e => e.Timestamp)
                .IsRowVersion()
                .IsConcurrencyToken()
                .HasColumnName("timestamp");
            entity.Property(e => e.Version).HasMaxLength(20);
        });

        modelBuilder.Entity<BacoErrorLog>(entity =>
        {
            entity.HasKey(e => e.LogId).IsClustered(false);

            entity.ToTable("BacoErrorLog");

            entity.HasIndex(e => new { e.App, e.LogDate }, "App_LogDate");

            entity.HasIndex(e => e.LogDate, "LogDate").IsClustered();

            entity.Property(e => e.LogId).HasColumnName("LogID");
            entity.Property(e => e.App).HasMaxLength(40);
            entity.Property(e => e.CustomerId).HasColumnName("CustomerID");
            entity.Property(e => e.HumresId).HasColumnName("HumresID");
            entity.Property(e => e.LogDate)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime");
            entity.Property(e => e.LogText).HasMaxLength(2000);
            entity.Property(e => e.Machine).HasMaxLength(30);
            entity.Property(e => e.SessionId).HasColumnName("SessionID");
            entity.Property(e => e.WebServer).HasMaxLength(30);
        });

        modelBuilder.Entity<BacoFreeNumber>(entity =>
        {
            entity.HasKey(e => e.NumberKey);

            entity.Property(e => e.NumberKey).HasMaxLength(40);
            entity.Property(e => e.FreeNumber).HasDefaultValue(1);
        });

        modelBuilder.Entity<BacoFunction>(entity =>
        {
            entity.HasIndex(e => e.Product, "IX_BacoFunctions_Product");

            entity.Property(e => e.Id)
                .ValueGeneratedNever()
                .HasColumnName("ID");
            entity.Property(e => e.Description).HasMaxLength(255);
            entity.Property(e => e.DescriptionTermId).HasColumnName("DescriptionTermID");
            entity.Property(e => e.Target).HasMaxLength(2000);
            entity.Property(e => e.UseDivision).HasDefaultValue(true);
        });

        modelBuilder.Entity<BacoFunctionRole>(entity =>
        {
            entity.HasKey(e => e.Id).IsClustered(false);

            entity.HasIndex(e => new { e.FunctionId, e.RoleId }, "FunctionID_RoleID")
                .IsUnique()
                .IsClustered();

            entity.Property(e => e.Id)
                .ValueGeneratedNever()
                .HasColumnName("ID");
            entity.Property(e => e.FunctionId).HasColumnName("FunctionID");
            entity.Property(e => e.RoleId).HasColumnName("RoleID");

            entity.HasOne(d => d.Function).WithMany(p => p.BacoFunctionRoles)
                .HasForeignKey(d => d.FunctionId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_BacoFunctionRoles_BacoFunctions");
        });

        modelBuilder.Entity<BacoLoginLog>(entity =>
        {
            entity.ToTable("BacoLoginLog");

            entity.Property(e => e.Id).HasColumnName("ID");
            entity.Property(e => e.Created)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime");
            entity.Property(e => e.HumresId).HasColumnName("HumresID");
            entity.Property(e => e.Status).HasMaxLength(20);
        });

        modelBuilder.Entity<BacoProcessLog>(entity =>
        {
            entity.HasKey(e => e.LogId).IsClustered(false);

            entity.ToTable("BacoProcessLog");

            entity.HasIndex(e => e.LogDate, "LogDate").IsClustered();

            entity.HasIndex(e => new { e.ProcessName, e.LogDate }, "ProcessName_LogDate");

            entity.Property(e => e.LogId).HasColumnName("LogID");
            entity.Property(e => e.CommandLine).HasMaxLength(500);
            entity.Property(e => e.HumresId).HasColumnName("HumresID");
            entity.Property(e => e.LogDate)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime");
            entity.Property(e => e.LogText).HasMaxLength(2000);
            entity.Property(e => e.ProcessName).HasMaxLength(60);
            entity.Property(e => e.Server).HasMaxLength(30);
        });

        modelBuilder.Entity<BacoProduct>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK_BacoProduct");

            entity.Property(e => e.Id)
                .ValueGeneratedNever()
                .HasColumnName("ID");
            entity.Property(e => e.Description).HasMaxLength(60);
            entity.Property(e => e.DescriptionTermId).HasColumnName("DescriptionTermID");
            entity.Property(e => e.DocDefault).HasMaxLength(128);
            entity.Property(e => e.DocMaintenance).HasMaxLength(128);
            entity.Property(e => e.DocNews).HasMaxLength(128);
            entity.Property(e => e.DocOrganization).HasMaxLength(128);
            entity.Property(e => e.DocReports).HasMaxLength(128);
            entity.Property(e => e.DocSearch).HasMaxLength(128);
            entity.Property(e => e.Prefix).HasMaxLength(30);
        });

        modelBuilder.Entity<BacoSearchTemplate>(entity =>
        {
            entity.HasKey(e => e.Id).IsClustered(false);

            entity.HasIndex(e => new { e.SearchCode, e.ResourceId }, "SearchCode_ResourceID").IsClustered();

            entity.Property(e => e.Id)
                .HasDefaultValueSql("(newid())")
                .HasColumnName("ID");
            entity.Property(e => e.Created)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime");
            entity.Property(e => e.Description).HasMaxLength(60);
            entity.Property(e => e.ResourceId).HasColumnName("ResourceID");
            entity.Property(e => e.SearchCode)
                .HasMaxLength(8)
                .IsFixedLength();
        });

        modelBuilder.Entity<BacoSearchTemplateField>(entity =>
        {
            entity.HasKey(e => e.Id).IsClustered(false);

            entity.HasIndex(e => e.TemplateId, "TemplateID").IsClustered();

            entity.Property(e => e.Id)
                .HasDefaultValueSql("(newid())")
                .HasColumnName("ID");
            entity.Property(e => e.Field).HasMaxLength(40);
            entity.Property(e => e.TemplateId).HasColumnName("TemplateID");
            entity.Property(e => e.Value).HasMaxLength(255);
        });

        modelBuilder.Entity<BacoSetting>(entity =>
        {
            entity.HasKey(e => new { e.SettingType, e.SettingGroup, e.SettingName });

            entity.Property(e => e.SettingGroup).HasMaxLength(255);
            entity.Property(e => e.SettingName).HasMaxLength(60);
            entity.Property(e => e.DateValue).HasColumnType("datetime");
            entity.Property(e => e.StringValue).HasMaxLength(255);
            entity.Property(e => e.Xmlvalue).HasColumnName("XMLValue");
        });

        modelBuilder.Entity<BacoUserGroup>(entity =>
        {
            entity.HasKey(e => e.GroupName);

            entity.Property(e => e.GroupName).HasMaxLength(30);
            entity.Property(e => e.AppRole).HasMaxLength(40);
        });

        modelBuilder.Entity<Balance>(entity =>
        {
            entity.HasKey(e => e.Id).IsClustered(false);

            entity.ToTable("Balance");

            entity.HasIndex(e => new { e.CompanyCode, e.CompanyAccountCode, e.FinYear, e.FinPeriod, e.CompanyCostcenterCode, e.ItemCode }, "IX_balance").IsClustered();

            entity.Property(e => e.Id)
                .HasDefaultValueSql("(newid())")
                .HasColumnName("ID");
            entity.Property(e => e.AmountCreditAc).HasColumnName("AmountCreditAC");
            entity.Property(e => e.AmountDebitAc).HasColumnName("AmountDebitAC");
            entity.Property(e => e.CompanyAccountCode)
                .HasMaxLength(9)
                .IsFixedLength();
            entity.Property(e => e.CompanyCode)
                .HasMaxLength(6)
                .IsFixedLength();
            entity.Property(e => e.CompanyCostcenterCode).HasMaxLength(10);
            entity.Property(e => e.CompanyCostunitCode).HasMaxLength(10);
            entity.Property(e => e.CurrencyAliasAc)
                .HasMaxLength(3)
                .IsFixedLength()
                .HasColumnName("CurrencyAliasAC");
            entity.Property(e => e.CurrencyCode)
                .HasMaxLength(3)
                .IsFixedLength();
            entity.Property(e => e.ItemCode).HasMaxLength(30);
            entity.Property(e => e.ReportingAmountCreditAc).HasColumnName("ReportingAmountCreditAC");
            entity.Property(e => e.ReportingAmountDebitAc).HasColumnName("ReportingAmountDebitAC");
            entity.Property(e => e.Timestamp)
                .IsRowVersion()
                .IsConcurrencyToken()
                .HasColumnName("timestamp");
            entity.Property(e => e.Transtype)
                .HasMaxLength(1)
                .HasDefaultValue("N")
                .IsFixedLength()
                .HasColumnName("transtype");
            entity.Property(e => e.Warehouse)
                .HasMaxLength(4)
                .IsFixedLength();
        });

        modelBuilder.Entity<BankAccount>(entity =>
        {
            entity.HasKey(e => e.Id).IsClustered(false);

            entity.HasIndex(e => e.BankAccount1, "BankAccounts")
                .IsUnique()
                .IsClustered();

            entity.HasIndex(e => e.Creditor, "ix_Creditor");

            entity.HasIndex(e => e.NameAddressDateBank, "ix_NameAddressDateBank");

            entity.Property(e => e.Id).HasColumnName("ID");
            entity.Property(e => e.AccountNumberBank).HasMaxLength(50);
            entity.Property(e => e.AccountSequenceNumber)
                .HasMaxLength(2)
                .IsFixedLength();
            entity.Property(e => e.ActiveLdpcode)
                .HasMaxLength(8)
                .IsFixedLength()
                .HasColumnName("ActiveLDPCode");
            entity.Property(e => e.BankAccount1)
                .HasMaxLength(34)
                .HasColumnName("BankAccount");
            entity.Property(e => e.BankAccountIncludingMask).HasMaxLength(50);
            entity.Property(e => e.BankAccountRef)
                .HasMaxLength(34)
                .HasDefaultValue("");
            entity.Property(e => e.BankAccountType)
                .HasMaxLength(1)
                .IsFixedLength();
            entity.Property(e => e.BankName).HasMaxLength(50);
            entity.Property(e => e.Bedrnr)
                .HasMaxLength(3)
                .IsFixedLength()
                .HasColumnName("bedrnr");
            entity.Property(e => e.Biccode)
                .HasMaxLength(30)
                .HasColumnName("BICCode");
            entity.Property(e => e.Cardreader)
                .HasMaxLength(1)
                .IsFixedLength()
                .HasColumnName("cardreader");
            entity.Property(e => e.Cashier)
                .HasMaxLength(1)
                .HasDefaultValue("N")
                .IsFixedLength();
            entity.Property(e => e.Colfield0)
                .HasMaxLength(2)
                .IsFixedLength()
                .HasColumnName("colfield0");
            entity.Property(e => e.Colfield1)
                .HasMaxLength(2)
                .IsFixedLength()
                .HasColumnName("colfield1");
            entity.Property(e => e.Colfield10)
                .HasMaxLength(2)
                .IsFixedLength()
                .HasColumnName("colfield10");
            entity.Property(e => e.Colfield2)
                .HasMaxLength(2)
                .IsFixedLength()
                .HasColumnName("colfield2");
            entity.Property(e => e.Colfield3)
                .HasMaxLength(2)
                .IsFixedLength()
                .HasColumnName("colfield3");
            entity.Property(e => e.Colfield4)
                .HasMaxLength(2)
                .IsFixedLength()
                .HasColumnName("colfield4");
            entity.Property(e => e.Colfield5)
                .HasMaxLength(2)
                .IsFixedLength()
                .HasColumnName("colfield5");
            entity.Property(e => e.Colfield6)
                .HasMaxLength(2)
                .IsFixedLength()
                .HasColumnName("colfield6");
            entity.Property(e => e.Colfield7)
                .HasMaxLength(2)
                .IsFixedLength()
                .HasColumnName("colfield7");
            entity.Property(e => e.Colfield8)
                .HasMaxLength(2)
                .IsFixedLength()
                .HasColumnName("colfield8");
            entity.Property(e => e.Colfield9)
                .HasMaxLength(2)
                .IsFixedLength()
                .HasColumnName("colfield9");
            entity.Property(e => e.Colwidth0).HasColumnName("colwidth0");
            entity.Property(e => e.Colwidth1).HasColumnName("colwidth1");
            entity.Property(e => e.Colwidth10).HasColumnName("colwidth10");
            entity.Property(e => e.Colwidth2).HasColumnName("colwidth2");
            entity.Property(e => e.Colwidth3).HasColumnName("colwidth3");
            entity.Property(e => e.Colwidth4).HasColumnName("colwidth4");
            entity.Property(e => e.Colwidth5).HasColumnName("colwidth5");
            entity.Property(e => e.Colwidth6).HasColumnName("colwidth6");
            entity.Property(e => e.Colwidth7).HasColumnName("colwidth7");
            entity.Property(e => e.Colwidth8).HasColumnName("colwidth8");
            entity.Property(e => e.Colwidth9).HasColumnName("colwidth9");
            entity.Property(e => e.Contractnumber).HasMaxLength(20);
            entity.Property(e => e.CrdrPort)
                .HasMaxLength(1)
                .IsFixedLength()
                .HasColumnName("crdr_port");
            entity.Property(e => e.CreditCardType)
                .HasMaxLength(1)
                .IsFixedLength();
            entity.Property(e => e.Creditor)
                .HasMaxLength(6)
                .IsFixedLength();
            entity.Property(e => e.CurrencyCode)
                .HasMaxLength(3)
                .IsFixedLength();
            entity.Property(e => e.DebtorMandatory).HasDefaultValue((byte)0);
            entity.Property(e => e.Description)
                .HasMaxLength(250)
                .HasDefaultValue("");
            entity.Property(e => e.DocAttachmentId).HasColumnName("DocAttachmentID");
            entity.Property(e => e.DocumentNumber).HasMaxLength(20);
            entity.Property(e => e.Eftport)
                .HasMaxLength(1)
                .IsFixedLength()
                .HasColumnName("eftport");
            entity.Property(e => e.Eftterminal)
                .HasMaxLength(1)
                .IsFixedLength()
                .HasColumnName("eftterminal");
            entity.Property(e => e.ExpiryDate).HasColumnType("datetime");
            entity.Property(e => e.Fontsize)
                .HasDefaultValue((short)14)
                .HasColumnName("fontsize");
            entity.Property(e => e.Header1).HasMaxLength(94);
            entity.Property(e => e.Header2).HasMaxLength(94);
            entity.Property(e => e.Header3).HasMaxLength(94);
            entity.Property(e => e.Header4).HasMaxLength(94);
            entity.Property(e => e.HumanResourceId).HasColumnName("HumanResourceID");
            entity.Property(e => e.Iban)
                .HasMaxLength(68)
                .HasColumnName("IBAN");
            entity.Property(e => e.IdentificationNumberBank).HasMaxLength(20);
            entity.Property(e => e.IdentificationNumberBankOffice).HasMaxLength(20);
            entity.Property(e => e.InActiveLdpcode)
                .HasMaxLength(8)
                .IsFixedLength()
                .HasColumnName("InActiveLDPCode");
            entity.Property(e => e.InternetAddress).HasMaxLength(120);
            entity.Property(e => e.InvoiceLayout)
                .HasMaxLength(8)
                .IsFixedLength();
            entity.Property(e => e.Journal)
                .HasMaxLength(3)
                .IsFixedLength();
            entity.Property(e => e.LandIsonr)
                .HasMaxLength(3)
                .IsFixedLength()
                .HasColumnName("land_isonr");
            entity.Property(e => e.LedgerAccount)
                .HasMaxLength(9)
                .IsFixedLength();
            entity.Property(e => e.Magcode)
                .HasMaxLength(4)
                .IsFixedLength()
                .HasColumnName("magcode");
            entity.Property(e => e.MenuBar)
                .HasMaxLength(1)
                .IsFixedLength();
            entity.Property(e => e.MerchantNumber).HasMaxLength(32);
            entity.Property(e => e.Officenumber).HasMaxLength(20);
            entity.Property(e => e.PaymentInTransitAccount)
                .HasMaxLength(9)
                .IsFixedLength();
            entity.Property(e => e.PcchargeDirectory)
                .HasMaxLength(255)
                .HasColumnName("PCChargeDirectory");
            entity.Property(e => e.PresetCode)
                .HasMaxLength(8)
                .IsFixedLength();
            entity.Property(e => e.ProcessorCode).HasMaxLength(10);
            entity.Property(e => e.Purpose)
                .HasMaxLength(1)
                .HasDefaultValue("B")
                .IsFixedLength();
            entity.Property(e => e.StartDate).HasColumnType("datetime");
            entity.Property(e => e.Suffix)
                .HasMaxLength(10)
                .IsFixedLength();
            entity.Property(e => e.Swiftcode)
                .HasMaxLength(11)
                .HasColumnName("SWIFTCode");
            entity.Property(e => e.Syscreated)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("syscreated");
            entity.Property(e => e.Syscreator).HasColumnName("syscreator");
            entity.Property(e => e.Sysguid)
                .HasDefaultValueSql("(newid())")
                .HasColumnName("sysguid");
            entity.Property(e => e.Sysmodified)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("sysmodified");
            entity.Property(e => e.Sysmodifier).HasColumnName("sysmodifier");
            entity.Property(e => e.Trailer1).HasMaxLength(94);
            entity.Property(e => e.Trailer2).HasMaxLength(94);
            entity.Property(e => e.Trailer3).HasMaxLength(94);
            entity.Property(e => e.Trailer4).HasMaxLength(94);
        });

        modelBuilder.Entity<BankAccountsView>(entity =>
        {
            entity
                .HasNoKey()
                .ToView("BankAccountsView");

            entity.Property(e => e.AccountNumberBank).HasMaxLength(50);
            entity.Property(e => e.BankAccount).HasMaxLength(34);
            entity.Property(e => e.BankAccountIncludingMask).HasMaxLength(50);
            entity.Property(e => e.BankAccountType)
                .HasMaxLength(1)
                .IsFixedLength();
            entity.Property(e => e.BankAddress1).HasMaxLength(100);
            entity.Property(e => e.BankAddress2).HasMaxLength(100);
            entity.Property(e => e.BankCity).HasMaxLength(100);
            entity.Property(e => e.BankCountry0)
                .HasMaxLength(60)
                .HasColumnName("BankCountry_0");
            entity.Property(e => e.BankCountry1)
                .HasMaxLength(60)
                .HasColumnName("BankCountry_1");
            entity.Property(e => e.BankCountry2)
                .HasMaxLength(60)
                .HasColumnName("BankCountry_2");
            entity.Property(e => e.BankCountry3)
                .HasMaxLength(60)
                .HasColumnName("BankCountry_3");
            entity.Property(e => e.BankCountry4)
                .HasMaxLength(60)
                .HasColumnName("BankCountry_4");
            entity.Property(e => e.BankCountryCode)
                .HasMaxLength(3)
                .IsFixedLength();
            entity.Property(e => e.BankName).HasMaxLength(50);
            entity.Property(e => e.BankPostCode).HasMaxLength(20);
            entity.Property(e => e.Bedrnr)
                .HasMaxLength(3)
                .IsFixedLength()
                .HasColumnName("bedrnr");
            entity.Property(e => e.Biccode)
                .HasMaxLength(30)
                .HasColumnName("BICCode");
            entity.Property(e => e.ContactEmail).HasMaxLength(128);
            entity.Property(e => e.ContactFaxNumber).HasMaxLength(25);
            entity.Property(e => e.ContactId).HasColumnName("ContactID");
            entity.Property(e => e.ContactJobDescription).HasMaxLength(50);
            entity.Property(e => e.ContactName).HasMaxLength(50);
            entity.Property(e => e.ContactPhoneExtension)
                .HasMaxLength(5)
                .IsFixedLength();
            entity.Property(e => e.ContactPhoneNumber).HasMaxLength(25);
            entity.Property(e => e.Creditor)
                .HasMaxLength(6)
                .IsFixedLength();
            entity.Property(e => e.CurrencyCode)
                .HasMaxLength(3)
                .IsFixedLength();
            entity.Property(e => e.CurrencyDescription0)
                .HasMaxLength(30)
                .HasColumnName("CurrencyDescription_0");
            entity.Property(e => e.CurrencyDescription1)
                .HasMaxLength(30)
                .HasColumnName("CurrencyDescription_1");
            entity.Property(e => e.CurrencyDescription2)
                .HasMaxLength(30)
                .HasColumnName("CurrencyDescription_2");
            entity.Property(e => e.CurrencyDescription3)
                .HasMaxLength(30)
                .HasColumnName("CurrencyDescription_3");
            entity.Property(e => e.CurrencyDescription4)
                .HasMaxLength(30)
                .HasColumnName("CurrencyDescription_4");
            entity.Property(e => e.Description).HasMaxLength(250);
            entity.Property(e => e.ExpiryDate).HasColumnType("datetime");
            entity.Property(e => e.HumanResourceFullName).HasMaxLength(64);
            entity.Property(e => e.HumanResourceId).HasColumnName("HumanResourceID");
            entity.Property(e => e.Id).HasColumnName("ID");
            entity.Property(e => e.IdentificationNumberBank).HasMaxLength(20);
            entity.Property(e => e.IdentificationNumberBankOffice).HasMaxLength(20);
            entity.Property(e => e.InternetAddress).HasMaxLength(120);
            entity.Property(e => e.LandId).HasColumnName("LandID");
            entity.Property(e => e.LedgerAccount)
                .HasMaxLength(9)
                .IsFixedLength();
            entity.Property(e => e.PaymentInTransitAccount)
                .HasMaxLength(9)
                .IsFixedLength();
            entity.Property(e => e.ShortDescription)
                .HasMaxLength(30)
                .IsFixedLength();
            entity.Property(e => e.StartDate).HasColumnType("datetime");
            entity.Property(e => e.Swiftcode)
                .HasMaxLength(11)
                .HasColumnName("SWIFTCode");
            entity.Property(e => e.Syscreated)
                .HasColumnType("datetime")
                .HasColumnName("syscreated");
            entity.Property(e => e.Syscreator).HasColumnName("syscreator");
            entity.Property(e => e.Sysguid).HasColumnName("sysguid");
            entity.Property(e => e.Sysmodified)
                .HasColumnType("datetime")
                .HasColumnName("sysmodified");
            entity.Property(e => e.Sysmodifier).HasColumnName("sysmodifier");
        });

        modelBuilder.Entity<BankAuthorization>(entity =>
        {
            entity.HasKey(e => e.Id).IsClustered(false);

            entity.HasIndex(e => new { e.BankAccount, e.ResourceId }, "BankAccount_ResourceID").IsClustered();

            entity.Property(e => e.Id).HasColumnName("ID");
            entity.Property(e => e.BankAccount).HasMaxLength(34);
            entity.Property(e => e.DocumentId).HasColumnName("DocumentID");
            entity.Property(e => e.EndDate).HasColumnType("datetime");
            entity.Property(e => e.ResourceId).HasColumnName("ResourceID");
            entity.Property(e => e.StartDate).HasColumnType("datetime");
        });

        modelBuilder.Entity<BankBalancePerCurrencyView>(entity =>
        {
            entity
                .HasNoKey()
                .ToView("BankBalancePerCurrencyView");

            entity.Property(e => e.ClosingBalanceEur).HasColumnName("ClosingBalanceEUR");
            entity.Property(e => e.Currency)
                .HasMaxLength(3)
                .IsFixedLength();
            entity.Property(e => e.Description).HasMaxLength(30);
        });

        modelBuilder.Entity<BankFormat>(entity =>
        {
            entity.HasKey(e => e.Id).IsClustered(false);

            entity.HasIndex(e => new { e.LandIsonr, e.BankName, e.FormatType, e.FormatName }, "BankFormats")
                .IsUnique()
                .IsClustered();

            entity.Property(e => e.Id).HasColumnName("ID");
            entity.Property(e => e.Assembly).HasMaxLength(120);
            entity.Property(e => e.AssemblyClass).HasMaxLength(120);
            entity.Property(e => e.BankName).HasMaxLength(50);
            entity.Property(e => e.DataModuleId).HasColumnName("DataModuleID");
            entity.Property(e => e.Description).HasMaxLength(128);
            entity.Property(e => e.EurbatchesInSeparateFile).HasColumnName("EURBatchesInSeparateFile");
            entity.Property(e => e.ExtraMatchingCriteria1)
                .HasMaxLength(1)
                .IsFixedLength();
            entity.Property(e => e.ExtraMatchingCriteria2)
                .HasMaxLength(1)
                .IsFixedLength();
            entity.Property(e => e.ExtraMatchingCriteria3)
                .HasMaxLength(1)
                .IsFixedLength();
            entity.Property(e => e.ExtraMatchingDelimiter)
                .HasMaxLength(2)
                .IsFixedLength();
            entity.Property(e => e.FormatFileName).HasMaxLength(40);
            entity.Property(e => e.FormatName).HasMaxLength(20);
            entity.Property(e => e.FormatSystem).HasMaxLength(20);
            entity.Property(e => e.FormatType)
                .HasMaxLength(10)
                .IsFixedLength();
            entity.Property(e => e.LandIsonr)
                .HasMaxLength(3)
                .IsFixedLength()
                .HasColumnName("land_isonr");
            entity.Property(e => e.LastPackageDate).HasColumnType("datetime");
            entity.Property(e => e.Mask)
                .HasMaxLength(10)
                .IsFixedLength();
            entity.Property(e => e.MatchingCriteria1).HasMaxLength(40);
            entity.Property(e => e.MatchingCriteria2).HasMaxLength(40);
            entity.Property(e => e.OneAccountPerBatch).HasDefaultValue((byte)1);
            entity.Property(e => e.OneCurrencyPerBatch).HasDefaultValue((byte)1);
            entity.Property(e => e.OneDatePerBatch).HasDefaultValue((byte)1);
            entity.Property(e => e.OneOffsetPerBatch).HasDefaultValue((byte)1);
            entity.Property(e => e.ProgId)
                .HasMaxLength(80)
                .HasColumnName("ProgID");
            entity.Property(e => e.Syscreated)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("syscreated");
            entity.Property(e => e.Syscreator).HasColumnName("syscreator");
            entity.Property(e => e.Sysguid)
                .HasDefaultValueSql("(newid())")
                .HasColumnName("sysguid");
            entity.Property(e => e.Sysmodified)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("sysmodified");
            entity.Property(e => e.Sysmodifier).HasColumnName("sysmodifier");
        });

        modelBuilder.Entity<BankName>(entity =>
        {
            entity.HasKey(e => e.Id).IsClustered(false);

            entity.HasIndex(e => new { e.LandIsonr, e.BankName1 }, "BankNames")
                .IsUnique()
                .IsClustered();

            entity.Property(e => e.Id).HasColumnName("ID");
            entity.Property(e => e.Assembly).HasMaxLength(120);
            entity.Property(e => e.AssemblyClass).HasMaxLength(120);
            entity.Property(e => e.BankAccountCheck)
                .HasMaxLength(1)
                .IsFixedLength();
            entity.Property(e => e.BankAccountMask).HasMaxLength(50);
            entity.Property(e => e.BankAccountMaskPrefix)
                .HasMaxLength(10)
                .IsFixedLength();
            entity.Property(e => e.BankName1)
                .HasMaxLength(50)
                .HasColumnName("BankName");
            entity.Property(e => e.Biccode)
                .HasMaxLength(11)
                .HasColumnName("BICCode");
            entity.Property(e => e.Description).HasMaxLength(80);
            entity.Property(e => e.HomePageAddress).HasMaxLength(256);
            entity.Property(e => e.InternetBankingAddress).HasMaxLength(256);
            entity.Property(e => e.LandIsonr)
                .HasMaxLength(3)
                .IsFixedLength()
                .HasColumnName("land_isonr");
            entity.Property(e => e.MainLogoFileName).HasMaxLength(64);
            entity.Property(e => e.ProgId).HasMaxLength(80);
            entity.Property(e => e.Status)
                .HasMaxLength(1)
                .IsFixedLength();
            entity.Property(e => e.Swiftcode)
                .HasMaxLength(11)
                .HasColumnName("SWIFTCode");
            entity.Property(e => e.Syscreated)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("syscreated");
            entity.Property(e => e.Syscreator).HasColumnName("syscreator");
            entity.Property(e => e.Sysguid)
                .HasDefaultValueSql("(newid())")
                .HasColumnName("sysguid");
            entity.Property(e => e.Sysmodified)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("sysmodified");
            entity.Property(e => e.Sysmodifier).HasColumnName("sysmodifier");
        });

        modelBuilder.Entity<BankStatementHeadersExView>(entity =>
        {
            entity
                .HasNoKey()
                .ToView("BankStatementHeadersExView");

            entity.Property(e => e.BankAccountType)
                .HasMaxLength(1)
                .IsFixedLength();
            entity.Property(e => e.BankName).HasMaxLength(50);
            entity.Property(e => e.CurrencyCode)
                .HasMaxLength(3)
                .IsFixedLength();
            entity.Property(e => e.FullName).HasMaxLength(64);
            entity.Property(e => e.Id).HasColumnName("ID");
            entity.Property(e => e.OwnBankAccount).HasMaxLength(34);
            entity.Property(e => e.StatementDate).HasColumnType("datetime");
            entity.Property(e => e.StatementNumber)
                .HasMaxLength(10)
                .IsFixedLength();
            entity.Property(e => e.Status)
                .HasMaxLength(1)
                .IsFixedLength();
        });

        modelBuilder.Entity<BankStatementHeadersView>(entity =>
        {
            entity
                .HasNoKey()
                .ToView("BankStatementHeadersView");

            entity.Property(e => e.BankAccountIncludingMask).HasMaxLength(50);
            entity.Property(e => e.BankAccountType)
                .HasMaxLength(1)
                .IsFixedLength();
            entity.Property(e => e.BankName).HasMaxLength(50);
            entity.Property(e => e.CompanyCode)
                .HasMaxLength(3)
                .IsFixedLength();
            entity.Property(e => e.CurrencyCode)
                .HasMaxLength(3)
                .IsFixedLength();
            entity.Property(e => e.Id).HasColumnName("ID");
            entity.Property(e => e.OwnBankAccount).HasMaxLength(34);
            entity.Property(e => e.StatementDate).HasColumnType("datetime");
            entity.Property(e => e.StatementNumber)
                .HasMaxLength(10)
                .IsFixedLength();
            entity.Property(e => e.Tccode)
                .HasMaxLength(3)
                .IsFixedLength()
                .HasColumnName("TCCode");
        });

        modelBuilder.Entity<BankTransaction>(entity =>
        {
            entity.HasIndex(e => new { e.CreditorNumber, e.Type, e.MatchId, e.AmountDc, e.Status, e.EntryNumber, e.OffsetLedgerAccountNumber, e.ProcessingDate }, "AP");

            entity.HasIndex(e => new { e.DebtorNumber, e.Type, e.MatchId, e.AmountDc, e.Status, e.EntryNumber, e.OffsetLedgerAccountNumber, e.ProcessingDate }, "AR");

            entity.HasIndex(e => new { e.DepositDate, e.DepositNumber, e.OwnBankAccount }, "BankDeposit");

            entity.HasIndex(e => new { e.StatementDate, e.StatementNumber, e.OwnBankAccount }, "BankStatement");

            entity.HasIndex(e => e.Sysguid, "BankTransactionGUID").IsUnique();

            entity.HasIndex(e => new { e.ValueDate, e.OwnBankAccount }, "BankValueDate");

            entity.HasIndex(e => new { e.BatchNumber, e.Type, e.Status }, "BatchNumber");

            entity.HasIndex(e => new { e.CreditorNumber, e.InvoiceNumber, e.Type, e.Status }, "CreditorInvoices");

            entity.HasIndex(e => new { e.DebtorNumber, e.InvoiceNumber, e.Type, e.Status }, "DebtorInvoices");

            entity.HasIndex(e => e.MatchId, "ForeignKeyMatch");

            entity.HasIndex(e => new { e.Type, e.InvoiceDate, e.CreditorNumber, e.DebtorNumber, e.Status }, "IX_InvoiceDate");

            entity.HasIndex(e => new { e.PaymentType, e.Type, e.Status }, "IX_PaymentType");

            entity.HasIndex(e => e.SupplierInvoiceNumber, "IX_SupplierInvoiceNumber");

            entity.HasIndex(e => new { e.Bedrnr, e.Sysmodified }, "IX_sysmodified");

            entity.HasIndex(e => new { e.Bedrnr, e.Timestamp }, "IX_timestamp");

            entity.HasIndex(e => e.InvoiceNumber, "InvoiceNumbers");

            entity.HasIndex(e => new { e.TransactionType, e.ValueDate, e.LedgerAccount, e.Tccode, e.AmountTc, e.AmountDc }, "JournalOpenBal");

            entity.HasIndex(e => new { e.InvoiceCode, e.SequenceNumber }, "NonHistoricalInvoice");

            entity.HasIndex(e => new { e.OffsetBankAccount, e.Type, e.DebtorNumber, e.CreditorNumber }, "OffsetBankAccount");

            entity.HasIndex(e => new { e.OffsetReference, e.Status, e.Type }, "OffsetReference");

            entity.HasIndex(e => e.OrderNumber, "OrderNumber");

            entity.HasIndex(e => new { e.OwnBankAccount, e.Type, e.StatementDate, e.Status, e.FileName }, "OwnBankAccount");

            entity.HasIndex(e => new { e.Status, e.Type, e.AmountTc }, "StatusTypeAmountTC");

            entity.HasIndex(e => new { e.Type, e.TransactionNumber }, "TransactionNumber").IsDescending(false, true);

            entity.Property(e => e.Id).HasColumnName("ID");
            entity.Property(e => e.AdvanceInvoiceNumber).HasMaxLength(8);
            entity.Property(e => e.AmountDc)
                .HasDefaultValue(0.0)
                .HasColumnName("AmountDC");
            entity.Property(e => e.AmountTc)
                .HasDefaultValue(0.0)
                .HasColumnName("AmountTC");
            entity.Property(e => e.Approved).HasColumnType("datetime");
            entity.Property(e => e.Approved2).HasColumnType("datetime");
            entity.Property(e => e.BatchNumber).HasDefaultValue(0);
            entity.Property(e => e.Bedrnr)
                .HasMaxLength(3)
                .IsFixedLength()
                .HasColumnName("bedrnr");
            entity.Property(e => e.Blocked).HasDefaultValue((byte)0);
            entity.Property(e => e.CntId).HasColumnName("cnt_id");
            entity.Property(e => e.Contractnumber).HasMaxLength(20);
            entity.Property(e => e.CreditCardAuthCode).HasMaxLength(20);
            entity.Property(e => e.CreditCardResult).HasMaxLength(20);
            entity.Property(e => e.CreditCardTransId)
                .HasMaxLength(25)
                .HasColumnName("CreditCardTransID");
            entity.Property(e => e.CreditorNumber)
                .HasMaxLength(6)
                .IsFixedLength();
            entity.Property(e => e.DebtorNumber)
                .HasMaxLength(6)
                .IsFixedLength();
            entity.Property(e => e.DepositDate).HasColumnType("datetime");
            entity.Property(e => e.DocAttachmentId).HasColumnName("DocAttachmentID");
            entity.Property(e => e.DocumentId).HasColumnName("DocumentID");
            entity.Property(e => e.DueDate).HasColumnType("datetime");
            entity.Property(e => e.EntryNumber)
                .HasMaxLength(8)
                .IsFixedLength();
            entity.Property(e => e.ExchangeRate).HasDefaultValue(1.0);
            entity.Property(e => e.ExternalNumber).HasMaxLength(30);
            entity.Property(e => e.ExtraCurrencyCode)
                .HasMaxLength(3)
                .IsFixedLength();
            entity.Property(e => e.FileName).HasMaxLength(80);
            entity.Property(e => e.HumanResourceId).HasColumnName("HumanResourceID");
            entity.Property(e => e.InstrumentBank).HasMaxLength(50);
            entity.Property(e => e.InstrumentStatus)
                .HasMaxLength(1)
                .IsFixedLength();
            entity.Property(e => e.InvoiceCode)
                .HasMaxLength(3)
                .IsFixedLength();
            entity.Property(e => e.InvoiceDate).HasColumnType("datetime");
            entity.Property(e => e.InvoiceNumber).HasMaxLength(30);
            entity.Property(e => e.Journalized).HasColumnType("datetime");
            entity.Property(e => e.LedgerAccount)
                .HasMaxLength(9)
                .IsFixedLength();
            entity.Property(e => e.LinkId).HasColumnName("LinkID");
            entity.Property(e => e.MatchId).HasColumnName("MatchID");
            entity.Property(e => e.Officenumber).HasMaxLength(20);
            entity.Property(e => e.OffsetAddressLine1).HasMaxLength(30);
            entity.Property(e => e.OffsetAddressLine2).HasMaxLength(30);
            entity.Property(e => e.OffsetAddressLine3).HasMaxLength(30);
            entity.Property(e => e.OffsetBankAccount).HasMaxLength(34);
            entity.Property(e => e.OffsetBankCountry)
                .HasMaxLength(3)
                .IsFixedLength();
            entity.Property(e => e.OffsetBankName).HasMaxLength(30);
            entity.Property(e => e.OffsetBankSwiftcode)
                .HasMaxLength(11)
                .HasColumnName("OffsetBankSWIFTCode");
            entity.Property(e => e.OffsetCity).HasMaxLength(30);
            entity.Property(e => e.OffsetCountryCode)
                .HasMaxLength(3)
                .IsFixedLength();
            entity.Property(e => e.OffsetIdentificationNumberBank)
                .HasMaxLength(8)
                .IsFixedLength();
            entity.Property(e => e.OffsetLedgerAccountNumber)
                .HasMaxLength(9)
                .IsFixedLength();
            entity.Property(e => e.OffsetName).HasMaxLength(50);
            entity.Property(e => e.OffsetPostalCode).HasMaxLength(30);
            entity.Property(e => e.OffsetReference).HasMaxLength(35);
            entity.Property(e => e.OrderNumber)
                .HasMaxLength(8)
                .IsFixedLength();
            entity.Property(e => e.OwnBankAccount).HasMaxLength(34);
            entity.Property(e => e.OwnBankAccountRef).HasMaxLength(34);
            entity.Property(e => e.PaymentCondition)
                .HasMaxLength(2)
                .IsFixedLength();
            entity.Property(e => e.PaymentMethod)
                .HasMaxLength(1)
                .IsFixedLength();
            entity.Property(e => e.PaymentType)
                .HasMaxLength(1)
                .IsFixedLength();
            entity.Property(e => e.Processed).HasColumnType("datetime");
            entity.Property(e => e.ProcessingDate).HasColumnType("datetime");
            entity.Property(e => e.ReportingDate).HasColumnType("datetime");
            entity.Property(e => e.SequenceNumber)
                .HasMaxLength(5)
                .IsFixedLength();
            entity.Property(e => e.StatementDate).HasColumnType("datetime");
            entity.Property(e => e.StatementLineNumber)
                .HasMaxLength(6)
                .HasDefaultValueSql("((0))")
                .IsFixedLength();
            entity.Property(e => e.StatementNumber)
                .HasMaxLength(10)
                .HasDefaultValueSql("((0))")
                .IsFixedLength();
            entity.Property(e => e.StatementType)
                .HasMaxLength(1)
                .IsFixedLength();
            entity.Property(e => e.Status)
                .HasMaxLength(1)
                .IsFixedLength();
            entity.Property(e => e.SupplierInvoiceNumber).HasMaxLength(40);
            entity.Property(e => e.Syscreated)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("syscreated");
            entity.Property(e => e.Syscreator).HasColumnName("syscreator");
            entity.Property(e => e.Sysguid)
                .HasDefaultValueSql("(newid())")
                .HasColumnName("sysguid");
            entity.Property(e => e.Sysmodified)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("sysmodified");
            entity.Property(e => e.Sysmodifier).HasColumnName("sysmodifier");
            entity.Property(e => e.TaxInvoiceDate).HasColumnType("datetime");
            entity.Property(e => e.TaxInvoiceNumber).HasMaxLength(30);
            entity.Property(e => e.Tccode)
                .HasMaxLength(3)
                .IsFixedLength()
                .HasColumnName("TCCode");
            entity.Property(e => e.Timestamp)
                .IsRowVersion()
                .IsConcurrencyToken()
                .HasColumnName("timestamp");
            entity.Property(e => e.TransactionNumber).HasMaxLength(20);
            entity.Property(e => e.TransactionType)
                .HasMaxLength(1)
                .IsFixedLength();
            entity.Property(e => e.Type)
                .HasMaxLength(1)
                .IsFixedLength();
            entity.Property(e => e.ValueDate).HasColumnType("datetime");
            entity.Property(e => e.Vatcode)
                .HasMaxLength(3)
                .IsFixedLength()
                .HasColumnName("VATCode");
            entity.Property(e => e.Warehouse)
                .HasMaxLength(4)
                .IsFixedLength();
        });

        modelBuilder.Entity<Barcode>(entity =>
        {
            entity.HasKey(e => e.Id).IsClustered(false);

            entity.HasIndex(e => e.Barcode1, "IX_Barcodes_Barcode").IsClustered();

            entity.Property(e => e.Id).HasColumnName("ID");
            entity.Property(e => e.Barcode1)
                .HasMaxLength(40)
                .HasColumnName("Barcode");
            entity.Property(e => e.BarcodeType)
                .HasMaxLength(1)
                .HasDefaultValue("A")
                .IsFixedLength();
            entity.Property(e => e.Itemcode).HasMaxLength(30);
            entity.Property(e => e.Syscreated)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("syscreated");
            entity.Property(e => e.Syscreator).HasColumnName("syscreator");
            entity.Property(e => e.Sysguid)
                .HasDefaultValueSql("(newid())")
                .HasColumnName("sysguid");
            entity.Property(e => e.Sysmodified)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("sysmodified");
            entity.Property(e => e.Sysmodifier).HasColumnName("sysmodifier");
            entity.Property(e => e.Timestamp)
                .IsRowVersion()
                .IsConcurrencyToken()
                .HasColumnName("timestamp");
            entity.Property(e => e.Unitcode)
                .HasMaxLength(8)
                .IsFixedLength();
        });

        modelBuilder.Entity<Bdgmth>(entity =>
        {
            entity.HasKey(e => e.Id).IsClustered(false);

            entity.ToTable("bdgmth");

            entity.HasIndex(e => e.BudMeth, "bdgmth")
                .IsUnique()
                .IsClustered();

            entity.HasIndex(e => new { e.VerdSrt, e.Id }, "bumtbl").IsUnique();

            entity.Property(e => e.Id).HasColumnName("ID");
            entity.Property(e => e.BudMeth)
                .HasMaxLength(8)
                .IsFixedLength()
                .HasColumnName("bud_meth");
            entity.Property(e => e.Oms300)
                .HasMaxLength(30)
                .HasColumnName("oms30_0");
            entity.Property(e => e.Oms301)
                .HasMaxLength(30)
                .HasColumnName("oms30_1");
            entity.Property(e => e.Oms302)
                .HasMaxLength(30)
                .HasColumnName("oms30_2");
            entity.Property(e => e.Oms303)
                .HasMaxLength(30)
                .HasColumnName("oms30_3");
            entity.Property(e => e.Oms304)
                .HasMaxLength(30)
                .HasColumnName("oms30_4");
            entity.Property(e => e.Syscreated)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("syscreated");
            entity.Property(e => e.Syscreator).HasColumnName("syscreator");
            entity.Property(e => e.Sysguid)
                .HasDefaultValueSql("(newid())")
                .HasColumnName("sysguid");
            entity.Property(e => e.Sysmodified)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("sysmodified");
            entity.Property(e => e.Sysmodifier).HasColumnName("sysmodifier");
            entity.Property(e => e.Timestamp)
                .IsRowVersion()
                .IsConcurrencyToken()
                .HasColumnName("timestamp");
            entity.Property(e => e.VerdSrt)
                .HasMaxLength(1)
                .IsFixedLength()
                .HasColumnName("verd_srt");
        });

        modelBuilder.Entity<Bdgtbl>(entity =>
        {
            entity.HasKey(e => e.Id).IsClustered(false);

            entity.ToTable("bdgtbl");

            entity.HasIndex(e => new { e.BudMeth, e.Periode, e.Kstplcode, e.Kstdrcode }, "bdgtbl")
                .IsUnique()
                .IsClustered();

            entity.HasIndex(e => new { e.Kstdrcode, e.BudMeth, e.Id }, "butkdr").IsUnique();

            entity.HasIndex(e => new { e.Kstplcode, e.BudMeth, e.Id }, "butkpl").IsUnique();

            entity.HasIndex(e => new { e.Periode, e.BudMeth, e.Id }, "butper").IsUnique();

            entity.Property(e => e.Id).HasColumnName("ID");
            entity.Property(e => e.Aantal).HasColumnName("aantal");
            entity.Property(e => e.Bedrag).HasColumnName("bedrag");
            entity.Property(e => e.BudMeth)
                .HasMaxLength(8)
                .IsFixedLength()
                .HasColumnName("bud_meth");
            entity.Property(e => e.Kstdrcode)
                .HasMaxLength(8)
                .IsFixedLength()
                .HasColumnName("kstdrcode");
            entity.Property(e => e.Kstplcode)
                .HasMaxLength(8)
                .IsFixedLength()
                .HasColumnName("kstplcode");
            entity.Property(e => e.Percentage).HasColumnName("percentage");
            entity.Property(e => e.Periode)
                .HasMaxLength(3)
                .IsFixedLength()
                .HasColumnName("periode");
            entity.Property(e => e.Syscreated)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("syscreated");
            entity.Property(e => e.Syscreator).HasColumnName("syscreator");
            entity.Property(e => e.Sysguid)
                .HasDefaultValueSql("(newid())")
                .HasColumnName("sysguid");
            entity.Property(e => e.Sysmodified)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("sysmodified");
            entity.Property(e => e.Sysmodifier).HasColumnName("sysmodifier");
            entity.Property(e => e.Timestamp)
                .IsRowVersion()
                .IsConcurrencyToken()
                .HasColumnName("timestamp");
            entity.Property(e => e.VerdCalc)
                .HasMaxLength(1)
                .IsFixedLength()
                .HasColumnName("verd_calc");
        });

        modelBuilder.Entity<Bdgvr>(entity =>
        {
            entity.HasKey(e => e.Id).IsClustered(false);

            entity.ToTable("bdgvrs");

            entity.HasIndex(e => e.BudVers, "bdgvrs")
                .IsUnique()
                .IsClustered();

            entity.HasIndex(e => new { e.VersStat, e.BkjrcodeV, e.PeriodeV, e.BkjrcodeT, e.PeriodeT, e.BudVers }, "busrep").IsUnique();

            entity.HasIndex(e => new { e.VersStat, e.BudVers, e.Id }, "bussts").IsUnique();

            entity.Property(e => e.Id).HasColumnName("ID");
            entity.Property(e => e.BkjrcodeT).HasColumnName("bkjrcode_t");
            entity.Property(e => e.BkjrcodeV).HasColumnName("bkjrcode_v");
            entity.Property(e => e.BudBev).HasColumnName("bud_bev");
            entity.Property(e => e.BudNiveau)
                .HasMaxLength(1)
                .IsFixedLength()
                .HasColumnName("bud_niveau");
            entity.Property(e => e.BudVers)
                .HasMaxLength(8)
                .IsFixedLength()
                .HasColumnName("bud_vers");
            entity.Property(e => e.Factor).HasColumnName("factor");
            entity.Property(e => e.Oms300)
                .HasMaxLength(30)
                .HasColumnName("oms30_0");
            entity.Property(e => e.Oms301)
                .HasMaxLength(30)
                .HasColumnName("oms30_1");
            entity.Property(e => e.Oms302)
                .HasMaxLength(30)
                .HasColumnName("oms30_2");
            entity.Property(e => e.Oms303)
                .HasMaxLength(30)
                .HasColumnName("oms30_3");
            entity.Property(e => e.Oms304)
                .HasMaxLength(30)
                .HasColumnName("oms30_4");
            entity.Property(e => e.PeriodeT)
                .HasMaxLength(3)
                .IsFixedLength()
                .HasColumnName("periode_t");
            entity.Property(e => e.PeriodeV)
                .HasMaxLength(3)
                .IsFixedLength()
                .HasColumnName("periode_v");
            entity.Property(e => e.Planperiod)
                .HasMaxLength(1)
                .HasDefaultValue("D")
                .IsFixedLength()
                .HasColumnName("planperiod");
            entity.Property(e => e.Prec).HasColumnName("prec");
            entity.Property(e => e.Revisienr).HasColumnName("revisienr");
            entity.Property(e => e.Syscreated)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("syscreated");
            entity.Property(e => e.Syscreator).HasColumnName("syscreator");
            entity.Property(e => e.Sysguid)
                .HasDefaultValueSql("(newid())")
                .HasColumnName("sysguid");
            entity.Property(e => e.Sysmodified)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("sysmodified");
            entity.Property(e => e.Sysmodifier).HasColumnName("sysmodifier");
            entity.Property(e => e.Timestamp)
                .IsRowVersion()
                .IsConcurrencyToken()
                .HasColumnName("timestamp");
            entity.Property(e => e.VersStat)
                .HasMaxLength(1)
                .IsFixedLength()
                .HasColumnName("vers_stat");
        });

        modelBuilder.Entity<BdpictureRef>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("BDPictureRefs");

            entity.HasIndex(e => e.DocId, "BDPictureRefsIdx1");

            entity.HasIndex(e => e.PictureId, "BDPictureRefsIdx2");

            entity.HasIndex(e => new { e.DocId, e.PictureId }, "BDPictureRefs_Index").IsClustered();

            entity.Property(e => e.AttachmentId)
                .HasDefaultValueSql("(NULL)")
                .HasColumnName("AttachmentID");
            entity.Property(e => e.DocId).HasColumnName("DocID");
            entity.Property(e => e.PictureId).HasColumnName("PictureID");
            entity.Property(e => e.Version).HasMaxLength(20);
        });

        modelBuilder.Entity<BdviewColumn>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("BDViewColumns");

            entity.HasIndex(e => e.Id, "BDViewColumns_Index").IsClustered();

            entity.Property(e => e.Caption).HasMaxLength(60);
            entity.Property(e => e.CaptionTermId).HasColumnName("CaptionTermID");
            entity.Property(e => e.Columns).HasMaxLength(500);
            entity.Property(e => e.Description).HasMaxLength(60);
            entity.Property(e => e.DescriptionSuffix).HasMaxLength(60);
            entity.Property(e => e.DescriptionSuffixTermId).HasColumnName("DescriptionSuffixTermID");
            entity.Property(e => e.DescriptionTermId).HasColumnName("DescriptionTermID");
            entity.Property(e => e.Id).HasColumnName("ID");
            entity.Property(e => e.Joins).HasMaxLength(60);
        });

        modelBuilder.Entity<Bedryf>(entity =>
        {
            entity.HasKey(e => e.Id).IsClustered(false);

            entity.ToTable("bedryf");

            entity.HasIndex(e => e.Bedrzk, "bdrfzk").IsUnique();

            entity.HasIndex(e => new { e.ParCompany, e.Id }, "bdrpar").IsUnique();

            entity.HasIndex(e => e.Bedrnr, "bedryf")
                .IsUnique()
                .IsClustered();

            entity.Property(e => e.Id).HasColumnName("ID");
            entity.Property(e => e.Achternaam)
                .HasMaxLength(30)
                .HasColumnName("achternaam");
            entity.Property(e => e.AdmAdrnr)
                .HasMaxLength(10)
                .IsFixedLength()
                .HasColumnName("adm_adrnr");
            entity.Property(e => e.Adr)
                .HasMaxLength(30)
                .HasColumnName("adr");
            entity.Property(e => e.Adres2)
                .HasMaxLength(30)
                .HasColumnName("adres2");
            entity.Property(e => e.Adres3)
                .HasMaxLength(30)
                .HasColumnName("adres3");
            entity.Property(e => e.BackOfficeDbname)
                .HasMaxLength(128)
                .HasColumnName("BackOfficeDBName");
            entity.Property(e => e.BackOfficeEnableFixedCredentials).HasDefaultValue(false);
            entity.Property(e => e.BackOfficePwd).HasMaxLength(255);
            entity.Property(e => e.BackOfficeServerPath).HasMaxLength(60);
            entity.Property(e => e.BackOfficeUser).HasMaxLength(100);
            entity.Property(e => e.BackOfficeWebService).HasMaxLength(60);
            entity.Property(e => e.BankRek)
                .HasMaxLength(34)
                .HasColumnName("bank_rek");
            entity.Property(e => e.Batchlevel).HasColumnName("batchlevel");
            entity.Property(e => e.Bedrnm)
                .HasMaxLength(60)
                .HasColumnName("bedrnm");
            entity.Property(e => e.Bedrnr)
                .HasMaxLength(3)
                .IsFixedLength()
                .HasColumnName("bedrnr");
            entity.Property(e => e.Bedrzk)
                .HasMaxLength(6)
                .IsFixedLength()
                .HasColumnName("bedrzk");
            entity.Property(e => e.BestDirs0)
                .HasMaxLength(40)
                .HasColumnName("best_dirs_0");
            entity.Property(e => e.BestDirs1)
                .HasMaxLength(40)
                .HasColumnName("best_dirs_1");
            entity.Property(e => e.BestDirs2)
                .HasMaxLength(40)
                .HasColumnName("best_dirs_2");
            entity.Property(e => e.BestDirs3)
                .HasMaxLength(40)
                .HasColumnName("best_dirs_3");
            entity.Property(e => e.BestDirs4)
                .HasMaxLength(40)
                .HasColumnName("best_dirs_4");
            entity.Property(e => e.BestDirs5)
                .HasMaxLength(40)
                .HasColumnName("best_dirs_5");
            entity.Property(e => e.BestDirs6)
                .HasMaxLength(40)
                .HasColumnName("best_dirs_6");
            entity.Property(e => e.BestDirs7)
                .HasMaxLength(40)
                .HasColumnName("best_dirs_7");
            entity.Property(e => e.BgcAdmnr)
                .HasMaxLength(7)
                .IsFixedLength()
                .HasColumnName("bgc_admnr");
            entity.Property(e => e.BtwNummer)
                .HasMaxLength(20)
                .HasColumnName("btw_nummer");
            entity.Property(e => e.BudgetScenario)
                .HasMaxLength(8)
                .IsFixedLength();
            entity.Property(e => e.Class01)
                .HasMaxLength(30)
                .HasColumnName("Class_01");
            entity.Property(e => e.Class02)
                .HasMaxLength(30)
                .HasColumnName("Class_02");
            entity.Property(e => e.Class03)
                .HasMaxLength(30)
                .HasColumnName("Class_03");
            entity.Property(e => e.Class04)
                .HasMaxLength(30)
                .HasColumnName("Class_04");
            entity.Property(e => e.Class05)
                .HasMaxLength(30)
                .HasColumnName("Class_05");
            entity.Property(e => e.Class06)
                .HasMaxLength(30)
                .HasColumnName("Class_06");
            entity.Property(e => e.Class07)
                .HasMaxLength(30)
                .HasColumnName("Class_07");
            entity.Property(e => e.Class08)
                .HasMaxLength(30)
                .HasColumnName("Class_08");
            entity.Property(e => e.Class09)
                .HasMaxLength(30)
                .HasColumnName("Class_09");
            entity.Property(e => e.CompanyNumber).HasMaxLength(60);
            entity.Property(e => e.CompanyPath).HasMaxLength(128);
            entity.Property(e => e.ConnNoEmpAtArbo).HasMaxLength(70);
            entity.Property(e => e.Contact1PeopleId).HasColumnName("Contact1PeopleID");
            entity.Property(e => e.Contact2PeopleId).HasColumnName("Contact2PeopleID");
            entity.Property(e => e.Contact3PeopleId).HasColumnName("Contact3PeopleID");
            entity.Property(e => e.ConvOrg).HasColumnName("conv_org");
            entity.Property(e => e.ConvSuc)
                .HasDefaultValue((byte)1)
                .HasColumnName("conv_suc");
            entity.Property(e => e.CorrAdr2)
                .HasMaxLength(30)
                .HasColumnName("corr_adr2");
            entity.Property(e => e.CorrAdr3)
                .HasMaxLength(30)
                .HasColumnName("corr_adr3");
            entity.Property(e => e.CorrAdres)
                .HasMaxLength(30)
                .HasColumnName("corr_adres");
            entity.Property(e => e.CorrAdrnr)
                .HasMaxLength(10)
                .IsFixedLength()
                .HasColumnName("corr_adrnr");
            entity.Property(e => e.CorrLndcd)
                .HasMaxLength(3)
                .IsFixedLength()
                .HasColumnName("corr_lndcd");
            entity.Property(e => e.CorrPcode)
                .HasMaxLength(8)
                .IsFixedLength()
                .HasColumnName("corr_pcode");
            entity.Property(e => e.CorrWplts)
                .HasMaxLength(30)
                .HasColumnName("corr_wplts");
            entity.Property(e => e.CostcenterCode)
                .HasMaxLength(8)
                .IsFixedLength();
            entity.Property(e => e.Cpers)
                .HasMaxLength(30)
                .HasColumnName("cpers");
            entity.Property(e => e.Ctagl)
                .HasMaxLength(9)
                .IsFixedLength()
                .HasColumnName("CTAGL");
            entity.Property(e => e.CustomerPort).HasDefaultValue(true);
            entity.Property(e => e.DateEnd).HasColumnType("datetime");
            entity.Property(e => e.DateStart).HasColumnType("datetime");
            entity.Property(e => e.Dbengine0)
                .HasMaxLength(1)
                .IsFixedLength()
                .HasColumnName("dbengine_0");
            entity.Property(e => e.Dbengine1)
                .HasMaxLength(1)
                .IsFixedLength()
                .HasColumnName("dbengine_1");
            entity.Property(e => e.Dbengine2)
                .HasMaxLength(1)
                .IsFixedLength()
                .HasColumnName("dbengine_2");
            entity.Property(e => e.Dbengine3)
                .HasMaxLength(1)
                .IsFixedLength()
                .HasColumnName("dbengine_3");
            entity.Property(e => e.Dbengine4)
                .HasMaxLength(1)
                .IsFixedLength()
                .HasColumnName("dbengine_4");
            entity.Property(e => e.Dbengine5)
                .HasMaxLength(1)
                .IsFixedLength()
                .HasColumnName("dbengine_5");
            entity.Property(e => e.Dbengine6)
                .HasMaxLength(1)
                .IsFixedLength()
                .HasColumnName("dbengine_6");
            entity.Property(e => e.Dbengine7)
                .HasMaxLength(1)
                .IsFixedLength()
                .HasColumnName("dbengine_7");
            entity.Property(e => e.DelCat1Id)
                .HasMaxLength(10)
                .IsFixedLength()
                .HasColumnName("del_cat1_id");
            entity.Property(e => e.DelCat2Id)
                .HasMaxLength(10)
                .IsFixedLength()
                .HasColumnName("del_cat2_id");
            entity.Property(e => e.Esalaris)
                .HasDefaultValue((byte)2)
                .HasColumnName("ESalaris");
            entity.Property(e => e.Expiration).HasColumnType("datetime");
            entity.Property(e => e.FaktCode)
                .HasMaxLength(3)
                .IsFixedLength()
                .HasColumnName("fakt_code");
            entity.Property(e => e.Faxnr)
                .HasMaxLength(15)
                .HasColumnName("faxnr");
            entity.Property(e => e.Fiscnr)
                .HasMaxLength(9)
                .IsFixedLength()
                .HasColumnName("fiscnr");
            entity.Property(e => e.Fiscode)
                .HasMaxLength(30)
                .HasColumnName("fiscode");
            entity.Property(e => e.FreePerson)
                .HasMaxLength(40)
                .IsFixedLength();
            entity.Property(e => e.Guid).HasColumnName("guid");
            entity.Property(e => e.HrCompany)
                .HasMaxLength(3)
                .IsFixedLength()
                .HasColumnName("hr_company");
            entity.Property(e => e.HrcmpWwn).HasColumnName("hrcmp_wwn");
            entity.Property(e => e.IdentificationEmpAtArbo).HasMaxLength(40);
            entity.Property(e => e.IdentificationEmpAtUwv)
                .HasMaxLength(40)
                .HasColumnName("IdentificationEmpAtUWV");
            entity.Property(e => e.IdentificationReceiver).HasMaxLength(40);
            entity.Property(e => e.IdentificationSender).HasMaxLength(40);
            entity.Property(e => e.KvkNummer)
                .HasMaxLength(20)
                .HasColumnName("kvk_nummer");
            entity.Property(e => e.KvkWoonpl)
                .HasMaxLength(30)
                .HasColumnName("kvk_woonpl");
            entity.Property(e => e.Landcode)
                .HasMaxLength(3)
                .IsFixedLength()
                .HasColumnName("landcode");
            entity.Property(e => e.LastImportDate).HasColumnType("datetime");
            entity.Property(e => e.LastImportTransactionCode).HasMaxLength(30);
            entity.Property(e => e.LastReplicationDate).HasColumnType("datetime");
            entity.Property(e => e.LbNummer)
                .HasMaxLength(20)
                .HasColumnName("lb_nummer");
            entity.Property(e => e.MailBoxOption).HasDefaultValue(0);
            entity.Property(e => e.MailBoxServer).HasMaxLength(100);
            entity.Property(e => e.Mailbox)
                .HasMaxLength(10)
                .IsFixedLength()
                .HasColumnName("mailbox");
            entity.Property(e => e.MaintCrmbackOffice).HasColumnName("MaintCRMBackOffice");
            entity.Property(e => e.ParCompany)
                .HasMaxLength(3)
                .IsFixedLength()
                .HasColumnName("par_company");
            entity.Property(e => e.PresentationCurrency)
                .HasMaxLength(3)
                .IsFixedLength();
            entity.Property(e => e.Pstbanknr)
                .HasMaxLength(34)
                .HasColumnName("pstbanknr");
            entity.Property(e => e.Pstcd)
                .HasMaxLength(8)
                .IsFixedLength()
                .HasColumnName("pstcd");
            entity.Property(e => e.Region)
                .HasMaxLength(6)
                .IsFixedLength()
                .HasColumnName("region");
            entity.Property(e => e.ResellerPort).HasDefaultValue(true);
            entity.Property(e => e.SecurityLevel).HasDefaultValue(10);
            entity.Property(e => e.Sqlpassword)
                .HasMaxLength(128)
                .HasColumnName("SQLPassword");
            entity.Property(e => e.Sqluser)
                .HasMaxLength(128)
                .HasColumnName("SQLUser");
            entity.Property(e => e.StartDate)
                .HasColumnType("datetime")
                .HasColumnName("start_date");
            entity.Property(e => e.Status)
                .HasMaxLength(1)
                .IsFixedLength()
                .HasColumnName("status");
            entity.Property(e => e.Syscreated)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("syscreated");
            entity.Property(e => e.Syscreator).HasColumnName("syscreator");
            entity.Property(e => e.Sysguid)
                .HasDefaultValueSql("(newid())")
                .HasColumnName("sysguid");
            entity.Property(e => e.Sysmodified)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("sysmodified");
            entity.Property(e => e.Sysmodifier).HasColumnName("sysmodifier");
            entity.Property(e => e.Telex)
                .HasMaxLength(10)
                .IsFixedLength()
                .HasColumnName("telex");
            entity.Property(e => e.Telnr)
                .HasMaxLength(15)
                .HasColumnName("telnr");
            entity.Property(e => e.Timestamp)
                .IsRowVersion()
                .IsConcurrencyToken()
                .HasColumnName("timestamp");
            entity.Property(e => e.Url)
                .HasMaxLength(128)
                .HasColumnName("URL");
            entity.Property(e => e.Valcode)
                .HasMaxLength(3)
                .IsFixedLength()
                .HasColumnName("valcode");
            entity.Property(e => e.Website)
                .HasMaxLength(128)
                .HasColumnName("website");
            entity.Property(e => e.Woonpl)
                .HasMaxLength(30)
                .HasColumnName("woonpl");
            entity.Property(e => e.Xinterface)
                .HasMaxLength(6)
                .IsFixedLength()
                .HasColumnName("xinterface");
        });

        modelBuilder.Entity<Betcd>(entity =>
        {
            entity.HasKey(e => e.Id).IsClustered(false);

            entity.ToTable("betcd");

            entity.HasIndex(e => e.Betcond, "betcd")
                .IsUnique()
                .IsClustered();

            entity.Property(e => e.Id).HasColumnName("ID");
            entity.Property(e => e.Betcond)
                .HasMaxLength(2)
                .IsFixedLength()
                .HasColumnName("betcond");
            entity.Property(e => e.BrutNetF)
                .HasMaxLength(1)
                .IsFixedLength()
                .HasColumnName("brut_net_f");
            entity.Property(e => e.BrutNetP)
                .HasMaxLength(1)
                .IsFixedLength()
                .HasColumnName("brut_net_p");
            entity.Property(e => e.Dagvmnd).HasColumnName("dagvmnd");
            entity.Property(e => e.IntPerc).HasColumnName("int_perc");
            entity.Property(e => e.Kbdagen).HasColumnName("kbdagen");
            entity.Property(e => e.Kbdagen2).HasColumnName("kbdagen2");
            entity.Property(e => e.Kredbep)
                .HasMaxLength(1)
                .IsFixedLength()
                .HasColumnName("kredbep");
            entity.Property(e => e.Maanden).HasColumnName("maanden");
            entity.Property(e => e.Oms300)
                .HasMaxLength(30)
                .HasColumnName("oms30_0");
            entity.Property(e => e.Oms301)
                .HasMaxLength(30)
                .HasColumnName("oms30_1");
            entity.Property(e => e.Oms302)
                .HasMaxLength(30)
                .HasColumnName("oms30_2");
            entity.Property(e => e.Oms303)
                .HasMaxLength(30)
                .HasColumnName("oms30_3");
            entity.Property(e => e.Oms304)
                .HasMaxLength(30)
                .HasColumnName("oms30_4");
            entity.Property(e => e.Percentag).HasColumnName("percentag");
            entity.Property(e => e.Percentag2).HasColumnName("percentag2");
            entity.Property(e => e.Syscreated)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("syscreated");
            entity.Property(e => e.Syscreator).HasColumnName("syscreator");
            entity.Property(e => e.Sysguid)
                .HasDefaultValueSql("(newid())")
                .HasColumnName("sysguid");
            entity.Property(e => e.Sysmodified)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("sysmodified");
            entity.Property(e => e.Sysmodifier).HasColumnName("sysmodifier");
            entity.Property(e => e.Termijn).HasColumnName("termijn");
            entity.Property(e => e.Termijn1).HasColumnName("termijn1");
            entity.Property(e => e.Termijn2).HasColumnName("termijn2");
            entity.Property(e => e.Termijn3).HasColumnName("termijn3");
            entity.Property(e => e.Termijn4).HasColumnName("termijn4");
            entity.Property(e => e.Termijn5).HasColumnName("termijn5");
            entity.Property(e => e.Termijnen).HasColumnName("termijnen");
            entity.Property(e => e.Timestamp)
                .IsRowVersion()
                .IsConcurrencyToken()
                .HasColumnName("timestamp");
            entity.Property(e => e.TypeVerv)
                .HasMaxLength(1)
                .IsFixedLength()
                .HasColumnName("type_verv");
            entity.Property(e => e.TypeVerv1)
                .HasMaxLength(1)
                .IsFixedLength()
                .HasColumnName("type_verv1");
            entity.Property(e => e.TypeVerv2)
                .HasMaxLength(1)
                .IsFixedLength()
                .HasColumnName("type_verv2");
            entity.Property(e => e.TypeVerv3)
                .HasMaxLength(1)
                .IsFixedLength()
                .HasColumnName("type_verv3");
            entity.Property(e => e.TypeVerv4)
                .HasMaxLength(1)
                .IsFixedLength()
                .HasColumnName("type_verv4");
            entity.Property(e => e.TypeVerv5)
                .HasMaxLength(1)
                .IsFixedLength()
                .HasColumnName("type_verv5");
        });

        modelBuilder.Entity<BinaryIncomingChunk>(entity =>
        {
            entity.HasKey(e => new { e.MessageId, e.Sequence });

            entity.Property(e => e.MessageId).HasColumnName("MessageID");
            entity.Property(e => e.CreatedDate)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime");
        });

        modelBuilder.Entity<BinaryIncomingChunks2>(entity =>
        {
            entity.HasKey(e => new { e.MessageId, e.Sequence });

            entity.ToTable("BinaryIncomingChunks2");

            entity.Property(e => e.MessageId).HasColumnName("MessageID");
            entity.Property(e => e.CreatedDate)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime");
        });

        modelBuilder.Entity<BinaryIncomingChunks3>(entity =>
        {
            entity.HasKey(e => new { e.MessageId, e.Sequence });

            entity.ToTable("BinaryIncomingChunks3");

            entity.Property(e => e.MessageId).HasColumnName("MessageID");
            entity.Property(e => e.CreatedDate)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime");
        });

        modelBuilder.Entity<BinaryIncomingMessage>(entity =>
        {
            entity.HasKey(e => e.MessageId);

            entity.Property(e => e.MessageId)
                .HasDefaultValueSql("(newid())")
                .HasColumnName("MessageID");
            entity.Property(e => e.CreatedDate)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime");
            entity.Property(e => e.Id)
                .ValueGeneratedOnAdd()
                .HasColumnName("ID");
        });

        modelBuilder.Entity<BinaryIncomingMessages2>(entity =>
        {
            entity.HasKey(e => e.MessageId);

            entity.ToTable("BinaryIncomingMessages2");

            entity.Property(e => e.MessageId)
                .HasDefaultValueSql("(newid())")
                .HasColumnName("MessageID");
            entity.Property(e => e.CreatedDate)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime");
            entity.Property(e => e.Id)
                .ValueGeneratedOnAdd()
                .HasColumnName("ID");
        });

        modelBuilder.Entity<BinaryIncomingMessages3>(entity =>
        {
            entity.HasKey(e => e.MessageId);

            entity.ToTable("BinaryIncomingMessages3");

            entity.Property(e => e.MessageId)
                .HasDefaultValueSql("(newid())")
                .HasColumnName("MessageID");
            entity.Property(e => e.CreatedDate)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime");
            entity.Property(e => e.Id)
                .ValueGeneratedOnAdd()
                .HasColumnName("ID");
        });

        modelBuilder.Entity<BinaryOutgoingChunk>(entity =>
        {
            entity.HasKey(e => new { e.MessageId, e.Sequence });

            entity.Property(e => e.MessageId).HasColumnName("MessageID");
            entity.Property(e => e.CreatedDate)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime");
        });

        modelBuilder.Entity<BinaryOutgoingChunks2>(entity =>
        {
            entity.HasKey(e => new { e.MessageId, e.Sequence });

            entity.ToTable("BinaryOutgoingChunks2");

            entity.Property(e => e.MessageId).HasColumnName("MessageID");
            entity.Property(e => e.CreatedDate)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime");
        });

        modelBuilder.Entity<BinaryOutgoingChunks3>(entity =>
        {
            entity.HasKey(e => new { e.MessageId, e.Sequence });

            entity.ToTable("BinaryOutgoingChunks3");

            entity.Property(e => e.MessageId).HasColumnName("MessageID");
            entity.Property(e => e.CreatedDate)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime");
        });

        modelBuilder.Entity<BinaryOutgoingMessage>(entity =>
        {
            entity.HasKey(e => e.MessageId);

            entity.Property(e => e.MessageId)
                .HasDefaultValueSql("(newid())")
                .HasColumnName("MessageID");
            entity.Property(e => e.CreatedDate)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime");
            entity.Property(e => e.Id)
                .ValueGeneratedOnAdd()
                .HasColumnName("ID");
        });

        modelBuilder.Entity<BinaryOutgoingMessages2>(entity =>
        {
            entity.HasKey(e => e.MessageId);

            entity.ToTable("BinaryOutgoingMessages2");

            entity.Property(e => e.MessageId)
                .HasDefaultValueSql("(newid())")
                .HasColumnName("MessageID");
            entity.Property(e => e.CreatedDate)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime");
            entity.Property(e => e.Id)
                .ValueGeneratedOnAdd()
                .HasColumnName("ID");
        });

        modelBuilder.Entity<BinaryOutgoingMessages3>(entity =>
        {
            entity.HasKey(e => e.MessageId);

            entity.ToTable("BinaryOutgoingMessages3");

            entity.Property(e => e.MessageId)
                .HasDefaultValueSql("(newid())")
                .HasColumnName("MessageID");
            entity.Property(e => e.CreatedDate)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime");
            entity.Property(e => e.Id)
                .ValueGeneratedOnAdd()
                .HasColumnName("ID");
        });

        modelBuilder.Entity<Blob>(entity =>
        {
            entity.HasKey(e => e.BlobKey);

            entity.ToTable("blobs");

            entity.Property(e => e.BlobKey).HasMaxLength(50);
            entity.Property(e => e.Created)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime");
            entity.Property(e => e.Description).HasMaxLength(50);
            entity.Property(e => e.Timestamp)
                .IsRowVersion()
                .IsConcurrencyToken()
                .HasColumnName("timestamp");
        });

        modelBuilder.Entity<Bnkacc>(entity =>
        {
            entity.HasKey(e => e.Id).IsClustered(false);

            entity.ToTable("bnkacc");

            entity.HasIndex(e => e.Banknr, "bnkacc")
                .IsUnique()
                .IsClustered();

            entity.HasIndex(e => new { e.Accncd, e.Bnkaccmsk, e.Id }, "bnkcod").IsUnique();

            entity.HasIndex(e => e.AccountId, "ix_Account");

            entity.Property(e => e.Id).HasColumnName("ID");
            entity.Property(e => e.Accncd)
                .HasMaxLength(3)
                .IsFixedLength()
                .HasColumnName("accncd");
            entity.Property(e => e.AccountId).HasColumnName("AccountID");
            entity.Property(e => e.Adres1)
                .HasMaxLength(30)
                .HasColumnName("adres1");
            entity.Property(e => e.Adres2)
                .HasMaxLength(30)
                .HasColumnName("adres2");
            entity.Property(e => e.Adres3)
                .HasMaxLength(30)
                .HasColumnName("adres3");
            entity.Property(e => e.BankRek)
                .HasMaxLength(34)
                .HasColumnName("bank_rek");
            entity.Property(e => e.Bankcode)
                .HasMaxLength(8)
                .IsFixedLength()
                .HasColumnName("bankcode");
            entity.Property(e => e.Banknr)
                .HasMaxLength(34)
                .HasColumnName("banknr");
            entity.Property(e => e.Biccode)
                .HasMaxLength(30)
                .HasColumnName("BICCode");
            entity.Property(e => e.Bnkaccmsk)
                .HasMaxLength(50)
                .HasColumnName("bnkaccmsk");
            entity.Property(e => e.BranchName).HasMaxLength(30);
            entity.Property(e => e.Branchcode)
                .HasMaxLength(8)
                .IsFixedLength()
                .HasColumnName("branchcode");
            entity.Property(e => e.Cntpers1)
                .HasMaxLength(30)
                .HasColumnName("cntpers1");
            entity.Property(e => e.ContVeld)
                .HasMaxLength(50)
                .HasColumnName("cont_veld");
            entity.Property(e => e.CreditCardExpiryDate).HasColumnType("datetime");
            entity.Property(e => e.CreditCardName).HasMaxLength(50);
            entity.Property(e => e.CreditCardSecurityCode)
                .HasMaxLength(6)
                .IsFixedLength();
            entity.Property(e => e.CreditCardType)
                .HasMaxLength(1)
                .IsFixedLength();
            entity.Property(e => e.Faxnr)
                .HasMaxLength(15)
                .HasColumnName("faxnr");
            entity.Property(e => e.Functie1)
                .HasMaxLength(15)
                .HasColumnName("functie1");
            entity.Property(e => e.Iban)
                .HasMaxLength(68)
                .HasColumnName("IBAN");
            entity.Property(e => e.Landcode)
                .HasMaxLength(3)
                .IsFixedLength()
                .HasColumnName("landcode");
            entity.Property(e => e.Mv1)
                .HasMaxLength(1)
                .IsFixedLength()
                .HasColumnName("mv1");
            entity.Property(e => e.Naam)
                .HasMaxLength(30)
                .HasColumnName("naam");
            entity.Property(e => e.Natbnc)
                .HasMaxLength(15)
                .HasColumnName("natbnc");
            entity.Property(e => e.Postcode)
                .HasMaxLength(8)
                .IsFixedLength()
                .HasColumnName("postcode");
            entity.Property(e => e.Prdcode1)
                .HasMaxLength(4)
                .IsFixedLength()
                .HasColumnName("prdcode1");
            entity.Property(e => e.Pstbanknrb)
                .HasMaxLength(34)
                .HasColumnName("pstbanknrb");
            entity.Property(e => e.Swiftadres)
                .HasMaxLength(11)
                .HasColumnName("swiftadres");
            entity.Property(e => e.Syscreated)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("syscreated");
            entity.Property(e => e.Syscreator).HasColumnName("syscreator");
            entity.Property(e => e.Sysguid)
                .HasDefaultValueSql("(newid())")
                .HasColumnName("sysguid");
            entity.Property(e => e.Sysmodified)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("sysmodified");
            entity.Property(e => e.Sysmodifier).HasColumnName("sysmodifier");
            entity.Property(e => e.Telnr)
                .HasMaxLength(15)
                .HasColumnName("telnr");
            entity.Property(e => e.Telnrcp1)
                .HasMaxLength(15)
                .HasColumnName("telnrcp1");
            entity.Property(e => e.Timestamp)
                .IsRowVersion()
                .IsConcurrencyToken()
                .HasColumnName("timestamp");
            entity.Property(e => e.Valcode)
                .HasMaxLength(3)
                .IsFixedLength()
                .HasColumnName("valcode");
            entity.Property(e => e.Vrlttrs1)
                .HasMaxLength(10)
                .IsFixedLength()
                .HasColumnName("vrlttrs1");
            entity.Property(e => e.Woonpl)
                .HasMaxLength(30)
                .HasColumnName("woonpl");
        });

        modelBuilder.Entity<Bnkkop>(entity =>
        {
            entity.HasKey(e => e.Id).IsClustered(false);

            entity.ToTable("bnkkop");

            entity.HasIndex(e => new { e.CodeDc, e.Crdnr, e.Debnr, e.BankRek }, "bnkkdc").IsUnique();

            entity.HasIndex(e => new { e.BankRek, e.CodeDc, e.Crdnr, e.Debnr }, "bnkkop")
                .IsUnique()
                .IsClustered();

            entity.HasIndex(e => e.CntId, "ix_cnt_id");

            entity.HasIndex(e => e.Crdnr, "ix_crdnr");

            entity.HasIndex(e => e.Debnr, "ix_debnr");

            entity.Property(e => e.Id).HasColumnName("ID");
            entity.Property(e => e.BankRek)
                .HasMaxLength(34)
                .HasColumnName("bank_rek");
            entity.Property(e => e.CntId).HasColumnName("cnt_id");
            entity.Property(e => e.CodeDc)
                .HasMaxLength(1)
                .IsFixedLength()
                .HasColumnName("code_dc");
            entity.Property(e => e.Crdnr)
                .HasMaxLength(6)
                .IsFixedLength()
                .HasColumnName("crdnr");
            entity.Property(e => e.Debnr)
                .HasMaxLength(6)
                .IsFixedLength()
                .HasColumnName("debnr");
            entity.Property(e => e.Syscreated)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("syscreated");
            entity.Property(e => e.Syscreator).HasColumnName("syscreator");
            entity.Property(e => e.Sysguid)
                .HasDefaultValueSql("(newid())")
                .HasColumnName("sysguid");
            entity.Property(e => e.Sysmodified)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("sysmodified");
            entity.Property(e => e.Sysmodifier).HasColumnName("sysmodifier");
            entity.Property(e => e.Timestamp)
                .IsRowVersion()
                .IsConcurrencyToken()
                .HasColumnName("timestamp");
        });

        modelBuilder.Entity<Btwavk>(entity =>
        {
            entity.HasKey(e => e.Id).IsClustered(false);

            entity.ToTable("btwavk");

            entity.HasIndex(e => new { e.LandIso, e.AangVak, e.Id }, "btwaan").IsUnique();

            entity.HasIndex(e => new { e.LandIso, e.Vak, e.Soort }, "btwavk")
                .IsUnique()
                .IsClustered();

            entity.Property(e => e.Id).HasColumnName("ID");
            entity.Property(e => e.AangVak)
                .HasMaxLength(2)
                .IsFixedLength()
                .HasColumnName("aang_vak");
            entity.Property(e => e.BtwnafNj).HasColumnName("btwnaf_nj");
            entity.Property(e => e.ContrTot).HasColumnName("contr_tot");
            entity.Property(e => e.LandIso)
                .HasMaxLength(3)
                .IsFixedLength()
                .HasColumnName("land_iso");
            entity.Property(e => e.Oms40)
                .HasMaxLength(50)
                .HasColumnName("oms40");
            entity.Property(e => e.Opvragen).HasColumnName("opvragen");
            entity.Property(e => e.Soort)
                .HasMaxLength(1)
                .IsFixedLength()
                .HasColumnName("soort");
            entity.Property(e => e.Syscreated)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("syscreated");
            entity.Property(e => e.Syscreator).HasColumnName("syscreator");
            entity.Property(e => e.Sysguid)
                .HasDefaultValueSql("(newid())")
                .HasColumnName("sysguid");
            entity.Property(e => e.Sysmodified)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("sysmodified");
            entity.Property(e => e.Sysmodifier).HasColumnName("sysmodifier");
            entity.Property(e => e.Timestamp)
                .IsRowVersion()
                .IsConcurrencyToken()
                .HasColumnName("timestamp");
            entity.Property(e => e.TypeRek)
                .HasMaxLength(1)
                .IsFixedLength()
                .HasColumnName("type_rek");
            entity.Property(e => e.Vak)
                .HasMaxLength(3)
                .IsFixedLength()
                .HasColumnName("vak");
        });

        modelBuilder.Entity<Btwkpl>(entity =>
        {
            entity.HasKey(e => e.Id).IsClustered(false);

            entity.ToTable("btwkpl");

            entity.HasIndex(e => new { e.Btwtrans, e.LandIso, e.Vak, e.SoortVak }, "btkpvk").IsUnique();

            entity.HasIndex(e => new { e.LandIso, e.Vak, e.SoortVak, e.Btwtrans }, "btwkpl")
                .IsUnique()
                .IsClustered();

            entity.Property(e => e.Id).HasColumnName("ID");
            entity.Property(e => e.Btwtrans)
                .HasMaxLength(3)
                .IsFixedLength()
                .HasColumnName("btwtrans");
            entity.Property(e => e.LandIso)
                .HasMaxLength(3)
                .IsFixedLength()
                .HasColumnName("land_iso");
            entity.Property(e => e.Posneg)
                .HasMaxLength(1)
                .IsFixedLength()
                .HasColumnName("posneg");
            entity.Property(e => e.SoortVak)
                .HasMaxLength(1)
                .IsFixedLength()
                .HasColumnName("soort_vak");
            entity.Property(e => e.Syscreated)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("syscreated");
            entity.Property(e => e.Syscreator).HasColumnName("syscreator");
            entity.Property(e => e.Sysguid)
                .HasDefaultValueSql("(newid())")
                .HasColumnName("sysguid");
            entity.Property(e => e.Sysmodified)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("sysmodified");
            entity.Property(e => e.Sysmodifier).HasColumnName("sysmodifier");
            entity.Property(e => e.Timestamp)
                .IsRowVersion()
                .IsConcurrencyToken()
                .HasColumnName("timestamp");
            entity.Property(e => e.Vak)
                .HasMaxLength(3)
                .IsFixedLength()
                .HasColumnName("vak");
        });

        modelBuilder.Entity<Btwkpp>(entity =>
        {
            entity.HasKey(e => e.Id).IsClustered(false);

            entity.ToTable("btwkpp");

            entity.HasIndex(e => new { e.LandIso, e.Vak, e.SoortVak, e.Totvak }, "btppvk").IsUnique();

            entity.HasIndex(e => new { e.LandIso, e.Totvak, e.Vak, e.SoortVak }, "btwkpp")
                .IsUnique()
                .IsClustered();

            entity.Property(e => e.Id).HasColumnName("ID");
            entity.Property(e => e.LandIso)
                .HasMaxLength(3)
                .IsFixedLength()
                .HasColumnName("land_iso");
            entity.Property(e => e.Posneg)
                .HasMaxLength(1)
                .IsFixedLength()
                .HasColumnName("posneg");
            entity.Property(e => e.SoortVak)
                .HasMaxLength(1)
                .IsFixedLength()
                .HasColumnName("soort_vak");
            entity.Property(e => e.Syscreated)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("syscreated");
            entity.Property(e => e.Syscreator).HasColumnName("syscreator");
            entity.Property(e => e.Sysguid)
                .HasDefaultValueSql("(newid())")
                .HasColumnName("sysguid");
            entity.Property(e => e.Sysmodified)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("sysmodified");
            entity.Property(e => e.Sysmodifier).HasColumnName("sysmodifier");
            entity.Property(e => e.Timestamp)
                .IsRowVersion()
                .IsConcurrencyToken()
                .HasColumnName("timestamp");
            entity.Property(e => e.Totvak)
                .HasMaxLength(3)
                .IsFixedLength()
                .HasColumnName("totvak");
            entity.Property(e => e.Vak)
                .HasMaxLength(3)
                .IsFixedLength()
                .HasColumnName("vak");
        });

        modelBuilder.Entity<Btwtr>(entity =>
        {
            entity.HasKey(e => e.Id).IsClustered(false);

            entity.ToTable("btwtrs");

            entity.HasIndex(e => new { e.CodeIv, e.Id }, "btinvr").IsUnique();

            entity.HasIndex(e => new { e.Reknr, e.Id }, "btwink").IsUnique();

            entity.HasIndex(e => new { e.CompanyCode, e.Btwtrans }, "btwtrs")
                .IsUnique()
                .IsClustered();

            entity.HasIndex(e => new { e.RekBtwVk, e.Id }, "btwvrk").IsUnique();

            entity.HasIndex(e => new { e.Creditor, e.CompanyCode }, "ix_creditor_company");

            entity.Property(e => e.Id).HasColumnName("ID");
            entity.Property(e => e.AccInvtax)
                .HasMaxLength(9)
                .IsFixedLength()
                .HasColumnName("acc_invtax");
            entity.Property(e => e.AccInvtcr)
                .HasMaxLength(9)
                .IsFixedLength()
                .HasColumnName("acc_invtcr");
            entity.Property(e => e.AccInvtdb)
                .HasMaxLength(9)
                .IsFixedLength()
                .HasColumnName("acc_invtdb");
            entity.Property(e => e.AutofatturaCode)
                .HasMaxLength(3)
                .IsFixedLength();
            entity.Property(e => e.BtwReg)
                .HasDefaultValue((byte)1)
                .HasColumnName("btw_reg");
            entity.Property(e => e.BtwVrij).HasColumnName("btw_vrij");
            entity.Property(e => e.BtwVt)
                .HasDefaultValue((byte)1)
                .HasColumnName("btw_vt");
            entity.Property(e => e.Btwlist)
                .HasMaxLength(1)
                .IsFixedLength()
                .HasColumnName("btwlist");
            entity.Property(e => e.Btwoms)
                .HasMaxLength(16)
                .HasColumnName("btwoms");
            entity.Property(e => e.Btwper).HasColumnName("btwper");
            entity.Property(e => e.Btwtrans)
                .HasMaxLength(3)
                .IsFixedLength()
                .HasColumnName("btwtrans");
            entity.Property(e => e.Calculationbasis)
                .HasMaxLength(1)
                .HasDefaultValue("N")
                .IsFixedLength()
                .HasColumnName("calculationbasis");
            entity.Property(e => e.CodeIv)
                .HasMaxLength(1)
                .IsFixedLength()
                .HasColumnName("code_iv");
            entity.Property(e => e.CompanyCode)
                .HasMaxLength(3)
                .IsFixedLength();
            entity.Property(e => e.CredBtwcd)
                .HasMaxLength(3)
                .IsFixedLength()
                .HasColumnName("cred_btwcd");
            entity.Property(e => e.Creditor)
                .HasMaxLength(6)
                .IsFixedLength()
                .HasColumnName("creditor");
            entity.Property(e => e.Crednota)
                .HasMaxLength(1)
                .IsFixedLength()
                .HasColumnName("crednota");
            entity.Property(e => e.Exclus)
                .HasMaxLength(1)
                .IsFixedLength()
                .HasColumnName("exclus");
            entity.Property(e => e.InvestPer).HasColumnName("invest_per");
            entity.Property(e => e.Landcode)
                .HasMaxLength(3)
                .IsFixedLength()
                .HasColumnName("landcode");
            entity.Property(e => e.LevyPer).HasColumnName("levy_per");
            entity.Property(e => e.NonDeductibleAccount)
                .HasMaxLength(9)
                .IsFixedLength();
            entity.Property(e => e.Oms300)
                .HasMaxLength(30)
                .HasColumnName("oms30_0");
            entity.Property(e => e.Oms301)
                .HasMaxLength(30)
                .HasColumnName("oms30_1");
            entity.Property(e => e.Oms302)
                .HasMaxLength(30)
                .HasColumnName("oms30_2");
            entity.Property(e => e.Oms303)
                .HasMaxLength(30)
                .HasColumnName("oms30_3");
            entity.Property(e => e.Oms304)
                .HasMaxLength(30)
                .HasColumnName("oms30_4");
            entity.Property(e => e.PayPeriod)
                .HasMaxLength(1)
                .IsFixedLength()
                .HasColumnName("pay_period");
            entity.Property(e => e.PurchaseType)
                .HasMaxLength(1)
                .HasDefaultValue("N")
                .IsFixedLength();
            entity.Property(e => e.RekBtwVk)
                .HasMaxLength(9)
                .IsFixedLength()
                .HasColumnName("rek_btw_vk");
            entity.Property(e => e.Reknr)
                .HasMaxLength(9)
                .IsFixedLength()
                .HasColumnName("reknr");
            entity.Property(e => e.Rent).HasMaxLength(1);
            entity.Property(e => e.Syscreated)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("syscreated");
            entity.Property(e => e.Syscreator).HasColumnName("syscreator");
            entity.Property(e => e.Sysguid)
                .HasDefaultValueSql("(newid())")
                .HasColumnName("sysguid");
            entity.Property(e => e.Sysmodified)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("sysmodified");
            entity.Property(e => e.Sysmodifier).HasColumnName("sysmodifier");
            entity.Property(e => e.Taxkey).HasMaxLength(3);
            entity.Property(e => e.Taxsubkey).HasMaxLength(3);
            entity.Property(e => e.Taxtype)
                .HasMaxLength(1)
                .HasDefaultValue("V")
                .IsFixedLength()
                .HasColumnName("taxtype");
            entity.Property(e => e.Tegreknr)
                .HasMaxLength(9)
                .IsFixedLength()
                .HasColumnName("tegreknr");
            entity.Property(e => e.Timestamp)
                .IsRowVersion()
                .IsConcurrencyToken()
                .HasColumnName("timestamp");
            entity.Property(e => e.VattoBeClaimed)
                .HasMaxLength(9)
                .IsFixedLength()
                .HasColumnName("VATToBeClaimed");
            entity.Property(e => e.Verlegdbtw).HasColumnName("verlegdbtw");
        });

        modelBuilder.Entity<Btwvrt>(entity =>
        {
            entity.HasKey(e => e.Id).IsClustered(false);

            entity.ToTable("btwvrt");

            entity.HasIndex(e => e.Btwvrtnr, "btwvrt")
                .IsUnique()
                .IsClustered();

            entity.Property(e => e.Id).HasColumnName("ID");
            entity.Property(e => e.Adres1)
                .HasMaxLength(30)
                .HasColumnName("adres1");
            entity.Property(e => e.Adres2)
                .HasMaxLength(30)
                .HasColumnName("adres2");
            entity.Property(e => e.Adres3)
                .HasMaxLength(30)
                .HasColumnName("adres3");
            entity.Property(e => e.BtwNummer)
                .HasMaxLength(20)
                .HasColumnName("btw_nummer");
            entity.Property(e => e.Btwvrtnr)
                .HasMaxLength(2)
                .IsFixedLength()
                .HasColumnName("btwvrtnr");
            entity.Property(e => e.Cpers)
                .HasMaxLength(30)
                .HasColumnName("cpers");
            entity.Property(e => e.Faxnr)
                .HasMaxLength(15)
                .HasColumnName("faxnr");
            entity.Property(e => e.Landcode)
                .HasMaxLength(3)
                .IsFixedLength()
                .HasColumnName("landcode");
            entity.Property(e => e.Naam)
                .HasMaxLength(30)
                .HasColumnName("naam");
            entity.Property(e => e.Postcode)
                .HasMaxLength(8)
                .IsFixedLength()
                .HasColumnName("postcode");
            entity.Property(e => e.Syscreated)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("syscreated");
            entity.Property(e => e.Syscreator).HasColumnName("syscreator");
            entity.Property(e => e.Sysguid)
                .HasDefaultValueSql("(newid())")
                .HasColumnName("sysguid");
            entity.Property(e => e.Sysmodified)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("sysmodified");
            entity.Property(e => e.Sysmodifier).HasColumnName("sysmodifier");
            entity.Property(e => e.Telefoon)
                .HasMaxLength(15)
                .HasColumnName("telefoon");
            entity.Property(e => e.Timestamp)
                .IsRowVersion()
                .IsConcurrencyToken()
                .HasColumnName("timestamp");
            entity.Property(e => e.Woonpl)
                .HasMaxLength(30)
                .HasColumnName("woonpl");
        });

        modelBuilder.Entity<Budget>(entity =>
        {
            entity.HasKey(e => e.BudgetId).IsClustered(false);

            entity.HasIndex(e => new { e.ScenarioCode, e.CompanyCode, e.CompanyAccountCode, e.FinYear }, "IX_Budgets").IsClustered();

            entity.Property(e => e.BudgetId)
                .ValueGeneratedNever()
                .HasColumnName("BudgetID");
            entity.Property(e => e.AmountAc).HasColumnName("AmountAC");
            entity.Property(e => e.CompanyAccountCategory).HasMaxLength(30);
            entity.Property(e => e.CompanyAccountCode)
                .HasMaxLength(9)
                .IsFixedLength();
            entity.Property(e => e.CompanyCode)
                .HasMaxLength(6)
                .IsFixedLength();
            entity.Property(e => e.CompanyCostcenterCode).HasMaxLength(10);
            entity.Property(e => e.CompanyCostunitCode).HasMaxLength(10);
            entity.Property(e => e.CurrencyAliasAc)
                .HasMaxLength(3)
                .IsFixedLength()
                .HasColumnName("CurrencyAliasAC");
            entity.Property(e => e.CurrencyCode)
                .HasMaxLength(3)
                .IsFixedLength();
            entity.Property(e => e.ItemCode).HasMaxLength(30);
            entity.Property(e => e.Rate).HasDefaultValue(1.0);
            entity.Property(e => e.ScenarioCode).HasMaxLength(30);
            entity.Property(e => e.Timestamp)
                .IsRowVersion()
                .IsConcurrencyToken()
                .HasColumnName("timestamp");
        });

        modelBuilder.Entity<CardSetting>(entity =>
        {
            entity.HasIndex(e => e.Sysguid, "IX_CardSettings_sysguid");

            entity.HasIndex(e => new { e.Module, e.ApplicationId, e.SettingType, e.Type, e.ResourceId, e.Parameter0, e.Parameter1, e.Parameter2 }, "LayoutType");

            entity.Property(e => e.Id).HasColumnName("ID");
            entity.Property(e => e.ApplicationId).HasColumnName("ApplicationID");
            entity.Property(e => e.Module)
                .HasMaxLength(3)
                .IsFixedLength();
            entity.Property(e => e.Parameter0)
                .HasMaxLength(30)
                .HasColumnName("Parameter_0");
            entity.Property(e => e.Parameter1)
                .HasMaxLength(30)
                .HasColumnName("Parameter_1");
            entity.Property(e => e.Parameter2)
                .HasMaxLength(30)
                .HasColumnName("Parameter_2");
            entity.Property(e => e.ResourceId).HasColumnName("ResourceID");
            entity.Property(e => e.Syscreated)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("syscreated");
            entity.Property(e => e.Syscreator).HasColumnName("syscreator");
            entity.Property(e => e.Sysguid)
                .HasDefaultValueSql("(newid())")
                .HasColumnName("sysguid");
            entity.Property(e => e.Sysmodified)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("sysmodified");
            entity.Property(e => e.Sysmodifier).HasColumnName("sysmodifier");
            entity.Property(e => e.Timestamp)
                .IsRowVersion()
                .IsConcurrencyToken()
                .HasColumnName("timestamp");
            entity.Property(e => e.Xmlvalue).HasColumnName("XMLValue");
        });

        modelBuilder.Entity<CiFreeField>(entity =>
        {
            entity.HasKey(e => e.Id).IsClustered(false);

            entity.ToTable("ciFreeFields");

            entity.HasIndex(e => new { e.TableName, e.ColumnName }, "FreeField");

            entity.HasIndex(e => new { e.TableName, e.BedrNr, e.ColumnName, e.TableId }, "XAK1ciFreeFields")
                .IsUnique()
                .IsClustered();

            entity.Property(e => e.Id)
                .HasDefaultValueSql("(newid())")
                .HasColumnName("ID");
            entity.Property(e => e.BedrNr)
                .HasMaxLength(3)
                .IsFixedLength();
            entity.Property(e => e.ColumnName).HasMaxLength(30);
            entity.Property(e => e.Description).HasMaxLength(128);
            entity.Property(e => e.Selection).HasMaxLength(1000);
            entity.Property(e => e.TableId).HasColumnName("TableID");
            entity.Property(e => e.TableName).HasMaxLength(30);
            entity.Property(e => e.TermId).HasColumnName("TermID");
        });

        modelBuilder.Entity<Cicmpy>(entity =>
        {
            entity.HasKey(e => e.Id).IsClustered(false);

            entity.ToTable("cicmpy");

            entity.HasIndex(e => e.CmpCode, "AccountCode").IsUnique();

            entity.HasIndex(e => new { e.CmpName, e.CmpType, e.CmpStatus }, "AccountName");

            entity.HasIndex(e => new { e.Syscreator, e.CmpType, e.CmpStatus }, "CreatedByStatus");

            entity.HasIndex(e => e.DivisionCreditorId, "DivisionCreditor");

            entity.HasIndex(e => e.DivisionDebtorId, "DivisionDebtor");

            entity.HasIndex(e => e.PersonId, "IX_Cicmpy_PersonID");

            entity.HasIndex(e => e.MigrateGp, "IX_migrateGP");

            entity.HasIndex(e => e.CmpFctry, "IXcountry_cicmpy");

            entity.HasIndex(e => new { e.CmpParent, e.CmpStatus, e.CmpType }, "Parent");

            entity.HasIndex(e => new { e.CmpReseller, e.CmpStatus, e.CmpType }, "Reseller");

            entity.HasIndex(e => new { e.TypeSince, e.CmpType, e.Administration, e.CmpCode }, "TypeSinceAdminEx");

            entity.HasIndex(e => new { e.WebAccessSince, e.ProcessedByBackgroundJob }, "WebAccess");

            entity.HasIndex(e => new { e.Administration, e.CmpType, e.CmpStatus, e.CmpCode, e.CmpName }, "admin_type_status_since");

            entity.HasIndex(e => e.CmpWwn, "cicmpy")
                .IsUnique()
                .IsClustered();

            entity.HasIndex(e => e.ClassificationId, "cicmpy_ClassificationID");

            entity.HasIndex(e => e.CmpFadd1, "cicmpy_cmp_fadd1");

            entity.HasIndex(e => e.CmpFpc, "cicmpy_cmp_fpc");

            entity.HasIndex(e => e.CmpOrigin, "cicmpy_cmp_origin");

            entity.HasIndex(e => e.Numberfield1, "cicmpy_numberfield1");

            entity.HasIndex(e => new { e.CmpType, e.CmpStatus, e.CmpRating, e.TypeSince }, "cicmpy_rating");

            entity.HasIndex(e => e.Textfield1, "cicmpy_textfield1");

            entity.HasIndex(e => e.Textfield2, "cicmpy_textfield2");

            entity.HasIndex(e => e.Textfield3, "cicmpy_textfield3");

            entity.HasIndex(e => e.Textfield4, "cicmpy_textfield4");

            entity.HasIndex(e => e.Textfield5, "cicmpy_textfield5");

            entity.HasIndex(e => new { e.CmpType, e.CmpName }, "cicmpy_type_name");

            entity.HasIndex(e => new { e.CmpType, e.SctCode, e.SizCode, e.CmpName }, "cicmpy_type_sector_size_name");

            entity.HasIndex(e => new { e.CmpFcity, e.CmpName, e.Id }, "cmpix8").IsUnique();

            entity.HasIndex(e => new { e.CmpTel, e.Id }, "cpix10").IsUnique();

            entity.HasIndex(e => new { e.CmpParent, e.CmpName, e.Id }, "cpix11").IsUnique();

            entity.HasIndex(e => new { e.CmpAccMan, e.CmpName, e.Id }, "cpix12").IsUnique();

            entity.HasIndex(e => new { e.CmpReseller, e.CmpName, e.Id }, "cpix17").IsUnique();

            entity.HasIndex(e => new { e.InvoiceDebtor, e.Administration }, "ix_InvoiceDebtor");

            entity.HasIndex(e => new { e.SecurityLevel, e.CmpType, e.CmpStatus }, "ix_SecurityLevel_TypeStatus");

            entity.HasIndex(e => e.VatNumber, "ix_VatNumber");

            entity.HasIndex(e => new { e.Crdcode, e.Crdnr, e.CmpName, e.CmpType, e.CmpStatus }, "ix_crdcode");

            entity.HasIndex(e => e.Crdnr, "ix_crdnr");

            entity.HasIndex(e => new { e.Debcode, e.Debnr, e.CmpName, e.CmpType, e.CmpStatus }, "ix_debcode");

            entity.HasIndex(e => e.Debnr, "ix_debnr");

            entity.HasIndex(e => e.DocumentId, "ix_documentid");

            entity.HasIndex(e => new { e.Timestamp, e.Administration, e.CmpType }, "ix_timestamp").IsDescending(true, false, false);

            entity.HasIndex(e => new { e.CmpType, e.CmpReseller, e.TypeSince }, "reseller_since");

            entity.Property(e => e.Id).HasColumnName("ID");
            entity.Property(e => e.AccountRating)
                .HasMaxLength(4)
                .IsFixedLength();
            entity.Property(e => e.AccountTypeCode)
                .HasMaxLength(5)
                .IsFixedLength();
            entity.Property(e => e.AddressNumber)
                .HasMaxLength(10)
                .IsFixedLength();
            entity.Property(e => e.Administration)
                .HasMaxLength(3)
                .HasDefaultValue("000")
                .IsFixedLength();
            entity.Property(e => e.Area).HasMaxLength(30);
            entity.Property(e => e.Aspdatabase)
                .HasMaxLength(30)
                .HasColumnName("ASPDatabase");
            entity.Property(e => e.Aspserver)
                .HasMaxLength(30)
                .HasColumnName("ASPServer");
            entity.Property(e => e.AspwebServer)
                .HasMaxLength(30)
                .HasColumnName("ASPWebServer");
            entity.Property(e => e.AspwebSite)
                .HasMaxLength(128)
                .HasColumnName("ASPWebSite");
            entity.Property(e => e.AutomaticPayment).HasDefaultValue((byte)1);
            entity.Property(e => e.Balance).HasColumnType("decimal(16, 2)");
            entity.Property(e => e.BankAccountNumber).HasMaxLength(34);
            entity.Property(e => e.BankNumber2).HasMaxLength(34);
            entity.Property(e => e.BoelimitAmount).HasColumnName("BOELimitAmount");
            entity.Property(e => e.BoemaxAmount).HasColumnName("BOEMaxAmount");
            entity.Property(e => e.Category)
                .HasMaxLength(2)
                .IsFixedLength();
            entity.Property(e => e.Category01)
                .HasMaxLength(30)
                .HasColumnName("Category_01");
            entity.Property(e => e.Category02)
                .HasMaxLength(30)
                .HasColumnName("Category_02");
            entity.Property(e => e.Category03)
                .HasMaxLength(30)
                .HasColumnName("Category_03");
            entity.Property(e => e.Category04)
                .HasMaxLength(30)
                .HasColumnName("Category_04");
            entity.Property(e => e.Category05)
                .HasMaxLength(30)
                .HasColumnName("Category_05");
            entity.Property(e => e.Category06)
                .HasMaxLength(30)
                .HasColumnName("Category_06");
            entity.Property(e => e.Category07)
                .HasMaxLength(30)
                .HasColumnName("Category_07");
            entity.Property(e => e.Category08)
                .HasMaxLength(30)
                .HasColumnName("Category_08");
            entity.Property(e => e.Category09)
                .HasMaxLength(30)
                .HasColumnName("Category_09");
            entity.Property(e => e.Category10)
                .HasMaxLength(30)
                .HasColumnName("Category_10");
            entity.Property(e => e.Category11)
                .HasMaxLength(30)
                .HasColumnName("Category_11");
            entity.Property(e => e.Category12)
                .HasMaxLength(30)
                .HasColumnName("Category_12");
            entity.Property(e => e.Category13)
                .HasMaxLength(30)
                .HasColumnName("Category_13");
            entity.Property(e => e.Category14)
                .HasMaxLength(30)
                .HasColumnName("Category_14");
            entity.Property(e => e.Category15)
                .HasMaxLength(30)
                .HasColumnName("Category_15");
            entity.Property(e => e.CentralizationAccount)
                .HasMaxLength(9)
                .IsFixedLength();
            entity.Property(e => e.ChamberOfCommerce).HasMaxLength(20);
            entity.Property(e => e.CheckDate).HasColumnType("datetime");
            entity.Property(e => e.CityOfLoadUnload)
                .HasMaxLength(10)
                .IsFixedLength();
            entity.Property(e => e.ClassificationId)
                .HasMaxLength(3)
                .IsFixedLength();
            entity.Property(e => e.CmpAccMan).HasColumnName("cmp_acc_man");
            entity.Property(e => e.CmpCode)
                .HasMaxLength(20)
                .HasColumnName("cmp_code");
            entity.Property(e => e.CmpDateCust)
                .HasColumnType("datetime")
                .HasColumnName("cmp_date_cust");
            entity.Property(e => e.CmpDirectory)
                .HasMaxLength(30)
                .HasColumnName("cmp_Directory");
            entity.Property(e => e.CmpEMail)
                .HasMaxLength(128)
                .HasColumnName("cmp_e_mail");
            entity.Property(e => e.CmpFadd1)
                .HasMaxLength(100)
                .UseCollation("SQL_Latin1_General_CP1_CI_AI")
                .HasColumnName("cmp_fadd1");
            entity.Property(e => e.CmpFadd2)
                .HasMaxLength(100)
                .UseCollation("SQL_Latin1_General_CP1_CI_AI")
                .HasColumnName("cmp_fadd2");
            entity.Property(e => e.CmpFadd3)
                .HasMaxLength(100)
                .UseCollation("SQL_Latin1_General_CP1_CI_AI")
                .HasColumnName("cmp_fadd3");
            entity.Property(e => e.CmpFax)
                .HasMaxLength(25)
                .HasColumnName("cmp_fax");
            entity.Property(e => e.CmpFcity)
                .HasMaxLength(100)
                .UseCollation("SQL_Latin1_General_CP1_CI_AI")
                .HasColumnName("cmp_fcity");
            entity.Property(e => e.CmpFcounty)
                .HasMaxLength(100)
                .UseCollation("SQL_Latin1_General_CP1_CI_AI")
                .HasColumnName("cmp_fcounty");
            entity.Property(e => e.CmpFctry)
                .HasMaxLength(3)
                .IsFixedLength()
                .HasColumnName("cmp_fctry");
            entity.Property(e => e.CmpFpc)
                .HasMaxLength(20)
                .UseCollation("SQL_Latin1_General_CP1_CI_AI")
                .HasColumnName("cmp_fpc");
            entity.Property(e => e.CmpName)
                .HasMaxLength(50)
                .UseCollation("SQL_Latin1_General_CP1_CI_AI")
                .HasColumnName("cmp_name");
            entity.Property(e => e.CmpNote)
                .UseCollation("SQL_Latin1_General_CP1_CI_AI")
                .HasColumnName("cmp_note");
            entity.Property(e => e.CmpOrigin)
                .HasMaxLength(3)
                .IsFixedLength()
                .HasColumnName("cmp_origin");
            entity.Property(e => e.CmpParent).HasColumnName("cmp_parent");
            entity.Property(e => e.CmpRating).HasColumnName("cmp_rating");
            entity.Property(e => e.CmpReseller).HasColumnName("cmp_reseller");
            entity.Property(e => e.CmpStatus)
                .HasMaxLength(1)
                .IsFixedLength()
                .HasColumnName("cmp_status");
            entity.Property(e => e.CmpTel)
                .HasMaxLength(25)
                .HasColumnName("cmp_tel");
            entity.Property(e => e.CmpType)
                .HasMaxLength(1)
                .IsFixedLength()
                .HasColumnName("cmp_type");
            entity.Property(e => e.CmpWeb)
                .HasMaxLength(128)
                .HasColumnName("cmp_web");
            entity.Property(e => e.CmpWwn)
                .HasDefaultValueSql("(newid())")
                .HasColumnName("cmp_wwn");
            entity.Property(e => e.CntId).HasColumnName("cnt_id");
            entity.Property(e => e.Collect)
                .HasMaxLength(1)
                .IsFixedLength();
            entity.Property(e => e.Comment1).HasMaxLength(30);
            entity.Property(e => e.Comment2).HasMaxLength(30);
            entity.Property(e => e.CommodityCode1)
                .HasMaxLength(4)
                .IsFixedLength();
            entity.Property(e => e.CommodityCode2)
                .HasMaxLength(4)
                .IsFixedLength();
            entity.Property(e => e.CommodityCode3)
                .HasMaxLength(4)
                .IsFixedLength();
            entity.Property(e => e.CommodityCode4)
                .HasMaxLength(4)
                .IsFixedLength();
            entity.Property(e => e.CommodityCode5)
                .HasMaxLength(4)
                .IsFixedLength();
            entity.Property(e => e.CostCenter)
                .HasMaxLength(8)
                .IsFixedLength();
            entity.Property(e => e.CountryOfAssembly)
                .HasMaxLength(3)
                .IsFixedLength();
            entity.Property(e => e.CountryOfOrigin)
                .HasMaxLength(3)
                .IsFixedLength();
            entity.Property(e => e.Crdcode)
                .HasMaxLength(20)
                .HasColumnName("crdcode");
            entity.Property(e => e.Crdnr)
                .HasMaxLength(6)
                .IsFixedLength()
                .HasColumnName("crdnr");
            entity.Property(e => e.CreditCard).HasMaxLength(34);
            entity.Property(e => e.CreditCardDescription).HasMaxLength(15);
            entity.Property(e => e.CreditCardHolder).HasMaxLength(40);
            entity.Property(e => e.CreditabilityScenario)
                .HasMaxLength(1)
                .IsFixedLength();
            entity.Property(e => e.CreditorType)
                .HasMaxLength(1)
                .IsFixedLength();
            entity.Property(e => e.Currency)
                .HasMaxLength(3)
                .IsFixedLength();
            entity.Property(e => e.CustomerCode)
                .HasMaxLength(10)
                .IsFixedLength();
            entity.Property(e => e.DateLastReminder).HasColumnType("datetime");
            entity.Property(e => e.Datefield1)
                .HasColumnType("datetime")
                .HasColumnName("datefield1");
            entity.Property(e => e.Datefield2)
                .HasColumnType("datetime")
                .HasColumnName("datefield2");
            entity.Property(e => e.Datefield3)
                .HasColumnType("datetime")
                .HasColumnName("datefield3");
            entity.Property(e => e.Datefield4)
                .HasColumnType("datetime")
                .HasColumnName("datefield4");
            entity.Property(e => e.Datefield5)
                .HasColumnType("datetime")
                .HasColumnName("datefield5");
            entity.Property(e => e.Debcode)
                .HasMaxLength(20)
                .HasColumnName("debcode");
            entity.Property(e => e.Debnr)
                .HasMaxLength(6)
                .IsFixedLength()
                .HasColumnName("debnr");
            entity.Property(e => e.DefaultPoform).HasColumnName("DefaultPOForm");
            entity.Property(e => e.DefaultSelCode)
                .HasMaxLength(2)
                .IsFixedLength();
            entity.Property(e => e.DeliveryAddress)
                .HasMaxLength(6)
                .IsFixedLength();
            entity.Property(e => e.DeliveryMethod)
                .HasMaxLength(5)
                .IsFixedLength();
            entity.Property(e => e.DeliveryTerms)
                .HasMaxLength(10)
                .IsFixedLength();
            entity.Property(e => e.DestinationCountry)
                .HasMaxLength(3)
                .IsFixedLength();
            entity.Property(e => e.DivisionCreditorId).HasColumnName("DivisionCreditorID");
            entity.Property(e => e.DivisionDebtorId).HasColumnName("DivisionDebtorID");
            entity.Property(e => e.DocumentId).HasColumnName("document_id");
            entity.Property(e => e.DunsNumber).HasMaxLength(9);
            entity.Property(e => e.ExemptNumber).HasMaxLength(20);
            entity.Property(e => e.ExpenseCode)
                .HasMaxLength(1)
                .IsFixedLength();
            entity.Property(e => e.ExpiryDate).HasColumnType("datetime");
            entity.Property(e => e.FedCategory)
                .HasMaxLength(4)
                .IsFixedLength();
            entity.Property(e => e.FedIdnumber)
                .HasMaxLength(9)
                .IsFixedLength()
                .HasColumnName("FedIDNumber");
            entity.Property(e => e.FedIdtype)
                .HasMaxLength(1)
                .IsFixedLength()
                .HasColumnName("FedIDType");
            entity.Property(e => e.FederalCategory)
                .HasMaxLength(1)
                .IsFixedLength();
            entity.Property(e => e.FederalIdnumber).HasColumnName("FederalIDNumber");
            entity.Property(e => e.FederalIdtype)
                .HasMaxLength(1)
                .IsFixedLength()
                .HasColumnName("FederalIDType");
            entity.Property(e => e.FiscalCode).HasMaxLength(30);
            entity.Property(e => e.Fobcode)
                .HasMaxLength(3)
                .IsFixedLength()
                .HasColumnName("FOBCode");
            entity.Property(e => e.GroupPayments)
                .HasMaxLength(1)
                .IsFixedLength();
            entity.Property(e => e.Guidfield1).HasColumnName("GUIDField1");
            entity.Property(e => e.Guidfield2).HasColumnName("GUIDField2");
            entity.Property(e => e.Guidfield3).HasColumnName("GUIDField3");
            entity.Property(e => e.Guidfield4).HasColumnName("GUIDField4");
            entity.Property(e => e.Guidfield5).HasColumnName("GUIDField5");
            entity.Property(e => e.Iconumber)
                .HasMaxLength(8)
                .IsFixedLength()
                .HasColumnName("ICONumber");
            entity.Property(e => e.ImportOriginCode)
                .HasMaxLength(3)
                .IsFixedLength();
            entity.Property(e => e.IntRegion)
                .HasMaxLength(10)
                .IsFixedLength();
            entity.Property(e => e.IntermediaryAssociate).HasMaxLength(30);
            entity.Property(e => e.IntermediaryAssociateId)
                .HasMaxLength(10)
                .IsFixedLength()
                .HasColumnName("IntermediaryAssociateID");
            entity.Property(e => e.IntrastatSystem)
                .HasMaxLength(10)
                .IsFixedLength();
            entity.Property(e => e.InvoiceDebtor).HasMaxLength(6);
            entity.Property(e => e.InvoiceLayout)
                .HasMaxLength(8)
                .IsFixedLength();
            entity.Property(e => e.InvoiceName).HasMaxLength(75);
            entity.Property(e => e.Isocountry)
                .HasMaxLength(3)
                .IsFixedLength()
                .HasColumnName("ISOCountry");
            entity.Property(e => e.ItemCode)
                .HasMaxLength(2)
                .IsFixedLength();
            entity.Property(e => e.JournalCode)
                .HasMaxLength(3)
                .IsFixedLength();
            entity.Property(e => e.LandedCostCode)
                .HasMaxLength(4)
                .IsFixedLength();
            entity.Property(e => e.LandedCostCode10)
                .HasMaxLength(4)
                .IsFixedLength();
            entity.Property(e => e.LandedCostCode2)
                .HasMaxLength(4)
                .IsFixedLength();
            entity.Property(e => e.LandedCostCode3)
                .HasMaxLength(4)
                .IsFixedLength();
            entity.Property(e => e.LandedCostCode4)
                .HasMaxLength(4)
                .IsFixedLength();
            entity.Property(e => e.LandedCostCode5)
                .HasMaxLength(4)
                .IsFixedLength();
            entity.Property(e => e.LandedCostCode6)
                .HasMaxLength(4)
                .IsFixedLength();
            entity.Property(e => e.LandedCostCode7)
                .HasMaxLength(4)
                .IsFixedLength();
            entity.Property(e => e.LandedCostCode8)
                .HasMaxLength(4)
                .IsFixedLength();
            entity.Property(e => e.LandedCostCode9)
                .HasMaxLength(4)
                .IsFixedLength();
            entity.Property(e => e.LayoutCode)
                .HasMaxLength(1)
                .IsFixedLength();
            entity.Property(e => e.LiableToPayVat).HasColumnName("LiableToPayVAT");
            entity.Property(e => e.Location)
                .HasMaxLength(10)
                .IsFixedLength();
            entity.Property(e => e.LocationShort)
                .HasMaxLength(3)
                .IsFixedLength();
            entity.Property(e => e.LogoFileName).HasMaxLength(128);
            entity.Property(e => e.MigrateGp)
                .HasColumnType("datetime")
                .HasColumnName("MigrateGP");
            entity.Property(e => e.NoteId).HasColumnName("NoteID");
            entity.Property(e => e.Numberfield1).HasColumnName("numberfield1");
            entity.Property(e => e.Numberfield2).HasColumnName("numberfield2");
            entity.Property(e => e.Numberfield3).HasColumnName("numberfield3");
            entity.Property(e => e.Numberfield4).HasColumnName("numberfield4");
            entity.Property(e => e.Numberfield5).HasColumnName("numberfield5");
            entity.Property(e => e.OffSetAccount)
                .HasMaxLength(9)
                .IsFixedLength();
            entity.Property(e => e.ParentAccount).HasMaxLength(12);
            entity.Property(e => e.ParticipantNumber)
                .HasMaxLength(9)
                .IsFixedLength();
            entity.Property(e => e.PayeeName)
                .HasMaxLength(40)
                .UseCollation("SQL_Latin1_General_CP1_CI_AI");
            entity.Property(e => e.PaymentCondition)
                .HasMaxLength(2)
                .IsFixedLength();
            entity.Property(e => e.PaymentConditionSearchCode)
                .HasMaxLength(10)
                .IsFixedLength();
            entity.Property(e => e.PaymentMethod)
                .HasMaxLength(1)
                .IsFixedLength();
            entity.Property(e => e.PersonId).HasColumnName("PersonID");
            entity.Property(e => e.PhoneExtention)
                .HasMaxLength(5)
                .IsFixedLength();
            entity.Property(e => e.PhoneQueue).HasMaxLength(15);
            entity.Property(e => e.PostBankNumber).HasMaxLength(34);
            entity.Property(e => e.PriceList).HasMaxLength(15);
            entity.Property(e => e.PurchaseReceipt)
                .HasMaxLength(1)
                .IsFixedLength();
            entity.Property(e => e.Region)
                .HasMaxLength(6)
                .IsFixedLength()
                .HasColumnName("region");
            entity.Property(e => e.RegionCd)
                .HasMaxLength(2)
                .IsFixedLength()
                .HasColumnName("RegionCD");
            entity.Property(e => e.RouteCode)
                .HasMaxLength(2)
                .IsFixedLength();
            entity.Property(e => e.RuleItem).HasMaxLength(30);
            entity.Property(e => e.SctCode)
                .HasMaxLength(10)
                .IsFixedLength()
                .HasColumnName("sct_code");
            entity.Property(e => e.SearchCode)
                .HasMaxLength(6)
                .IsFixedLength();
            entity.Property(e => e.SearchCodeGoods)
                .HasMaxLength(10)
                .IsFixedLength();
            entity.Property(e => e.SecurityLevel).HasDefaultValue(10);
            entity.Property(e => e.ShipVia)
                .HasMaxLength(5)
                .IsFixedLength();
            entity.Property(e => e.SignDate).HasColumnType("datetime");
            entity.Property(e => e.SizCode)
                .HasMaxLength(10)
                .IsFixedLength()
                .HasColumnName("siz_code");
            entity.Property(e => e.StatFactor)
                .HasMaxLength(3)
                .IsFixedLength();
            entity.Property(e => e.StateCode)
                .HasMaxLength(3)
                .IsFixedLength();
            entity.Property(e => e.StatementAddress)
                .HasMaxLength(10)
                .IsFixedLength();
            entity.Property(e => e.StatementDate).HasColumnType("datetime");
            entity.Property(e => e.StatementFrequency)
                .HasMaxLength(1)
                .IsFixedLength();
            entity.Property(e => e.Status)
                .HasMaxLength(1)
                .IsFixedLength();
            entity.Property(e => e.StatusSince)
                .HasColumnType("datetime")
                .HasColumnName("status_since");
            entity.Property(e => e.SubSector)
                .HasMaxLength(10)
                .IsFixedLength();
            entity.Property(e => e.SupplierStatus)
                .HasMaxLength(1)
                .IsFixedLength();
            entity.Property(e => e.Syscreated)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("syscreated");
            entity.Property(e => e.Syscreator).HasColumnName("syscreator");
            entity.Property(e => e.Sysguid)
                .HasDefaultValueSql("(newid())")
                .HasColumnName("sysguid");
            entity.Property(e => e.Sysmodified)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("sysmodified");
            entity.Property(e => e.Sysmodifier).HasColumnName("sysmodifier");
            entity.Property(e => e.TaxCode)
                .HasMaxLength(3)
                .IsFixedLength();
            entity.Property(e => e.TaxCode2)
                .HasMaxLength(3)
                .IsFixedLength();
            entity.Property(e => e.TaxCode3)
                .HasMaxLength(3)
                .IsFixedLength();
            entity.Property(e => e.TaxId)
                .HasMaxLength(13)
                .HasColumnName("TaxID");
            entity.Property(e => e.TaxSchedule)
                .HasMaxLength(5)
                .IsFixedLength();
            entity.Property(e => e.Telex)
                .HasMaxLength(10)
                .IsFixedLength();
            entity.Property(e => e.Terms)
                .HasMaxLength(2)
                .IsFixedLength();
            entity.Property(e => e.TextField10)
                .HasMaxLength(80)
                .UseCollation("SQL_Latin1_General_CP1_CI_AI");
            entity.Property(e => e.TextField11)
                .HasMaxLength(80)
                .UseCollation("SQL_Latin1_General_CP1_CI_AI");
            entity.Property(e => e.TextField12)
                .HasMaxLength(80)
                .UseCollation("SQL_Latin1_General_CP1_CI_AI");
            entity.Property(e => e.TextField13)
                .HasMaxLength(80)
                .UseCollation("SQL_Latin1_General_CP1_CI_AI");
            entity.Property(e => e.TextField14)
                .HasMaxLength(80)
                .UseCollation("SQL_Latin1_General_CP1_CI_AI");
            entity.Property(e => e.TextField15)
                .HasMaxLength(80)
                .UseCollation("SQL_Latin1_General_CP1_CI_AI");
            entity.Property(e => e.TextField16)
                .HasMaxLength(80)
                .UseCollation("SQL_Latin1_General_CP1_CI_AI");
            entity.Property(e => e.TextField17)
                .HasMaxLength(80)
                .UseCollation("SQL_Latin1_General_CP1_CI_AI");
            entity.Property(e => e.TextField18)
                .HasMaxLength(80)
                .UseCollation("SQL_Latin1_General_CP1_CI_AI");
            entity.Property(e => e.TextField19)
                .HasMaxLength(80)
                .UseCollation("SQL_Latin1_General_CP1_CI_AI");
            entity.Property(e => e.TextField20)
                .HasMaxLength(80)
                .UseCollation("SQL_Latin1_General_CP1_CI_AI");
            entity.Property(e => e.TextField21)
                .HasMaxLength(80)
                .UseCollation("SQL_Latin1_General_CP1_CI_AI");
            entity.Property(e => e.TextField22)
                .HasMaxLength(80)
                .UseCollation("SQL_Latin1_General_CP1_CI_AI");
            entity.Property(e => e.TextField23)
                .HasMaxLength(80)
                .UseCollation("SQL_Latin1_General_CP1_CI_AI");
            entity.Property(e => e.TextField24)
                .HasMaxLength(80)
                .UseCollation("SQL_Latin1_General_CP1_CI_AI");
            entity.Property(e => e.TextField25)
                .HasMaxLength(80)
                .UseCollation("SQL_Latin1_General_CP1_CI_AI");
            entity.Property(e => e.TextField26)
                .HasMaxLength(80)
                .UseCollation("SQL_Latin1_General_CP1_CI_AI");
            entity.Property(e => e.TextField27)
                .HasMaxLength(80)
                .UseCollation("SQL_Latin1_General_CP1_CI_AI");
            entity.Property(e => e.TextField28)
                .HasMaxLength(80)
                .UseCollation("SQL_Latin1_General_CP1_CI_AI");
            entity.Property(e => e.TextField29)
                .HasMaxLength(80)
                .UseCollation("SQL_Latin1_General_CP1_CI_AI");
            entity.Property(e => e.TextField30)
                .HasMaxLength(80)
                .UseCollation("SQL_Latin1_General_CP1_CI_AI");
            entity.Property(e => e.TextField6)
                .HasMaxLength(80)
                .UseCollation("SQL_Latin1_General_CP1_CI_AI");
            entity.Property(e => e.TextField7)
                .HasMaxLength(80)
                .UseCollation("SQL_Latin1_General_CP1_CI_AI");
            entity.Property(e => e.TextField8)
                .HasMaxLength(80)
                .UseCollation("SQL_Latin1_General_CP1_CI_AI");
            entity.Property(e => e.TextField9)
                .HasMaxLength(80)
                .UseCollation("SQL_Latin1_General_CP1_CI_AI");
            entity.Property(e => e.Textfield1)
                .HasMaxLength(80)
                .UseCollation("SQL_Latin1_General_CP1_CI_AI")
                .HasColumnName("textfield1");
            entity.Property(e => e.Textfield2)
                .HasMaxLength(80)
                .UseCollation("SQL_Latin1_General_CP1_CI_AI")
                .HasColumnName("textfield2");
            entity.Property(e => e.Textfield3)
                .HasMaxLength(80)
                .UseCollation("SQL_Latin1_General_CP1_CI_AI")
                .HasColumnName("textfield3");
            entity.Property(e => e.Textfield4)
                .HasMaxLength(80)
                .UseCollation("SQL_Latin1_General_CP1_CI_AI")
                .HasColumnName("textfield4");
            entity.Property(e => e.Textfield5)
                .HasMaxLength(80)
                .UseCollation("SQL_Latin1_General_CP1_CI_AI")
                .HasColumnName("textfield5");
            entity.Property(e => e.Timestamp)
                .IsRowVersion()
                .IsConcurrencyToken()
                .HasColumnName("timestamp");
            entity.Property(e => e.TransActionA)
                .HasMaxLength(10)
                .IsFixedLength();
            entity.Property(e => e.TransActionB)
                .HasMaxLength(10)
                .IsFixedLength();
            entity.Property(e => e.TransShipment)
                .HasMaxLength(10)
                .IsFixedLength();
            entity.Property(e => e.Transport)
                .HasMaxLength(10)
                .IsFixedLength();
            entity.Property(e => e.TriangularCountry)
                .HasMaxLength(3)
                .IsFixedLength();
            entity.Property(e => e.TypeSince)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("type_since");
            entity.Property(e => e.Upszone)
                .HasMaxLength(4)
                .IsFixedLength()
                .HasColumnName("UPSZone");
            entity.Property(e => e.VatCode)
                .HasMaxLength(3)
                .IsFixedLength();
            entity.Property(e => e.VatLiability)
                .HasMaxLength(1)
                .IsFixedLength();
            entity.Property(e => e.VatNumber).HasMaxLength(20);
            entity.Property(e => e.Vatsource)
                .HasMaxLength(1)
                .IsFixedLength()
                .HasColumnName("VATSource");
            entity.Property(e => e.WebAccessSince).HasColumnType("datetime");
        });

        modelBuilder.Entity<Cicntp>(entity =>
        {
            entity.HasKey(e => e.Id).IsClustered(false);

            entity.ToTable("cicntp");

            entity.HasIndex(e => e.PersonId, "IX_Cicntp_PersonID");

            entity.HasIndex(e => e.Predcode, "Predcode");

            entity.HasIndex(e => e.CntId, "cicntp")
                .IsUnique()
                .IsClustered();

            entity.HasIndex(e => e.CntFName, "cicntp_FirstName");

            entity.HasIndex(e => e.CntAccMan, "cicntpix_AccMan");

            entity.HasIndex(e => e.CntEmail, "cicntpix_Email");

            entity.HasIndex(e => e.Taalcode, "cicntpix_language");

            entity.HasIndex(e => e.ResId, "icntx13");

            entity.HasIndex(e => new { e.ResId, e.WebAccess }, "icntx14");

            entity.HasIndex(e => new { e.CmpWwn, e.CntId, e.Id }, "icntx3").IsUnique();

            entity.HasIndex(e => new { e.CntLName, e.Id }, "icntx4").IsUnique();

            entity.HasIndex(e => new { e.CmpWwn, e.CntLName, e.Id }, "icntx9").IsUnique();

            entity.Property(e => e.Id).HasColumnName("ID");
            entity.Property(e => e.ActiveY)
                .HasDefaultValue((byte)1)
                .HasColumnName("active_y");
            entity.Property(e => e.Administration)
                .HasMaxLength(3)
                .HasDefaultValue("000")
                .IsFixedLength();
            entity.Property(e => e.CmpWwn).HasColumnName("cmp_wwn");
            entity.Property(e => e.CntAccMan).HasColumnName("cnt_acc_man");
            entity.Property(e => e.CntDept)
                .HasMaxLength(40)
                .HasColumnName("cnt_dept");
            entity.Property(e => e.CntEmail)
                .HasMaxLength(128)
                .HasColumnName("cnt_email");
            entity.Property(e => e.CntFExt)
                .HasMaxLength(5)
                .IsFixedLength()
                .HasColumnName("cnt_f_ext");
            entity.Property(e => e.CntFFax)
                .HasMaxLength(25)
                .HasColumnName("cnt_f_fax");
            entity.Property(e => e.CntFMobile)
                .HasMaxLength(25)
                .HasColumnName("cnt_f_mobile");
            entity.Property(e => e.CntFName)
                .HasMaxLength(30)
                .UseCollation("SQL_Latin1_General_CP1_CI_AI")
                .HasColumnName("cnt_f_name");
            entity.Property(e => e.CntFTel)
                .HasMaxLength(25)
                .HasColumnName("cnt_f_tel");
            entity.Property(e => e.CntId)
                .HasDefaultValueSql("(newid())")
                .HasColumnName("cnt_id");
            entity.Property(e => e.CntJobDesc)
                .HasMaxLength(50)
                .UseCollation("SQL_Latin1_General_CP1_CI_AI")
                .HasColumnName("cnt_job_desc");
            entity.Property(e => e.CntLName)
                .HasMaxLength(50)
                .UseCollation("SQL_Latin1_General_CP1_CI_AI")
                .HasColumnName("cnt_l_name");
            entity.Property(e => e.CntMName)
                .HasMaxLength(30)
                .UseCollation("SQL_Latin1_General_CP1_CI_AI")
                .HasColumnName("cnt_m_name");
            entity.Property(e => e.CntNote)
                .UseCollation("SQL_Latin1_General_CP1_CI_AI")
                .HasColumnName("cnt_note");
            entity.Property(e => e.CntpDirectory)
                .HasMaxLength(30)
                .HasColumnName("cntp_Directory");
            entity.Property(e => e.Datefield1)
                .HasColumnType("datetime")
                .HasColumnName("datefield1");
            entity.Property(e => e.Datefield10)
                .HasColumnType("datetime")
                .HasColumnName("datefield10");
            entity.Property(e => e.Datefield2)
                .HasColumnType("datetime")
                .HasColumnName("datefield2");
            entity.Property(e => e.Datefield3)
                .HasColumnType("datetime")
                .HasColumnName("datefield3");
            entity.Property(e => e.Datefield4)
                .HasColumnType("datetime")
                .HasColumnName("datefield4");
            entity.Property(e => e.Datefield5)
                .HasColumnType("datetime")
                .HasColumnName("datefield5");
            entity.Property(e => e.Datefield6)
                .HasColumnType("datetime")
                .HasColumnName("datefield6");
            entity.Property(e => e.Datefield7)
                .HasColumnType("datetime")
                .HasColumnName("datefield7");
            entity.Property(e => e.Datefield8)
                .HasColumnType("datetime")
                .HasColumnName("datefield8");
            entity.Property(e => e.Datefield9)
                .HasColumnType("datetime")
                .HasColumnName("datefield9");
            entity.Property(e => e.EndDate).HasColumnType("datetime");
            entity.Property(e => e.FullName)
                .HasMaxLength(100)
                .UseCollation("SQL_Latin1_General_CP1_CI_AI");
            entity.Property(e => e.Gender)
                .HasMaxLength(1)
                .IsFixedLength();
            entity.Property(e => e.Guidfield1).HasColumnName("GUIDField1");
            entity.Property(e => e.Guidfield10).HasColumnName("GUIDField10");
            entity.Property(e => e.Guidfield2).HasColumnName("GUIDField2");
            entity.Property(e => e.Guidfield3).HasColumnName("GUIDField3");
            entity.Property(e => e.Guidfield4).HasColumnName("GUIDField4");
            entity.Property(e => e.Guidfield5).HasColumnName("GUIDField5");
            entity.Property(e => e.Guidfield6).HasColumnName("GUIDField6");
            entity.Property(e => e.Guidfield7).HasColumnName("GUIDField7");
            entity.Property(e => e.Guidfield8).HasColumnName("GUIDField8");
            entity.Property(e => e.Guidfield9).HasColumnName("GUIDField9");
            entity.Property(e => e.Initials)
                .HasMaxLength(10)
                .UseCollation("SQL_Latin1_General_CP1_CI_AI");
            entity.Property(e => e.Numberfield1).HasColumnName("numberfield1");
            entity.Property(e => e.Numberfield10).HasColumnName("numberfield10");
            entity.Property(e => e.Numberfield2).HasColumnName("numberfield2");
            entity.Property(e => e.Numberfield3).HasColumnName("numberfield3");
            entity.Property(e => e.Numberfield4).HasColumnName("numberfield4");
            entity.Property(e => e.Numberfield5).HasColumnName("numberfield5");
            entity.Property(e => e.Numberfield6).HasColumnName("numberfield6");
            entity.Property(e => e.Numberfield7).HasColumnName("numberfield7");
            entity.Property(e => e.Numberfield8).HasColumnName("numberfield8");
            entity.Property(e => e.Numberfield9).HasColumnName("numberfield9");
            entity.Property(e => e.OldFileName).HasMaxLength(255);
            entity.Property(e => e.PersonId).HasColumnName("PersonID");
            entity.Property(e => e.PictureFileName).HasMaxLength(128);
            entity.Property(e => e.Predcode)
                .HasMaxLength(4)
                .IsFixedLength()
                .HasColumnName("predcode");
            entity.Property(e => e.ResId).HasColumnName("res_id");
            entity.Property(e => e.StartDate).HasColumnType("datetime");
            entity.Property(e => e.StatusSince).HasColumnType("datetime");
            entity.Property(e => e.Suffix).HasMaxLength(64);
            entity.Property(e => e.Syscreated)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("syscreated");
            entity.Property(e => e.Syscreator).HasColumnName("syscreator");
            entity.Property(e => e.Sysguid)
                .HasDefaultValueSql("(newid())")
                .HasColumnName("sysguid");
            entity.Property(e => e.Sysmodified)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("sysmodified");
            entity.Property(e => e.Sysmodifier).HasColumnName("sysmodifier");
            entity.Property(e => e.Taalcode)
                .HasMaxLength(3)
                .IsFixedLength()
                .HasColumnName("taalcode");
            entity.Property(e => e.Textfield1)
                .HasMaxLength(80)
                .UseCollation("SQL_Latin1_General_CP1_CI_AI")
                .HasColumnName("textfield1");
            entity.Property(e => e.Textfield10)
                .HasMaxLength(80)
                .HasColumnName("textfield10");
            entity.Property(e => e.Textfield11)
                .HasMaxLength(80)
                .HasColumnName("textfield11");
            entity.Property(e => e.Textfield12)
                .HasMaxLength(80)
                .HasColumnName("textfield12");
            entity.Property(e => e.Textfield13)
                .HasMaxLength(80)
                .HasColumnName("textfield13");
            entity.Property(e => e.Textfield14)
                .HasMaxLength(80)
                .HasColumnName("textfield14");
            entity.Property(e => e.Textfield15)
                .HasMaxLength(80)
                .HasColumnName("textfield15");
            entity.Property(e => e.Textfield16)
                .HasMaxLength(80)
                .HasColumnName("textfield16");
            entity.Property(e => e.Textfield17)
                .HasMaxLength(80)
                .HasColumnName("textfield17");
            entity.Property(e => e.Textfield18)
                .HasMaxLength(80)
                .HasColumnName("textfield18");
            entity.Property(e => e.Textfield19)
                .HasMaxLength(80)
                .HasColumnName("textfield19");
            entity.Property(e => e.Textfield2)
                .HasMaxLength(80)
                .UseCollation("SQL_Latin1_General_CP1_CI_AI")
                .HasColumnName("textfield2");
            entity.Property(e => e.Textfield20)
                .HasMaxLength(80)
                .HasColumnName("textfield20");
            entity.Property(e => e.Textfield21)
                .HasMaxLength(80)
                .HasColumnName("textfield21");
            entity.Property(e => e.Textfield22)
                .HasMaxLength(80)
                .HasColumnName("textfield22");
            entity.Property(e => e.Textfield23)
                .HasMaxLength(80)
                .HasColumnName("textfield23");
            entity.Property(e => e.Textfield24)
                .HasMaxLength(80)
                .HasColumnName("textfield24");
            entity.Property(e => e.Textfield25)
                .HasMaxLength(80)
                .HasColumnName("textfield25");
            entity.Property(e => e.Textfield26)
                .HasMaxLength(80)
                .HasColumnName("textfield26");
            entity.Property(e => e.Textfield27)
                .HasMaxLength(80)
                .HasColumnName("textfield27");
            entity.Property(e => e.Textfield28)
                .HasMaxLength(80)
                .HasColumnName("textfield28");
            entity.Property(e => e.Textfield29)
                .HasMaxLength(80)
                .HasColumnName("textfield29");
            entity.Property(e => e.Textfield3)
                .HasMaxLength(80)
                .UseCollation("SQL_Latin1_General_CP1_CI_AI")
                .HasColumnName("textfield3");
            entity.Property(e => e.Textfield30)
                .HasMaxLength(80)
                .HasColumnName("textfield30");
            entity.Property(e => e.Textfield4)
                .HasMaxLength(80)
                .UseCollation("SQL_Latin1_General_CP1_CI_AI")
                .HasColumnName("textfield4");
            entity.Property(e => e.Textfield5)
                .HasMaxLength(80)
                .UseCollation("SQL_Latin1_General_CP1_CI_AI")
                .HasColumnName("textfield5");
            entity.Property(e => e.Textfield6)
                .HasMaxLength(80)
                .HasColumnName("textfield6");
            entity.Property(e => e.Textfield7)
                .HasMaxLength(80)
                .HasColumnName("textfield7");
            entity.Property(e => e.Textfield8)
                .HasMaxLength(80)
                .HasColumnName("textfield8");
            entity.Property(e => e.Textfield9)
                .HasMaxLength(80)
                .HasColumnName("textfield9");
            entity.Property(e => e.Timestamp)
                .IsRowVersion()
                .IsConcurrencyToken()
                .HasColumnName("timestamp");
            entity.Property(e => e.YesNoField10).HasDefaultValue((byte)0);
            entity.Property(e => e.YesNoField6).HasDefaultValue((byte)0);
            entity.Property(e => e.YesNoField7).HasDefaultValue((byte)0);
            entity.Property(e => e.YesNoField8).HasDefaultValue((byte)0);
            entity.Property(e => e.YesNoField9).HasDefaultValue((byte)0);
        });

        modelBuilder.Entity<Cisect>(entity =>
        {
            entity.HasKey(e => e.Id).IsClustered(false);

            entity.ToTable("cisect");

            entity.HasIndex(e => e.PolicyDocId, "PolicyDoc");

            entity.HasIndex(e => e.SctCode, "cisect")
                .IsUnique()
                .IsClustered();

            entity.Property(e => e.Id).HasColumnName("ID");
            entity.Property(e => e.MlDesc0)
                .HasMaxLength(70)
                .HasColumnName("ml_desc_0");
            entity.Property(e => e.MlDesc1)
                .HasMaxLength(70)
                .HasColumnName("ml_desc_1");
            entity.Property(e => e.MlDesc2)
                .HasMaxLength(70)
                .HasColumnName("ml_desc_2");
            entity.Property(e => e.MlDesc3)
                .HasMaxLength(70)
                .HasColumnName("ml_desc_3");
            entity.Property(e => e.MlDesc4)
                .HasMaxLength(70)
                .HasColumnName("ml_desc_4");
            entity.Property(e => e.SctCode)
                .HasMaxLength(10)
                .IsFixedLength()
                .HasColumnName("sct_code");
            entity.Property(e => e.Syscreated)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("syscreated");
            entity.Property(e => e.Syscreator).HasColumnName("syscreator");
            entity.Property(e => e.Sysguid)
                .HasDefaultValueSql("(newid())")
                .HasColumnName("sysguid");
            entity.Property(e => e.Sysmodified)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("sysmodified");
            entity.Property(e => e.Sysmodifier).HasColumnName("sysmodifier");
            entity.Property(e => e.Timestamp)
                .IsRowVersion()
                .IsConcurrencyToken()
                .HasColumnName("timestamp");
        });

        modelBuilder.Entity<Cisize>(entity =>
        {
            entity.HasKey(e => e.Id).IsClustered(false);

            entity.ToTable("cisize");

            entity.HasIndex(e => e.SizCode, "cisize")
                .IsUnique()
                .IsClustered();

            entity.Property(e => e.Id).HasColumnName("ID");
            entity.Property(e => e.MlDesc0)
                .HasMaxLength(40)
                .HasColumnName("ml_desc_0");
            entity.Property(e => e.MlDesc1)
                .HasMaxLength(40)
                .HasColumnName("ml_desc_1");
            entity.Property(e => e.MlDesc2)
                .HasMaxLength(40)
                .HasColumnName("ml_desc_2");
            entity.Property(e => e.MlDesc3)
                .HasMaxLength(40)
                .HasColumnName("ml_desc_3");
            entity.Property(e => e.MlDesc4)
                .HasMaxLength(40)
                .HasColumnName("ml_desc_4");
            entity.Property(e => e.SizCode)
                .HasMaxLength(10)
                .IsFixedLength()
                .HasColumnName("siz_code");
            entity.Property(e => e.Syscreated)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("syscreated");
            entity.Property(e => e.Syscreator).HasColumnName("syscreator");
            entity.Property(e => e.Sysguid)
                .HasDefaultValueSql("(newid())")
                .HasColumnName("sysguid");
            entity.Property(e => e.Sysmodified)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("sysmodified");
            entity.Property(e => e.Sysmodifier).HasColumnName("sysmodifier");
            entity.Property(e => e.Timestamp)
                .IsRowVersion()
                .IsConcurrencyToken()
                .HasColumnName("timestamp");
        });

        modelBuilder.Entity<Classification>(entity =>
        {
            entity.HasKey(e => e.ClassificationId);

            entity.HasIndex(e => e.Description, "XClassificationDescription");

            entity.Property(e => e.ClassificationId)
                .HasMaxLength(3)
                .IsFixedLength()
                .HasColumnName("ClassificationID");
            entity.Property(e => e.Description).HasMaxLength(50);
            entity.Property(e => e.Id)
                .ValueGeneratedOnAdd()
                .HasColumnName("ID");
            entity.Property(e => e.MlDesc0)
                .HasMaxLength(50)
                .HasColumnName("ml_desc_0");
            entity.Property(e => e.MlDesc1)
                .HasMaxLength(50)
                .HasColumnName("ml_desc_1");
            entity.Property(e => e.MlDesc2)
                .HasMaxLength(50)
                .HasColumnName("ml_desc_2");
            entity.Property(e => e.MlDesc3)
                .HasMaxLength(50)
                .HasColumnName("ml_desc_3");
            entity.Property(e => e.MlDesc4)
                .HasMaxLength(50)
                .HasColumnName("ml_desc_4");
            entity.Property(e => e.Syscreated)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("syscreated");
            entity.Property(e => e.Syscreator).HasColumnName("syscreator");
            entity.Property(e => e.Sysguid)
                .HasDefaultValueSql("(newid())")
                .HasColumnName("sysguid");
            entity.Property(e => e.Sysmodified)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("sysmodified");
            entity.Property(e => e.Sysmodifier).HasColumnName("sysmodifier");
            entity.Property(e => e.Timestamp)
                .IsRowVersion()
                .IsConcurrencyToken()
                .HasColumnName("timestamp");
            entity.Property(e => e.Type)
                .HasMaxLength(1)
                .IsFixedLength();
        });

        modelBuilder.Entity<ClientFile>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__ClientFi__3214EC27E0E98D31");

            entity.HasIndex(e => e.ActivationId, "IX_ClientFiles_ActivationID");

            entity.HasIndex(e => e.AddonId, "IX_ClientFiles_AddonID");

            entity.HasIndex(e => e.Filename, "IX_ClientFiles_Filename");

            entity.Property(e => e.Id).HasColumnName("ID");
            entity.Property(e => e.ActivationId).HasColumnName("ActivationID");
            entity.Property(e => e.AddonId).HasColumnName("AddonID");
            entity.Property(e => e.Filename)
                .HasMaxLength(255)
                .IsUnicode(false);
            entity.Property(e => e.ServerId).HasColumnName("ServerID");
        });

        modelBuilder.Entity<CnfaccessControl>(entity =>
        {
            entity.HasKey(e => e.Id).IsClustered(false);

            entity.ToTable("CNFAccessControls");

            entity.HasIndex(e => e.Id, "CNFAccessControls_Index").IsClustered();

            entity.Property(e => e.Id)
                .ValueGeneratedNever()
                .HasColumnName("ID");
            entity.Property(e => e.ActionCode).HasMaxLength(40);
            entity.Property(e => e.ControlCode).HasMaxLength(70);
            entity.Property(e => e.EntityCode).HasMaxLength(12);
            entity.Property(e => e.PropertyCode).HasMaxLength(40);
            entity.Property(e => e.StatusCode).HasMaxLength(40);
            entity.Property(e => e.Syscreated)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("syscreated");
            entity.Property(e => e.Syscreator).HasColumnName("syscreator");
            entity.Property(e => e.Sysmodified)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("sysmodified");
            entity.Property(e => e.Sysmodifier).HasColumnName("sysmodifier");
            entity.Property(e => e.TypeCode).HasMaxLength(40);
        });

        modelBuilder.Entity<CnfaspControl>(entity =>
        {
            entity.HasKey(e => e.Code).IsClustered(false);

            entity.ToTable("CNFAspControls");

            entity.HasIndex(e => e.Code, "CNFAspControls_Index").IsClustered();

            entity.Property(e => e.Code).HasMaxLength(100);
            entity.Property(e => e.Syscreated)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("syscreated");
            entity.Property(e => e.Syscreator).HasColumnName("syscreator");
            entity.Property(e => e.Sysmodified)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("sysmodified");
            entity.Property(e => e.Sysmodifier).HasColumnName("sysmodifier");
        });

        modelBuilder.Entity<Cnfconfiguration>(entity =>
        {
            entity.HasKey(e => e.Id).IsClustered(false);

            entity.ToTable("CNFConfigurations");

            entity.HasIndex(e => e.Id, "CNFConfigurations_Index").IsClustered();

            entity.HasIndex(e => e.Code, "UQ_CNFConfigurations_Code").IsUnique();

            entity.Property(e => e.Id)
                .ValueGeneratedNever()
                .HasColumnName("ID");
            entity.Property(e => e.Code).HasMaxLength(12);
            entity.Property(e => e.Icon).HasMaxLength(128);
            entity.Property(e => e.ModuleId).HasColumnName("ModuleID");
            entity.Property(e => e.Name).HasMaxLength(50);
            entity.Property(e => e.NameTermId).HasColumnName("NameTermID");
            entity.Property(e => e.RepGroupId).HasColumnName("RepGroupID");
            entity.Property(e => e.Syscreated)
                .HasColumnType("datetime")
                .HasColumnName("syscreated");
            entity.Property(e => e.Syscreator).HasColumnName("syscreator");
            entity.Property(e => e.Sysmodified)
                .HasColumnType("datetime")
                .HasColumnName("sysmodified");
            entity.Property(e => e.Sysmodifier).HasColumnName("sysmodifier");
            entity.Property(e => e.Version).HasMaxLength(10);
        });

        modelBuilder.Entity<Cnfentity>(entity =>
        {
            entity.HasKey(e => e.Id).IsClustered(false);

            entity.ToTable("CNFEntities");

            entity.HasIndex(e => e.Id, "CNFEntities_Index").IsClustered();

            entity.HasIndex(e => e.Code, "UQ_CNFEntities_Code").IsUnique();

            entity.Property(e => e.Id)
                .ValueGeneratedNever()
                .HasColumnName("ID");
            entity.Property(e => e.AssociatedBc)
                .HasMaxLength(50)
                .HasColumnName("AssociatedBC");
            entity.Property(e => e.AssociatedBrowser).HasMaxLength(50);
            entity.Property(e => e.AssociatedFc)
                .HasMaxLength(50)
                .HasColumnName("AssociatedFC");
            entity.Property(e => e.AssociatedSqltable)
                .HasMaxLength(50)
                .HasColumnName("AssociatedSQLTable");
            entity.Property(e => e.Code).HasMaxLength(12);
            entity.Property(e => e.ConfigurationCode).HasMaxLength(12);
            entity.Property(e => e.ExtendsEntity).HasMaxLength(50);
            entity.Property(e => e.Icon).HasMaxLength(128);
            entity.Property(e => e.InheritsEntity).HasMaxLength(50);
            entity.Property(e => e.InitialState).HasMaxLength(40);
            entity.Property(e => e.KeyDescription).HasMaxLength(40);
            entity.Property(e => e.KeyProperty).HasMaxLength(40);
            entity.Property(e => e.Name).HasMaxLength(50);
            entity.Property(e => e.NameTermId).HasColumnName("NameTermID");
            entity.Property(e => e.PluralName).HasMaxLength(50);
            entity.Property(e => e.PluralNameTermId).HasColumnName("PluralNameTermID");
            entity.Property(e => e.SearchLinkId).HasColumnName("SearchLinkID");
            entity.Property(e => e.Syscreated)
                .HasColumnType("datetime")
                .HasColumnName("syscreated");
            entity.Property(e => e.Syscreator).HasColumnName("syscreator");
            entity.Property(e => e.Sysmodified)
                .HasColumnType("datetime")
                .HasColumnName("sysmodified");
            entity.Property(e => e.Sysmodifier).HasColumnName("sysmodifier");
        });

        modelBuilder.Entity<CnfentityAction>(entity =>
        {
            entity.HasKey(e => e.Id).IsClustered(false);

            entity.ToTable("CNFEntityActions");

            entity.HasIndex(e => e.Id, "CNFEntityActions_Index").IsClustered();

            entity.HasIndex(e => new { e.EntityCode, e.Code }, "UQ_CNFEntityActions_Code").IsUnique();

            entity.Property(e => e.Id)
                .ValueGeneratedNever()
                .HasColumnName("ID");
            entity.Property(e => e.Code).HasMaxLength(40);
            entity.Property(e => e.EntityCode).HasMaxLength(12);
            entity.Property(e => e.Label).HasMaxLength(50);
            entity.Property(e => e.LabelTermId).HasColumnName("LabelTermID");
            entity.Property(e => e.StatusCode).HasMaxLength(40);
            entity.Property(e => e.Syscreated)
                .HasColumnType("datetime")
                .HasColumnName("syscreated");
            entity.Property(e => e.Syscreator).HasColumnName("syscreator");
            entity.Property(e => e.Sysmodified)
                .HasColumnType("datetime")
                .HasColumnName("sysmodified");
            entity.Property(e => e.Sysmodifier).HasColumnName("sysmodifier");
        });

        modelBuilder.Entity<CnfentityChild>(entity =>
        {
            entity.HasKey(e => e.Id).IsClustered(false);

            entity.ToTable("CNFEntityChildren");

            entity.HasIndex(e => e.Id, "CNFEntityChildren_Index").IsClustered();

            entity.HasIndex(e => new { e.EntityCode, e.Code }, "UQ_CNFEntityChildren_Code").IsUnique();

            entity.Property(e => e.Id)
                .HasDefaultValueSql("(newid())")
                .HasColumnName("ID");
            entity.Property(e => e.ChildEntityCode).HasMaxLength(12);
            entity.Property(e => e.ChildEntityField).HasMaxLength(40);
            entity.Property(e => e.Code).HasMaxLength(40);
            entity.Property(e => e.EntityCode).HasMaxLength(12);
            entity.Property(e => e.Label).HasMaxLength(50);
            entity.Property(e => e.LabelTermId).HasColumnName("LabelTermID");
            entity.Property(e => e.Syscreated)
                .HasColumnType("datetime")
                .HasColumnName("syscreated");
            entity.Property(e => e.Syscreator).HasColumnName("syscreator");
            entity.Property(e => e.Sysmodified)
                .HasColumnType("datetime")
                .HasColumnName("sysmodified");
            entity.Property(e => e.Sysmodifier).HasColumnName("sysmodifier");
        });

        modelBuilder.Entity<CnfentityMonitor>(entity =>
        {
            entity.HasKey(e => e.Id).IsClustered(false);

            entity.ToTable("CNFEntityMonitors");

            entity.HasIndex(e => e.Id, "CNFEntityMonitors_Index").IsClustered();

            entity.HasIndex(e => new { e.EntityCode, e.Code }, "UQ_CNFEntityMonitors_Codes").IsUnique();

            entity.Property(e => e.Id)
                .HasDefaultValueSql("(newid())")
                .HasColumnName("ID");
            entity.Property(e => e.Code).HasMaxLength(40);
            entity.Property(e => e.Description).HasMaxLength(50);
            entity.Property(e => e.DescriptionTermId).HasColumnName("DescriptionTermID");
            entity.Property(e => e.EntityCode).HasMaxLength(12);
            entity.Property(e => e.Icon).HasMaxLength(128);
            entity.Property(e => e.Syscreated)
                .HasColumnType("datetime")
                .HasColumnName("syscreated");
            entity.Property(e => e.Syscreator).HasColumnName("syscreator");
            entity.Property(e => e.Sysmodified)
                .HasColumnType("datetime")
                .HasColumnName("sysmodified");
            entity.Property(e => e.Sysmodifier).HasColumnName("sysmodifier");
        });

        modelBuilder.Entity<CnfentityProperty>(entity =>
        {
            entity.HasKey(e => e.Id)
                .HasName("PK_CNFProperties")
                .IsClustered(false);

            entity.ToTable("CNFEntityProperties");

            entity.HasIndex(e => e.Id, "CNFEntityProperties_Index").IsClustered();

            entity.HasIndex(e => new { e.EntityCode, e.Code }, "UQ_CNFEntityProperties_Code").IsUnique();

            entity.Property(e => e.Id)
                .ValueGeneratedNever()
                .HasColumnName("ID");
            entity.Property(e => e.AllowedChars).HasMaxLength(128);
            entity.Property(e => e.AllowedCharsQuery).HasMaxLength(1000);
            entity.Property(e => e.AspcontrolCode)
                .HasMaxLength(100)
                .HasColumnName("ASPControlCode");
            entity.Property(e => e.BrowserId).HasColumnName("BrowserID");
            entity.Property(e => e.BrowserName).HasMaxLength(60);
            entity.Property(e => e.Caption).HasMaxLength(60);
            entity.Property(e => e.CaptionSuffix).HasMaxLength(60);
            entity.Property(e => e.CaptionSuffixTermId).HasColumnName("CaptionSuffixTermID");
            entity.Property(e => e.CaptionTermId).HasColumnName("CaptionTermID");
            entity.Property(e => e.Code).HasMaxLength(40);
            entity.Property(e => e.DefaultValue).HasMaxLength(50);
            entity.Property(e => e.Description).HasMaxLength(50);
            entity.Property(e => e.DescriptionTermId).HasColumnName("DescriptionTermID");
            entity.Property(e => e.EntityCode).HasMaxLength(12);
            entity.Property(e => e.ExtendedFromEntity).HasMaxLength(30);
            entity.Property(e => e.InheritedFromEntity).HasMaxLength(30);
            entity.Property(e => e.LowerRange).HasMaxLength(128);
            entity.Property(e => e.Options).HasMaxLength(500);
            entity.Property(e => e.PrecisionQuery).HasMaxLength(50);
            entity.Property(e => e.PropExposedWs).HasColumnName("PropExposedWS");
            entity.Property(e => e.PropNameWs)
                .HasMaxLength(40)
                .HasColumnName("PropNameWS");
            entity.Property(e => e.SelectionValues).HasMaxLength(1000);
            entity.Property(e => e.Suffix).HasMaxLength(50);
            entity.Property(e => e.SuffixTermId).HasColumnName("SuffixTermID");
            entity.Property(e => e.Syscreated)
                .HasColumnType("datetime")
                .HasColumnName("syscreated");
            entity.Property(e => e.Syscreator).HasColumnName("syscreator");
            entity.Property(e => e.Sysmodified)
                .HasColumnType("datetime")
                .HasColumnName("sysmodified");
            entity.Property(e => e.Sysmodifier).HasColumnName("sysmodifier");
            entity.Property(e => e.UpperRange).HasMaxLength(128);
            entity.Property(e => e.ValidationQuery).HasMaxLength(1000);
        });

        modelBuilder.Entity<CnfentityStatus>(entity =>
        {
            entity.HasKey(e => e.Id).IsClustered(false);

            entity.ToTable("CNFEntityStatuses");

            entity.HasIndex(e => e.Id, "CNFEntityStatuses_Index").IsClustered();

            entity.HasIndex(e => new { e.EntityCode, e.Code }, "UQ_CNFEntityStatuses_Code").IsUnique();

            entity.Property(e => e.Id)
                .ValueGeneratedNever()
                .HasColumnName("ID");
            entity.Property(e => e.Code).HasMaxLength(40);
            entity.Property(e => e.EntityCode).HasMaxLength(12);
            entity.Property(e => e.Label).HasMaxLength(50);
            entity.Property(e => e.LabelTermId).HasColumnName("LabelTermID");
            entity.Property(e => e.Syscreated)
                .HasColumnType("datetime")
                .HasColumnName("syscreated");
            entity.Property(e => e.Syscreator).HasColumnName("syscreator");
            entity.Property(e => e.Sysmodified)
                .HasColumnType("datetime")
                .HasColumnName("sysmodified");
            entity.Property(e => e.Sysmodifier).HasColumnName("sysmodifier");
        });

        modelBuilder.Entity<CnfentityTab>(entity =>
        {
            entity.HasKey(e => e.Id).IsClustered(false);

            entity.ToTable("CNFEntityTabs");

            entity.HasIndex(e => e.Id, "CNFEntityTabs_Index").IsClustered();

            entity.HasIndex(e => new { e.EntityCode, e.Code }, "UQ_CNFEntityTabs_Code").IsUnique();

            entity.Property(e => e.Id)
                .ValueGeneratedNever()
                .HasColumnName("ID");
            entity.Property(e => e.Code).HasMaxLength(40);
            entity.Property(e => e.EntityCode).HasMaxLength(12);
            entity.Property(e => e.Label).HasMaxLength(50);
            entity.Property(e => e.LabelTermId).HasColumnName("LabelTermID");
            entity.Property(e => e.RelationId).HasColumnName("RelationID");
            entity.Property(e => e.Syscreated)
                .HasColumnType("datetime")
                .HasColumnName("syscreated");
            entity.Property(e => e.Syscreator).HasColumnName("syscreator");
            entity.Property(e => e.Sysmodified)
                .HasColumnType("datetime")
                .HasColumnName("sysmodified");
            entity.Property(e => e.Sysmodifier).HasColumnName("sysmodifier");
            entity.Property(e => e.Url).HasColumnName("url");
        });

        modelBuilder.Entity<CnfentityType>(entity =>
        {
            entity.HasKey(e => e.Id).IsClustered(false);

            entity.ToTable("CNFEntityTypes");

            entity.HasIndex(e => e.Id, "CNFEntityTypes_Index").IsClustered();

            entity.HasIndex(e => new { e.EntityCode, e.Code }, "UQ_EntityCode_Code").IsUnique();

            entity.Property(e => e.Id)
                .ValueGeneratedNever()
                .HasColumnName("ID");
            entity.Property(e => e.Code).HasMaxLength(40);
            entity.Property(e => e.EntityCode).HasMaxLength(12);
            entity.Property(e => e.IconFilename).HasMaxLength(128);
            entity.Property(e => e.Name).HasMaxLength(50);
            entity.Property(e => e.PluralName).HasMaxLength(50);
            entity.Property(e => e.PluralTermId).HasColumnName("PluralTermID");
            entity.Property(e => e.Syscreated)
                .HasColumnType("datetime")
                .HasColumnName("syscreated");
            entity.Property(e => e.Syscreator).HasColumnName("syscreator");
            entity.Property(e => e.Sysmodified)
                .HasColumnType("datetime")
                .HasColumnName("sysmodified");
            entity.Property(e => e.Sysmodifier).HasColumnName("sysmodifier");
            entity.Property(e => e.TermId).HasColumnName("TermID");
        });

        modelBuilder.Entity<CnffunctionalComponent>(entity =>
        {
            entity.HasKey(e => e.Id).IsClustered(false);

            entity.ToTable("CNFFunctionalComponents");

            entity.HasIndex(e => e.Id, "CNFFunctionalComponents_Index").IsClustered();

            entity.Property(e => e.Id)
                .HasDefaultValueSql("(newid())")
                .HasColumnName("ID");
            entity.Property(e => e.EntityCode).HasMaxLength(12);
            entity.Property(e => e.FixedValue).HasMaxLength(50);
            entity.Property(e => e.PropName).HasMaxLength(30);
            entity.Property(e => e.ReferenceEntity).HasMaxLength(30);
            entity.Property(e => e.ReferenceEntityBc)
                .HasMaxLength(50)
                .HasColumnName("ReferenceEntityBC");
            entity.Property(e => e.ReferenceProperty).HasMaxLength(40);
            entity.Property(e => e.SettingName).HasMaxLength(30);
            entity.Property(e => e.Syscreated)
                .HasColumnType("datetime")
                .HasColumnName("syscreated");
            entity.Property(e => e.Syscreator).HasColumnName("syscreator");
            entity.Property(e => e.Sysmodified)
                .HasColumnType("datetime")
                .HasColumnName("sysmodified");
            entity.Property(e => e.Sysmodifier).HasColumnName("sysmodifier");
        });

        modelBuilder.Entity<CnfmandatoryInheritedProperty>(entity =>
        {
            entity.HasKey(e => e.Id).IsClustered(false);

            entity.ToTable("CNFMandatoryInheritedProperties");

            entity.HasIndex(e => e.Id, "CNFMandatoryInheritedProperties_Index").IsClustered();

            entity.Property(e => e.Id)
                .HasDefaultValueSql("(newid())")
                .HasColumnName("ID");
            entity.Property(e => e.InheritedEntity).HasMaxLength(30);
            entity.Property(e => e.MandatoryInheritedProperty).HasMaxLength(40);
            entity.Property(e => e.Syscreated)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("syscreated");
            entity.Property(e => e.Syscreator).HasColumnName("syscreator");
            entity.Property(e => e.Sysmodified)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("sysmodified");
            entity.Property(e => e.Sysmodifier).HasColumnName("sysmodifier");
        });

        modelBuilder.Entity<CnfmenuApplication>(entity =>
        {
            entity.HasKey(e => e.Id).IsClustered(false);

            entity.ToTable("CNFMenuApplications");

            entity.HasIndex(e => e.Id, "CNFMenuApplications_Index").IsClustered();

            entity.HasIndex(e => new { e.ConfigurationCode, e.MenuTabId, e.MenuSectionId, e.Title }, "UQ_CNFMenuApplications_Title").IsUnique();

            entity.Property(e => e.Id)
                .HasDefaultValueSql("(newid())")
                .HasColumnName("ID");
            entity.Property(e => e.Code).HasMaxLength(30);
            entity.Property(e => e.ConfigurationCode).HasMaxLength(12);
            entity.Property(e => e.EntityType).HasMaxLength(40);
            entity.Property(e => e.LinkEntityCode).HasMaxLength(12);
            entity.Property(e => e.MenuSectionId).HasColumnName("MenuSectionID");
            entity.Property(e => e.MenuTabId).HasColumnName("MenuTabID");
            entity.Property(e => e.Syscreated)
                .HasColumnType("datetime")
                .HasColumnName("syscreated");
            entity.Property(e => e.Syscreator).HasColumnName("syscreator");
            entity.Property(e => e.Sysmodified)
                .HasColumnType("datetime")
                .HasColumnName("sysmodified");
            entity.Property(e => e.Sysmodifier).HasColumnName("sysmodifier");
            entity.Property(e => e.Title).HasMaxLength(50);
            entity.Property(e => e.TitleTermId).HasColumnName("TitleTermID");
        });

        modelBuilder.Entity<CnfmenuSection>(entity =>
        {
            entity.HasKey(e => e.Id).IsClustered(false);

            entity.ToTable("CNFMenuSections");

            entity.HasIndex(e => e.Id, "CNFMenuSections_Index").IsClustered();

            entity.HasIndex(e => new { e.ConfigurationCode, e.MenuTabId, e.Title }, "UQ_CNFMenuSections_Title").IsUnique();

            entity.Property(e => e.Id)
                .HasDefaultValueSql("(newid())")
                .HasColumnName("ID");
            entity.Property(e => e.ConfigurationCode).HasMaxLength(12);
            entity.Property(e => e.MenuTabId).HasColumnName("MenuTabID");
            entity.Property(e => e.Syscreated)
                .HasColumnType("datetime")
                .HasColumnName("syscreated");
            entity.Property(e => e.Syscreator).HasColumnName("syscreator");
            entity.Property(e => e.Sysmodified)
                .HasColumnType("datetime")
                .HasColumnName("sysmodified");
            entity.Property(e => e.Sysmodifier).HasColumnName("sysmodifier");
            entity.Property(e => e.Title).HasMaxLength(50);
            entity.Property(e => e.TitleTermId).HasColumnName("TitleTermID");
        });

        modelBuilder.Entity<CnfmenuTab>(entity =>
        {
            entity.HasKey(e => e.Id).IsClustered(false);

            entity.ToTable("CNFMenuTabs");

            entity.HasIndex(e => e.Id, "CNFMenuTabs_Index").IsClustered();

            entity.HasIndex(e => new { e.ConfigurationCode, e.Title }, "UQ_CNFMenuTabs_Title").IsUnique();

            entity.Property(e => e.Id)
                .HasDefaultValueSql("(newid())")
                .HasColumnName("ID");
            entity.Property(e => e.ConfigurationCode).HasMaxLength(12);
            entity.Property(e => e.Syscreated)
                .HasColumnType("datetime")
                .HasColumnName("syscreated");
            entity.Property(e => e.Syscreator).HasColumnName("syscreator");
            entity.Property(e => e.Sysmodified)
                .HasColumnType("datetime")
                .HasColumnName("sysmodified");
            entity.Property(e => e.Sysmodifier).HasColumnName("sysmodifier");
            entity.Property(e => e.Title).HasMaxLength(50);
            entity.Property(e => e.TitleTermId).HasColumnName("TitleTermID");
        });

        modelBuilder.Entity<CnfmoduleDeployment>(entity =>
        {
            entity.ToTable("CNFModuleDeployment");

            entity.Property(e => e.Id)
                .HasDefaultValueSql("(newsequentialid())")
                .HasColumnName("ID");
            entity.Property(e => e.CategoryId).HasColumnName("CategoryID");
            entity.Property(e => e.DocumentTypeId).HasColumnName("DocumentTypeID");
            entity.Property(e => e.ModuleId).HasColumnName("ModuleID");
            entity.Property(e => e.RequestTypeId).HasColumnName("RequestTypeID");
            entity.Property(e => e.RoleId).HasColumnName("RoleID");
            entity.Property(e => e.RuleId).HasColumnName("RuleID");
            entity.Property(e => e.Syscreated)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("syscreated");
            entity.Property(e => e.Syscreator).HasColumnName("syscreator");
            entity.Property(e => e.Sysmodified)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("sysmodified");
            entity.Property(e => e.Sysmodifier).HasColumnName("sysmodifier");
        });

        modelBuilder.Entity<CnfreportParameter>(entity =>
        {
            entity.HasKey(e => e.Id).IsClustered(false);

            entity.ToTable("CNFReportParameters");

            entity.HasIndex(e => e.Id, "CNFReportParameters_Index").IsClustered();

            entity.Property(e => e.Id)
                .HasDefaultValueSql("(newid())")
                .HasColumnName("ID");
            entity.Property(e => e.EntityCode).HasMaxLength(12);
            entity.Property(e => e.Idparameter).HasColumnName("IDParameter");
            entity.Property(e => e.Idreport).HasColumnName("IDReport");
            entity.Property(e => e.Name).HasMaxLength(225);
            entity.Property(e => e.Syscreated)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("syscreated");
            entity.Property(e => e.Syscreator).HasColumnName("syscreator");
            entity.Property(e => e.Sysmodified)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("sysmodified");
            entity.Property(e => e.Sysmodifier).HasColumnName("sysmodifier");
            entity.Property(e => e.TabCode).HasMaxLength(40);
        });

        modelBuilder.Entity<CnfruleDeployment>(entity =>
        {
            entity.ToTable("CNFRuleDeployment");

            entity.Property(e => e.Id)
                .HasDefaultValueSql("(newsequentialid())")
                .HasColumnName("ID");
            entity.Property(e => e.Description).HasMaxLength(60);
            entity.Property(e => e.Enddate).HasColumnType("datetime");
            entity.Property(e => e.Message).HasMaxLength(1000);
            entity.Property(e => e.Name).HasMaxLength(50);
            entity.Property(e => e.RemarkSql)
                .HasMaxLength(1000)
                .HasColumnName("RemarkSQL");
            entity.Property(e => e.ResourceSelection).HasMaxLength(1000);
            entity.Property(e => e.RuleId).HasColumnName("RuleID");
            entity.Property(e => e.RuleSql)
                .HasMaxLength(1000)
                .HasColumnName("RuleSQL");
            entity.Property(e => e.Startdate).HasColumnType("datetime");
            entity.Property(e => e.Syscreated)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("syscreated");
            entity.Property(e => e.Syscreator).HasColumnName("syscreator");
            entity.Property(e => e.Sysmodified)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("sysmodified");
            entity.Property(e => e.Sysmodifier).HasColumnName("sysmodifier");
        });

        modelBuilder.Entity<CnfsearchTemplate>(entity =>
        {
            entity.HasKey(e => e.Id).IsClustered(false);

            entity.ToTable("CNFSearchTemplates");

            entity.HasIndex(e => e.Id, "CNFSearchTemplates_Index").IsClustered();

            entity.HasIndex(e => e.SearchCode, "UQ_CNFSearchTemplates_SearchCode").IsUnique();

            entity.Property(e => e.Id)
                .HasDefaultValueSql("(newid())")
                .HasColumnName("ID");
            entity.Property(e => e.Description).HasMaxLength(50);
            entity.Property(e => e.DescriptionTermId).HasColumnName("DescriptionTermID");
            entity.Property(e => e.SearchCode)
                .HasMaxLength(8)
                .IsFixedLength();
            entity.Property(e => e.SearchTemplatePage).HasMaxLength(50);
            entity.Property(e => e.Syscreated)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("syscreated");
            entity.Property(e => e.Syscreator).HasColumnName("syscreator");
            entity.Property(e => e.Sysmodified)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("sysmodified");
            entity.Property(e => e.Sysmodifier).HasColumnName("sysmodifier");
        });

        modelBuilder.Entity<CnfstringValue>(entity =>
        {
            entity.HasKey(e => e.Id).IsClustered(false);

            entity.ToTable("CNFStringValues");

            entity.HasIndex(e => e.Id, "CNFStringValues_Index").IsClustered();

            entity.Property(e => e.Id)
                .ValueGeneratedNever()
                .HasColumnName("ID");
            entity.Property(e => e.DatabaseChar)
                .HasMaxLength(3)
                .IsFixedLength();
            entity.Property(e => e.Description).HasMaxLength(100);
            entity.Property(e => e.DisplayChar)
                .HasMaxLength(3)
                .IsFixedLength();
            entity.Property(e => e.FieldName).HasMaxLength(30);
            entity.Property(e => e.Options).HasMaxLength(500);
            entity.Property(e => e.Syscreated)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("syscreated");
            entity.Property(e => e.Syscreator).HasColumnName("syscreator");
            entity.Property(e => e.Sysmodified)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("sysmodified");
            entity.Property(e => e.Sysmodifier).HasColumnName("sysmodifier");
            entity.Property(e => e.Tablename).HasMaxLength(30);
        });

        modelBuilder.Entity<Cnhrpayroll>(entity =>
        {
            entity
                .HasNoKey()
                .ToView("cnhrpayroll");

            entity.Property(e => e.BaseValueMethod)
                .HasMaxLength(1)
                .IsFixedLength()
                .HasColumnName("Base_Value_Method");
            entity.Property(e => e.Contract).HasColumnName("contract");
            entity.Property(e => e.Country)
                .HasMaxLength(3)
                .IsFixedLength();
            entity.Property(e => e.Description)
                .HasMaxLength(50)
                .HasColumnName("description");
            entity.Property(e => e.District)
                .HasMaxLength(8)
                .IsFixedLength();
            entity.Property(e => e.DocAttachmentId).HasColumnName("DocAttachmentID");
            entity.Property(e => e.Enddate)
                .HasColumnType("datetime")
                .HasColumnName("enddate");
            entity.Property(e => e.FixedValue).HasColumnName("Fixed_Value");
            entity.Property(e => e.Id)
                .ValueGeneratedOnAdd()
                .HasColumnName("ID");
            entity.Property(e => e.JobTitle)
                .HasMaxLength(12)
                .HasColumnName("job_title");
            entity.Property(e => e.PaymentPeriod)
                .HasMaxLength(1)
                .IsFixedLength()
                .HasColumnName("Payment_Period");
            entity.Property(e => e.ResId).HasColumnName("Res_id");
            entity.Property(e => e.Sliptext1).HasMaxLength(70);
            entity.Property(e => e.Sliptext2).HasMaxLength(70);
            entity.Property(e => e.Sliptext3).HasMaxLength(70);
            entity.Property(e => e.Startdate)
                .HasColumnType("datetime")
                .HasColumnName("startdate");
            entity.Property(e => e.Syscreated)
                .HasColumnType("datetime")
                .HasColumnName("syscreated");
            entity.Property(e => e.Syscreator).HasColumnName("syscreator");
            entity.Property(e => e.Sysguid).HasColumnName("sysguid");
            entity.Property(e => e.Sysmodified)
                .HasColumnType("datetime")
                .HasColumnName("sysmodified");
            entity.Property(e => e.Sysmodifier).HasColumnName("sysmodifier");
            entity.Property(e => e.Timestamp)
                .IsRowVersion()
                .IsConcurrencyToken()
                .HasColumnName("timestamp");
            entity.Property(e => e.Type)
                .HasMaxLength(1)
                .IsFixedLength()
                .HasColumnName("type");
        });

        modelBuilder.Entity<Comment>(entity =>
        {
            entity.ToTable("Comment");

            entity.HasIndex(e => e.CreatorId, "IX_Comment_CreatorID");

            entity.HasIndex(e => e.OwnerId, "IX_Comment_OwnerID");

            entity.Property(e => e.Id)
                .HasDefaultValueSql("(newsequentialid())")
                .HasColumnName("ID");
            entity.Property(e => e.CreatorId).HasColumnName("CreatorID");
            entity.Property(e => e.OwnerId).HasColumnName("OwnerID");
            entity.Property(e => e.OwnerType).HasDefaultValue((short)3);
            entity.Property(e => e.ParentCommentId).HasColumnName("ParentCommentID");
        });

        modelBuilder.Entity<CompanyClass>(entity =>
        {
            entity.HasKey(e => e.Id).IsClustered(false);

            entity.HasIndex(e => new { e.ClassId, e.CompanyClassCode }, "IX_CompanyClasses")
                .IsUnique()
                .IsClustered();

            entity.HasIndex(e => new { e.ClassId, e.CompanyClassCode, e.ParentClassCode }, "IX_CompanyClassesRelationship").IsUnique();

            entity.Property(e => e.Id)
                .HasDefaultValueSql("(newid())")
                .HasColumnName("ID");
            entity.Property(e => e.ClassId).HasColumnName("ClassID");
            entity.Property(e => e.CompanyClassCode).HasMaxLength(30);
            entity.Property(e => e.Description).HasMaxLength(60);
            entity.Property(e => e.Level).HasDefaultValue(1);
            entity.Property(e => e.ParentClassCode).HasMaxLength(30);
            entity.Property(e => e.Timestamp)
                .IsRowVersion()
                .IsConcurrencyToken()
                .HasColumnName("timestamp");
        });

        modelBuilder.Entity<CompanyClassName>(entity =>
        {
            entity.HasKey(e => e.ClassId);

            entity.Property(e => e.ClassId)
                .ValueGeneratedNever()
                .HasColumnName("ClassID");
            entity.Property(e => e.Description).HasMaxLength(60);
            entity.Property(e => e.Timestamp)
                .IsRowVersion()
                .IsConcurrencyToken()
                .HasColumnName("timestamp");
        });

        modelBuilder.Entity<CompanyEmployee>(entity =>
        {
            entity.HasKey(e => e.Id).IsClustered(false);

            entity.HasIndex(e => new { e.CompanyCode, e.ScenarioCode, e.FinYear, e.FinPeriod, e.CostcenterCode }, "IX_CompanyEmployees_CompanyYearsPeriods")
                .IsUnique()
                .IsClustered();

            entity.Property(e => e.Id)
                .HasDefaultValueSql("(newid())")
                .HasColumnName("ID");
            entity.Property(e => e.CompanyCode)
                .HasMaxLength(6)
                .IsFixedLength();
            entity.Property(e => e.CostcenterCode).HasMaxLength(30);
            entity.Property(e => e.EmployeesFte).HasColumnName("EmployeesFTE");
            entity.Property(e => e.ScenarioCode).HasMaxLength(30);
            entity.Property(e => e.Timestamp)
                .IsRowVersion()
                .IsConcurrencyToken()
                .HasColumnName("timestamp");
        });

        modelBuilder.Entity<CompanyLog>(entity =>
        {
            entity.HasKey(e => e.LogId).IsClustered(false);

            entity.HasIndex(e => new { e.CompanyCode, e.Action }, "IX_CompanyLogsAction");

            entity.HasIndex(e => new { e.CompanyCode, e.DateStart }, "IX_CompanyLogs_CompanyCodeDateStart").IsClustered();

            entity.HasIndex(e => new { e.CompanyCode, e.Source }, "IX_CompanyLogs_CompanyCodeSource");

            entity.Property(e => e.LogId).HasColumnName("LogID");
            entity.Property(e => e.Action).HasMaxLength(40);
            entity.Property(e => e.CompanyCode)
                .HasMaxLength(6)
                .IsFixedLength();
            entity.Property(e => e.DateEnd).HasColumnType("datetime");
            entity.Property(e => e.DateStart).HasColumnType("datetime");
            entity.Property(e => e.Remark).HasMaxLength(255);
            entity.Property(e => e.ResId).HasColumnName("res_id");
            entity.Property(e => e.Source).HasMaxLength(60);
            entity.Property(e => e.Status).HasMaxLength(20);
            entity.Property(e => e.Timestamp)
                .IsRowVersion()
                .IsConcurrencyToken()
                .HasColumnName("timestamp");
        });

        modelBuilder.Entity<CompanyParticipation>(entity =>
        {
            entity.HasKey(e => e.Id).IsClustered(false);

            entity.HasIndex(e => new { e.ParentCompanyCode, e.ChildCompanyCode }, "IX_CompanyParticipations")
                .IsUnique()
                .IsClustered();

            entity.HasIndex(e => new { e.ChildCompanyCode, e.ParentCompanyCode }, "IX_CompanyParticipations_ChildParent");

            entity.Property(e => e.Id)
                .HasDefaultValueSql("(newid())")
                .HasColumnName("ID");
            entity.Property(e => e.ChildCompanyCode)
                .HasMaxLength(6)
                .IsFixedLength();
            entity.Property(e => e.ParentCompanyCode)
                .HasMaxLength(6)
                .IsFixedLength();
            entity.Property(e => e.Timestamp)
                .IsRowVersion()
                .IsConcurrencyToken()
                .HasColumnName("timestamp");
        });

        modelBuilder.Entity<CompetenceMatchProfile>(entity =>
        {
            entity.HasKey(e => e.Id).IsClustered(false);

            entity.HasIndex(e => e.Id, "CompetenceMatchProfiles_Index").IsClustered();

            entity.HasIndex(e => e.ProfileId, "IX_CompetenceMatchProfiles");

            entity.Property(e => e.Id)
                .HasDefaultValueSql("(newid())")
                .HasColumnName("ID");
            entity.Property(e => e.Created)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime");
            entity.Property(e => e.Description).HasMaxLength(100);
            entity.Property(e => e.Modified)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime");
        });

        modelBuilder.Entity<ConsolidationBalance>(entity =>
        {
            entity.HasIndex(e => new { e.Division, e.RecordType, e.PresentationCurrency, e.DivisionGl, e.DivisionYear, e.DivisionPeriod }, "IX_Balance");

            entity.Property(e => e.Id).HasColumnName("ID");
            entity.Property(e => e.Created)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime");
            entity.Property(e => e.Division)
                .HasMaxLength(3)
                .IsFixedLength();
            entity.Property(e => e.DivisionCurrency)
                .HasMaxLength(3)
                .IsFixedLength();
            entity.Property(e => e.DivisionGl)
                .HasMaxLength(9)
                .IsFixedLength()
                .HasColumnName("DivisionGL");
            entity.Property(e => e.DivisionPeriod)
                .HasMaxLength(3)
                .IsFixedLength();
            entity.Property(e => e.Modified)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime");
            entity.Property(e => e.Parent)
                .HasMaxLength(3)
                .IsFixedLength();
            entity.Property(e => e.PresentationCurrency)
                .HasMaxLength(3)
                .IsFixedLength();
            entity.Property(e => e.ProcessOrigin)
                .HasMaxLength(1)
                .IsFixedLength();
            entity.Property(e => e.RecordType)
                .HasMaxLength(1)
                .IsFixedLength();
        });

        modelBuilder.Entity<ConsolidationStructure>(entity =>
        {
            entity.HasIndex(e => new { e.Division, e.Parent, e.Status, e.ParentStartYear, e.ParentStartPeriod, e.ParentEndYear, e.ParentEndPeriod }, "IX_ConsoStruc_ParentDivision");

            entity.Property(e => e.Id).HasColumnName("ID");
            entity.Property(e => e.Created)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime");
            entity.Property(e => e.Division)
                .HasMaxLength(3)
                .IsFixedLength();
            entity.Property(e => e.Method)
                .HasMaxLength(1)
                .IsFixedLength();
            entity.Property(e => e.Modified)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime");
            entity.Property(e => e.Parent)
                .HasMaxLength(3)
                .IsFixedLength();
            entity.Property(e => e.ParentEndPeriod)
                .HasMaxLength(3)
                .IsFixedLength();
            entity.Property(e => e.ParentStartPeriod)
                .HasMaxLength(3)
                .IsFixedLength();
            entity.Property(e => e.Status)
                .HasMaxLength(1)
                .HasDefaultValue("A")
                .IsFixedLength();
        });

        modelBuilder.Entity<ContractParameter>(entity =>
        {
            entity.HasKey(e => e.Id).IsClustered(false);

            entity.HasIndex(e => new { e.Company, e.ValidFrom }, "IX_ContractParameters_CompanyValidFrom")
                .IsDescending(false, true)
                .IsClustered();

            entity.Property(e => e.Id)
                .ValueGeneratedNever()
                .HasColumnName("ID");
            entity.Property(e => e.BillingType).HasDefaultValue(1);
            entity.Property(e => e.Company).HasMaxLength(3);
            entity.Property(e => e.CostCenterCode)
                .HasMaxLength(8)
                .IsFixedLength();
            entity.Property(e => e.DeliveryDebtor)
                .HasMaxLength(1)
                .IsFixedLength();
            entity.Property(e => e.Description).HasMaxLength(20);
            entity.Property(e => e.DocumentType)
                .HasMaxLength(3)
                .HasDefaultValue("CSV");
            entity.Property(e => e.InvoiceCode)
                .HasMaxLength(3)
                .IsFixedLength();
            entity.Property(e => e.RenewalInterval).HasMaxLength(3);
            entity.Property(e => e.ResourceId).HasColumnName("ResourceID");
            entity.Property(e => e.SalesInvoiceCode)
                .HasMaxLength(3)
                .IsFixedLength();
            entity.Property(e => e.SelectionCode)
                .HasMaxLength(2)
                .IsFixedLength();
            entity.Property(e => e.ValidFrom).HasColumnType("datetime");
            entity.Property(e => e.YourRef).HasMaxLength(30);
        });

        modelBuilder.Entity<CostcenterClass>(entity =>
        {
            entity.HasKey(e => e.Id).IsClustered(false);

            entity.HasIndex(e => new { e.ClassId, e.CostcenterClassCode }, "IX_CostcenterClasses")
                .IsUnique()
                .IsClustered();

            entity.Property(e => e.Id)
                .HasDefaultValueSql("(newid())")
                .HasColumnName("ID");
            entity.Property(e => e.ClassId).HasColumnName("ClassID");
            entity.Property(e => e.CostcenterClassCode).HasMaxLength(30);
            entity.Property(e => e.Description).HasMaxLength(60);
            entity.Property(e => e.Timestamp)
                .IsRowVersion()
                .IsConcurrencyToken()
                .HasColumnName("timestamp");
        });

        modelBuilder.Entity<CostcenterClassName>(entity =>
        {
            entity.HasKey(e => e.ClassId);

            entity.Property(e => e.ClassId)
                .ValueGeneratedNever()
                .HasColumnName("ClassID");
            entity.Property(e => e.Description).HasMaxLength(60);
            entity.Property(e => e.Timestamp)
                .IsRowVersion()
                .IsConcurrencyToken()
                .HasColumnName("timestamp");
        });

        modelBuilder.Entity<Credit>(entity =>
        {
            entity
                .HasNoKey()
                .ToView("Credit");

            entity.Property(e => e.Aandacht).HasColumnName("aandacht");
            entity.Property(e => e.AantBstkp).HasColumnName("aant_bstkp");
            entity.Property(e => e.Adres1)
                .HasMaxLength(100)
                .HasColumnName("adres1");
            entity.Property(e => e.Adres2)
                .HasMaxLength(100)
                .HasColumnName("adres2");
            entity.Property(e => e.Adres3)
                .HasMaxLength(100)
                .HasColumnName("adres3");
            entity.Property(e => e.Autombet).HasColumnName("autombet");
            entity.Property(e => e.Banknr1)
                .HasMaxLength(34)
                .HasColumnName("banknr1");
            entity.Property(e => e.Banknr2)
                .HasMaxLength(34)
                .HasColumnName("banknr2");
            entity.Property(e => e.Bedrbest).HasColumnName("bedrbest");
            entity.Property(e => e.Bestbev).HasColumnName("bestbev");
            entity.Property(e => e.BetZkblwi)
                .HasMaxLength(10)
                .IsFixedLength()
                .HasColumnName("bet_zkblwi");
            entity.Property(e => e.BetZkgcd)
                .HasMaxLength(10)
                .IsFixedLength()
                .HasColumnName("bet_zkgcd");
            entity.Property(e => e.Betcond)
                .HasMaxLength(2)
                .IsFixedLength()
                .HasColumnName("betcond");
            entity.Property(e => e.Betwijze)
                .HasMaxLength(1)
                .IsFixedLength()
                .HasColumnName("betwijze");
            entity.Property(e => e.Blokkeer).HasColumnName("blokkeer");
            entity.Property(e => e.Blznr).HasColumnName("blznr");
            entity.Property(e => e.BtwNummer)
                .HasMaxLength(20)
                .HasColumnName("btw_nummer");
            entity.Property(e => e.Btwtrans)
                .HasMaxLength(3)
                .IsFixedLength()
                .HasColumnName("btwtrans");
            entity.Property(e => e.CategBelg).HasColumnName("categ_belg");
            entity.Property(e => e.Categorie)
                .HasMaxLength(2)
                .IsFixedLength()
                .HasColumnName("categorie");
            entity.Property(e => e.CentrAccount)
                .HasMaxLength(9)
                .IsFixedLength()
                .HasColumnName("centr_account");
            entity.Property(e => e.Cntpers1)
                .HasMaxLength(112)
                .HasColumnName("cntpers1");
            entity.Property(e => e.CompanyCode)
                .HasMaxLength(3)
                .IsFixedLength();
            entity.Property(e => e.CrdAdrnr)
                .HasMaxLength(10)
                .IsFixedLength()
                .HasColumnName("crd_adrnr");
            entity.Property(e => e.Crdnr)
                .HasMaxLength(6)
                .IsFixedLength()
                .HasColumnName("crdnr");
            entity.Property(e => e.Crdtext).HasColumnName("crdtext");
            entity.Property(e => e.Crdzk)
                .HasMaxLength(6)
                .IsFixedLength()
                .HasColumnName("crdzk");
            entity.Property(e => e.Dagbknr)
                .HasMaxLength(3)
                .IsFixedLength()
                .HasColumnName("dagbknr");
            entity.Property(e => e.Datumctrl)
                .HasColumnType("datetime")
                .HasColumnName("datumctrl");
            entity.Property(e => e.DocumentId).HasColumnName("DocumentID");
            entity.Property(e => e.Email)
                .HasMaxLength(128)
                .HasColumnName("email");
            entity.Property(e => e.Erklev).HasColumnName("erklev");
            entity.Property(e => e.ExArtcode)
                .HasMaxLength(2)
                .IsFixedLength()
                .HasColumnName("ex_artcode");
            entity.Property(e => e.Faxnr)
                .HasMaxLength(25)
                .HasColumnName("faxnr");
            entity.Property(e => e.Fiscode)
                .HasMaxLength(30)
                .HasColumnName("fiscode");
            entity.Property(e => e.Freefield1)
                .HasMaxLength(80)
                .HasColumnName("freefield1");
            entity.Property(e => e.Freefield10)
                .HasMaxLength(80)
                .HasColumnName("freefield10");
            entity.Property(e => e.Freefield11).HasColumnName("freefield11");
            entity.Property(e => e.Freefield12).HasColumnName("freefield12");
            entity.Property(e => e.Freefield13).HasColumnName("freefield13");
            entity.Property(e => e.Freefield14).HasColumnName("freefield14");
            entity.Property(e => e.Freefield15).HasColumnName("freefield15");
            entity.Property(e => e.Freefield16).HasColumnName("freefield16");
            entity.Property(e => e.Freefield17).HasColumnName("freefield17");
            entity.Property(e => e.Freefield18).HasColumnName("freefield18");
            entity.Property(e => e.Freefield19).HasColumnName("freefield19");
            entity.Property(e => e.Freefield2)
                .HasMaxLength(80)
                .HasColumnName("freefield2");
            entity.Property(e => e.Freefield20).HasColumnName("freefield20");
            entity.Property(e => e.Freefield3)
                .HasMaxLength(80)
                .HasColumnName("freefield3");
            entity.Property(e => e.Freefield4)
                .HasMaxLength(80)
                .HasColumnName("freefield4");
            entity.Property(e => e.Freefield5)
                .HasMaxLength(80)
                .HasColumnName("freefield5");
            entity.Property(e => e.Freefield6)
                .HasMaxLength(80)
                .HasColumnName("freefield6");
            entity.Property(e => e.Freefield7)
                .HasMaxLength(80)
                .HasColumnName("freefield7");
            entity.Property(e => e.Freefield8)
                .HasMaxLength(80)
                .HasColumnName("freefield8");
            entity.Property(e => e.Freefield9)
                .HasMaxLength(80)
                .HasColumnName("freefield9");
            entity.Property(e => e.Functie1)
                .HasMaxLength(50)
                .HasColumnName("functie1");
            entity.Property(e => e.GenietCom).HasColumnName("geniet_com");
            entity.Property(e => e.IcoNummer)
                .HasMaxLength(8)
                .IsFixedLength()
                .HasColumnName("ico_nummer");
            entity.Property(e => e.Id).HasColumnName("ID");
            entity.Property(e => e.Imocode)
                .HasMaxLength(3)
                .IsFixedLength()
                .HasColumnName("imocode");
            entity.Property(e => e.IntRegio)
                .HasMaxLength(10)
                .IsFixedLength()
                .HasColumnName("int_regio");
            entity.Property(e => e.Internet)
                .HasMaxLength(128)
                .HasColumnName("internet");
            entity.Property(e => e.IntraLvcd)
                .HasMaxLength(10)
                .IsFixedLength()
                .HasColumnName("intra_lvcd");
            entity.Property(e => e.Invname1)
                .HasMaxLength(75)
                .HasColumnName("invname1");
            entity.Property(e => e.Klantcode)
                .HasMaxLength(10)
                .IsFixedLength()
                .HasColumnName("klantcode");
            entity.Property(e => e.Kortingo).HasColumnName("kortingo");
            entity.Property(e => e.Kostencode)
                .HasMaxLength(1)
                .IsFixedLength()
                .HasColumnName("kostencode");
            entity.Property(e => e.Kredlimiet).HasColumnName("kredlimiet");
            entity.Property(e => e.Kstplcode)
                .HasMaxLength(8)
                .IsFixedLength()
                .HasColumnName("kstplcode");
            entity.Property(e => e.LandIso)
                .HasMaxLength(3)
                .IsFixedLength()
                .HasColumnName("land_iso");
            entity.Property(e => e.Landabc)
                .HasMaxLength(3)
                .IsFixedLength()
                .HasColumnName("landabc");
            entity.Property(e => e.Landcode)
                .HasMaxLength(3)
                .IsFixedLength()
                .HasColumnName("landcode");
            entity.Property(e => e.Landherk)
                .HasMaxLength(3)
                .IsFixedLength()
                .HasColumnName("landherk");
            entity.Property(e => e.Landoorspr)
                .HasMaxLength(3)
                .IsFixedLength()
                .HasColumnName("landoorspr");
            entity.Property(e => e.Layoutcode)
                .HasMaxLength(1)
                .IsFixedLength()
                .HasColumnName("layoutcode");
            entity.Property(e => e.LimietBdr).HasColumnName("limiet_bdr");
            entity.Property(e => e.MaxwisBdr).HasColumnName("maxwis_bdr");
            entity.Property(e => e.Mv1)
                .HasMaxLength(1)
                .IsFixedLength()
                .HasColumnName("mv1");
            entity.Property(e => e.Naam)
                .HasMaxLength(50)
                .HasColumnName("naam");
            entity.Property(e => e.Opensaldo).HasColumnName("opensaldo");
            entity.Property(e => e.Participant)
                .HasMaxLength(9)
                .IsFixedLength()
                .HasColumnName("participant");
            entity.Property(e => e.Percentwka).HasColumnName("percentwka");
            entity.Property(e => e.PltsLl)
                .HasMaxLength(10)
                .IsFixedLength()
                .HasColumnName("plts_ll");
            entity.Property(e => e.Postcode)
                .HasMaxLength(20)
                .HasColumnName("postcode");
            entity.Property(e => e.Prdcode1)
                .HasMaxLength(4)
                .IsFixedLength()
                .HasColumnName("prdcode1");
            entity.Property(e => e.Prijslijst)
                .HasMaxLength(15)
                .HasColumnName("prijslijst");
            entity.Property(e => e.Pstbanknrc)
                .HasMaxLength(34)
                .HasColumnName("pstbanknrc");
            entity.Property(e => e.Region)
                .HasMaxLength(100)
                .HasColumnName("region");
            entity.Property(e => e.Saldontvwc).HasColumnName("saldontvwc");
            entity.Property(e => e.Saldontvwd).HasColumnName("saldontvwd");
            entity.Property(e => e.SignDatum)
                .HasColumnType("datetime")
                .HasColumnName("sign_datum");
            entity.Property(e => e.SoortCrd)
                .HasMaxLength(1)
                .IsFixedLength()
                .HasColumnName("soort_crd");
            entity.Property(e => e.Statfactor)
                .HasMaxLength(3)
                .IsFixedLength()
                .HasColumnName("statfactor");
            entity.Property(e => e.Status)
                .HasMaxLength(1)
                .HasColumnName("status");
            entity.Property(e => e.Stelsel)
                .HasMaxLength(10)
                .IsFixedLength()
                .HasColumnName("stelsel");
            entity.Property(e => e.Syscreated)
                .HasColumnType("datetime")
                .HasColumnName("syscreated");
            entity.Property(e => e.Syscreator).HasColumnName("syscreator");
            entity.Property(e => e.Sysguid).HasColumnName("sysguid");
            entity.Property(e => e.Sysmodified)
                .HasColumnType("datetime")
                .HasColumnName("sysmodified");
            entity.Property(e => e.Sysmodifier).HasColumnName("sysmodifier");
            entity.Property(e => e.Taalcode)
                .HasMaxLength(3)
                .IsFixedLength()
                .HasColumnName("taalcode");
            entity.Property(e => e.Tegreknr)
                .HasMaxLength(9)
                .IsFixedLength()
                .HasColumnName("tegreknr");
            entity.Property(e => e.Telex)
                .HasMaxLength(10)
                .IsFixedLength()
                .HasColumnName("telex");
            entity.Property(e => e.Telnr)
                .HasMaxLength(25)
                .HasColumnName("telnr");
            entity.Property(e => e.Telnrcp1)
                .HasMaxLength(25)
                .HasColumnName("telnrcp1");
            entity.Property(e => e.Timestamp)
                .IsRowVersion()
                .IsConcurrencyToken()
                .HasColumnName("timestamp");
            entity.Property(e => e.TransactA)
                .HasMaxLength(10)
                .IsFixedLength()
                .HasColumnName("transact_a");
            entity.Property(e => e.TransactB)
                .HasMaxLength(10)
                .IsFixedLength()
                .HasColumnName("transact_b");
            entity.Property(e => e.TrsshpmCd)
                .HasMaxLength(10)
                .IsFixedLength()
                .HasColumnName("trsshpm_cd");
            entity.Property(e => e.Valcode)
                .HasMaxLength(3)
                .IsFixedLength()
                .HasColumnName("valcode");
            entity.Property(e => e.Vervoer)
                .HasMaxLength(10)
                .IsFixedLength()
                .HasColumnName("vervoer");
            entity.Property(e => e.VerzOp)
                .HasMaxLength(1)
                .IsFixedLength()
                .HasColumnName("verz_op");
            entity.Property(e => e.Voornaam)
                .HasMaxLength(30)
                .HasColumnName("voornaam");
            entity.Property(e => e.Vrlttrs1)
                .HasMaxLength(10)
                .HasColumnName("vrlttrs1");
            entity.Property(e => e.WijzAbc).HasColumnName("wijz_abc");
            entity.Property(e => e.WijzBtwt).HasColumnName("wijz_btwt");
            entity.Property(e => e.WijzHerk).HasColumnName("wijz_herk");
            entity.Property(e => e.WijzLevcd).HasColumnName("wijz_levcd");
            entity.Property(e => e.WijzLl).HasColumnName("wijz_ll");
            entity.Property(e => e.WijzOorsp).HasColumnName("wijz_oorsp");
            entity.Property(e => e.WijzRegio).HasColumnName("wijz_regio");
            entity.Property(e => e.WijzStel).HasColumnName("wijz_stel");
            entity.Property(e => e.WijzTrsA).HasColumnName("wijz_trs_a");
            entity.Property(e => e.WijzTrsB).HasColumnName("wijz_trs_b");
            entity.Property(e => e.WijzTshpm).HasColumnName("wijz_tshpm");
            entity.Property(e => e.WijzVerv).HasColumnName("wijz_verv");
            entity.Property(e => e.Woonpl)
                .HasMaxLength(100)
                .HasColumnName("woonpl");
        });

        modelBuilder.Entity<Crmpage>(entity =>
        {
            entity.HasKey(e => e.Id).IsClustered(false);

            entity.ToTable("CRMPages");

            entity.HasIndex(e => e.Id, "CRMPages_Index").IsClustered();

            entity.HasIndex(e => e.Type, "PageType");

            entity.Property(e => e.Id)
                .HasDefaultValueSql("(newid())")
                .HasColumnName("ID");
            entity.Property(e => e.Description).HasMaxLength(60);
            entity.Property(e => e.Syscreated)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("syscreated");
            entity.Property(e => e.Syscreator).HasColumnName("syscreator");
            entity.Property(e => e.Sysmodified)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("sysmodified");
            entity.Property(e => e.Sysmodifier).HasColumnName("sysmodifier");
            entity.Property(e => e.Type)
                .HasMaxLength(1)
                .IsFixedLength();
        });

        modelBuilder.Entity<CrmpageContent>(entity =>
        {
            entity.HasKey(e => e.Id).IsClustered(false);

            entity.ToTable("CRMPageContent");

            entity.HasIndex(e => e.Id, "CRMPageContent_Index").IsClustered();

            entity.HasIndex(e => e.ContentOrder, "ContentOrder");

            entity.HasIndex(e => e.PageId, "ContentPageId");

            entity.HasIndex(e => new { e.PageId, e.ContentOrder }, "ContentPageIdOrder");

            entity.Property(e => e.Id)
                .HasDefaultValueSql("(newid())")
                .HasColumnName("ID");
            entity.Property(e => e.Description).HasMaxLength(60);
            entity.Property(e => e.PictureFileName).HasMaxLength(128);
            entity.Property(e => e.Syscreated)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("syscreated");
            entity.Property(e => e.Syscreator).HasColumnName("syscreator");
            entity.Property(e => e.Sysmodified)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("sysmodified");
            entity.Property(e => e.Sysmodifier).HasColumnName("sysmodifier");
            entity.Property(e => e.Url).HasColumnName("URL");
        });

        modelBuilder.Entity<CurrencyPeriodExchangeRate>(entity =>
        {
            entity.HasKey(e => e.Id).IsClustered(false);

            entity.HasIndex(e => new { e.BaseCurrencyCode, e.CurrencyCode, e.FinYear, e.FinPeriod }, "IX_CurrencyPeriodExchangeRates_CurrencyYearsPeriods")
                .IsUnique()
                .IsClustered();

            entity.Property(e => e.Id)
                .HasDefaultValueSql("(newid())")
                .HasColumnName("ID");
            entity.Property(e => e.BaseCurrencyCode)
                .HasMaxLength(3)
                .IsFixedLength();
            entity.Property(e => e.CurrencyCode)
                .HasMaxLength(3)
                .IsFixedLength();
            entity.Property(e => e.ExchangeRateAvgPeriod).HasDefaultValue(1.0);
            entity.Property(e => e.ExchangeRateBudgetPeriod).HasDefaultValue(1.0);
            entity.Property(e => e.ExchangeRateEndPeriod).HasDefaultValue(1.0);
            entity.Property(e => e.Timestamp)
                .IsRowVersion()
                .IsConcurrencyToken()
                .HasColumnName("timestamp");
        });

        modelBuilder.Entity<Dagbk>(entity =>
        {
            entity.HasKey(e => e.Id).IsClustered(false);

            entity.ToTable("dagbk");

            entity.HasIndex(e => e.Dagbknr, "dagbk")
                .IsUnique()
                .IsClustered();

            entity.HasIndex(e => new { e.Reknr, e.TypeDgbk, e.Dagbknr }, "dbkgbk").IsUnique();

            entity.Property(e => e.Id).HasColumnName("ID");
            entity.Property(e => e.Afk)
                .HasMaxLength(4)
                .IsFixedLength()
                .HasColumnName("afk");
            entity.Property(e => e.Banknr)
                .HasMaxLength(34)
                .HasColumnName("banknr");
            entity.Property(e => e.Blokbkst).HasColumnName("blokbkst");
            entity.Property(e => e.Blokdat).HasColumnName("blokdat");
            entity.Property(e => e.Blokkeer).HasColumnName("blokkeer");
            entity.Property(e => e.Boeksaldo).HasColumnName("boeksaldo");
            entity.Property(e => e.BtwAfh)
                .HasMaxLength(1)
                .IsFixedLength()
                .HasColumnName("btw_afh");
            entity.Property(e => e.Chckeinds)
                .HasDefaultValue((byte)1)
                .HasColumnName("chckeinds");
            entity.Property(e => e.Crednota)
                .HasMaxLength(1)
                .IsFixedLength()
                .HasColumnName("crednota");
            entity.Property(e => e.Dagbknr)
                .HasMaxLength(3)
                .IsFixedLength()
                .HasColumnName("dagbknr");
            entity.Property(e => e.Dagkoers).HasColumnName("dagkoers");
            entity.Property(e => e.DatumRec)
                .HasColumnType("datetime")
                .HasColumnName("datum_rec");
            entity.Property(e => e.Debcrd)
                .HasMaxLength(1)
                .IsFixedLength()
                .HasColumnName("debcrd");
            entity.Property(e => e.DefReknr)
                .HasMaxLength(9)
                .IsFixedLength()
                .HasColumnName("def_reknr");
            entity.Property(e => e.Docdate).HasColumnName("docdate");
            entity.Property(e => e.Docnumber).HasColumnName("docnumber");
            entity.Property(e => e.Freefield1)
                .HasMaxLength(75)
                .HasColumnName("freefield1");
            entity.Property(e => e.Freefield10).HasColumnName("freefield10");
            entity.Property(e => e.Freefield11).HasColumnName("freefield11");
            entity.Property(e => e.Freefield12).HasColumnName("freefield12");
            entity.Property(e => e.Freefield13).HasColumnName("freefield13");
            entity.Property(e => e.Freefield14)
                .HasColumnType("datetime")
                .HasColumnName("freefield14");
            entity.Property(e => e.Freefield15)
                .HasColumnType("datetime")
                .HasColumnName("freefield15");
            entity.Property(e => e.Freefield16)
                .HasColumnType("datetime")
                .HasColumnName("freefield16");
            entity.Property(e => e.Freefield17).HasColumnName("freefield17");
            entity.Property(e => e.Freefield18).HasColumnName("freefield18");
            entity.Property(e => e.Freefield19).HasColumnName("freefield19");
            entity.Property(e => e.Freefield2)
                .HasMaxLength(75)
                .HasColumnName("freefield2");
            entity.Property(e => e.Freefield20).HasColumnName("freefield20");
            entity.Property(e => e.Freefield3)
                .HasMaxLength(75)
                .HasColumnName("freefield3");
            entity.Property(e => e.Freefield4)
                .HasMaxLength(75)
                .HasColumnName("freefield4");
            entity.Property(e => e.Freefield5)
                .HasMaxLength(75)
                .HasColumnName("freefield5");
            entity.Property(e => e.Freefield6)
                .HasMaxLength(75)
                .HasColumnName("freefield6");
            entity.Property(e => e.Freefield7)
                .HasMaxLength(75)
                .HasColumnName("freefield7");
            entity.Property(e => e.Freefield8).HasColumnName("freefield8");
            entity.Property(e => e.Freefield9).HasColumnName("freefield9");
            entity.Property(e => e.Handmatig)
                .HasDefaultValue((byte)1)
                .HasColumnName("handmatig");
            entity.Property(e => e.Kredlimiet).HasColumnName("kredlimiet");
            entity.Property(e => e.LbkstOntv)
                .HasMaxLength(8)
                .IsFixedLength()
                .HasColumnName("lbkst_ontv");
            entity.Property(e => e.LbkstUitg)
                .HasMaxLength(8)
                .IsFixedLength()
                .HasColumnName("lbkst_uitg");
            entity.Property(e => e.Lbkstnr)
                .HasMaxLength(8)
                .IsFixedLength()
                .HasColumnName("lbkstnr");
            entity.Property(e => e.Lverwnr).HasColumnName("lverwnr");
            entity.Property(e => e.Oms250)
                .HasMaxLength(25)
                .HasColumnName("oms25_0");
            entity.Property(e => e.Oms251)
                .HasMaxLength(25)
                .HasColumnName("oms25_1");
            entity.Property(e => e.Oms252)
                .HasMaxLength(25)
                .HasColumnName("oms25_2");
            entity.Property(e => e.Oms253)
                .HasMaxLength(25)
                .HasColumnName("oms25_3");
            entity.Property(e => e.Oms254)
                .HasMaxLength(25)
                .HasColumnName("oms25_4");
            entity.Property(e => e.PettyCash).HasColumnName("petty_cash");
            entity.Property(e => e.Projdb).HasColumnName("projdb");
            entity.Property(e => e.Pstbnknr)
                .HasMaxLength(34)
                .HasColumnName("pstbnknr");
            entity.Property(e => e.RekBetow)
                .HasMaxLength(9)
                .IsFixedLength()
                .HasColumnName("rek_betow");
            entity.Property(e => e.RekInc)
                .HasMaxLength(9)
                .IsFixedLength()
                .HasColumnName("rek_inc");
            entity.Property(e => e.Reknr)
                .HasMaxLength(9)
                .IsFixedLength()
                .HasColumnName("reknr");
            entity.Property(e => e.SaldoRec).HasColumnName("saldo_rec");
            entity.Property(e => e.Sceaction)
                .HasDefaultValue((byte)1)
                .HasColumnName("sceaction");
            entity.Property(e => e.Scecode)
                .HasMaxLength(8)
                .IsFixedLength()
                .HasColumnName("scecode");
            entity.Property(e => e.Syscreated)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("syscreated");
            entity.Property(e => e.Syscreator).HasColumnName("syscreator");
            entity.Property(e => e.Sysguid)
                .HasDefaultValueSql("(newid())")
                .HasColumnName("sysguid");
            entity.Property(e => e.Sysmodified)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("sysmodified");
            entity.Property(e => e.Sysmodifier).HasColumnName("sysmodifier");
            entity.Property(e => e.Timestamp)
                .IsRowVersion()
                .IsConcurrencyToken()
                .HasColumnName("timestamp");
            entity.Property(e => e.TypeDgbk)
                .HasMaxLength(1)
                .IsFixedLength()
                .HasColumnName("type_dgbk");
            entity.Property(e => e.TypeTrans)
                .HasMaxLength(1)
                .IsFixedLength()
                .HasColumnName("type_trans");
            entity.Property(e => e.Valcode)
                .HasMaxLength(3)
                .IsFixedLength()
                .HasColumnName("valcode");
            entity.Property(e => e.Verwsaldo).HasColumnName("verwsaldo");
            entity.Property(e => e.VolgnrRec)
                .HasMaxLength(5)
                .IsFixedLength()
                .HasColumnName("volgnr_rec");
            entity.Property(e => e.Wijzval).HasColumnName("wijzval");
            entity.Property(e => e.Wisselmem).HasColumnName("wisselmem");
        });

        modelBuilder.Entity<DaylightSavingDate>(entity =>
        {
            entity.HasIndex(e => new { e.TimeZoneId, e.StartDate, e.EndDate }, "TimeZoneID_StartDate_EndDate");

            entity.Property(e => e.Id)
                .HasDefaultValueSql("(newid())")
                .HasColumnName("ID");
            entity.Property(e => e.Bias).HasDefaultValue(60);
            entity.Property(e => e.EndDate).HasColumnType("datetime");
            entity.Property(e => e.StartDate).HasColumnType("datetime");
            entity.Property(e => e.TimeZoneId).HasColumnName("TimeZoneID");
        });

        modelBuilder.Entity<DdbrowseInfo>(entity =>
        {
            entity.HasKey(e => e.TableName);

            entity.ToTable("DDBrowseInfo");

            entity.Property(e => e.TableName).HasMaxLength(128);
            entity.Property(e => e.ColInfo).HasMaxLength(1024);
            entity.Property(e => e.Tables).HasMaxLength(256);
        });

        modelBuilder.Entity<Ddcolumn>(entity =>
        {
            entity.HasKey(e => e.Id).IsClustered(false);

            entity.ToTable("DDColumns");

            entity.HasIndex(e => new { e.Tablename, e.Type, e.Flags, e.SeqNr, e.ColumnName }, "XAK1DDColumns")
                .IsUnique()
                .IsClustered();

            entity.HasIndex(e => new { e.Tablename, e.Id }, "XIF9DDColumns").IsUnique();

            entity.HasIndex(e => new { e.ColumnName, e.Tablename }, "XPKDDColumns").IsUnique();

            entity.Property(e => e.Id).HasColumnName("ID");
            entity.Property(e => e.ColumnName).HasMaxLength(30);
            entity.Property(e => e.Description).HasMaxLength(100);
            entity.Property(e => e.Suffix).HasMaxLength(100);
            entity.Property(e => e.Tablename).HasMaxLength(30);
        });

        modelBuilder.Entity<Ddindex>(entity =>
        {
            entity.HasKey(e => e.Id).IsClustered(false);

            entity.ToTable("DDIndexes");

            entity.HasIndex(e => new { e.TableName, e.SeqNr, e.IndexName }, "XAK1DDIndexes")
                .IsUnique()
                .IsClustered();

            entity.HasIndex(e => new { e.TableName, e.Id }, "XIF3DDIndexes").IsUnique();

            entity.HasIndex(e => new { e.TableName, e.IndexName }, "XPKDDIndexes").IsUnique();

            entity.Property(e => e.Id).HasColumnName("ID");
            entity.Property(e => e.IndexName).HasMaxLength(30);
            entity.Property(e => e.TableName).HasMaxLength(30);
        });

        modelBuilder.Entity<DdindexColumn>(entity =>
        {
            entity.HasKey(e => e.Id).IsClustered(false);

            entity.ToTable("DDIndexColumns");

            entity.HasIndex(e => new { e.Tablename, e.IndexName, e.SeqNr }, "XAK1DDIndexColumns")
                .IsUnique()
                .IsClustered();

            entity.HasIndex(e => new { e.Tablename, e.IndexName, e.Id }, "XIF4DDIndexColumns").IsUnique();

            entity.HasIndex(e => new { e.Tablename, e.ColumnName, e.Id }, "XIF8DDIndexColumns").IsUnique();

            entity.HasIndex(e => new { e.Tablename, e.IndexName, e.ColumnName }, "XPKDDIndexColumns").IsUnique();

            entity.Property(e => e.Id).HasColumnName("ID");
            entity.Property(e => e.ColumnName).HasMaxLength(30);
            entity.Property(e => e.IndexName).HasMaxLength(30);
            entity.Property(e => e.Tablename).HasMaxLength(30);
        });

        modelBuilder.Entity<Ddreference>(entity =>
        {
            entity.HasKey(e => e.Id).IsClustered(false);

            entity.ToTable("DDReferences");

            entity.HasIndex(e => new { e.TableName, e.SeqNr, e.ReferenceName }, "XAK1DDReferences")
                .IsUnique()
                .IsClustered();

            entity.HasIndex(e => new { e.TableName, e.Id }, "XIF12DDReferences").IsUnique();

            entity.HasIndex(e => new { e.ReferenceName, e.TableName }, "XPKDDReferences").IsUnique();

            entity.Property(e => e.Id).HasColumnName("ID");
            entity.Property(e => e.DeletionType)
                .HasMaxLength(1)
                .HasDefaultValue("R")
                .IsFixedLength();
            entity.Property(e => e.Description).HasMaxLength(100);
            entity.Property(e => e.ReferenceName).HasMaxLength(30);
            entity.Property(e => e.Suffix).HasMaxLength(100);
            entity.Property(e => e.TableName).HasMaxLength(30);
            entity.Property(e => e.TargetIndexName).HasMaxLength(30);
            entity.Property(e => e.TargetTableName).HasMaxLength(30);
        });

        modelBuilder.Entity<DdreferenceColumn>(entity =>
        {
            entity.HasKey(e => e.Id).IsClustered(false);

            entity.ToTable("DDReferenceColumns");

            entity.HasIndex(e => new { e.TableName, e.ReferenceName, e.SeqNr, e.ColumnName }, "XAK1DDReferenceColumns")
                .IsUnique()
                .IsClustered();

            entity.HasIndex(e => new { e.ReferenceName, e.TableName, e.Id }, "XIF1DDReferenceColumns").IsUnique();

            entity.HasIndex(e => new { e.TableName, e.ColumnName, e.Id }, "XIF7DDReferenceColumns").IsUnique();

            entity.HasIndex(e => new { e.TableName, e.ReferenceName, e.ColumnName }, "XPKDDReferenceColumns").IsUnique();

            entity.Property(e => e.Id).HasColumnName("ID");
            entity.Property(e => e.ColumnName).HasMaxLength(30);
            entity.Property(e => e.ReferenceName).HasMaxLength(30);
            entity.Property(e => e.TableName).HasMaxLength(30);
        });

        modelBuilder.Entity<Ddtable>(entity =>
        {
            entity.HasKey(e => e.Id).IsClustered(false);

            entity.ToTable("DDTables");

            entity.HasIndex(e => e.TableName, "XPKDDTables")
                .IsUnique()
                .IsClustered();

            entity.Property(e => e.Id).HasColumnName("ID");
            entity.Property(e => e.Abbr).HasMaxLength(20);
            entity.Property(e => e.Description).HasMaxLength(100);
            entity.Property(e => e.ReportOptions).HasMaxLength(500);
            entity.Property(e => e.SecurityLevelField).HasMaxLength(50);
            entity.Property(e => e.Suffix).HasMaxLength(100);
            entity.Property(e => e.TableName).HasMaxLength(30);
            entity.Property(e => e.Uid).HasMaxLength(30);
        });

        modelBuilder.Entity<Ddtest>(entity =>
        {
            entity.HasKey(e => e.Id).IsClustered(false);

            entity.ToTable("DDTests");

            entity.HasIndex(e => new { e.Tablename, e.FieldName, e.Id }, "XIF6DDTests").IsUnique();

            entity.HasIndex(e => new { e.Tablename, e.FieldName, e.DatabaseChar }, "XPKDDTests")
                .IsUnique()
                .IsClustered();

            entity.Property(e => e.Id).HasColumnName("ID");
            entity.Property(e => e.DatabaseChar)
                .HasMaxLength(1)
                .IsFixedLength();
            entity.Property(e => e.Description).HasMaxLength(100);
            entity.Property(e => e.DisplayChar)
                .HasMaxLength(1)
                .IsFixedLength();
            entity.Property(e => e.FieldName).HasMaxLength(30);
            entity.Property(e => e.Options).HasMaxLength(500);
            entity.Property(e => e.Tablename).HasMaxLength(30);
        });

        modelBuilder.Entity<Debitr>(entity =>
        {
            entity
                .HasNoKey()
                .ToView("Debitr");

            entity.Property(e => e.Aandacht).HasColumnName("aandacht");
            entity.Property(e => e.AantFakkp).HasColumnName("aant_fakkp");
            entity.Property(e => e.AccountEmployeeId).HasColumnName("AccountEmployeeID");
            entity.Property(e => e.Adres1)
                .HasMaxLength(100)
                .HasColumnName("adres1");
            entity.Property(e => e.Adres2)
                .HasMaxLength(100)
                .HasColumnName("adres2");
            entity.Property(e => e.Adres3)
                .HasMaxLength(100)
                .HasColumnName("adres3");
            entity.Property(e => e.Area)
                .HasMaxLength(30)
                .HasColumnName("area");
            entity.Property(e => e.Backorders).HasColumnName("backorders");
            entity.Property(e => e.Banknr)
                .HasMaxLength(34)
                .HasColumnName("banknr");
            entity.Property(e => e.Banknr2)
                .HasMaxLength(34)
                .HasColumnName("banknr2");
            entity.Property(e => e.Bedrorder).HasColumnName("bedrorder");
            entity.Property(e => e.BetZkblwi)
                .HasMaxLength(10)
                .IsFixedLength()
                .HasColumnName("bet_zkblwi");
            entity.Property(e => e.BetZkgcd)
                .HasMaxLength(10)
                .IsFixedLength()
                .HasColumnName("bet_zkgcd");
            entity.Property(e => e.Betcond)
                .HasMaxLength(2)
                .IsFixedLength()
                .HasColumnName("betcond");
            entity.Property(e => e.Bether).HasColumnName("bether");
            entity.Property(e => e.Betwijze)
                .HasMaxLength(1)
                .IsFixedLength()
                .HasColumnName("betwijze");
            entity.Property(e => e.Blokkeer).HasColumnName("blokkeer");
            entity.Property(e => e.Blznr).HasColumnName("blznr");
            entity.Property(e => e.BtwNummer)
                .HasMaxLength(20)
                .HasColumnName("btw_nummer");
            entity.Property(e => e.Btwtrans)
                .HasMaxLength(3)
                .IsFixedLength()
                .HasColumnName("btwtrans");
            entity.Property(e => e.CategBelg).HasColumnName("categ_belg");
            entity.Property(e => e.Categorie)
                .HasMaxLength(2)
                .IsFixedLength()
                .HasColumnName("categorie");
            entity.Property(e => e.CentrAccount)
                .HasMaxLength(9)
                .IsFixedLength()
                .HasColumnName("centr_account");
            entity.Property(e => e.Cntpers1)
                .HasMaxLength(112)
                .HasColumnName("cntpers1");
            entity.Property(e => e.CompanyCode)
                .HasMaxLength(3)
                .IsFixedLength();
            entity.Property(e => e.CreditabilityScenario)
                .HasMaxLength(1)
                .IsFixedLength();
            entity.Property(e => e.Creditcard)
                .HasMaxLength(34)
                .HasColumnName("creditcard");
            entity.Property(e => e.Dagbknr)
                .HasMaxLength(3)
                .IsFixedLength()
                .HasColumnName("dagbknr");
            entity.Property(e => e.Dagvmnd1).HasColumnName("dagvmnd1");
            entity.Property(e => e.Dagvmnd2).HasColumnName("dagvmnd2");
            entity.Property(e => e.Dagvmnd3).HasColumnName("dagvmnd3");
            entity.Property(e => e.Dagvmnd4).HasColumnName("dagvmnd4");
            entity.Property(e => e.Dagvmnd5).HasColumnName("dagvmnd5");
            entity.Property(e => e.Datlaanm)
                .HasColumnType("datetime")
                .HasColumnName("datlaanm");
            entity.Property(e => e.Datumctrl)
                .HasColumnType("datetime")
                .HasColumnName("datumctrl");
            entity.Property(e => e.DebAdrnr)
                .HasMaxLength(10)
                .IsFixedLength()
                .HasColumnName("deb_adrnr");
            entity.Property(e => e.Debnr)
                .HasMaxLength(6)
                .IsFixedLength()
                .HasColumnName("debnr");
            entity.Property(e => e.Debopensal).HasColumnName("debopensal");
            entity.Property(e => e.Debtext).HasColumnName("debtext");
            entity.Property(e => e.Debzk)
                .HasMaxLength(6)
                .IsFixedLength()
                .HasColumnName("debzk");
            entity.Property(e => e.DefAdrcd)
                .HasMaxLength(6)
                .IsFixedLength()
                .HasColumnName("def_adrcd");
            entity.Property(e => e.DefFkort).HasColumnName("def_fkort");
            entity.Property(e => e.DefRoutcd)
                .HasMaxLength(2)
                .IsFixedLength()
                .HasColumnName("def_routcd");
            entity.Property(e => e.DefSelcd)
                .HasMaxLength(2)
                .IsFixedLength()
                .HasColumnName("def_selcd");
            entity.Property(e => e.DocumentId).HasColumnName("DocumentID");
            entity.Property(e => e.Email)
                .HasMaxLength(128)
                .HasColumnName("email");
            entity.Property(e => e.ExArtcode)
                .HasMaxLength(2)
                .IsFixedLength()
                .HasColumnName("ex_artcode");
            entity.Property(e => e.Expirydate)
                .HasColumnType("datetime")
                .HasColumnName("expirydate");
            entity.Property(e => e.Fakdebnr)
                .HasMaxLength(6)
                .HasColumnName("fakdebnr");
            entity.Property(e => e.Faktoring).HasColumnName("faktoring");
            entity.Property(e => e.Faxnr)
                .HasMaxLength(25)
                .HasColumnName("faxnr");
            entity.Property(e => e.Fiscode)
                .HasMaxLength(30)
                .HasColumnName("fiscode");
            entity.Property(e => e.Freefield1)
                .HasMaxLength(80)
                .HasColumnName("freefield1");
            entity.Property(e => e.Freefield10)
                .HasMaxLength(80)
                .HasColumnName("freefield10");
            entity.Property(e => e.Freefield11).HasColumnName("freefield11");
            entity.Property(e => e.Freefield12).HasColumnName("freefield12");
            entity.Property(e => e.Freefield13).HasColumnName("freefield13");
            entity.Property(e => e.Freefield14).HasColumnName("freefield14");
            entity.Property(e => e.Freefield15).HasColumnName("freefield15");
            entity.Property(e => e.Freefield16).HasColumnName("freefield16");
            entity.Property(e => e.Freefield17).HasColumnName("freefield17");
            entity.Property(e => e.Freefield18).HasColumnName("freefield18");
            entity.Property(e => e.Freefield19).HasColumnName("freefield19");
            entity.Property(e => e.Freefield2)
                .HasMaxLength(80)
                .HasColumnName("freefield2");
            entity.Property(e => e.Freefield20).HasColumnName("freefield20");
            entity.Property(e => e.Freefield3)
                .HasMaxLength(80)
                .HasColumnName("freefield3");
            entity.Property(e => e.Freefield4)
                .HasMaxLength(80)
                .HasColumnName("freefield4");
            entity.Property(e => e.Freefield5)
                .HasMaxLength(80)
                .HasColumnName("freefield5");
            entity.Property(e => e.Freefield6)
                .HasMaxLength(80)
                .HasColumnName("freefield6");
            entity.Property(e => e.Freefield7)
                .HasMaxLength(80)
                .HasColumnName("freefield7");
            entity.Property(e => e.Freefield8)
                .HasMaxLength(80)
                .HasColumnName("freefield8");
            entity.Property(e => e.Freefield9)
                .HasMaxLength(80)
                .HasColumnName("freefield9");
            entity.Property(e => e.Functie1)
                .HasMaxLength(50)
                .HasColumnName("functie1");
            entity.Property(e => e.IcoNummer)
                .HasMaxLength(8)
                .IsFixedLength()
                .HasColumnName("ico_nummer");
            entity.Property(e => e.Id).HasColumnName("ID");
            entity.Property(e => e.IntRegio)
                .HasMaxLength(10)
                .IsFixedLength()
                .HasColumnName("int_regio");
            entity.Property(e => e.IntermediaryAssociate).HasMaxLength(30);
            entity.Property(e => e.IntermediaryAssociateId)
                .HasMaxLength(10)
                .IsFixedLength()
                .HasColumnName("IntermediaryAssociateID");
            entity.Property(e => e.Internet)
                .HasMaxLength(128)
                .HasColumnName("internet");
            entity.Property(e => e.IntraLvcd)
                .HasMaxLength(10)
                .IsFixedLength()
                .HasColumnName("intra_lvcd");
            entity.Property(e => e.Invlay)
                .HasMaxLength(8)
                .IsFixedLength()
                .HasColumnName("invlay");
            entity.Property(e => e.Invname1)
                .HasMaxLength(75)
                .HasColumnName("invname1");
            entity.Property(e => e.Invthreshold).HasColumnName("invthreshold");
            entity.Property(e => e.Korting).HasColumnName("korting");
            entity.Property(e => e.Kostencode)
                .HasMaxLength(1)
                .IsFixedLength()
                .HasColumnName("kostencode");
            entity.Property(e => e.Kredlimiet).HasColumnName("kredlimiet");
            entity.Property(e => e.Kstplcode)
                .HasMaxLength(8)
                .IsFixedLength()
                .HasColumnName("kstplcode");
            entity.Property(e => e.LandIso)
                .HasMaxLength(3)
                .IsFixedLength()
                .HasColumnName("land_iso");
            entity.Property(e => e.Landabc)
                .HasMaxLength(3)
                .IsFixedLength()
                .HasColumnName("landabc");
            entity.Property(e => e.Landbest)
                .HasMaxLength(3)
                .IsFixedLength()
                .HasColumnName("landbest");
            entity.Property(e => e.Landcode)
                .HasMaxLength(3)
                .IsFixedLength()
                .HasColumnName("landcode");
            entity.Property(e => e.Layoutcode)
                .HasMaxLength(1)
                .IsFixedLength()
                .HasColumnName("layoutcode");
            entity.Property(e => e.Levwijze)
                .HasMaxLength(5)
                .IsFixedLength()
                .HasColumnName("levwijze");
            entity.Property(e => e.Levy).HasColumnName("levy");
            entity.Property(e => e.LimietBdr).HasColumnName("limiet_bdr");
            entity.Property(e => e.Loc)
                .HasMaxLength(10)
                .IsFixedLength()
                .HasColumnName("loc");
            entity.Property(e => e.MaxwisBdr).HasColumnName("maxwis_bdr");
            entity.Property(e => e.Mv1)
                .HasMaxLength(1)
                .IsFixedLength()
                .HasColumnName("mv1");
            entity.Property(e => e.Naam)
                .HasMaxLength(50)
                .HasColumnName("naam");
            entity.Property(e => e.Orderbev)
                .HasMaxLength(1)
                .IsFixedLength()
                .HasColumnName("orderbev");
            entity.Property(e => e.PltsLl)
                .HasMaxLength(10)
                .IsFixedLength()
                .HasColumnName("plts_ll");
            entity.Property(e => e.Postcode)
                .HasMaxLength(20)
                .HasColumnName("postcode");
            entity.Property(e => e.Prdcode1)
                .HasMaxLength(4)
                .IsFixedLength()
                .HasColumnName("prdcode1");
            entity.Property(e => e.Prijslijst)
                .HasMaxLength(15)
                .HasColumnName("prijslijst");
            entity.Property(e => e.Pstbanknrd)
                .HasMaxLength(34)
                .HasColumnName("pstbanknrd");
            entity.Property(e => e.Region)
                .HasMaxLength(6)
                .IsFixedLength()
                .HasColumnName("region");
            entity.Property(e => e.RegionCd)
                .HasMaxLength(2)
                .IsFixedLength()
                .HasColumnName("region_cd");
            entity.Property(e => e.RepresentId).HasColumnName("represent_id");
            entity.Property(e => e.Saldontvwc).HasColumnName("saldontvwc");
            entity.Property(e => e.Saldontvwd).HasColumnName("saldontvwd");
            entity.Property(e => e.StatAdrnr)
                .HasMaxLength(10)
                .IsFixedLength()
                .HasColumnName("stat_adrnr");
            entity.Property(e => e.StatDatum)
                .HasColumnType("datetime")
                .HasColumnName("stat_datum");
            entity.Property(e => e.StatNr).HasColumnName("stat_nr");
            entity.Property(e => e.StatPrint).HasColumnName("stat_print");
            entity.Property(e => e.Statfactor)
                .HasMaxLength(3)
                .IsFixedLength()
                .HasColumnName("statfactor");
            entity.Property(e => e.Status)
                .HasMaxLength(1)
                .HasColumnName("status");
            entity.Property(e => e.Stelsel)
                .HasMaxLength(10)
                .IsFixedLength()
                .HasColumnName("stelsel");
            entity.Property(e => e.Syscreated)
                .HasColumnType("datetime")
                .HasColumnName("syscreated");
            entity.Property(e => e.Syscreator).HasColumnName("syscreator");
            entity.Property(e => e.Sysguid).HasColumnName("sysguid");
            entity.Property(e => e.Sysmodified)
                .HasColumnType("datetime")
                .HasColumnName("sysmodified");
            entity.Property(e => e.Sysmodifier).HasColumnName("sysmodifier");
            entity.Property(e => e.Taalcode)
                .HasMaxLength(3)
                .IsFixedLength()
                .HasColumnName("taalcode");
            entity.Property(e => e.Tegreknr)
                .HasMaxLength(9)
                .IsFixedLength()
                .HasColumnName("tegreknr");
            entity.Property(e => e.Telex)
                .HasMaxLength(10)
                .IsFixedLength()
                .HasColumnName("telex");
            entity.Property(e => e.Telnr)
                .HasMaxLength(25)
                .HasColumnName("telnr");
            entity.Property(e => e.Telnrcp1)
                .HasMaxLength(25)
                .HasColumnName("telnrcp1");
            entity.Property(e => e.Timestamp)
                .IsRowVersion()
                .IsConcurrencyToken()
                .HasColumnName("timestamp");
            entity.Property(e => e.TransactA)
                .HasMaxLength(10)
                .IsFixedLength()
                .HasColumnName("transact_a");
            entity.Property(e => e.TransactB)
                .HasMaxLength(10)
                .IsFixedLength()
                .HasColumnName("transact_b");
            entity.Property(e => e.TrsshpmCd)
                .HasMaxLength(10)
                .IsFixedLength()
                .HasColumnName("trsshpm_cd");
            entity.Property(e => e.Valcode)
                .HasMaxLength(3)
                .IsFixedLength()
                .HasColumnName("valcode");
            entity.Property(e => e.Vatliability)
                .HasMaxLength(1)
                .IsFixedLength()
                .HasColumnName("VATLiability");
            entity.Property(e => e.Vervoer)
                .HasMaxLength(10)
                .IsFixedLength()
                .HasColumnName("vervoer");
            entity.Property(e => e.VerzOp)
                .HasMaxLength(1)
                .IsFixedLength()
                .HasColumnName("verz_op");
            entity.Property(e => e.Verzamelen)
                .HasMaxLength(1)
                .IsFixedLength()
                .HasColumnName("verzamelen");
            entity.Property(e => e.Voornaam)
                .HasMaxLength(30)
                .HasColumnName("voornaam");
            entity.Property(e => e.Vrlttrs1)
                .HasMaxLength(10)
                .HasColumnName("vrlttrs1");
            entity.Property(e => e.WijzAbc).HasColumnName("wijz_abc");
            entity.Property(e => e.WijzBest).HasColumnName("wijz_best");
            entity.Property(e => e.WijzBtwt).HasColumnName("wijz_btwt");
            entity.Property(e => e.WijzLevcd).HasColumnName("wijz_levcd");
            entity.Property(e => e.WijzLl).HasColumnName("wijz_ll");
            entity.Property(e => e.WijzRegio).HasColumnName("wijz_regio");
            entity.Property(e => e.WijzStel).HasColumnName("wijz_stel");
            entity.Property(e => e.WijzTrsA).HasColumnName("wijz_trs_a");
            entity.Property(e => e.WijzTrsB).HasColumnName("wijz_trs_b");
            entity.Property(e => e.WijzTshpm).HasColumnName("wijz_tshpm");
            entity.Property(e => e.WijzVerv).HasColumnName("wijz_verv");
            entity.Property(e => e.Woonpl)
                .HasMaxLength(100)
                .HasColumnName("woonpl");
            entity.Property(e => e.Xvattype)
                .HasMaxLength(1)
                .IsFixedLength()
                .HasColumnName("xvattype");
        });

        modelBuilder.Entity<Dehrpayroll>(entity =>
        {
            entity
                .HasNoKey()
                .ToView("dehrpayroll");

            entity.Property(e => e.Arbeitnehmergruppe)
                .HasMaxLength(1)
                .IsFixedLength()
                .HasColumnName("arbeitnehmergruppe");
            entity.Property(e => e.ArbeitskammerLand)
                .HasMaxLength(1)
                .IsFixedLength()
                .HasColumnName("Arbeitskammer_land");
            entity.Property(e => e.BeitragsgrenzeAbweichung)
                .HasMaxLength(1)
                .IsFixedLength()
                .HasColumnName("beitragsgrenze_abweichung");
            entity.Property(e => e.Beitragsgruppe).HasColumnName("beitragsgruppe");
            entity.Property(e => e.Bundesland)
                .HasMaxLength(1)
                .IsFixedLength()
                .HasColumnName("bundesland");
            entity.Property(e => e.Contract).HasColumnName("contract");
            entity.Property(e => e.Country)
                .HasMaxLength(3)
                .IsFixedLength()
                .HasColumnName("country");
            entity.Property(e => e.Description)
                .HasMaxLength(50)
                .HasColumnName("description");
            entity.Property(e => e.Deuevstatus)
                .HasMaxLength(1)
                .IsFixedLength()
                .HasColumnName("DEUEVStatus");
            entity.Property(e => e.Einstufungsdatum).HasColumnType("datetime");
            entity.Property(e => e.Enddate)
                .HasColumnType("datetime")
                .HasColumnName("enddate");
            entity.Property(e => e.FreibetragMonth).HasColumnName("freibetrag_month");
            entity.Property(e => e.FreibetragYear).HasColumnName("freibetrag_year");
            entity.Property(e => e.GrundlohnSfn).HasColumnName("grundlohn_sfn");
            entity.Property(e => e.GrundlohnSfnFormel)
                .HasMaxLength(1)
                .IsFixedLength()
                .HasColumnName("grundlohn_sfn_formel");
            entity.Property(e => e.Id)
                .ValueGeneratedOnAdd()
                .HasColumnName("ID");
            entity.Property(e => e.JahreseinkommenAbweich).HasColumnName("jahreseinkommen_abweich");
            entity.Property(e => e.KinderPv).HasColumnName("KinderPV");
            entity.Property(e => e.Kinderfreibetraege).HasColumnName("kinderfreibetraege");
            entity.Property(e => e.KinderfreibetragKug).HasColumnName("KinderfreibetragKUG");
            entity.Property(e => e.Konfession)
                .HasMaxLength(1)
                .IsFixedLength()
                .HasColumnName("konfession");
            entity.Property(e => e.KonfessionEhegatte)
                .HasMaxLength(1)
                .IsFixedLength()
                .HasColumnName("konfession_ehegatte");
            entity.Property(e => e.KrankenversFreiw)
                .HasMaxLength(1)
                .IsFixedLength()
                .HasColumnName("krankenvers_freiw");
            entity.Property(e => e.KrankenversPrivat).HasColumnName("krankenvers_privat");
            entity.Property(e => e.LohnartSoll)
                .HasMaxLength(8)
                .IsFixedLength();
            entity.Property(e => e.Lohnsteuerjahresausgleich).HasColumnName("lohnsteuerjahresausgleich");
            entity.Property(e => e.Lohnsteuertabelle)
                .HasMaxLength(1)
                .IsFixedLength()
                .HasColumnName("lohnsteuertabelle");
            entity.Property(e => e.MehrfachBeschaeftigt)
                .HasMaxLength(1)
                .IsFixedLength()
                .HasColumnName("mehrfach_beschaeftigt");
            entity.Property(e => e.PauschaleKirchensteuer).HasColumnName("pauschale_kirchensteuer");
            entity.Property(e => e.Pauschalsteuersatz)
                .HasMaxLength(8)
                .IsFixedLength()
                .HasColumnName("pauschalsteuersatz");
            entity.Property(e => e.PaymentPeriod)
                .HasMaxLength(1)
                .IsFixedLength()
                .HasColumnName("payment_period");
            entity.Property(e => e.PflegeversFreiw)
                .HasMaxLength(1)
                .IsFixedLength()
                .HasColumnName("pflegevers_freiw");
            entity.Property(e => e.PflegeversPrivat).HasColumnName("pflegevers_privat");
            entity.Property(e => e.Rentenbezug)
                .HasMaxLength(1)
                .IsFixedLength()
                .HasColumnName("rentenbezug");
            entity.Property(e => e.ResId).HasColumnName("res_id");
            entity.Property(e => e.SollentgeldArt)
                .HasMaxLength(1)
                .IsFixedLength()
                .HasColumnName("sollentgeld_art");
            entity.Property(e => e.Sollentgelt).HasColumnName("sollentgelt");
            entity.Property(e => e.Startdate)
                .HasColumnType("datetime")
                .HasColumnName("startdate");
            entity.Property(e => e.Steuerklasse).HasColumnName("steuerklasse");
            entity.Property(e => e.SteuerklasseKug).HasColumnName("SteuerklasseKUG");
            entity.Property(e => e.SvKennzeichen)
                .HasMaxLength(1)
                .IsFixedLength()
                .HasColumnName("sv_kennzeichen");
            entity.Property(e => e.SvUnterbrechung)
                .HasMaxLength(1)
                .IsFixedLength()
                .HasColumnName("sv_unterbrechung");
            entity.Property(e => e.Syscreated)
                .HasColumnType("datetime")
                .HasColumnName("syscreated");
            entity.Property(e => e.Syscreator).HasColumnName("syscreator");
            entity.Property(e => e.Sysguid).HasColumnName("sysguid");
            entity.Property(e => e.Sysmodified)
                .HasColumnType("datetime")
                .HasColumnName("sysmodified");
            entity.Property(e => e.Sysmodifier).HasColumnName("sysmodifier");
            entity.Property(e => e.TimeStamp)
                .IsRowVersion()
                .IsConcurrencyToken();
            entity.Property(e => e.Type)
                .HasMaxLength(1)
                .IsFixedLength()
                .HasColumnName("type");
            entity.Property(e => e.UebernahmeSvAg).HasColumnName("uebernahme_sv_ag");
            entity.Property(e => e.UeberstdProzent).HasColumnName("ueberstd_prozent");
            entity.Property(e => e.VersorgungBeginn).HasColumnType("datetime");
            entity.Property(e => e.VersorgungBemessungEga).HasColumnName("VersorgungBemessungEGA");
            entity.Property(e => e.ZuverdienstgrenzeRente).HasColumnName("zuverdienstgrenze_rente");
        });

        modelBuilder.Entity<Dehrpayrollcontract>(entity =>
        {
            entity
                .HasNoKey()
                .ToView("dehrpayrollcontract");

            entity.Property(e => e.Arbeitnehmergruppe)
                .HasMaxLength(1)
                .IsFixedLength();
            entity.Property(e => e.AusbildungsPruefungstermin).HasColumnType("datetime");
            entity.Property(e => e.Ausbildungsart)
                .HasMaxLength(1)
                .IsFixedLength();
            entity.Property(e => e.Ausbildungsziel).HasMaxLength(70);
            entity.Property(e => e.AuslandArt)
                .HasMaxLength(1)
                .IsFixedLength();
            entity.Property(e => e.BefristetBis).HasColumnType("datetime");
            entity.Property(e => e.Befristungsgrund).HasMaxLength(30);
            entity.Property(e => e.Beschaeftigungsart)
                .HasMaxLength(1)
                .IsFixedLength();
            entity.Property(e => e.Contract).HasColumnName("contract");
            entity.Property(e => e.Country)
                .HasMaxLength(3)
                .IsFixedLength()
                .HasColumnName("country");
            entity.Property(e => e.Description)
                .HasMaxLength(50)
                .HasColumnName("description");
            entity.Property(e => e.DocAttachmentId).HasColumnName("DocAttachmentID");
            entity.Property(e => e.Enddate)
                .HasColumnType("datetime")
                .HasColumnName("enddate");
            entity.Property(e => e.GekuendigtAm).HasColumnType("datetime");
            entity.Property(e => e.GekuendigtZum).HasColumnType("datetime");
            entity.Property(e => e.Id)
                .ValueGeneratedOnAdd()
                .HasColumnName("ID");
            entity.Property(e => e.JobTitle)
                .HasMaxLength(12)
                .HasColumnName("job_title");
            entity.Property(e => e.KuendigungDurch)
                .HasMaxLength(1)
                .IsFixedLength();
            entity.Property(e => e.Kuendigungsgrund).HasMaxLength(30);
            entity.Property(e => e.Leistungsgruppe)
                .HasMaxLength(1)
                .IsFixedLength();
            entity.Property(e => e.PaymentPeriod)
                .HasMaxLength(1)
                .IsFixedLength()
                .HasColumnName("payment_period");
            entity.Property(e => e.Personengruppe)
                .HasMaxLength(1)
                .IsFixedLength();
            entity.Property(e => e.ResId).HasColumnName("res_id");
            entity.Property(e => e.Startdate)
                .HasColumnType("datetime")
                .HasColumnName("startdate");
            entity.Property(e => e.Syscreated)
                .HasColumnType("datetime")
                .HasColumnName("syscreated");
            entity.Property(e => e.Syscreator).HasColumnName("syscreator");
            entity.Property(e => e.Sysguid).HasColumnName("sysguid");
            entity.Property(e => e.Sysmodified)
                .HasColumnType("datetime")
                .HasColumnName("sysmodified");
            entity.Property(e => e.Sysmodifier).HasColumnName("sysmodifier");
            entity.Property(e => e.Timestamp)
                .IsRowVersion()
                .IsConcurrencyToken()
                .HasColumnName("timestamp");
            entity.Property(e => e.Type)
                .HasMaxLength(1)
                .IsFixedLength()
                .HasColumnName("type");
            entity.Property(e => e.Vertragsart)
                .HasMaxLength(1)
                .IsFixedLength();
        });

        modelBuilder.Entity<DeletionLog>(entity =>
        {
            entity.HasKey(e => e.Id)
                .HasName("PK_DeletionLog")
                .IsClustered(false);

            entity.HasIndex(e => new { e.TableName, e.CompanyCode, e.Timestamp }, "DelKey").IsClustered();

            entity.Property(e => e.Id).HasColumnName("ID");
            entity.Property(e => e.CompanyCode)
                .HasMaxLength(3)
                .IsFixedLength();
            entity.Property(e => e.KeyDate1).HasColumnType("datetime");
            entity.Property(e => e.KeyDate2).HasColumnType("datetime");
            entity.Property(e => e.KeyDate3).HasColumnType("datetime");
            entity.Property(e => e.KeyString1).HasMaxLength(50);
            entity.Property(e => e.KeyString2).HasMaxLength(50);
            entity.Property(e => e.KeyString3).HasMaxLength(50);
            entity.Property(e => e.KeyString4).HasMaxLength(50);
            entity.Property(e => e.KeyString5).HasMaxLength(50);
            entity.Property(e => e.Syscreated)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("syscreated");
            entity.Property(e => e.Syscreator).HasColumnName("syscreator");
            entity.Property(e => e.Sysguid)
                .HasDefaultValueSql("(newid())")
                .HasColumnName("sysguid");
            entity.Property(e => e.TableName).HasMaxLength(100);
            entity.Property(e => e.Timestamp)
                .IsRowVersion()
                .IsConcurrencyToken()
                .HasColumnName("timestamp");
        });

        modelBuilder.Entity<DivisionCreditor>(entity =>
        {
            entity.HasKey(e => e.DivisionCreditorId).IsClustered(false);

            entity.HasIndex(e => new { e.Account, e.Creditor, e.Division }, "AccountDivision").IsClustered();

            entity.HasIndex(e => new { e.Account, e.Division, e.Creditor }, "AccountDivisionCreditor");

            entity.HasIndex(e => new { e.CrdCode, e.Division }, "CrdCode");

            entity.HasIndex(e => new { e.Creditor, e.Division }, "CreditorDivision");

            entity.HasIndex(e => new { e.Division, e.Creditor }, "DivisionCreditor");

            entity.Property(e => e.DivisionCreditorId)
                .HasDefaultValueSql("(newid())")
                .HasColumnName("DivisionCreditorID");
            entity.Property(e => e.BankAccountNumber).HasMaxLength(34);
            entity.Property(e => e.CentralizationAccount)
                .HasMaxLength(9)
                .IsFixedLength();
            entity.Property(e => e.CheckDate).HasColumnType("datetime");
            entity.Property(e => e.CityOfLoadUnload)
                .HasMaxLength(10)
                .IsFixedLength();
            entity.Property(e => e.CmpAccMan).HasColumnName("cmp_acc_man");
            entity.Property(e => e.CmpStatus)
                .HasMaxLength(1)
                .IsFixedLength()
                .HasColumnName("cmp_status");
            entity.Property(e => e.CntId).HasColumnName("cnt_id");
            entity.Property(e => e.CountryOfAssembly)
                .HasMaxLength(3)
                .IsFixedLength();
            entity.Property(e => e.CrdCode).HasMaxLength(20);
            entity.Property(e => e.Creditor)
                .HasMaxLength(6)
                .IsFixedLength();
            entity.Property(e => e.Currency)
                .HasMaxLength(3)
                .IsFixedLength();
            entity.Property(e => e.DefaultSelCode)
                .HasMaxLength(2)
                .IsFixedLength();
            entity.Property(e => e.DeliveryMethod)
                .HasMaxLength(5)
                .IsFixedLength();
            entity.Property(e => e.DeliveryTerms)
                .HasMaxLength(10)
                .IsFixedLength();
            entity.Property(e => e.Division)
                .HasMaxLength(3)
                .HasDefaultValue("001")
                .IsFixedLength();
            entity.Property(e => e.ExemptNumber).HasMaxLength(20);
            entity.Property(e => e.FedCategory)
                .HasMaxLength(4)
                .IsFixedLength();
            entity.Property(e => e.FedIdnumber)
                .HasMaxLength(9)
                .IsFixedLength()
                .HasColumnName("FedIDNumber");
            entity.Property(e => e.FedIdtype)
                .HasMaxLength(1)
                .IsFixedLength()
                .HasColumnName("FedIDType");
            entity.Property(e => e.FiscalCode).HasMaxLength(30);
            entity.Property(e => e.IncoTermCode).HasMaxLength(3);
            entity.Property(e => e.IncoTermProperty).HasMaxLength(60);
            entity.Property(e => e.IntRegion)
                .HasMaxLength(10)
                .IsFixedLength();
            entity.Property(e => e.IntrastatSystem)
                .HasMaxLength(10)
                .IsFixedLength();
            entity.Property(e => e.ItemCode)
                .HasMaxLength(2)
                .IsFixedLength();
            entity.Property(e => e.Mailbox).HasMaxLength(128);
            entity.Property(e => e.OffSetAccount)
                .HasMaxLength(9)
                .IsFixedLength();
            entity.Property(e => e.PayeeName).HasMaxLength(40);
            entity.Property(e => e.PaymentCondition)
                .HasMaxLength(2)
                .IsFixedLength();
            entity.Property(e => e.PriceList).HasMaxLength(15);
            entity.Property(e => e.Region)
                .HasMaxLength(6)
                .IsFixedLength();
            entity.Property(e => e.ShipVia)
                .HasMaxLength(5)
                .IsFixedLength();
            entity.Property(e => e.StatFactor)
                .HasMaxLength(3)
                .IsFixedLength();
            entity.Property(e => e.Status)
                .HasMaxLength(1)
                .IsFixedLength();
            entity.Property(e => e.StatusSince)
                .HasColumnType("datetime")
                .HasColumnName("status_since");
            entity.Property(e => e.Syscreated)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("syscreated");
            entity.Property(e => e.Syscreator).HasColumnName("syscreator");
            entity.Property(e => e.Sysguid)
                .HasDefaultValueSql("(newid())")
                .HasColumnName("sysguid");
            entity.Property(e => e.Sysmodified)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("sysmodified");
            entity.Property(e => e.Sysmodifier).HasColumnName("sysmodifier");
            entity.Property(e => e.Timestamp)
                .IsRowVersion()
                .IsConcurrencyToken()
                .HasColumnName("timestamp");
            entity.Property(e => e.TransActionA)
                .HasMaxLength(10)
                .IsFixedLength();
            entity.Property(e => e.TransActionB)
                .HasMaxLength(10)
                .IsFixedLength();
            entity.Property(e => e.TransShipment)
                .HasMaxLength(10)
                .IsFixedLength();
            entity.Property(e => e.Transport)
                .HasMaxLength(10)
                .IsFixedLength();
            entity.Property(e => e.VatCode)
                .HasMaxLength(3)
                .IsFixedLength();
            entity.Property(e => e.VatLiability)
                .HasMaxLength(1)
                .IsFixedLength();
            entity.Property(e => e.VatNumber).HasMaxLength(20);
        });

        modelBuilder.Entity<DivisionDebtor>(entity =>
        {
            entity.HasKey(e => e.DivisionDebtorId).IsClustered(false);

            entity.HasIndex(e => new { e.Account, e.Debtor, e.Division }, "AccountDivision").IsClustered();

            entity.HasIndex(e => new { e.Account, e.Division, e.Debtor }, "AccountDivisionDebtor");

            entity.HasIndex(e => new { e.DebCode, e.Division }, "DebCode");

            entity.HasIndex(e => new { e.Debtor, e.Division }, "DebtorDivision");

            entity.HasIndex(e => new { e.Division, e.Debtor }, "DivisionDebtor");

            entity.Property(e => e.DivisionDebtorId)
                .HasDefaultValueSql("(newid())")
                .HasColumnName("DivisionDebtorID");
            entity.Property(e => e.AttachUbl).HasColumnName("AttachUBL");
            entity.Property(e => e.AvalaraEntityUseCode)
                .HasMaxLength(1)
                .IsFixedLength();
            entity.Property(e => e.BankAccountNumber).HasMaxLength(34);
            entity.Property(e => e.CentralizationAccount)
                .HasMaxLength(9)
                .IsFixedLength();
            entity.Property(e => e.ChangeVatServices).HasDefaultValue((byte)1);
            entity.Property(e => e.CheckDate).HasColumnType("datetime");
            entity.Property(e => e.CityOfLoadUnload)
                .HasMaxLength(10)
                .IsFixedLength();
            entity.Property(e => e.CmpAccMan).HasColumnName("cmp_acc_man");
            entity.Property(e => e.CmpStatus)
                .HasMaxLength(1)
                .IsFixedLength()
                .HasColumnName("cmp_status");
            entity.Property(e => e.CntId).HasColumnName("cnt_id");
            entity.Property(e => e.Collect)
                .HasMaxLength(1)
                .IsFixedLength();
            entity.Property(e => e.CreditabilityScenario)
                .HasMaxLength(1)
                .IsFixedLength();
            entity.Property(e => e.Currency)
                .HasMaxLength(3)
                .IsFixedLength();
            entity.Property(e => e.DateLastReminder).HasColumnType("datetime");
            entity.Property(e => e.DebCode).HasMaxLength(20);
            entity.Property(e => e.Debtor)
                .HasMaxLength(6)
                .IsFixedLength();
            entity.Property(e => e.DefaultSelCode)
                .HasMaxLength(2)
                .IsFixedLength();
            entity.Property(e => e.DeliveryMethod)
                .HasMaxLength(5)
                .IsFixedLength();
            entity.Property(e => e.DeliveryTerms)
                .HasMaxLength(10)
                .IsFixedLength();
            entity.Property(e => e.Division)
                .HasMaxLength(3)
                .HasDefaultValue("001")
                .IsFixedLength();
            entity.Property(e => e.ExemptNumber).HasMaxLength(20);
            entity.Property(e => e.FiscalCode).HasMaxLength(30);
            entity.Property(e => e.IntRegion)
                .HasMaxLength(10)
                .IsFixedLength();
            entity.Property(e => e.IntermediaryAssociateId)
                .HasMaxLength(10)
                .IsFixedLength()
                .HasColumnName("IntermediaryAssociateID");
            entity.Property(e => e.IntrastatSystem)
                .HasMaxLength(10)
                .IsFixedLength();
            entity.Property(e => e.InvoiceDebtor).HasMaxLength(6);
            entity.Property(e => e.InvoiceMethod)
                .HasMaxLength(1)
                .IsFixedLength();
            entity.Property(e => e.ItemCode)
                .HasMaxLength(2)
                .IsFixedLength();
            entity.Property(e => e.Mailbox).HasMaxLength(128);
            entity.Property(e => e.OffSetAccount)
                .HasMaxLength(9)
                .IsFixedLength();
            entity.Property(e => e.PayeeName).HasMaxLength(40);
            entity.Property(e => e.PaymentCondition)
                .HasMaxLength(2)
                .IsFixedLength();
            entity.Property(e => e.PriceList).HasMaxLength(15);
            entity.Property(e => e.PurchaseReceipt)
                .HasMaxLength(1)
                .IsFixedLength();
            entity.Property(e => e.Region)
                .HasMaxLength(6)
                .IsFixedLength();
            entity.Property(e => e.ShipVia)
                .HasMaxLength(5)
                .IsFixedLength();
            entity.Property(e => e.StatFactor)
                .HasMaxLength(3)
                .IsFixedLength();
            entity.Property(e => e.Status)
                .HasMaxLength(1)
                .IsFixedLength();
            entity.Property(e => e.StatusSince)
                .HasColumnType("datetime")
                .HasColumnName("status_since");
            entity.Property(e => e.Syscreated)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("syscreated");
            entity.Property(e => e.Syscreator).HasColumnName("syscreator");
            entity.Property(e => e.Sysguid)
                .HasDefaultValueSql("(newid())")
                .HasColumnName("sysguid");
            entity.Property(e => e.Sysmodified)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("sysmodified");
            entity.Property(e => e.Sysmodifier).HasColumnName("sysmodifier");
            entity.Property(e => e.TerritoryCode)
                .HasMaxLength(5)
                .IsFixedLength();
            entity.Property(e => e.Timestamp)
                .IsRowVersion()
                .IsConcurrencyToken()
                .HasColumnName("timestamp");
            entity.Property(e => e.TransActionA)
                .HasMaxLength(10)
                .IsFixedLength();
            entity.Property(e => e.TransActionB)
                .HasMaxLength(10)
                .IsFixedLength();
            entity.Property(e => e.TransShipment)
                .HasMaxLength(10)
                .IsFixedLength();
            entity.Property(e => e.Transport)
                .HasMaxLength(10)
                .IsFixedLength();
            entity.Property(e => e.VatCode)
                .HasMaxLength(3)
                .IsFixedLength();
            entity.Property(e => e.VatLiability)
                .HasMaxLength(1)
                .IsFixedLength();
            entity.Property(e => e.VatNumber).HasMaxLength(20);
            entity.Property(e => e.VatServices)
                .HasMaxLength(3)
                .IsFixedLength();
        });

        modelBuilder.Entity<DivisionPerson>(entity =>
        {
            entity.HasKey(e => e.Id).IsClustered(false);

            entity.HasIndex(e => new { e.Division, e.PersonId, e.Id }, "IX_DivisionPeople")
                .IsUnique()
                .IsClustered();

            entity.Property(e => e.Id)
                .HasDefaultValueSql("(newid())")
                .HasColumnName("ID");
            entity.Property(e => e.ContractEndDate).HasColumnType("datetime");
            entity.Property(e => e.CostCenter).HasMaxLength(30);
            entity.Property(e => e.CostUnit)
                .HasMaxLength(8)
                .IsFixedLength();
            entity.Property(e => e.CurrentRating)
                .HasMaxLength(3)
                .IsFixedLength();
            entity.Property(e => e.Division)
                .HasMaxLength(3)
                .HasDefaultValue("001")
                .IsFixedLength();
            entity.Property(e => e.DivisionCreditorId).HasColumnName("DivisionCreditorID");
            entity.Property(e => e.DivisionDebtorId).HasColumnName("DivisionDebtorID");
            entity.Property(e => e.Email).HasMaxLength(100);
            entity.Property(e => e.Extension).HasMaxLength(10);
            entity.Property(e => e.Fax).HasMaxLength(25);
            entity.Property(e => e.Fte).HasColumnName("FTE");
            entity.Property(e => e.Inactive).HasColumnType("datetime");
            entity.Property(e => e.JobTitle).HasMaxLength(12);
            entity.Property(e => e.Location).HasMaxLength(10);
            entity.Property(e => e.MainLocation).HasMaxLength(10);
            entity.Property(e => e.Mobile).HasMaxLength(25);
            entity.Property(e => e.PersonId).HasColumnName("PersonID");
            entity.Property(e => e.Phone).HasMaxLength(25);
            entity.Property(e => e.PreviousRating)
                .HasMaxLength(4)
                .IsFixedLength();
            entity.Property(e => e.Rate).HasMaxLength(30);
            entity.Property(e => e.Reason).HasMaxLength(120);
            entity.Property(e => e.Rmalimit).HasColumnName("RMALimit");
            entity.Property(e => e.Room).HasMaxLength(10);
            entity.Property(e => e.StartDate)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime");
            entity.Property(e => e.Status)
                .HasMaxLength(1)
                .IsFixedLength();
            entity.Property(e => e.Syscreated)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("syscreated");
            entity.Property(e => e.Syscreator).HasColumnName("syscreator");
            entity.Property(e => e.Sysmodified)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("sysmodified");
            entity.Property(e => e.Sysmodifier).HasColumnName("sysmodifier");
            entity.Property(e => e.Type)
                .HasMaxLength(1)
                .IsFixedLength();
        });

        modelBuilder.Entity<Dnbdun>(entity =>
        {
            entity.HasKey(e => e.Id).IsClustered(false);

            entity.ToTable("DNBDuns");

            entity.HasIndex(e => new { e.DunsNbr, e.CmpWwn }, "DNBDuns");

            entity.HasIndex(e => e.Id, "DNBDuns_Index").IsClustered();

            entity.Property(e => e.Id).HasColumnName("ID");
            entity.Property(e => e.ActPay).HasColumnName("act_pay");
            entity.Property(e => e.ActRec).HasColumnName("act_rec");
            entity.Property(e => e.AdrLine).HasColumnName("adr_line");
            entity.Property(e => e.AdrTenrTypeCd)
                .HasMaxLength(1)
                .IsFixedLength()
                .HasColumnName("adr_tenr_type_cd");
            entity.Property(e => e.AudtInd)
                .HasMaxLength(5)
                .IsFixedLength()
                .HasColumnName("audt_ind");
            entity.Property(e => e.AudtQlfnInd)
                .HasMaxLength(5)
                .IsFixedLength()
                .HasColumnName("audt_qlfn_ind");
            entity.Property(e => e.AvgHighCr).HasColumnName("avg_high_cr");
            entity.Property(e => e.BrInd)
                .HasMaxLength(5)
                .IsFixedLength()
                .HasColumnName("br_ind");
            entity.Property(e => e.BusRegnNbr).HasColumnName("bus_regn_nbr");
            entity.Property(e => e.BusRegnNbrTypeCd).HasColumnName("bus_regn_nbr_type_cd");
            entity.Property(e => e.BusStru)
                .HasMaxLength(5)
                .IsFixedLength()
                .HasColumnName("bus_stru");
            entity.Property(e => e.CaplAmt).HasColumnName("capl_amt");
            entity.Property(e => e.CaplCrcyCd).HasColumnName("capl_crcy_cd");
            entity.Property(e => e.CaplTypeCd).HasColumnName("capl_type_cd");
            entity.Property(e => e.CashLiqAset).HasColumnName("cash_liq_aset");
            entity.Property(e => e.CeoNme)
                .HasMaxLength(240)
                .HasColumnName("ceo_nme");
            entity.Property(e => e.CeoTitl)
                .HasMaxLength(240)
                .HasColumnName("ceo_titl");
            entity.Property(e => e.ClmInd)
                .HasMaxLength(5)
                .IsFixedLength()
                .HasColumnName("clm_ind");
            entity.Property(e => e.CmpWwn).HasColumnName("cmp_wwn");
            entity.Property(e => e.CnglDistCd).HasColumnName("cngl_dist_cd");
            entity.Property(e => e.ConsInd)
                .HasMaxLength(5)
                .IsFixedLength()
                .HasColumnName("cons_ind");
            entity.Property(e => e.CostOfSls).HasColumnName("cost_of_sls");
            entity.Property(e => e.CrScr).HasColumnName("cr_scr");
            entity.Property(e => e.CrScrCmty).HasColumnName("cr_scr_cmty");
            entity.Property(e => e.CrcyCd)
                .HasMaxLength(5)
                .IsFixedLength()
                .HasColumnName("crcy_cd");
            entity.Property(e => e.CrimInd)
                .HasMaxLength(5)
                .IsFixedLength()
                .HasColumnName("crim_ind");
            entity.Property(e => e.CtryCd)
                .HasMaxLength(3)
                .IsFixedLength()
                .HasColumnName("ctry_cd");
            entity.Property(e => e.CurrCntlYr).HasColumnName("curr_cntl_yr");
            entity.Property(e => e.CurrRato).HasColumnName("curr_rato");
            entity.Property(e => e.DavdInd)
                .HasMaxLength(1)
                .IsFixedLength()
                .HasColumnName("davd_ind");
            entity.Property(e => e.DbarCnt).HasColumnName("dbar_cnt");
            entity.Property(e => e.DbarDt)
                .HasColumnType("datetime")
                .HasColumnName("dbar_dt");
            entity.Property(e => e.Divd).HasColumnName("divd");
            entity.Property(e => e.DnbRatg)
                .HasMaxLength(5)
                .IsFixedLength()
                .HasColumnName("dnb_ratg");
            entity.Property(e => e.DocumentId).HasColumnName("DocumentID");
            entity.Property(e => e.DomUltCtryCd)
                .HasMaxLength(2)
                .IsFixedLength()
                .HasColumnName("dom_ult_ctry_cd");
            entity.Property(e => e.DomUltPntDuns)
                .HasMaxLength(13)
                .HasColumnName("dom_ult_pnt_duns");
            entity.Property(e => e.DomUltPntNme)
                .HasMaxLength(240)
                .HasColumnName("dom_ult_pnt_nme");
            entity.Property(e => e.DstrInd)
                .HasMaxLength(5)
                .IsFixedLength()
                .HasColumnName("dstr_ind");
            entity.Property(e => e.DunsNbr)
                .HasMaxLength(10)
                .HasColumnName("duns_nbr");
            entity.Property(e => e.EmplAtPrimAdr)
                .HasMaxLength(10)
                .HasColumnName("empl_at_prim_adr");
            entity.Property(e => e.EmplAtPrimAdrEstdInd)
                .HasMaxLength(5)
                .IsFixedLength()
                .HasColumnName("empl_at_prim_adr_estd_ind");
            entity.Property(e => e.EmplAtPrimAdrMinInd)
                .HasMaxLength(5)
                .IsFixedLength()
                .HasColumnName("empl_at_prim_adr_min_ind");
            entity.Property(e => e.EmplAtPrimAdrText)
                .HasMaxLength(12)
                .HasColumnName("empl_at_prim_adr_text");
            entity.Property(e => e.EnqDuns)
                .HasMaxLength(13)
                .HasColumnName("enq_duns");
            entity.Property(e => e.EstdInd)
                .HasMaxLength(5)
                .IsFixedLength()
                .HasColumnName("estd_ind");
            entity.Property(e => e.ExptInd)
                .HasMaxLength(1)
                .IsFixedLength()
                .HasColumnName("expt_ind");
            entity.Property(e => e.FailScr).HasColumnName("fail_scr");
            entity.Property(e => e.FailScrCmty).HasColumnName("fail_scr_cmty");
            entity.Property(e => e.FailScrNatlPctg)
                .HasDefaultValueSql("((0.0))")
                .HasColumnName("fail_scr_natl_pctg");
            entity.Property(e => e.FailScrOvrdCd)
                .HasMaxLength(3)
                .IsFixedLength()
                .HasColumnName("fail_scr_ovrd_cd");
            entity.Property(e => e.FaxNbr)
                .HasMaxLength(32)
                .HasColumnName("fax_nbr");
            entity.Property(e => e.FcstInd)
                .HasMaxLength(5)
                .IsFixedLength()
                .HasColumnName("fcst_ind");
            entity.Property(e => e.FinlEmbtInd)
                .HasMaxLength(5)
                .IsFixedLength()
                .HasColumnName("finl_embt_ind");
            entity.Property(e => e.FinlLglEvntInd)
                .HasMaxLength(5)
                .IsFixedLength()
                .HasColumnName("finl_lgl_evnt_ind");
            entity.Property(e => e.FiscInd)
                .HasMaxLength(5)
                .IsFixedLength()
                .HasColumnName("fisc_ind");
            entity.Property(e => e.FixdAset).HasColumnName("fixd_aset");
            entity.Property(e => e.FnalInd)
                .HasMaxLength(5)
                .IsFixedLength()
                .HasColumnName("fnal_ind");
            entity.Property(e => e.GblUltCtryCd)
                .HasMaxLength(2)
                .IsFixedLength()
                .HasColumnName("gbl_ult_ctry_cd");
            entity.Property(e => e.GblUltPntDuns)
                .HasMaxLength(13)
                .HasColumnName("gbl_ult_pnt_duns");
            entity.Property(e => e.GblUltPntNme)
                .HasMaxLength(240)
                .HasColumnName("gbl_ult_pnt_nme");
            entity.Property(e => e.GlblFailScr).HasColumnName("glbl_fail_scr");
            entity.Property(e => e.GrosIncm).HasColumnName("gros_incm");
            entity.Property(e => e.HighCr).HasColumnName("high_cr");
            entity.Property(e => e.HistInd)
                .HasMaxLength(5)
                .IsFixedLength()
                .HasColumnName("hist_ind");
            entity.Property(e => e.HqCtryCd)
                .HasMaxLength(2)
                .IsFixedLength()
                .HasColumnName("hq_ctry_cd");
            entity.Property(e => e.HqDuns)
                .HasMaxLength(13)
                .HasColumnName("hq_duns");
            entity.Property(e => e.HqNme)
                .HasMaxLength(240)
                .HasColumnName("hq_nme");
            entity.Property(e => e.ImptInd)
                .HasMaxLength(1)
                .IsFixedLength()
                .HasColumnName("impt_ind");
            entity.Property(e => e.IncmStmtDt)
                .HasColumnType("datetime")
                .HasColumnName("incm_stmt_dt");
            entity.Property(e => e.IncnYr).HasColumnName("incn_yr");
            entity.Property(e => e.IntlDlngCd).HasColumnName("intl_dlng_cd");
            entity.Property(e => e.ItngAset).HasColumnName("itng_aset");
            entity.Property(e => e.LbrSplsAreaInd)
                .HasMaxLength(1)
                .IsFixedLength()
                .HasColumnName("lbr_spls_area_ind");
            entity.Property(e => e.LclActvCd).HasColumnName("lcl_actv_cd");
            entity.Property(e => e.LclActvCdType).HasColumnName("lcl_actv_cd_type");
            entity.Property(e => e.LglForm)
                .HasMaxLength(10)
                .HasColumnName("lgl_form");
            entity.Property(e => e.LocnStat)
                .HasMaxLength(5)
                .IsFixedLength()
                .HasColumnName("locn_stat");
            entity.Property(e => e.LtDbt).HasColumnName("lt_dbt");
            entity.Property(e => e.MaxCr).HasColumnName("max_cr");
            entity.Property(e => e.MaxCrCrcyCd)
                .HasMaxLength(3)
                .IsFixedLength()
                .HasColumnName("max_cr_crcy_cd");
            entity.Property(e => e.MinyOwndInd)
                .HasMaxLength(1)
                .IsFixedLength()
                .HasColumnName("miny_ownd_ind");
            entity.Property(e => e.NetIncm).HasColumnName("net_incm");
            entity.Property(e => e.NetWrth).HasColumnName("net_wrth");
            entity.Property(e => e.NonPostTown)
                .HasMaxLength(50)
                .HasColumnName("non_post_town");
            entity.Property(e => e.OpenInd)
                .HasMaxLength(5)
                .IsFixedLength()
                .HasColumnName("open_ind");
            entity.Property(e => e.OprgSpecEvntInd)
                .HasMaxLength(5)
                .IsFixedLength()
                .HasColumnName("oprg_spec_evnt_ind");
            entity.Property(e => e.OthrSpecEvntInd)
                .HasMaxLength(5)
                .IsFixedLength()
                .HasColumnName("othr_spec_evnt_ind");
            entity.Property(e => e.OutBusInd)
                .HasMaxLength(1)
                .IsFixedLength()
                .HasColumnName("out_bus_ind");
            entity.Property(e => e.Package)
                .HasMaxLength(50)
                .HasColumnName("package");
            entity.Property(e => e.Payd3MoAgo).HasColumnName("payd_3_mo_ago");
            entity.Property(e => e.PaydNorm).HasColumnName("payd_norm");
            entity.Property(e => e.PaydScr).HasColumnName("payd_scr");
            entity.Property(e => e.PftBefTax).HasColumnName("pft_bef_tax");
            entity.Property(e => e.PntCtryCd)
                .HasMaxLength(2)
                .IsFixedLength()
                .HasColumnName("pnt_ctry_cd");
            entity.Property(e => e.PntDuns)
                .HasMaxLength(13)
                .HasColumnName("pnt_duns");
            entity.Property(e => e.PntNme)
                .HasMaxLength(240)
                .HasColumnName("pnt_nme");
            entity.Property(e => e.PostCode)
                .HasMaxLength(10)
                .HasColumnName("post_code");
            entity.Property(e => e.PostTown)
                .HasMaxLength(50)
                .HasColumnName("post_town");
            entity.Property(e => e.PrevNetWrth).HasColumnName("prev_net_wrth");
            entity.Property(e => e.PrevSls).HasColumnName("prev_sls");
            entity.Property(e => e.PrevStmtDt)
                .HasColumnType("datetime")
                .HasColumnName("prev_stmt_dt");
            entity.Property(e => e.PrevWrkgCapl).HasColumnName("prev_wrkg_capl");
            entity.Property(e => e.PrimGeoArea)
                .HasMaxLength(50)
                .HasColumnName("prim_geo_area");
            entity.Property(e => e.PrimNme)
                .HasMaxLength(240)
                .HasColumnName("prim_nme");
            entity.Property(e => e.PrimSic)
                .HasMaxLength(10)
                .HasColumnName("prim_sic");
            entity.Property(e => e.PrimSicTypeCd)
                .HasMaxLength(4)
                .IsFixedLength()
                .HasColumnName("prim_sic_type_cd");
            entity.Property(e => e.PrinNme)
                .HasMaxLength(40)
                .HasColumnName("prin_nme");
            entity.Property(e => e.PrinTtl).HasColumnName("prin_ttl");
            entity.Property(e => e.ProFrmaInd)
                .HasMaxLength(5)
                .IsFixedLength()
                .HasColumnName("pro_frma_ind");
            entity.Property(e => e.QkRato).HasColumnName("qk_rato");
            entity.Property(e => e.RegnType)
                .HasMaxLength(6)
                .IsFixedLength()
                .HasColumnName("regn_type");
            entity.Property(e => e.RestInd)
                .HasMaxLength(5)
                .IsFixedLength()
                .HasColumnName("rest_ind");
            entity.Property(e => e.RetnErng).HasColumnName("retn_erng");
            entity.Property(e => e.ScdyGeoArea)
                .HasMaxLength(50)
                .HasColumnName("scdy_geo_area");
            entity.Property(e => e.ScrdFlngInd)
                .HasMaxLength(5)
                .IsFixedLength()
                .HasColumnName("scrd_flng_ind");
            entity.Property(e => e.SerRat).HasColumnName("ser_rat");
            entity.Property(e => e.SgndInd)
                .HasMaxLength(5)
                .IsFixedLength()
                .HasColumnName("sgnd_ind");
            entity.Property(e => e.Sls).HasColumnName("sls");
            entity.Property(e => e.SmlBusInd)
                .HasMaxLength(1)
                .IsFixedLength()
                .HasColumnName("sml_bus_ind");
            entity.Property(e => e.Stat)
                .HasMaxLength(2)
                .IsFixedLength()
                .HasColumnName("stat");
            entity.Property(e => e.Stk).HasColumnName("stk");
            entity.Property(e => e.StmtCrcyCd)
                .HasMaxLength(3)
                .IsFixedLength()
                .HasColumnName("stmt_crcy_cd");
            entity.Property(e => e.StmtDt)
                .HasColumnType("datetime")
                .HasColumnName("stmt_dt");
            entity.Property(e => e.StmtFromDt)
                .HasColumnType("datetime")
                .HasColumnName("stmt_from_dt");
            entity.Property(e => e.StmtToDt)
                .HasColumnType("datetime")
                .HasColumnName("stmt_to_dt");
            entity.Property(e => e.StrtYr).HasColumnName("strt_yr");
            entity.Property(e => e.SuitJdgtInd)
                .HasMaxLength(5)
                .IsFixedLength()
                .HasColumnName("suit_jdgt_ind");
            entity.Property(e => e.Syscreated)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("syscreated");
            entity.Property(e => e.Syscreator).HasColumnName("syscreator");
            entity.Property(e => e.Sysguid)
                .HasDefaultValueSql("(newid())")
                .HasColumnName("sysguid");
            entity.Property(e => e.Sysmodified)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("sysmodified");
            entity.Property(e => e.Sysmodifier).HasColumnName("sysmodifier");
            entity.Property(e => e.Timestamp)
                .IsRowVersion()
                .IsConcurrencyToken()
                .HasColumnName("timestamp");
            entity.Property(e => e.TlcmNbr)
                .HasMaxLength(32)
                .HasColumnName("tlcm_nbr");
            entity.Property(e => e.TotAset).HasColumnName("tot_aset");
            entity.Property(e => e.TotCurrAset).HasColumnName("tot_curr_aset");
            entity.Property(e => e.TotCurrLiab).HasColumnName("tot_curr_liab");
            entity.Property(e => e.TotEmpl).HasColumnName("tot_empl");
            entity.Property(e => e.TotEmplEstdInd)
                .HasMaxLength(5)
                .IsFixedLength()
                .HasColumnName("tot_empl_estd_ind");
            entity.Property(e => e.TotEmplInd)
                .HasMaxLength(5)
                .IsFixedLength()
                .HasColumnName("tot_empl_ind");
            entity.Property(e => e.TotEmplMinInd)
                .HasMaxLength(5)
                .IsFixedLength()
                .HasColumnName("tot_empl_min_ind");
            entity.Property(e => e.TotEmplText)
                .HasMaxLength(12)
                .HasColumnName("tot_empl_text");
            entity.Property(e => e.TotLiab).HasColumnName("tot_liab");
            entity.Property(e => e.TotLiabAndEqy).HasColumnName("tot_liab_and_eqy");
            entity.Property(e => e.TotLtLiab).HasColumnName("tot_lt_liab");
            entity.Property(e => e.TotPmt).HasColumnName("tot_pmt");
            entity.Property(e => e.TrdgStyl).HasColumnName("trdg_styl");
            entity.Property(e => e.TrlBalInd)
                .HasMaxLength(5)
                .IsFixedLength()
                .HasColumnName("trl_bal_ind");
            entity.Property(e => e.UbalInd)
                .HasMaxLength(5)
                .IsFixedLength()
                .HasColumnName("ubal_ind");
            entity.Property(e => e.WomnOwndInd)
                .HasMaxLength(1)
                .IsFixedLength()
                .HasColumnName("womn_ownd_ind");
        });

        modelBuilder.Entity<Dnbdunsaggregate>(entity =>
        {
            entity.HasKey(e => e.Id).IsClustered(false);

            entity.ToTable("DNBDunsaggregate");

            entity.HasIndex(e => new { e.ParentId, e.Aggregatetype, e.Scoregroup }, "DNBDunsaggregate")
                .IsUnique()
                .IsClustered();

            entity.Property(e => e.Id).HasColumnName("ID");
            entity.Property(e => e.Aggregatetype)
                .HasMaxLength(30)
                .HasColumnName("aggregatetype");
            entity.Property(e => e.AlgmId)
                .HasMaxLength(10)
                .HasColumnName("algm_id");
            entity.Property(e => e.AsmtDt)
                .HasColumnType("datetime")
                .HasColumnName("asmt_dt");
            entity.Property(e => e.DefuIndn).HasColumnName("defu_indn");
            entity.Property(e => e.DelqScrEntr)
                .HasMaxLength(30)
                .HasColumnName("delq_scr_entr");
            entity.Property(e => e.FailScrEntr)
                .HasMaxLength(30)
                .HasColumnName("fail_scr_entr");
            entity.Property(e => e.GlblFailScrEntr).HasColumnName("glbl_fail_scr_entr");
            entity.Property(e => e.IndsDefuIndn)
                .HasMaxLength(240)
                .HasColumnName("inds_defu_indn");
            entity.Property(e => e.IndsNorm).HasColumnName("inds_norm");
            entity.Property(e => e.IndsPctl).HasColumnName("inds_pctl");
            entity.Property(e => e.NatlPctl).HasColumnName("natl_pctl");
            entity.Property(e => e.Scoregroup).HasColumnName("scoregroup");
            entity.Property(e => e.Scr).HasColumnName("scr");
            entity.Property(e => e.ScrAge).HasColumnName("scr_age");
            entity.Property(e => e.ScrClas).HasColumnName("scr_clas");
            entity.Property(e => e.ScrCmtyCd).HasColumnName("scr_cmty_cd");
            entity.Property(e => e.ScrGrp).HasColumnName("scr_grp");
            entity.Property(e => e.ScrOvrdCd).HasColumnName("scr_ovrd_cd");
            entity.Property(e => e.Syscreated)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("syscreated");
            entity.Property(e => e.Syscreator).HasColumnName("syscreator");
            entity.Property(e => e.Sysguid)
                .HasDefaultValueSql("(newid())")
                .HasColumnName("sysguid");
            entity.Property(e => e.Sysmodified)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("sysmodified");
            entity.Property(e => e.Sysmodifier).HasColumnName("sysmodifier");
            entity.Property(e => e.Timestamp)
                .IsRowVersion()
                .IsConcurrencyToken()
                .HasColumnName("timestamp");
        });

        modelBuilder.Entity<DocumentCorporateTag>(entity =>
        {
            entity.HasNoKey();

            entity.HasIndex(e => new { e.DocumentId, e.CreatedBy }, "IX_DocumentCorporateTags").IsClustered();

            entity.HasIndex(e => e.TagId, "IX_DocumentTagID");

            entity.Property(e => e.CreatedDate)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime");
            entity.Property(e => e.DocVersion).HasMaxLength(20);
            entity.Property(e => e.DocumentId).HasColumnName("DocumentID");
            entity.Property(e => e.Id)
                .ValueGeneratedOnAdd()
                .HasColumnName("ID");
            entity.Property(e => e.Tag).HasMaxLength(170);
            entity.Property(e => e.TagId).HasColumnName("TagID");
        });

        modelBuilder.Entity<DocumentReference>(entity =>
        {
            entity.HasKey(e => new { e.Entity, e.Document });

            entity.HasIndex(e => new { e.Document, e.Entity }, "IX_Document");
        });

        modelBuilder.Entity<DocumentStatistic>(entity =>
        {
            entity.HasKey(e => e.Document);

            entity.Property(e => e.Document).ValueGeneratedNever();
            entity.Property(e => e.Timestamp)
                .IsRowVersion()
                .IsConcurrencyToken()
                .HasColumnName("timestamp");
        });

        modelBuilder.Entity<DocumentTypeCorporateTag>(entity =>
        {
            entity.HasIndex(e => e.TypeId, "IX_CorporateTagsDocumentType");

            entity.Property(e => e.Id).HasColumnName("ID");
            entity.Property(e => e.CreatedDate)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime");
            entity.Property(e => e.Tag).HasMaxLength(170);
            entity.Property(e => e.TypeId).HasColumnName("TypeID");
        });

        modelBuilder.Entity<EbcBasicType>(entity =>
        {
            entity.HasKey(e => e.BasicTypeId);

            entity.Property(e => e.BasicTypeId).ValueGeneratedNever();
            entity.Property(e => e.BasicTypeName).HasMaxLength(30);
        });

        modelBuilder.Entity<EbcBrowser>(entity =>
        {
            entity.HasKey(e => e.BrowseId).IsClustered(false);

            entity.HasIndex(e => e.Name, "IX_EbcBrowsers").IsClustered();

            entity.Property(e => e.BrowseId).HasDefaultValueSql("(newid())");
            entity.Property(e => e.BrowseCaption).HasMaxLength(30);
            entity.Property(e => e.BrowseCaptionSuffix).HasMaxLength(30);
            entity.Property(e => e.BrowseCaptionSuffixTermId).HasColumnName("BrowseCaptionSuffixTermID");
            entity.Property(e => e.BrowseColInfo).HasMaxLength(2000);
            entity.Property(e => e.BrowseParams).HasMaxLength(300);
            entity.Property(e => e.BrowseQuery).HasMaxLength(3000);
            entity.Property(e => e.BrowseResultCol).HasMaxLength(30);
            entity.Property(e => e.BrowseTables).HasMaxLength(255);
            entity.Property(e => e.MaintenanceApplication).HasMaxLength(512);
            entity.Property(e => e.Name).HasMaxLength(30);
            entity.Property(e => e.RefColumn).HasMaxLength(255);
            entity.Property(e => e.RefKey).HasMaxLength(255);
            entity.Property(e => e.RefTable).HasMaxLength(30);
            entity.Property(e => e.SecurityLevel).HasDefaultValue(10);
            entity.Property(e => e.SecurityProviderParameters).HasMaxLength(255);

            entity.HasOne(d => d.Group).WithMany(p => p.EbcBrowsers)
                .HasForeignKey(d => d.GroupId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_EbcBrowsers_EbcGroups");
        });

        modelBuilder.Entity<EbcColumnGroup>(entity =>
        {
            entity.HasKey(e => e.GroupId);

            entity.Property(e => e.GroupId).ValueGeneratedNever();
            entity.Property(e => e.Description).HasMaxLength(255);
            entity.Property(e => e.GroupName).HasMaxLength(30);
            entity.Property(e => e.Suffix).HasMaxLength(100);
        });

        modelBuilder.Entity<EbcComponent>(entity =>
        {
            entity.HasKey(e => e.CompId).IsClustered(false);

            entity.HasIndex(e => e.ComponentName, "EbcComponentsCompName").IsClustered();

            entity.Property(e => e.CompId).ValueGeneratedNever();
            entity.Property(e => e.Assembly).HasMaxLength(60);
            entity.Property(e => e.BaseTable).HasMaxLength(30);
            entity.Property(e => e.Class).HasMaxLength(60);
            entity.Property(e => e.ComponentName).HasMaxLength(30);
            entity.Property(e => e.ComponentNameWs)
                .HasMaxLength(30)
                .HasColumnName("ComponentNameWS");
            entity.Property(e => e.Description).HasMaxLength(255);
            entity.Property(e => e.Params).HasMaxLength(255);
            entity.Property(e => e.ProgId).HasMaxLength(60);
            entity.Property(e => e.Query).HasMaxLength(2000);
            entity.Property(e => e.QueryKey).HasMaxLength(255);

            entity.HasOne(d => d.ComponentType).WithMany(p => p.EbcComponents)
                .HasForeignKey(d => d.ComponentTypeId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_EbcComp_EbcCompTypes");

            entity.HasOne(d => d.DataComponentType).WithMany(p => p.EbcComponents)
                .HasForeignKey(d => d.DataComponentTypeId)
                .HasConstraintName("FK_EbcComp_EbcDataCompTypes");

            entity.HasOne(d => d.Group).WithMany(p => p.EbcComponents)
                .HasForeignKey(d => d.GroupId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_EbcComp_EbcGroups");
        });

        modelBuilder.Entity<EbcComponentRelation>(entity =>
        {
            entity.HasKey(e => e.CompRelationId)
                .HasName("PK_EbcCompRelations")
                .IsClustered(false);

            entity.HasIndex(e => e.CompId1, "IX_EbcComponentRelations_1").IsClustered();

            entity.Property(e => e.CompRelationId).ValueGeneratedNever();
            entity.Property(e => e.CompRelationName).HasMaxLength(30);
            entity.Property(e => e.CompRelationValue).HasMaxLength(100);
            entity.Property(e => e.Enabled).HasDefaultValue(true);
            entity.Property(e => e.EnabledQuery).HasMaxLength(500);
            entity.Property(e => e.Options).HasMaxLength(100);

            entity.HasOne(d => d.CompId1Navigation).WithMany(p => p.EbcComponentRelationCompId1Navigations)
                .HasForeignKey(d => d.CompId1)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_EbcCompRelations_EbcComp_1");

            entity.HasOne(d => d.CompId2Navigation).WithMany(p => p.EbcComponentRelationCompId2Navigations)
                .HasForeignKey(d => d.CompId2)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_EbcCompRelations_EbcComp_2");

            entity.HasOne(d => d.CompRelationType).WithMany(p => p.EbcComponentRelations)
                .HasForeignKey(d => d.CompRelationTypeId)
                .HasConstraintName("FK__EbcCompon__CompR__2E678BB3");
        });

        modelBuilder.Entity<EbcComponentRelationType>(entity =>
        {
            entity.HasKey(e => e.CompRelationTypeId);

            entity.Property(e => e.CompRelationTypeId).ValueGeneratedNever();
            entity.Property(e => e.Description).HasMaxLength(255);
        });

        modelBuilder.Entity<EbcComponentType>(entity =>
        {
            entity.HasKey(e => e.ComponentTypeId);

            entity.Property(e => e.ComponentTypeId).ValueGeneratedNever();
            entity.Property(e => e.Description).HasMaxLength(255);
        });

        modelBuilder.Entity<EbcDataComponentType>(entity =>
        {
            entity.HasKey(e => e.DataComponentTypeId).HasName("PK_EbcDataCompTypes");

            entity.Property(e => e.DataComponentTypeId).ValueGeneratedNever();
            entity.Property(e => e.Description).HasMaxLength(255);
        });

        modelBuilder.Entity<EbcDataLog>(entity =>
        {
            entity.HasKey(e => e.Id).IsClustered(false);

            entity.ToTable("EbcDataLog");

            entity.HasIndex(e => new { e.Component, e.Created }, "Component_Created");

            entity.HasIndex(e => e.Created, "Created");

            entity.HasIndex(e => new { e.Creator, e.Created }, "Creator_Created");

            entity.HasIndex(e => new { e.Component, e.DataKey }, "Index1").IsClustered();

            entity.Property(e => e.Id)
                .HasDefaultValueSql("(newid())")
                .HasColumnName("ID");
            entity.Property(e => e.Comment).HasMaxLength(255);
            entity.Property(e => e.Created)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime");
            entity.Property(e => e.DataKey).HasMaxLength(50);
            entity.Property(e => e.NewValue).HasMaxLength(255);
            entity.Property(e => e.OldValue).HasMaxLength(255);
        });

        modelBuilder.Entity<EbcDefaultState>(entity =>
        {
            entity.HasKey(e => e.DefaultStateId).HasName("PK_EbcDefaultState");

            entity.Property(e => e.DefaultStateId).ValueGeneratedNever();
            entity.Property(e => e.Description).HasMaxLength(255);
        });

        modelBuilder.Entity<EbcDefaultType>(entity =>
        {
            entity.HasKey(e => e.DefaultTypeId);

            entity.Property(e => e.DefaultTypeId).ValueGeneratedNever();
            entity.Property(e => e.Description).HasMaxLength(255);
        });

        modelBuilder.Entity<EbcEnabledState>(entity =>
        {
            entity.HasKey(e => e.EnabledStateId);

            entity.Property(e => e.EnabledStateId).ValueGeneratedNever();
            entity.Property(e => e.Description).HasMaxLength(255);
        });

        modelBuilder.Entity<EbcEntity>(entity =>
        {
            entity.HasNoKey();

            entity.HasIndex(e => e.EntityId, "EbcEntities_Index").IsClustered();

            entity.Property(e => e.Description).HasMaxLength(255);
            entity.Property(e => e.EntityId)
                .HasDefaultValueSql("(newid())")
                .HasColumnName("EntityID");
            entity.Property(e => e.EntityName).HasMaxLength(30);
        });

        modelBuilder.Entity<EbcEntityRelation>(entity =>
        {
            entity.HasNoKey();

            entity.HasIndex(e => e.EntityRelationId, "EbcEntityRelations_Index").IsClustered();

            entity.Property(e => e.EntityId).HasColumnName("EntityID");
            entity.Property(e => e.EntityRelationId)
                .HasDefaultValueSql("(newid())")
                .HasColumnName("EntityRelationID");
        });

        modelBuilder.Entity<EbcGroup>(entity =>
        {
            entity.HasKey(e => e.GroupId);

            entity.Property(e => e.GroupId).ValueGeneratedNever();
            entity.Property(e => e.Description).HasMaxLength(255);
            entity.Property(e => e.GroupName).HasMaxLength(30);
            entity.Property(e => e.Suffix).HasMaxLength(100);
        });

        modelBuilder.Entity<EbcLogCustom>(entity =>
        {
            entity.HasKey(e => new { e.Component, e.Property });

            entity.ToTable("EbcLogCustom");
        });

        modelBuilder.Entity<EbcOperationPermission>(entity =>
        {
            entity.HasKey(e => e.OperationId);

            entity.HasIndex(e => new { e.OperationTypeId, e.CompId }, "IX_OperationTypeComp").IsUnique();

            entity.Property(e => e.OperationId)
                .ValueGeneratedNever()
                .HasColumnName("OperationID");
            entity.Property(e => e.CompId).HasColumnName("CompID");
            entity.Property(e => e.Context).HasMaxLength(40);
            entity.Property(e => e.OperationTypeId).HasColumnName("OperationTypeID");
        });

        modelBuilder.Entity<EbcOperationType>(entity =>
        {
            entity.HasKey(e => e.OperationTypeId).HasName("PK_ebcOperationTypes");

            entity.Property(e => e.OperationTypeId)
                .ValueGeneratedNever()
                .HasColumnName("OperationTypeID");
            entity.Property(e => e.Description).HasMaxLength(30);
        });

        modelBuilder.Entity<EbcProp>(entity =>
        {
            entity.HasKey(e => e.PropId).IsClustered(false);

            entity.HasIndex(e => new { e.CompId, e.BrowseId }, "IX_EbcProps_Comp");

            entity.HasIndex(e => e.PropName, "IX_EbcProps_PropName").IsClustered();

            entity.HasIndex(e => new { e.CompId, e.PropNameWs }, "IX_EbcProps_PropNameWS").IsUnique();

            entity.Property(e => e.PropId).ValueGeneratedNever();
            entity.Property(e => e.Caption).HasMaxLength(100);
            entity.Property(e => e.CaptionSuffix).HasMaxLength(60);
            entity.Property(e => e.CaptionSuffixTermId).HasColumnName("CaptionSuffixTermID");
            entity.Property(e => e.DefaultValue).HasMaxLength(1000);
            entity.Property(e => e.Description).HasMaxLength(255);
            entity.Property(e => e.LowerRange).HasMaxLength(100);
            entity.Property(e => e.Options).HasMaxLength(100);
            entity.Property(e => e.PropExposedWs).HasColumnName("PropExposedWS");
            entity.Property(e => e.PropName).HasMaxLength(40);
            entity.Property(e => e.PropNameWs)
                .HasMaxLength(40)
                .HasColumnName("PropNameWS");
            entity.Property(e => e.SelectionValues).HasMaxLength(1000);
            entity.Property(e => e.UpperRange).HasMaxLength(100);
            entity.Property(e => e.ValidationQuery).HasMaxLength(1000);

            entity.HasOne(d => d.Browse).WithMany(p => p.EbcProps)
                .HasForeignKey(d => d.BrowseId)
                .HasConstraintName("FK_EbcProps_EbcBrowsers");

            entity.HasOne(d => d.Comp).WithMany(p => p.EbcProps)
                .HasForeignKey(d => d.CompId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_EbcProps_EbcComponents");

            entity.HasOne(d => d.DefaultState).WithMany(p => p.EbcProps)
                .HasForeignKey(d => d.DefaultStateId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_EbcProps_EbcDefaultStates");

            entity.HasOne(d => d.DefaultType).WithMany(p => p.EbcProps)
                .HasForeignKey(d => d.DefaultTypeId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_EbcProps_EbcDefaultTypes");

            entity.HasOne(d => d.EnabledState).WithMany(p => p.EbcProps)
                .HasForeignKey(d => d.EnabledStateId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_EbcProps_EbcEnabledStates");

            entity.HasOne(d => d.PropType).WithMany(p => p.EbcProps)
                .HasForeignKey(d => d.PropTypeId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_EbcProps_EbcPropTypes");
        });

        modelBuilder.Entity<EbcPropRelation>(entity =>
        {
            entity.HasKey(e => e.PropRelationId);

            entity.HasIndex(e => e.CompRelationId, "Index1");

            entity.HasIndex(e => e.PropId, "Index2");

            entity.Property(e => e.PropRelationId).ValueGeneratedNever();
            entity.Property(e => e.Enabled).HasDefaultValue(true);
            entity.Property(e => e.PropName).HasMaxLength(40);
            entity.Property(e => e.PropRelationStateId).HasDefaultValue(0);
            entity.Property(e => e.PropRelationTypeId).HasDefaultValue(0);
            entity.Property(e => e.PropRelationValue).HasMaxLength(100);
            entity.Property(e => e.PropValue).HasMaxLength(100);

            entity.HasOne(d => d.CompRelation).WithMany(p => p.EbcPropRelations)
                .HasForeignKey(d => d.CompRelationId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_EbcPropRel_EbcCompRelations");

            entity.HasOne(d => d.Prop).WithMany(p => p.EbcPropRelations)
                .HasForeignKey(d => d.PropId)
                .HasConstraintName("FK_EbcPropRel_EbcProps");

            entity.HasOne(d => d.PropRelationState).WithMany(p => p.EbcPropRelations)
                .HasForeignKey(d => d.PropRelationStateId)
                .HasConstraintName("FK__EbcPropRe__PropR__36FCD1B4");

            entity.HasOne(d => d.PropRelationType).WithMany(p => p.EbcPropRelations)
                .HasForeignKey(d => d.PropRelationTypeId)
                .HasConstraintName("FK__EbcPropRe__PropR__38E51A26");
        });

        modelBuilder.Entity<EbcPropRelationState>(entity =>
        {
            entity.HasKey(e => e.PropRelationStateId).HasName("PK_EbcPropRelationState");

            entity.Property(e => e.PropRelationStateId).ValueGeneratedNever();
            entity.Property(e => e.Description).HasMaxLength(255);
        });

        modelBuilder.Entity<EbcPropRelationType>(entity =>
        {
            entity.HasKey(e => e.PropRelationTypeId);

            entity.Property(e => e.PropRelationTypeId).ValueGeneratedNever();
            entity.Property(e => e.Description).HasMaxLength(255);
        });

        modelBuilder.Entity<EbcPropType>(entity =>
        {
            entity.HasKey(e => e.PropTypeId).IsClustered(false);

            entity.HasIndex(e => e.TypeName, "IX_EbcPropTypes").IsClustered();

            entity.Property(e => e.PropTypeId).ValueGeneratedNever();
            entity.Property(e => e.AllowedChars).HasMaxLength(100);
            entity.Property(e => e.AllowedCharsQuery).HasMaxLength(1000);
            entity.Property(e => e.DefaultValue).HasMaxLength(2000);
            entity.Property(e => e.LowerRange).HasMaxLength(100);
            entity.Property(e => e.PrecisionQuery).HasMaxLength(500);
            entity.Property(e => e.PropPrecision).HasDefaultValue(10);
            entity.Property(e => e.SelectionValues).HasMaxLength(1000);
            entity.Property(e => e.TypeName).HasMaxLength(30);
            entity.Property(e => e.UpperRange).HasMaxLength(100);

            entity.HasOne(d => d.BasicType).WithMany(p => p.EbcPropTypes)
                .HasForeignKey(d => d.BasicTypeId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_EbcPropTypes_EbcBasicTypes");

            entity.HasOne(d => d.Group).WithMany(p => p.EbcPropTypes)
                .HasForeignKey(d => d.GroupId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_EbcPropTypes_EbcGroups");
        });

        modelBuilder.Entity<EbdataQueueEntry>(entity =>
        {
            entity.ToTable("EBDataQueueEntries");

            entity.HasIndex(e => new { e.Status, e.DateImported, e.Id }, "EBDataQueueEntries").IsUnique();

            entity.Property(e => e.Id).HasColumnName("ID");
            entity.Property(e => e.BankFormatId).HasColumnName("BankFormatID");
            entity.Property(e => e.Bedrnr)
                .HasMaxLength(3)
                .IsFixedLength()
                .HasColumnName("bedrnr");
            entity.Property(e => e.DateImported)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime");
            entity.Property(e => e.HumanResourceId).HasColumnName("HumanResourceID");
            entity.Property(e => e.OriginalDate).HasColumnType("datetime");
            entity.Property(e => e.OriginalName)
                .HasMaxLength(255)
                .HasDefaultValue("");
            entity.Property(e => e.Status)
                .HasMaxLength(1)
                .IsFixedLength();
            entity.Property(e => e.Syscreated)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("syscreated");
            entity.Property(e => e.Syscreator).HasColumnName("syscreator");
            entity.Property(e => e.Sysguid)
                .HasDefaultValueSql("(newid())")
                .HasColumnName("sysguid");
            entity.Property(e => e.Sysmodified)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("sysmodified");
            entity.Property(e => e.Sysmodifier).HasColumnName("sysmodifier");
            entity.Property(e => e.Timestamp)
                .IsRowVersion()
                .IsConcurrencyToken()
                .HasColumnName("timestamp");
            entity.Property(e => e.TotalAmountDc).HasColumnName("TotalAmountDC");
            entity.Property(e => e.Type)
                .HasMaxLength(1)
                .IsFixedLength();
        });

        modelBuilder.Entity<EblogEntry>(entity =>
        {
            entity.HasKey(e => e.Id).IsClustered(false);

            entity.ToTable("EBLogEntries");

            entity.HasIndex(e => e.Timestamp, "EBLogEntries")
                .IsUnique()
                .IsClustered();

            entity.Property(e => e.Id).HasColumnName("ID");
            entity.Property(e => e.Bedrnr)
                .HasMaxLength(3)
                .IsFixedLength()
                .HasColumnName("bedrnr");
            entity.Property(e => e.DataQueueId).HasColumnName("DataQueueID");
            entity.Property(e => e.Message)
                .HasMaxLength(1024)
                .HasDefaultValue("");
            entity.Property(e => e.ProgId)
                .HasMaxLength(128)
                .HasDefaultValue("")
                .HasColumnName("ProgID");
            entity.Property(e => e.Syscreated)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("syscreated");
            entity.Property(e => e.Syscreator).HasColumnName("syscreator");
            entity.Property(e => e.Sysguid)
                .HasDefaultValueSql("(newid())")
                .HasColumnName("sysguid");
            entity.Property(e => e.Sysmodified)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("sysmodified");
            entity.Property(e => e.Sysmodifier).HasColumnName("sysmodifier");
            entity.Property(e => e.Time)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("time");
            entity.Property(e => e.Timestamp)
                .IsRowVersion()
                .IsConcurrencyToken()
                .HasColumnName("timestamp");
        });

        modelBuilder.Entity<Ebmodule>(entity =>
        {
            entity.HasKey(e => e.Id).IsClustered(false);

            entity.ToTable("EBModules");

            entity.HasIndex(e => e.ProgId, "EBModules")
                .IsUnique()
                .IsClustered();

            entity.Property(e => e.Id)
                .ValueGeneratedNever()
                .HasColumnName("ID");
            entity.Property(e => e.Assembly).HasMaxLength(120);
            entity.Property(e => e.AssemblyClass).HasMaxLength(120);
            entity.Property(e => e.Description)
                .HasMaxLength(128)
                .HasDefaultValue("");
            entity.Property(e => e.ProgId)
                .HasMaxLength(80)
                .HasColumnName("ProgID");
            entity.Property(e => e.Syscreated)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("syscreated");
            entity.Property(e => e.Syscreator).HasColumnName("syscreator");
            entity.Property(e => e.Sysguid)
                .HasDefaultValueSql("(newid())")
                .HasColumnName("sysguid");
            entity.Property(e => e.Sysmodified)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("sysmodified");
            entity.Property(e => e.Sysmodifier).HasColumnName("sysmodifier");
            entity.Property(e => e.Timestamp)
                .IsRowVersion()
                .IsConcurrencyToken()
                .HasColumnName("timestamp");
            entity.Property(e => e.Type).HasMaxLength(30);
        });

        modelBuilder.Entity<EntityFinancialTransaction>(entity =>
        {
            entity.HasKey(e => e.TableKey);

            entity.HasIndex(e => new { e.TransactionKey, e.EntityName }, "IX_EntityFinancialTransactions");

            entity.Property(e => e.TableKey).HasDefaultValueSql("(newsequentialid())");
            entity.Property(e => e.Division)
                .HasMaxLength(3)
                .IsFixedLength();
            entity.Property(e => e.EntityName).HasMaxLength(50);
            entity.Property(e => e.LogText).HasMaxLength(2000);
            entity.Property(e => e.Status).HasDefaultValue((byte)0);
            entity.Property(e => e.SysCreated)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime");
            entity.Property(e => e.Xmldata)
                .HasColumnType("xml")
                .HasColumnName("XMLData");
        });

        modelBuilder.Entity<Epavlk>(entity =>
        {
            entity.HasKey(e => e.Id).IsClustered(false);

            entity.ToTable("epavlk");

            entity.HasIndex(e => e.Verzlayout, "epavlk")
                .IsUnique()
                .IsClustered();

            entity.Property(e => e.Id).HasColumnName("ID");
            entity.Property(e => e.Omschr)
                .HasMaxLength(30)
                .HasColumnName("omschr");
            entity.Property(e => e.Syscreated)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("syscreated");
            entity.Property(e => e.Syscreator).HasColumnName("syscreator");
            entity.Property(e => e.Sysguid)
                .HasDefaultValueSql("(newid())")
                .HasColumnName("sysguid");
            entity.Property(e => e.Sysmodified)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("sysmodified");
            entity.Property(e => e.Sysmodifier).HasColumnName("sysmodifier");
            entity.Property(e => e.Timestamp)
                .IsRowVersion()
                .IsConcurrencyToken()
                .HasColumnName("timestamp");
            entity.Property(e => e.TypeVlk)
                .HasMaxLength(1)
                .IsFixedLength()
                .HasColumnName("type_vlk");
            entity.Property(e => e.Verzlayout)
                .HasMaxLength(8)
                .IsFixedLength()
                .HasColumnName("verzlayout");
        });

        modelBuilder.Entity<Epavlr>(entity =>
        {
            entity.HasKey(e => e.Id).IsClustered(false);

            entity.ToTable("epavlr");

            entity.HasIndex(e => new { e.Verzlayout, e.Layoutnaam }, "epavlr")
                .IsUnique()
                .IsClustered();

            entity.Property(e => e.Id).HasColumnName("ID");
            entity.Property(e => e.AantalVlr).HasColumnName("aantal_vlr");
            entity.Property(e => e.Layoutnaam)
                .HasMaxLength(8)
                .IsFixedLength()
                .HasColumnName("layoutnaam");
            entity.Property(e => e.Syscreated)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("syscreated");
            entity.Property(e => e.Syscreator).HasColumnName("syscreator");
            entity.Property(e => e.Sysguid)
                .HasDefaultValueSql("(newid())")
                .HasColumnName("sysguid");
            entity.Property(e => e.Sysmodified)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("sysmodified");
            entity.Property(e => e.Sysmodifier).HasColumnName("sysmodifier");
            entity.Property(e => e.Timestamp)
                .IsRowVersion()
                .IsConcurrencyToken()
                .HasColumnName("timestamp");
            entity.Property(e => e.TypeBon)
                .HasMaxLength(1)
                .IsFixedLength()
                .HasColumnName("type_bon");
            entity.Property(e => e.Verzlayout)
                .HasMaxLength(8)
                .IsFixedLength()
                .HasColumnName("verzlayout");
        });

        modelBuilder.Entity<Eshrpayroll>(entity =>
        {
            entity
                .HasNoKey()
                .ToView("eshrpayroll");

            entity.Property(e => e.Contract).HasColumnName("contract");
            entity.Property(e => e.Country)
                .HasMaxLength(3)
                .IsFixedLength()
                .HasColumnName("country");
            entity.Property(e => e.Description)
                .HasMaxLength(50)
                .HasColumnName("description");
            entity.Property(e => e.DocAttachmentId).HasColumnName("DocAttachmentID");
            entity.Property(e => e.Enddate)
                .HasColumnType("datetime")
                .HasColumnName("enddate");
            entity.Property(e => e.Id)
                .ValueGeneratedOnAdd()
                .HasColumnName("ID");
            entity.Property(e => e.JobTitle)
                .HasMaxLength(12)
                .HasColumnName("job_title");
            entity.Property(e => e.PaymentPeriod)
                .HasMaxLength(1)
                .IsFixedLength()
                .HasColumnName("payment_period");
            entity.Property(e => e.ResId).HasColumnName("res_id");
            entity.Property(e => e.Sliptext1)
                .HasMaxLength(70)
                .HasColumnName("sliptext1");
            entity.Property(e => e.Sliptext2)
                .HasMaxLength(70)
                .HasColumnName("sliptext2");
            entity.Property(e => e.Sliptext3)
                .HasMaxLength(70)
                .HasColumnName("sliptext3");
            entity.Property(e => e.Startdate)
                .HasColumnType("datetime")
                .HasColumnName("startdate");
            entity.Property(e => e.Syscreated)
                .HasColumnType("datetime")
                .HasColumnName("syscreated");
            entity.Property(e => e.Syscreator).HasColumnName("syscreator");
            entity.Property(e => e.Sysguid).HasColumnName("sysguid");
            entity.Property(e => e.Sysmodified)
                .HasColumnType("datetime")
                .HasColumnName("sysmodified");
            entity.Property(e => e.Sysmodifier).HasColumnName("sysmodifier");
            entity.Property(e => e.Tax190TrabExtNy).HasColumnName("tax_190_trab_ext_ny");
            entity.Property(e => e.TaxAliAmt).HasColumnName("tax_ali_amt");
            entity.Property(e => e.TaxAliPensionAmt).HasColumnName("tax_ali_pension_amt");
            entity.Property(e => e.TaxAssAmt).HasColumnName("tax_ass_amt");
            entity.Property(e => e.TaxBonusAmt).HasColumnName("tax_bonus_amt");
            entity.Property(e => e.TaxDisabled)
                .HasMaxLength(1)
                .IsFixedLength()
                .HasColumnName("tax_disabled");
            entity.Property(e => e.TaxException)
                .HasMaxLength(1)
                .IsFixedLength()
                .HasColumnName("tax_exception");
            entity.Property(e => e.TaxFamilySit)
                .HasMaxLength(1)
                .IsFixedLength()
                .HasColumnName("tax_family_sit");
            entity.Property(e => e.TaxMoveJobNy).HasColumnName("tax_move_job_ny");
            entity.Property(e => e.TaxNifPart)
                .HasMaxLength(15)
                .HasColumnName("tax_nif_part");
            entity.Property(e => e.TaxPercEmpl).HasColumnName("tax_perc_empl");
            entity.Property(e => e.TaxReducIrrEmpl).HasColumnName("tax_reduc_irr_empl");
            entity.Property(e => e.TaxSplitChild)
                .HasMaxLength(1)
                .IsFixedLength()
                .HasColumnName("tax_split_child");
            entity.Property(e => e.Timestamp)
                .IsRowVersion()
                .IsConcurrencyToken()
                .HasColumnName("timestamp");
            entity.Property(e => e.Type)
                .HasMaxLength(1)
                .IsFixedLength()
                .HasColumnName("type");
        });

        modelBuilder.Entity<Eshrpayrollcontract>(entity =>
        {
            entity
                .HasNoKey()
                .ToView("eshrpayrollcontract");

            entity.Property(e => e.AfiAccion)
                .HasMaxLength(1)
                .IsFixedLength()
                .HasColumnName("afi_accion");
            entity.Property(e => e.AfiAutorizacion).HasColumnName("afi_Autorizacion");
            entity.Property(e => e.AfiDate)
                .HasColumnType("datetime")
                .HasColumnName("afi_date");
            entity.Property(e => e.AfiDesempl)
                .HasMaxLength(1)
                .IsFixedLength()
                .HasColumnName("afi_desempl");
            entity.Property(e => e.AfiExcluSocial).HasColumnName("afi_exclu_social");
            entity.Property(e => e.AfiFte).HasColumnName("afi_fte");
            entity.Property(e => e.AfiGradoMinusv).HasColumnName("afi_grado_minusv");
            entity.Property(e => e.AfiIncapReadm).HasColumnName("afi_incap_readm");
            entity.Property(e => e.AfiMakeYn).HasColumnName("afi_make_yn");
            entity.Property(e => e.AfiMaternity)
                .HasMaxLength(1)
                .IsFixedLength()
                .HasColumnName("afi_Maternity");
            entity.Property(e => e.AfiRar).HasColumnName("afi_rar");
            entity.Property(e => e.AfiSituation)
                .HasMaxLength(1)
                .IsFixedLength()
                .HasColumnName("afi_situation");
            entity.Property(e => e.AfiVigencia)
                .HasColumnType("datetime")
                .HasColumnName("afi_Vigencia");
            entity.Property(e => e.AfiWarningYn).HasColumnName("afi_warning_yn");
            entity.Property(e => e.AfiWomanNy).HasColumnName("afi_woman_ny");
            entity.Property(e => e.ConActividad)
                .HasMaxLength(8)
                .IsFixedLength()
                .HasColumnName("con_actividad");
            entity.Property(e => e.ConConvenio)
                .HasMaxLength(8)
                .IsFixedLength()
                .HasColumnName("con_convenio");
            entity.Property(e => e.ConFunction)
                .HasMaxLength(8)
                .IsFixedLength()
                .HasColumnName("con_function");
            entity.Property(e => e.ConGroup)
                .HasMaxLength(1)
                .IsFixedLength()
                .HasColumnName("con_group");
            entity.Property(e => e.ContrContracto)
                .HasMaxLength(8)
                .IsFixedLength()
                .HasColumnName("contr_contracto");
            entity.Property(e => e.ContrDate)
                .HasColumnType("datetime")
                .HasColumnName("contr_date");
            entity.Property(e => e.Contract).HasColumnName("contract");
            entity.Property(e => e.Country)
                .HasMaxLength(3)
                .IsFixedLength()
                .HasColumnName("country");
            entity.Property(e => e.Description)
                .HasMaxLength(50)
                .HasColumnName("description");
            entity.Property(e => e.DocAttachmentId).HasColumnName("DocAttachmentID");
            entity.Property(e => e.Enddate)
                .HasColumnType("datetime")
                .HasColumnName("enddate");
            entity.Property(e => e.FanKindSalary)
                .HasMaxLength(1)
                .IsFixedLength()
                .HasColumnName("fan_Kind_Salary");
            entity.Property(e => e.FanMoreJob).HasColumnName("fan_more_job");
            entity.Property(e => e.FecAntiguedad)
                .HasColumnType("datetime")
                .HasColumnName("fec_antiguedad");
            entity.Property(e => e.Id)
                .ValueGeneratedOnAdd()
                .HasColumnName("ID");
            entity.Property(e => e.JobTitle)
                .HasMaxLength(12)
                .HasColumnName("job_title");
            entity.Property(e => e.PaymentPeriod)
                .HasMaxLength(1)
                .IsFixedLength()
                .HasColumnName("payment_period");
            entity.Property(e => e.ResId).HasColumnName("res_id");
            entity.Property(e => e.SocConsejAdmin).HasColumnName("soc_consej_admin");
            entity.Property(e => e.SocContract)
                .HasMaxLength(1)
                .IsFixedLength()
                .HasColumnName("soc_contract");
            entity.Property(e => e.SocContractEndDate)
                .HasColumnType("datetime")
                .HasColumnName("soc_ContractEndDate");
            entity.Property(e => e.SocContractStartDate)
                .HasColumnType("datetime")
                .HasColumnName("soc_ContractStartDate");
            entity.Property(e => e.SocEducation)
                .HasMaxLength(1)
                .IsFixedLength()
                .HasColumnName("soc_education");
            entity.Property(e => e.SocFixday).HasColumnName("soc_fixday");
            entity.Property(e => e.SocGroupEpi)
                .HasMaxLength(8)
                .IsFixedLength()
                .HasColumnName("soc_group_epi");
            entity.Property(e => e.SocGroupEpiCalc)
                .HasMaxLength(8)
                .IsFixedLength()
                .HasColumnName("soc_group_epi_calc");
            entity.Property(e => e.SocOlder60).HasColumnName("soc_Older60");
            entity.Property(e => e.SocOlder60Date)
                .HasColumnType("datetime")
                .HasColumnName("soc_Older60Date");
            entity.Property(e => e.SocOlder65).HasColumnName("soc_Older65");
            entity.Property(e => e.SocOlder65Date)
                .HasColumnType("datetime")
                .HasColumnName("soc_Older65Date");
            entity.Property(e => e.SocSocialYn).HasColumnName("soc_social_yn");
            entity.Property(e => e.Startdate)
                .HasColumnType("datetime")
                .HasColumnName("startdate");
            entity.Property(e => e.Syscreated)
                .HasColumnType("datetime")
                .HasColumnName("syscreated");
            entity.Property(e => e.Syscreator).HasColumnName("syscreator");
            entity.Property(e => e.Sysguid).HasColumnName("sysguid");
            entity.Property(e => e.Sysmodified)
                .HasColumnType("datetime")
                .HasColumnName("sysmodified");
            entity.Property(e => e.Sysmodifier).HasColumnName("sysmodifier");
            entity.Property(e => e.Timestamp)
                .IsRowVersion()
                .IsConcurrencyToken()
                .HasColumnName("timestamp");
            entity.Property(e => e.Type)
                .HasMaxLength(1)
                .IsFixedLength()
                .HasColumnName("type");
        });

        modelBuilder.Entity<Evbswz>(entity =>
        {
            entity.HasKey(e => e.Id).IsClustered(false);

            entity.ToTable("evbswz");

            entity.HasIndex(e => e.Bstwijze, "evbswz")
                .IsUnique()
                .IsClustered();

            entity.Property(e => e.Id).HasColumnName("ID");
            entity.Property(e => e.Bstwijze)
                .HasMaxLength(3)
                .IsFixedLength()
                .HasColumnName("bstwijze");
            entity.Property(e => e.Oms400)
                .HasMaxLength(40)
                .HasColumnName("oms40_0");
            entity.Property(e => e.Oms401)
                .HasMaxLength(40)
                .HasColumnName("oms40_1");
            entity.Property(e => e.Oms402)
                .HasMaxLength(40)
                .HasColumnName("oms40_2");
            entity.Property(e => e.Oms403)
                .HasMaxLength(40)
                .HasColumnName("oms40_3");
            entity.Property(e => e.Oms404)
                .HasMaxLength(40)
                .HasColumnName("oms40_4");
            entity.Property(e => e.Syscreated)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("syscreated");
            entity.Property(e => e.Syscreator).HasColumnName("syscreator");
            entity.Property(e => e.Sysguid)
                .HasDefaultValueSql("(newid())")
                .HasColumnName("sysguid");
            entity.Property(e => e.Sysmodified)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("sysmodified");
            entity.Property(e => e.Sysmodifier).HasColumnName("sysmodifier");
            entity.Property(e => e.Timestamp)
                .IsRowVersion()
                .IsConcurrencyToken()
                .HasColumnName("timestamp");
        });

        modelBuilder.Entity<Event>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__Events__3214EC27E2C187D2");

            entity.HasIndex(e => e.CreatorId, "IX_Events_CreatorID");

            entity.HasIndex(e => e.Scope, "IX_Events_Scope");

            entity.HasIndex(e => e.Start, "IX_Events_Start");

            entity.Property(e => e.Id)
                .HasDefaultValueSql("(newid())")
                .HasColumnName("ID");
            entity.Property(e => e.CreatorId).HasColumnName("CreatorID");
            entity.Property(e => e.Description).HasMaxLength(500);
            entity.Property(e => e.ModifierId).HasColumnName("ModifierID");
            entity.Property(e => e.Name).HasMaxLength(80);
            entity.Property(e => e.Venue).HasMaxLength(250);
        });

        modelBuilder.Entity<EventShare>(entity =>
        {
            entity.HasIndex(e => new { e.EventId, e.ShareToId }, "IX_EventShares_EventID_Status");

            entity.Property(e => e.Id)
                .ValueGeneratedNever()
                .HasColumnName("ID");
            entity.Property(e => e.EventId).HasColumnName("EventID");
            entity.Property(e => e.ShareToId).HasColumnName("ShareToID");
        });

        modelBuilder.Entity<Evloc>(entity =>
        {
            entity.HasKey(e => e.Id).IsClustered(false);

            entity.ToTable("evloc");

            entity.HasIndex(e => new { e.Magcode, e.Maglok }, "evloc")
                .IsUnique()
                .IsClustered();

            entity.Property(e => e.Id).HasColumnName("ID");
            entity.Property(e => e.BlockedIn).HasColumnName("blocked_in");
            entity.Property(e => e.BlockedOut).HasColumnName("blocked_out");
            entity.Property(e => e.FixedItem)
                .HasMaxLength(30)
                .HasColumnName("fixed_item");
            entity.Property(e => e.Intake).HasColumnName("intake");
            entity.Property(e => e.Issue).HasColumnName("issue");
            entity.Property(e => e.Magcode)
                .HasMaxLength(4)
                .IsFixedLength()
                .HasColumnName("magcode");
            entity.Property(e => e.Maglok)
                .HasMaxLength(10)
                .IsFixedLength()
                .HasColumnName("maglok");
            entity.Property(e => e.MaxStock).HasColumnName("max_stock");
            entity.Property(e => e.MinStock).HasColumnName("min_stock");
            entity.Property(e => e.Oms30)
                .HasMaxLength(30)
                .HasColumnName("oms30");
            entity.Property(e => e.Pickbulk)
                .HasMaxLength(1)
                .IsFixedLength()
                .HasColumnName("pickbulk");
            entity.Property(e => e.Syscreated)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("syscreated");
            entity.Property(e => e.Syscreator).HasColumnName("syscreator");
            entity.Property(e => e.Sysguid)
                .HasDefaultValueSql("(newid())")
                .HasColumnName("sysguid");
            entity.Property(e => e.Sysmodified)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("sysmodified");
            entity.Property(e => e.Sysmodifier).HasColumnName("sysmodifier");
            entity.Property(e => e.TextField1).HasMaxLength(80);
            entity.Property(e => e.TextField2).HasMaxLength(80);
            entity.Property(e => e.TextField3).HasMaxLength(80);
            entity.Property(e => e.TextField4).HasMaxLength(80);
            entity.Property(e => e.TextField5).HasMaxLength(80);
            entity.Property(e => e.Timestamp)
                .IsRowVersion()
                .IsConcurrencyToken()
                .HasColumnName("timestamp");
            entity.Property(e => e.TypeLoc)
                .HasMaxLength(1)
                .IsFixedLength()
                .HasColumnName("type_loc");
        });

        modelBuilder.Entity<ExactLicense>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("ExactLicense");

            entity.HasIndex(e => e.CustomerId, "ExactLicense_Index").IsClustered();

            entity.Property(e => e.ActivationDate).HasColumnType("datetime");
            entity.Property(e => e.CustomerId)
                .HasMaxLength(30)
                .HasColumnName("CustomerID");
            entity.Property(e => e.Name).HasMaxLength(60);
            entity.Property(e => e.Number).HasMaxLength(30);
        });

        modelBuilder.Entity<ExactLicenseBackup>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("ExactLicenseBackup");

            entity.HasIndex(e => e.CustomerId, "ExactLicenseBackup_Index").IsClustered();

            entity.Property(e => e.ActivationDate).HasColumnType("datetime");
            entity.Property(e => e.CustomerId)
                .HasMaxLength(30)
                .HasColumnName("CustomerID");
            entity.Property(e => e.ExpirationDate).HasColumnType("datetime");
            entity.Property(e => e.ExpirationDate2).HasMaxLength(255);
            entity.Property(e => e.IssueDate).HasColumnType("datetime");
            entity.Property(e => e.Name).HasMaxLength(60);
            entity.Property(e => e.Number).HasMaxLength(30);
        });

        modelBuilder.Entity<ExactOption>(entity =>
        {
            entity.HasNoKey();

            entity.HasIndex(e => e.Division, "ExactOptions_Index").IsClustered();

            entity.Property(e => e.Opt0).HasColumnName("opt_0");
            entity.Property(e => e.Opt1).HasColumnName("opt_1");
            entity.Property(e => e.Opt10).HasColumnName("opt_10");
            entity.Property(e => e.Opt100).HasColumnName("opt_100");
            entity.Property(e => e.Opt1000).HasColumnName("opt_1000");
            entity.Property(e => e.Opt1001).HasColumnName("opt_1001");
            entity.Property(e => e.Opt1002).HasColumnName("opt_1002");
            entity.Property(e => e.Opt1003).HasColumnName("opt_1003");
            entity.Property(e => e.Opt1004).HasColumnName("opt_1004");
            entity.Property(e => e.Opt1005).HasColumnName("opt_1005");
            entity.Property(e => e.Opt1006).HasColumnName("opt_1006");
            entity.Property(e => e.Opt1007).HasColumnName("opt_1007");
            entity.Property(e => e.Opt1008).HasColumnName("opt_1008");
            entity.Property(e => e.Opt1009).HasColumnName("opt_1009");
            entity.Property(e => e.Opt101).HasColumnName("opt_101");
            entity.Property(e => e.Opt1010).HasColumnName("opt_1010");
            entity.Property(e => e.Opt1011).HasColumnName("opt_1011");
            entity.Property(e => e.Opt1012).HasColumnName("opt_1012");
            entity.Property(e => e.Opt1013).HasColumnName("opt_1013");
            entity.Property(e => e.Opt1014).HasColumnName("opt_1014");
            entity.Property(e => e.Opt1015).HasColumnName("opt_1015");
            entity.Property(e => e.Opt1016).HasColumnName("opt_1016");
            entity.Property(e => e.Opt1017).HasColumnName("opt_1017");
            entity.Property(e => e.Opt1018).HasColumnName("opt_1018");
            entity.Property(e => e.Opt1019).HasColumnName("opt_1019");
            entity.Property(e => e.Opt102).HasColumnName("opt_102");
            entity.Property(e => e.Opt1020).HasColumnName("opt_1020");
            entity.Property(e => e.Opt1021).HasColumnName("opt_1021");
            entity.Property(e => e.Opt1022).HasColumnName("opt_1022");
            entity.Property(e => e.Opt103).HasColumnName("opt_103");
            entity.Property(e => e.Opt104).HasColumnName("opt_104");
            entity.Property(e => e.Opt105).HasColumnName("opt_105");
            entity.Property(e => e.Opt106).HasColumnName("opt_106");
            entity.Property(e => e.Opt107).HasColumnName("opt_107");
            entity.Property(e => e.Opt108).HasColumnName("opt_108");
            entity.Property(e => e.Opt109).HasColumnName("opt_109");
            entity.Property(e => e.Opt11).HasColumnName("opt_11");
            entity.Property(e => e.Opt110).HasColumnName("opt_110");
            entity.Property(e => e.Opt111).HasColumnName("opt_111");
            entity.Property(e => e.Opt112).HasColumnName("opt_112");
            entity.Property(e => e.Opt113).HasColumnName("opt_113");
            entity.Property(e => e.Opt114).HasColumnName("opt_114");
            entity.Property(e => e.Opt115).HasColumnName("opt_115");
            entity.Property(e => e.Opt116).HasColumnName("opt_116");
            entity.Property(e => e.Opt117).HasColumnName("opt_117");
            entity.Property(e => e.Opt118).HasColumnName("opt_118");
            entity.Property(e => e.Opt119).HasColumnName("opt_119");
            entity.Property(e => e.Opt12).HasColumnName("opt_12");
            entity.Property(e => e.Opt120).HasColumnName("opt_120");
            entity.Property(e => e.Opt121).HasColumnName("opt_121");
            entity.Property(e => e.Opt122).HasColumnName("opt_122");
            entity.Property(e => e.Opt123).HasColumnName("opt_123");
            entity.Property(e => e.Opt124).HasColumnName("opt_124");
            entity.Property(e => e.Opt125).HasColumnName("opt_125");
            entity.Property(e => e.Opt126).HasColumnName("opt_126");
            entity.Property(e => e.Opt127).HasColumnName("opt_127");
            entity.Property(e => e.Opt128).HasColumnName("opt_128");
            entity.Property(e => e.Opt129).HasColumnName("opt_129");
            entity.Property(e => e.Opt13).HasColumnName("opt_13");
            entity.Property(e => e.Opt130).HasColumnName("opt_130");
            entity.Property(e => e.Opt131).HasColumnName("opt_131");
            entity.Property(e => e.Opt132).HasColumnName("opt_132");
            entity.Property(e => e.Opt133).HasColumnName("opt_133");
            entity.Property(e => e.Opt134).HasColumnName("opt_134");
            entity.Property(e => e.Opt135).HasColumnName("opt_135");
            entity.Property(e => e.Opt136).HasColumnName("opt_136");
            entity.Property(e => e.Opt137).HasColumnName("opt_137");
            entity.Property(e => e.Opt138).HasColumnName("opt_138");
            entity.Property(e => e.Opt139).HasColumnName("opt_139");
            entity.Property(e => e.Opt14).HasColumnName("opt_14");
            entity.Property(e => e.Opt140).HasColumnName("opt_140");
            entity.Property(e => e.Opt141).HasColumnName("opt_141");
            entity.Property(e => e.Opt142).HasColumnName("opt_142");
            entity.Property(e => e.Opt143).HasColumnName("opt_143");
            entity.Property(e => e.Opt144).HasColumnName("opt_144");
            entity.Property(e => e.Opt145).HasColumnName("opt_145");
            entity.Property(e => e.Opt146).HasColumnName("opt_146");
            entity.Property(e => e.Opt147).HasColumnName("opt_147");
            entity.Property(e => e.Opt148).HasColumnName("opt_148");
            entity.Property(e => e.Opt149).HasColumnName("opt_149");
            entity.Property(e => e.Opt15).HasColumnName("opt_15");
            entity.Property(e => e.Opt150).HasColumnName("opt_150");
            entity.Property(e => e.Opt151).HasColumnName("opt_151");
            entity.Property(e => e.Opt152).HasColumnName("opt_152");
            entity.Property(e => e.Opt153).HasColumnName("opt_153");
            entity.Property(e => e.Opt154).HasColumnName("opt_154");
            entity.Property(e => e.Opt155).HasColumnName("opt_155");
            entity.Property(e => e.Opt156).HasColumnName("opt_156");
            entity.Property(e => e.Opt157).HasColumnName("opt_157");
            entity.Property(e => e.Opt158).HasColumnName("opt_158");
            entity.Property(e => e.Opt159).HasColumnName("opt_159");
            entity.Property(e => e.Opt16).HasColumnName("opt_16");
            entity.Property(e => e.Opt160).HasColumnName("opt_160");
            entity.Property(e => e.Opt161).HasColumnName("opt_161");
            entity.Property(e => e.Opt162).HasColumnName("opt_162");
            entity.Property(e => e.Opt163).HasColumnName("opt_163");
            entity.Property(e => e.Opt164).HasColumnName("opt_164");
            entity.Property(e => e.Opt165).HasColumnName("opt_165");
            entity.Property(e => e.Opt166).HasColumnName("opt_166");
            entity.Property(e => e.Opt167).HasColumnName("opt_167");
            entity.Property(e => e.Opt168).HasColumnName("opt_168");
            entity.Property(e => e.Opt169).HasColumnName("opt_169");
            entity.Property(e => e.Opt17).HasColumnName("opt_17");
            entity.Property(e => e.Opt170).HasColumnName("opt_170");
            entity.Property(e => e.Opt171).HasColumnName("opt_171");
            entity.Property(e => e.Opt172).HasColumnName("opt_172");
            entity.Property(e => e.Opt173).HasColumnName("opt_173");
            entity.Property(e => e.Opt174).HasColumnName("opt_174");
            entity.Property(e => e.Opt175).HasColumnName("opt_175");
            entity.Property(e => e.Opt176).HasColumnName("opt_176");
            entity.Property(e => e.Opt177).HasColumnName("opt_177");
            entity.Property(e => e.Opt178).HasColumnName("opt_178");
            entity.Property(e => e.Opt179).HasColumnName("opt_179");
            entity.Property(e => e.Opt18).HasColumnName("opt_18");
            entity.Property(e => e.Opt180).HasColumnName("opt_180");
            entity.Property(e => e.Opt181).HasColumnName("opt_181");
            entity.Property(e => e.Opt182).HasColumnName("opt_182");
            entity.Property(e => e.Opt183).HasColumnName("opt_183");
            entity.Property(e => e.Opt184).HasColumnName("opt_184");
            entity.Property(e => e.Opt185).HasColumnName("opt_185");
            entity.Property(e => e.Opt186).HasColumnName("opt_186");
            entity.Property(e => e.Opt187).HasColumnName("opt_187");
            entity.Property(e => e.Opt188).HasColumnName("opt_188");
            entity.Property(e => e.Opt189).HasColumnName("opt_189");
            entity.Property(e => e.Opt19).HasColumnName("opt_19");
            entity.Property(e => e.Opt190).HasColumnName("opt_190");
            entity.Property(e => e.Opt191).HasColumnName("opt_191");
            entity.Property(e => e.Opt192).HasColumnName("opt_192");
            entity.Property(e => e.Opt193).HasColumnName("opt_193");
            entity.Property(e => e.Opt194).HasColumnName("opt_194");
            entity.Property(e => e.Opt195).HasColumnName("opt_195");
            entity.Property(e => e.Opt196).HasColumnName("opt_196");
            entity.Property(e => e.Opt197).HasColumnName("opt_197");
            entity.Property(e => e.Opt198).HasColumnName("opt_198");
            entity.Property(e => e.Opt199).HasColumnName("opt_199");
            entity.Property(e => e.Opt2).HasColumnName("opt_2");
            entity.Property(e => e.Opt20).HasColumnName("opt_20");
            entity.Property(e => e.Opt200).HasColumnName("opt_200");
            entity.Property(e => e.Opt201).HasColumnName("opt_201");
            entity.Property(e => e.Opt202).HasColumnName("opt_202");
            entity.Property(e => e.Opt203).HasColumnName("opt_203");
            entity.Property(e => e.Opt204).HasColumnName("opt_204");
            entity.Property(e => e.Opt205).HasColumnName("opt_205");
            entity.Property(e => e.Opt206).HasColumnName("opt_206");
            entity.Property(e => e.Opt207).HasColumnName("opt_207");
            entity.Property(e => e.Opt208).HasColumnName("opt_208");
            entity.Property(e => e.Opt209).HasColumnName("opt_209");
            entity.Property(e => e.Opt21).HasColumnName("opt_21");
            entity.Property(e => e.Opt210).HasColumnName("opt_210");
            entity.Property(e => e.Opt211).HasColumnName("opt_211");
            entity.Property(e => e.Opt212).HasColumnName("opt_212");
            entity.Property(e => e.Opt213).HasColumnName("opt_213");
            entity.Property(e => e.Opt214).HasColumnName("opt_214");
            entity.Property(e => e.Opt215).HasColumnName("opt_215");
            entity.Property(e => e.Opt216).HasColumnName("opt_216");
            entity.Property(e => e.Opt217).HasColumnName("opt_217");
            entity.Property(e => e.Opt218).HasColumnName("opt_218");
            entity.Property(e => e.Opt219).HasColumnName("opt_219");
            entity.Property(e => e.Opt22).HasColumnName("opt_22");
            entity.Property(e => e.Opt220).HasColumnName("opt_220");
            entity.Property(e => e.Opt221).HasColumnName("opt_221");
            entity.Property(e => e.Opt222).HasColumnName("opt_222");
            entity.Property(e => e.Opt223).HasColumnName("opt_223");
            entity.Property(e => e.Opt224).HasColumnName("opt_224");
            entity.Property(e => e.Opt225).HasColumnName("opt_225");
            entity.Property(e => e.Opt226).HasColumnName("opt_226");
            entity.Property(e => e.Opt227).HasColumnName("opt_227");
            entity.Property(e => e.Opt228).HasColumnName("opt_228");
            entity.Property(e => e.Opt229).HasColumnName("opt_229");
            entity.Property(e => e.Opt23).HasColumnName("opt_23");
            entity.Property(e => e.Opt230).HasColumnName("opt_230");
            entity.Property(e => e.Opt231).HasColumnName("opt_231");
            entity.Property(e => e.Opt232).HasColumnName("opt_232");
            entity.Property(e => e.Opt233).HasColumnName("opt_233");
            entity.Property(e => e.Opt234).HasColumnName("opt_234");
            entity.Property(e => e.Opt235).HasColumnName("opt_235");
            entity.Property(e => e.Opt236).HasColumnName("opt_236");
            entity.Property(e => e.Opt237).HasColumnName("opt_237");
            entity.Property(e => e.Opt238).HasColumnName("opt_238");
            entity.Property(e => e.Opt239).HasColumnName("opt_239");
            entity.Property(e => e.Opt24).HasColumnName("opt_24");
            entity.Property(e => e.Opt240).HasColumnName("opt_240");
            entity.Property(e => e.Opt241).HasColumnName("opt_241");
            entity.Property(e => e.Opt242).HasColumnName("opt_242");
            entity.Property(e => e.Opt243).HasColumnName("opt_243");
            entity.Property(e => e.Opt244).HasColumnName("opt_244");
            entity.Property(e => e.Opt245).HasColumnName("opt_245");
            entity.Property(e => e.Opt246).HasColumnName("opt_246");
            entity.Property(e => e.Opt247).HasColumnName("opt_247");
            entity.Property(e => e.Opt248).HasColumnName("opt_248");
            entity.Property(e => e.Opt249).HasColumnName("opt_249");
            entity.Property(e => e.Opt25).HasColumnName("opt_25");
            entity.Property(e => e.Opt250).HasColumnName("opt_250");
            entity.Property(e => e.Opt251).HasColumnName("opt_251");
            entity.Property(e => e.Opt252).HasColumnName("opt_252");
            entity.Property(e => e.Opt253).HasColumnName("opt_253");
            entity.Property(e => e.Opt254).HasColumnName("opt_254");
            entity.Property(e => e.Opt255).HasColumnName("opt_255");
            entity.Property(e => e.Opt256).HasColumnName("opt_256");
            entity.Property(e => e.Opt257).HasColumnName("opt_257");
            entity.Property(e => e.Opt258).HasColumnName("opt_258");
            entity.Property(e => e.Opt259).HasColumnName("opt_259");
            entity.Property(e => e.Opt26).HasColumnName("opt_26");
            entity.Property(e => e.Opt260).HasColumnName("opt_260");
            entity.Property(e => e.Opt261).HasColumnName("opt_261");
            entity.Property(e => e.Opt262).HasColumnName("opt_262");
            entity.Property(e => e.Opt263).HasColumnName("opt_263");
            entity.Property(e => e.Opt264).HasColumnName("opt_264");
            entity.Property(e => e.Opt265).HasColumnName("opt_265");
            entity.Property(e => e.Opt266).HasColumnName("opt_266");
            entity.Property(e => e.Opt267).HasColumnName("opt_267");
            entity.Property(e => e.Opt268).HasColumnName("opt_268");
            entity.Property(e => e.Opt269).HasColumnName("opt_269");
            entity.Property(e => e.Opt27).HasColumnName("opt_27");
            entity.Property(e => e.Opt270).HasColumnName("opt_270");
            entity.Property(e => e.Opt271).HasColumnName("opt_271");
            entity.Property(e => e.Opt272).HasColumnName("opt_272");
            entity.Property(e => e.Opt273).HasColumnName("opt_273");
            entity.Property(e => e.Opt274).HasColumnName("opt_274");
            entity.Property(e => e.Opt275).HasColumnName("opt_275");
            entity.Property(e => e.Opt276).HasColumnName("opt_276");
            entity.Property(e => e.Opt277).HasColumnName("opt_277");
            entity.Property(e => e.Opt278).HasColumnName("opt_278");
            entity.Property(e => e.Opt279).HasColumnName("opt_279");
            entity.Property(e => e.Opt28).HasColumnName("opt_28");
            entity.Property(e => e.Opt280).HasColumnName("opt_280");
            entity.Property(e => e.Opt281).HasColumnName("opt_281");
            entity.Property(e => e.Opt282).HasColumnName("opt_282");
            entity.Property(e => e.Opt283).HasColumnName("opt_283");
            entity.Property(e => e.Opt284).HasColumnName("opt_284");
            entity.Property(e => e.Opt285).HasColumnName("opt_285");
            entity.Property(e => e.Opt286).HasColumnName("opt_286");
            entity.Property(e => e.Opt287).HasColumnName("opt_287");
            entity.Property(e => e.Opt288).HasColumnName("opt_288");
            entity.Property(e => e.Opt289).HasColumnName("opt_289");
            entity.Property(e => e.Opt29).HasColumnName("opt_29");
            entity.Property(e => e.Opt290).HasColumnName("opt_290");
            entity.Property(e => e.Opt291).HasColumnName("opt_291");
            entity.Property(e => e.Opt292).HasColumnName("opt_292");
            entity.Property(e => e.Opt293).HasColumnName("opt_293");
            entity.Property(e => e.Opt294).HasColumnName("opt_294");
            entity.Property(e => e.Opt295).HasColumnName("opt_295");
            entity.Property(e => e.Opt296).HasColumnName("opt_296");
            entity.Property(e => e.Opt297).HasColumnName("opt_297");
            entity.Property(e => e.Opt298).HasColumnName("opt_298");
            entity.Property(e => e.Opt299).HasColumnName("opt_299");
            entity.Property(e => e.Opt3).HasColumnName("opt_3");
            entity.Property(e => e.Opt30).HasColumnName("opt_30");
            entity.Property(e => e.Opt300).HasColumnName("opt_300");
            entity.Property(e => e.Opt301).HasColumnName("opt_301");
            entity.Property(e => e.Opt302).HasColumnName("opt_302");
            entity.Property(e => e.Opt303).HasColumnName("opt_303");
            entity.Property(e => e.Opt304).HasColumnName("opt_304");
            entity.Property(e => e.Opt305).HasColumnName("opt_305");
            entity.Property(e => e.Opt306).HasColumnName("opt_306");
            entity.Property(e => e.Opt307).HasColumnName("opt_307");
            entity.Property(e => e.Opt308).HasColumnName("opt_308");
            entity.Property(e => e.Opt309).HasColumnName("opt_309");
            entity.Property(e => e.Opt31).HasColumnName("opt_31");
            entity.Property(e => e.Opt310).HasColumnName("opt_310");
            entity.Property(e => e.Opt311).HasColumnName("opt_311");
            entity.Property(e => e.Opt312).HasColumnName("opt_312");
            entity.Property(e => e.Opt313).HasColumnName("opt_313");
            entity.Property(e => e.Opt314).HasColumnName("opt_314");
            entity.Property(e => e.Opt315).HasColumnName("opt_315");
            entity.Property(e => e.Opt316).HasColumnName("opt_316");
            entity.Property(e => e.Opt317).HasColumnName("opt_317");
            entity.Property(e => e.Opt318).HasColumnName("opt_318");
            entity.Property(e => e.Opt319).HasColumnName("opt_319");
            entity.Property(e => e.Opt32).HasColumnName("opt_32");
            entity.Property(e => e.Opt320).HasColumnName("opt_320");
            entity.Property(e => e.Opt321).HasColumnName("opt_321");
            entity.Property(e => e.Opt322).HasColumnName("opt_322");
            entity.Property(e => e.Opt323).HasColumnName("opt_323");
            entity.Property(e => e.Opt324).HasColumnName("opt_324");
            entity.Property(e => e.Opt325).HasColumnName("opt_325");
            entity.Property(e => e.Opt326).HasColumnName("opt_326");
            entity.Property(e => e.Opt327).HasColumnName("opt_327");
            entity.Property(e => e.Opt328).HasColumnName("opt_328");
            entity.Property(e => e.Opt329).HasColumnName("opt_329");
            entity.Property(e => e.Opt33).HasColumnName("opt_33");
            entity.Property(e => e.Opt330).HasColumnName("opt_330");
            entity.Property(e => e.Opt331).HasColumnName("opt_331");
            entity.Property(e => e.Opt332).HasColumnName("opt_332");
            entity.Property(e => e.Opt333).HasColumnName("opt_333");
            entity.Property(e => e.Opt334).HasColumnName("opt_334");
            entity.Property(e => e.Opt335).HasColumnName("opt_335");
            entity.Property(e => e.Opt336).HasColumnName("opt_336");
            entity.Property(e => e.Opt337).HasColumnName("opt_337");
            entity.Property(e => e.Opt338).HasColumnName("opt_338");
            entity.Property(e => e.Opt339).HasColumnName("opt_339");
            entity.Property(e => e.Opt34).HasColumnName("opt_34");
            entity.Property(e => e.Opt340).HasColumnName("opt_340");
            entity.Property(e => e.Opt341).HasColumnName("opt_341");
            entity.Property(e => e.Opt342).HasColumnName("opt_342");
            entity.Property(e => e.Opt343).HasColumnName("opt_343");
            entity.Property(e => e.Opt344).HasColumnName("opt_344");
            entity.Property(e => e.Opt345).HasColumnName("opt_345");
            entity.Property(e => e.Opt346).HasColumnName("opt_346");
            entity.Property(e => e.Opt347).HasColumnName("opt_347");
            entity.Property(e => e.Opt348).HasColumnName("opt_348");
            entity.Property(e => e.Opt349).HasColumnName("opt_349");
            entity.Property(e => e.Opt35).HasColumnName("opt_35");
            entity.Property(e => e.Opt350).HasColumnName("opt_350");
            entity.Property(e => e.Opt351).HasColumnName("opt_351");
            entity.Property(e => e.Opt352).HasColumnName("opt_352");
            entity.Property(e => e.Opt353).HasColumnName("opt_353");
            entity.Property(e => e.Opt354).HasColumnName("opt_354");
            entity.Property(e => e.Opt355).HasColumnName("opt_355");
            entity.Property(e => e.Opt356).HasColumnName("opt_356");
            entity.Property(e => e.Opt357).HasColumnName("opt_357");
            entity.Property(e => e.Opt358).HasColumnName("opt_358");
            entity.Property(e => e.Opt359).HasColumnName("opt_359");
            entity.Property(e => e.Opt36).HasColumnName("opt_36");
            entity.Property(e => e.Opt360).HasColumnName("opt_360");
            entity.Property(e => e.Opt361).HasColumnName("opt_361");
            entity.Property(e => e.Opt362).HasColumnName("opt_362");
            entity.Property(e => e.Opt363).HasColumnName("opt_363");
            entity.Property(e => e.Opt364).HasColumnName("opt_364");
            entity.Property(e => e.Opt365).HasColumnName("opt_365");
            entity.Property(e => e.Opt366).HasColumnName("opt_366");
            entity.Property(e => e.Opt367).HasColumnName("opt_367");
            entity.Property(e => e.Opt368).HasColumnName("opt_368");
            entity.Property(e => e.Opt369).HasColumnName("opt_369");
            entity.Property(e => e.Opt37).HasColumnName("opt_37");
            entity.Property(e => e.Opt370).HasColumnName("opt_370");
            entity.Property(e => e.Opt371).HasColumnName("opt_371");
            entity.Property(e => e.Opt372).HasColumnName("opt_372");
            entity.Property(e => e.Opt373).HasColumnName("opt_373");
            entity.Property(e => e.Opt374).HasColumnName("opt_374");
            entity.Property(e => e.Opt375).HasColumnName("opt_375");
            entity.Property(e => e.Opt376).HasColumnName("opt_376");
            entity.Property(e => e.Opt377).HasColumnName("opt_377");
            entity.Property(e => e.Opt378).HasColumnName("opt_378");
            entity.Property(e => e.Opt379).HasColumnName("opt_379");
            entity.Property(e => e.Opt38).HasColumnName("opt_38");
            entity.Property(e => e.Opt380).HasColumnName("opt_380");
            entity.Property(e => e.Opt381).HasColumnName("opt_381");
            entity.Property(e => e.Opt382).HasColumnName("opt_382");
            entity.Property(e => e.Opt383).HasColumnName("opt_383");
            entity.Property(e => e.Opt384).HasColumnName("opt_384");
            entity.Property(e => e.Opt385).HasColumnName("opt_385");
            entity.Property(e => e.Opt386).HasColumnName("opt_386");
            entity.Property(e => e.Opt387).HasColumnName("opt_387");
            entity.Property(e => e.Opt388).HasColumnName("opt_388");
            entity.Property(e => e.Opt389).HasColumnName("opt_389");
            entity.Property(e => e.Opt39).HasColumnName("opt_39");
            entity.Property(e => e.Opt390).HasColumnName("opt_390");
            entity.Property(e => e.Opt391).HasColumnName("opt_391");
            entity.Property(e => e.Opt392).HasColumnName("opt_392");
            entity.Property(e => e.Opt393).HasColumnName("opt_393");
            entity.Property(e => e.Opt394).HasColumnName("opt_394");
            entity.Property(e => e.Opt395).HasColumnName("opt_395");
            entity.Property(e => e.Opt396).HasColumnName("opt_396");
            entity.Property(e => e.Opt397).HasColumnName("opt_397");
            entity.Property(e => e.Opt398).HasColumnName("opt_398");
            entity.Property(e => e.Opt399).HasColumnName("opt_399");
            entity.Property(e => e.Opt4).HasColumnName("opt_4");
            entity.Property(e => e.Opt40).HasColumnName("opt_40");
            entity.Property(e => e.Opt400).HasColumnName("opt_400");
            entity.Property(e => e.Opt401).HasColumnName("opt_401");
            entity.Property(e => e.Opt402).HasColumnName("opt_402");
            entity.Property(e => e.Opt403).HasColumnName("opt_403");
            entity.Property(e => e.Opt404).HasColumnName("opt_404");
            entity.Property(e => e.Opt405).HasColumnName("opt_405");
            entity.Property(e => e.Opt406).HasColumnName("opt_406");
            entity.Property(e => e.Opt407).HasColumnName("opt_407");
            entity.Property(e => e.Opt408).HasColumnName("opt_408");
            entity.Property(e => e.Opt409).HasColumnName("opt_409");
            entity.Property(e => e.Opt41).HasColumnName("opt_41");
            entity.Property(e => e.Opt410).HasColumnName("opt_410");
            entity.Property(e => e.Opt411).HasColumnName("opt_411");
            entity.Property(e => e.Opt412).HasColumnName("opt_412");
            entity.Property(e => e.Opt413).HasColumnName("opt_413");
            entity.Property(e => e.Opt414).HasColumnName("opt_414");
            entity.Property(e => e.Opt415).HasColumnName("opt_415");
            entity.Property(e => e.Opt416).HasColumnName("opt_416");
            entity.Property(e => e.Opt417).HasColumnName("opt_417");
            entity.Property(e => e.Opt418).HasColumnName("opt_418");
            entity.Property(e => e.Opt419).HasColumnName("opt_419");
            entity.Property(e => e.Opt42).HasColumnName("opt_42");
            entity.Property(e => e.Opt420).HasColumnName("opt_420");
            entity.Property(e => e.Opt421).HasColumnName("opt_421");
            entity.Property(e => e.Opt422).HasColumnName("opt_422");
            entity.Property(e => e.Opt423).HasColumnName("opt_423");
            entity.Property(e => e.Opt424).HasColumnName("opt_424");
            entity.Property(e => e.Opt425).HasColumnName("opt_425");
            entity.Property(e => e.Opt426).HasColumnName("opt_426");
            entity.Property(e => e.Opt427).HasColumnName("opt_427");
            entity.Property(e => e.Opt428).HasColumnName("opt_428");
            entity.Property(e => e.Opt429).HasColumnName("opt_429");
            entity.Property(e => e.Opt43).HasColumnName("opt_43");
            entity.Property(e => e.Opt430).HasColumnName("opt_430");
            entity.Property(e => e.Opt431).HasColumnName("opt_431");
            entity.Property(e => e.Opt432).HasColumnName("opt_432");
            entity.Property(e => e.Opt433).HasColumnName("opt_433");
            entity.Property(e => e.Opt434).HasColumnName("opt_434");
            entity.Property(e => e.Opt435).HasColumnName("opt_435");
            entity.Property(e => e.Opt436).HasColumnName("opt_436");
            entity.Property(e => e.Opt437).HasColumnName("opt_437");
            entity.Property(e => e.Opt438).HasColumnName("opt_438");
            entity.Property(e => e.Opt439).HasColumnName("opt_439");
            entity.Property(e => e.Opt44).HasColumnName("opt_44");
            entity.Property(e => e.Opt440).HasColumnName("opt_440");
            entity.Property(e => e.Opt441).HasColumnName("opt_441");
            entity.Property(e => e.Opt442).HasColumnName("opt_442");
            entity.Property(e => e.Opt443).HasColumnName("opt_443");
            entity.Property(e => e.Opt444).HasColumnName("opt_444");
            entity.Property(e => e.Opt445).HasColumnName("opt_445");
            entity.Property(e => e.Opt446).HasColumnName("opt_446");
            entity.Property(e => e.Opt447).HasColumnName("opt_447");
            entity.Property(e => e.Opt448).HasColumnName("opt_448");
            entity.Property(e => e.Opt449).HasColumnName("opt_449");
            entity.Property(e => e.Opt45).HasColumnName("opt_45");
            entity.Property(e => e.Opt450).HasColumnName("opt_450");
            entity.Property(e => e.Opt451).HasColumnName("opt_451");
            entity.Property(e => e.Opt452).HasColumnName("opt_452");
            entity.Property(e => e.Opt453).HasColumnName("opt_453");
            entity.Property(e => e.Opt454).HasColumnName("opt_454");
            entity.Property(e => e.Opt455).HasColumnName("opt_455");
            entity.Property(e => e.Opt456).HasColumnName("opt_456");
            entity.Property(e => e.Opt457).HasColumnName("opt_457");
            entity.Property(e => e.Opt458).HasColumnName("opt_458");
            entity.Property(e => e.Opt459).HasColumnName("opt_459");
            entity.Property(e => e.Opt46).HasColumnName("opt_46");
            entity.Property(e => e.Opt460).HasColumnName("opt_460");
            entity.Property(e => e.Opt461).HasColumnName("opt_461");
            entity.Property(e => e.Opt462).HasColumnName("opt_462");
            entity.Property(e => e.Opt463).HasColumnName("opt_463");
            entity.Property(e => e.Opt464).HasColumnName("opt_464");
            entity.Property(e => e.Opt465).HasColumnName("opt_465");
            entity.Property(e => e.Opt466).HasColumnName("opt_466");
            entity.Property(e => e.Opt467).HasColumnName("opt_467");
            entity.Property(e => e.Opt468).HasColumnName("opt_468");
            entity.Property(e => e.Opt469).HasColumnName("opt_469");
            entity.Property(e => e.Opt47).HasColumnName("opt_47");
            entity.Property(e => e.Opt470).HasColumnName("opt_470");
            entity.Property(e => e.Opt471).HasColumnName("opt_471");
            entity.Property(e => e.Opt472).HasColumnName("opt_472");
            entity.Property(e => e.Opt473).HasColumnName("opt_473");
            entity.Property(e => e.Opt474).HasColumnName("opt_474");
            entity.Property(e => e.Opt475).HasColumnName("opt_475");
            entity.Property(e => e.Opt476).HasColumnName("opt_476");
            entity.Property(e => e.Opt477).HasColumnName("opt_477");
            entity.Property(e => e.Opt478).HasColumnName("opt_478");
            entity.Property(e => e.Opt479).HasColumnName("opt_479");
            entity.Property(e => e.Opt48).HasColumnName("opt_48");
            entity.Property(e => e.Opt480).HasColumnName("opt_480");
            entity.Property(e => e.Opt481).HasColumnName("opt_481");
            entity.Property(e => e.Opt482).HasColumnName("opt_482");
            entity.Property(e => e.Opt483).HasColumnName("opt_483");
            entity.Property(e => e.Opt484).HasColumnName("opt_484");
            entity.Property(e => e.Opt485).HasColumnName("opt_485");
            entity.Property(e => e.Opt486).HasColumnName("opt_486");
            entity.Property(e => e.Opt487).HasColumnName("opt_487");
            entity.Property(e => e.Opt488).HasColumnName("opt_488");
            entity.Property(e => e.Opt489).HasColumnName("opt_489");
            entity.Property(e => e.Opt49).HasColumnName("opt_49");
            entity.Property(e => e.Opt490).HasColumnName("opt_490");
            entity.Property(e => e.Opt491).HasColumnName("opt_491");
            entity.Property(e => e.Opt492).HasColumnName("opt_492");
            entity.Property(e => e.Opt493).HasColumnName("opt_493");
            entity.Property(e => e.Opt494).HasColumnName("opt_494");
            entity.Property(e => e.Opt495).HasColumnName("opt_495");
            entity.Property(e => e.Opt496).HasColumnName("opt_496");
            entity.Property(e => e.Opt497).HasColumnName("opt_497");
            entity.Property(e => e.Opt498).HasColumnName("opt_498");
            entity.Property(e => e.Opt499).HasColumnName("opt_499");
            entity.Property(e => e.Opt5).HasColumnName("opt_5");
            entity.Property(e => e.Opt50).HasColumnName("opt_50");
            entity.Property(e => e.Opt500).HasColumnName("opt_500");
            entity.Property(e => e.Opt501).HasColumnName("opt_501");
            entity.Property(e => e.Opt502).HasColumnName("opt_502");
            entity.Property(e => e.Opt503).HasColumnName("opt_503");
            entity.Property(e => e.Opt504).HasColumnName("opt_504");
            entity.Property(e => e.Opt505).HasColumnName("opt_505");
            entity.Property(e => e.Opt506).HasColumnName("opt_506");
            entity.Property(e => e.Opt507).HasColumnName("opt_507");
            entity.Property(e => e.Opt508).HasColumnName("opt_508");
            entity.Property(e => e.Opt509).HasColumnName("opt_509");
            entity.Property(e => e.Opt51).HasColumnName("opt_51");
            entity.Property(e => e.Opt510).HasColumnName("opt_510");
            entity.Property(e => e.Opt511).HasColumnName("opt_511");
            entity.Property(e => e.Opt512).HasColumnName("opt_512");
            entity.Property(e => e.Opt513).HasColumnName("opt_513");
            entity.Property(e => e.Opt514).HasColumnName("opt_514");
            entity.Property(e => e.Opt515).HasColumnName("opt_515");
            entity.Property(e => e.Opt516).HasColumnName("opt_516");
            entity.Property(e => e.Opt517).HasColumnName("opt_517");
            entity.Property(e => e.Opt518).HasColumnName("opt_518");
            entity.Property(e => e.Opt519).HasColumnName("opt_519");
            entity.Property(e => e.Opt52).HasColumnName("opt_52");
            entity.Property(e => e.Opt520).HasColumnName("opt_520");
            entity.Property(e => e.Opt521).HasColumnName("opt_521");
            entity.Property(e => e.Opt522).HasColumnName("opt_522");
            entity.Property(e => e.Opt523).HasColumnName("opt_523");
            entity.Property(e => e.Opt524).HasColumnName("opt_524");
            entity.Property(e => e.Opt525).HasColumnName("opt_525");
            entity.Property(e => e.Opt526).HasColumnName("opt_526");
            entity.Property(e => e.Opt527).HasColumnName("opt_527");
            entity.Property(e => e.Opt528).HasColumnName("opt_528");
            entity.Property(e => e.Opt529).HasColumnName("opt_529");
            entity.Property(e => e.Opt53).HasColumnName("opt_53");
            entity.Property(e => e.Opt530).HasColumnName("opt_530");
            entity.Property(e => e.Opt531).HasColumnName("opt_531");
            entity.Property(e => e.Opt532).HasColumnName("opt_532");
            entity.Property(e => e.Opt533).HasColumnName("opt_533");
            entity.Property(e => e.Opt534).HasColumnName("opt_534");
            entity.Property(e => e.Opt535).HasColumnName("opt_535");
            entity.Property(e => e.Opt536).HasColumnName("opt_536");
            entity.Property(e => e.Opt537).HasColumnName("opt_537");
            entity.Property(e => e.Opt538).HasColumnName("opt_538");
            entity.Property(e => e.Opt539).HasColumnName("opt_539");
            entity.Property(e => e.Opt54).HasColumnName("opt_54");
            entity.Property(e => e.Opt540).HasColumnName("opt_540");
            entity.Property(e => e.Opt541).HasColumnName("opt_541");
            entity.Property(e => e.Opt542).HasColumnName("opt_542");
            entity.Property(e => e.Opt543).HasColumnName("opt_543");
            entity.Property(e => e.Opt544).HasColumnName("opt_544");
            entity.Property(e => e.Opt545).HasColumnName("opt_545");
            entity.Property(e => e.Opt546).HasColumnName("opt_546");
            entity.Property(e => e.Opt547).HasColumnName("opt_547");
            entity.Property(e => e.Opt548).HasColumnName("opt_548");
            entity.Property(e => e.Opt549).HasColumnName("opt_549");
            entity.Property(e => e.Opt55).HasColumnName("opt_55");
            entity.Property(e => e.Opt550).HasColumnName("opt_550");
            entity.Property(e => e.Opt551).HasColumnName("opt_551");
            entity.Property(e => e.Opt552).HasColumnName("opt_552");
            entity.Property(e => e.Opt553).HasColumnName("opt_553");
            entity.Property(e => e.Opt554).HasColumnName("opt_554");
            entity.Property(e => e.Opt555).HasColumnName("opt_555");
            entity.Property(e => e.Opt556).HasColumnName("opt_556");
            entity.Property(e => e.Opt557).HasColumnName("opt_557");
            entity.Property(e => e.Opt558).HasColumnName("opt_558");
            entity.Property(e => e.Opt559).HasColumnName("opt_559");
            entity.Property(e => e.Opt56).HasColumnName("opt_56");
            entity.Property(e => e.Opt560).HasColumnName("opt_560");
            entity.Property(e => e.Opt561).HasColumnName("opt_561");
            entity.Property(e => e.Opt562).HasColumnName("opt_562");
            entity.Property(e => e.Opt563).HasColumnName("opt_563");
            entity.Property(e => e.Opt564).HasColumnName("opt_564");
            entity.Property(e => e.Opt565).HasColumnName("opt_565");
            entity.Property(e => e.Opt566).HasColumnName("opt_566");
            entity.Property(e => e.Opt567).HasColumnName("opt_567");
            entity.Property(e => e.Opt568).HasColumnName("opt_568");
            entity.Property(e => e.Opt569).HasColumnName("opt_569");
            entity.Property(e => e.Opt57).HasColumnName("opt_57");
            entity.Property(e => e.Opt570).HasColumnName("opt_570");
            entity.Property(e => e.Opt571).HasColumnName("opt_571");
            entity.Property(e => e.Opt572).HasColumnName("opt_572");
            entity.Property(e => e.Opt573).HasColumnName("opt_573");
            entity.Property(e => e.Opt574).HasColumnName("opt_574");
            entity.Property(e => e.Opt575).HasColumnName("opt_575");
            entity.Property(e => e.Opt576).HasColumnName("opt_576");
            entity.Property(e => e.Opt577).HasColumnName("opt_577");
            entity.Property(e => e.Opt578).HasColumnName("opt_578");
            entity.Property(e => e.Opt579).HasColumnName("opt_579");
            entity.Property(e => e.Opt58).HasColumnName("opt_58");
            entity.Property(e => e.Opt580).HasColumnName("opt_580");
            entity.Property(e => e.Opt581).HasColumnName("opt_581");
            entity.Property(e => e.Opt582).HasColumnName("opt_582");
            entity.Property(e => e.Opt583).HasColumnName("opt_583");
            entity.Property(e => e.Opt584).HasColumnName("opt_584");
            entity.Property(e => e.Opt585).HasColumnName("opt_585");
            entity.Property(e => e.Opt586).HasColumnName("opt_586");
            entity.Property(e => e.Opt587).HasColumnName("opt_587");
            entity.Property(e => e.Opt588).HasColumnName("opt_588");
            entity.Property(e => e.Opt589).HasColumnName("opt_589");
            entity.Property(e => e.Opt59).HasColumnName("opt_59");
            entity.Property(e => e.Opt590).HasColumnName("opt_590");
            entity.Property(e => e.Opt591).HasColumnName("opt_591");
            entity.Property(e => e.Opt592).HasColumnName("opt_592");
            entity.Property(e => e.Opt593).HasColumnName("opt_593");
            entity.Property(e => e.Opt594).HasColumnName("opt_594");
            entity.Property(e => e.Opt595).HasColumnName("opt_595");
            entity.Property(e => e.Opt596).HasColumnName("opt_596");
            entity.Property(e => e.Opt597).HasColumnName("opt_597");
            entity.Property(e => e.Opt598).HasColumnName("opt_598");
            entity.Property(e => e.Opt599).HasColumnName("opt_599");
            entity.Property(e => e.Opt6).HasColumnName("opt_6");
            entity.Property(e => e.Opt60).HasColumnName("opt_60");
            entity.Property(e => e.Opt600).HasColumnName("opt_600");
            entity.Property(e => e.Opt601).HasColumnName("opt_601");
            entity.Property(e => e.Opt602).HasColumnName("opt_602");
            entity.Property(e => e.Opt603).HasColumnName("opt_603");
            entity.Property(e => e.Opt604).HasColumnName("opt_604");
            entity.Property(e => e.Opt605).HasColumnName("opt_605");
            entity.Property(e => e.Opt606).HasColumnName("opt_606");
            entity.Property(e => e.Opt607).HasColumnName("opt_607");
            entity.Property(e => e.Opt608).HasColumnName("opt_608");
            entity.Property(e => e.Opt609).HasColumnName("opt_609");
            entity.Property(e => e.Opt61).HasColumnName("opt_61");
            entity.Property(e => e.Opt610).HasColumnName("opt_610");
            entity.Property(e => e.Opt611).HasColumnName("opt_611");
            entity.Property(e => e.Opt612).HasColumnName("opt_612");
            entity.Property(e => e.Opt613).HasColumnName("opt_613");
            entity.Property(e => e.Opt614).HasColumnName("opt_614");
            entity.Property(e => e.Opt615).HasColumnName("opt_615");
            entity.Property(e => e.Opt616).HasColumnName("opt_616");
            entity.Property(e => e.Opt617).HasColumnName("opt_617");
            entity.Property(e => e.Opt618).HasColumnName("opt_618");
            entity.Property(e => e.Opt619).HasColumnName("opt_619");
            entity.Property(e => e.Opt62).HasColumnName("opt_62");
            entity.Property(e => e.Opt620).HasColumnName("opt_620");
            entity.Property(e => e.Opt621).HasColumnName("opt_621");
            entity.Property(e => e.Opt622).HasColumnName("opt_622");
            entity.Property(e => e.Opt623).HasColumnName("opt_623");
            entity.Property(e => e.Opt624).HasColumnName("opt_624");
            entity.Property(e => e.Opt625).HasColumnName("opt_625");
            entity.Property(e => e.Opt626).HasColumnName("opt_626");
            entity.Property(e => e.Opt627).HasColumnName("opt_627");
            entity.Property(e => e.Opt628).HasColumnName("opt_628");
            entity.Property(e => e.Opt629).HasColumnName("opt_629");
            entity.Property(e => e.Opt63).HasColumnName("opt_63");
            entity.Property(e => e.Opt630).HasColumnName("opt_630");
            entity.Property(e => e.Opt631).HasColumnName("opt_631");
            entity.Property(e => e.Opt632).HasColumnName("opt_632");
            entity.Property(e => e.Opt633).HasColumnName("opt_633");
            entity.Property(e => e.Opt634).HasColumnName("opt_634");
            entity.Property(e => e.Opt635).HasColumnName("opt_635");
            entity.Property(e => e.Opt636).HasColumnName("opt_636");
            entity.Property(e => e.Opt637).HasColumnName("opt_637");
            entity.Property(e => e.Opt638).HasColumnName("opt_638");
            entity.Property(e => e.Opt639).HasColumnName("opt_639");
            entity.Property(e => e.Opt64).HasColumnName("opt_64");
            entity.Property(e => e.Opt640).HasColumnName("opt_640");
            entity.Property(e => e.Opt641).HasColumnName("opt_641");
            entity.Property(e => e.Opt642).HasColumnName("opt_642");
            entity.Property(e => e.Opt643).HasColumnName("opt_643");
            entity.Property(e => e.Opt644).HasColumnName("opt_644");
            entity.Property(e => e.Opt645).HasColumnName("opt_645");
            entity.Property(e => e.Opt646).HasColumnName("opt_646");
            entity.Property(e => e.Opt647).HasColumnName("opt_647");
            entity.Property(e => e.Opt648).HasColumnName("opt_648");
            entity.Property(e => e.Opt649).HasColumnName("opt_649");
            entity.Property(e => e.Opt65).HasColumnName("opt_65");
            entity.Property(e => e.Opt650).HasColumnName("opt_650");
            entity.Property(e => e.Opt651).HasColumnName("opt_651");
            entity.Property(e => e.Opt652).HasColumnName("opt_652");
            entity.Property(e => e.Opt653).HasColumnName("opt_653");
            entity.Property(e => e.Opt654).HasColumnName("opt_654");
            entity.Property(e => e.Opt655).HasColumnName("opt_655");
            entity.Property(e => e.Opt656).HasColumnName("opt_656");
            entity.Property(e => e.Opt657).HasColumnName("opt_657");
            entity.Property(e => e.Opt658).HasColumnName("opt_658");
            entity.Property(e => e.Opt659).HasColumnName("opt_659");
            entity.Property(e => e.Opt66).HasColumnName("opt_66");
            entity.Property(e => e.Opt660).HasColumnName("opt_660");
            entity.Property(e => e.Opt661).HasColumnName("opt_661");
            entity.Property(e => e.Opt662).HasColumnName("opt_662");
            entity.Property(e => e.Opt663).HasColumnName("opt_663");
            entity.Property(e => e.Opt664).HasColumnName("opt_664");
            entity.Property(e => e.Opt665).HasColumnName("opt_665");
            entity.Property(e => e.Opt666).HasColumnName("opt_666");
            entity.Property(e => e.Opt667).HasColumnName("opt_667");
            entity.Property(e => e.Opt668).HasColumnName("opt_668");
            entity.Property(e => e.Opt669).HasColumnName("opt_669");
            entity.Property(e => e.Opt67).HasColumnName("opt_67");
            entity.Property(e => e.Opt670).HasColumnName("opt_670");
            entity.Property(e => e.Opt671).HasColumnName("opt_671");
            entity.Property(e => e.Opt672).HasColumnName("opt_672");
            entity.Property(e => e.Opt673).HasColumnName("opt_673");
            entity.Property(e => e.Opt674).HasColumnName("opt_674");
            entity.Property(e => e.Opt675).HasColumnName("opt_675");
            entity.Property(e => e.Opt676).HasColumnName("opt_676");
            entity.Property(e => e.Opt677).HasColumnName("opt_677");
            entity.Property(e => e.Opt678).HasColumnName("opt_678");
            entity.Property(e => e.Opt679).HasColumnName("opt_679");
            entity.Property(e => e.Opt68).HasColumnName("opt_68");
            entity.Property(e => e.Opt680).HasColumnName("opt_680");
            entity.Property(e => e.Opt681).HasColumnName("opt_681");
            entity.Property(e => e.Opt682).HasColumnName("opt_682");
            entity.Property(e => e.Opt683).HasColumnName("opt_683");
            entity.Property(e => e.Opt684).HasColumnName("opt_684");
            entity.Property(e => e.Opt685).HasColumnName("opt_685");
            entity.Property(e => e.Opt686).HasColumnName("opt_686");
            entity.Property(e => e.Opt687).HasColumnName("opt_687");
            entity.Property(e => e.Opt688).HasColumnName("opt_688");
            entity.Property(e => e.Opt689).HasColumnName("opt_689");
            entity.Property(e => e.Opt69).HasColumnName("opt_69");
            entity.Property(e => e.Opt690).HasColumnName("opt_690");
            entity.Property(e => e.Opt691).HasColumnName("opt_691");
            entity.Property(e => e.Opt692).HasColumnName("opt_692");
            entity.Property(e => e.Opt693).HasColumnName("opt_693");
            entity.Property(e => e.Opt694).HasColumnName("opt_694");
            entity.Property(e => e.Opt695).HasColumnName("opt_695");
            entity.Property(e => e.Opt696).HasColumnName("opt_696");
            entity.Property(e => e.Opt697).HasColumnName("opt_697");
            entity.Property(e => e.Opt698).HasColumnName("opt_698");
            entity.Property(e => e.Opt699).HasColumnName("opt_699");
            entity.Property(e => e.Opt7).HasColumnName("opt_7");
            entity.Property(e => e.Opt70).HasColumnName("opt_70");
            entity.Property(e => e.Opt700).HasColumnName("opt_700");
            entity.Property(e => e.Opt701).HasColumnName("opt_701");
            entity.Property(e => e.Opt702).HasColumnName("opt_702");
            entity.Property(e => e.Opt703).HasColumnName("opt_703");
            entity.Property(e => e.Opt704).HasColumnName("opt_704");
            entity.Property(e => e.Opt705).HasColumnName("opt_705");
            entity.Property(e => e.Opt706).HasColumnName("opt_706");
            entity.Property(e => e.Opt707).HasColumnName("opt_707");
            entity.Property(e => e.Opt708).HasColumnName("opt_708");
            entity.Property(e => e.Opt709).HasColumnName("opt_709");
            entity.Property(e => e.Opt71).HasColumnName("opt_71");
            entity.Property(e => e.Opt710).HasColumnName("opt_710");
            entity.Property(e => e.Opt711).HasColumnName("opt_711");
            entity.Property(e => e.Opt712).HasColumnName("opt_712");
            entity.Property(e => e.Opt713).HasColumnName("opt_713");
            entity.Property(e => e.Opt714).HasColumnName("opt_714");
            entity.Property(e => e.Opt715).HasColumnName("opt_715");
            entity.Property(e => e.Opt716).HasColumnName("opt_716");
            entity.Property(e => e.Opt717).HasColumnName("opt_717");
            entity.Property(e => e.Opt718).HasColumnName("opt_718");
            entity.Property(e => e.Opt719).HasColumnName("opt_719");
            entity.Property(e => e.Opt72).HasColumnName("opt_72");
            entity.Property(e => e.Opt720).HasColumnName("opt_720");
            entity.Property(e => e.Opt721).HasColumnName("opt_721");
            entity.Property(e => e.Opt722).HasColumnName("opt_722");
            entity.Property(e => e.Opt723).HasColumnName("opt_723");
            entity.Property(e => e.Opt724).HasColumnName("opt_724");
            entity.Property(e => e.Opt725).HasColumnName("opt_725");
            entity.Property(e => e.Opt726).HasColumnName("opt_726");
            entity.Property(e => e.Opt727).HasColumnName("opt_727");
            entity.Property(e => e.Opt728).HasColumnName("opt_728");
            entity.Property(e => e.Opt729).HasColumnName("opt_729");
            entity.Property(e => e.Opt73).HasColumnName("opt_73");
            entity.Property(e => e.Opt730).HasColumnName("opt_730");
            entity.Property(e => e.Opt731).HasColumnName("opt_731");
            entity.Property(e => e.Opt732).HasColumnName("opt_732");
            entity.Property(e => e.Opt733).HasColumnName("opt_733");
            entity.Property(e => e.Opt734).HasColumnName("opt_734");
            entity.Property(e => e.Opt735).HasColumnName("opt_735");
            entity.Property(e => e.Opt736).HasColumnName("opt_736");
            entity.Property(e => e.Opt737).HasColumnName("opt_737");
            entity.Property(e => e.Opt738).HasColumnName("opt_738");
            entity.Property(e => e.Opt739).HasColumnName("opt_739");
            entity.Property(e => e.Opt74).HasColumnName("opt_74");
            entity.Property(e => e.Opt740).HasColumnName("opt_740");
            entity.Property(e => e.Opt741).HasColumnName("opt_741");
            entity.Property(e => e.Opt742).HasColumnName("opt_742");
            entity.Property(e => e.Opt743).HasColumnName("opt_743");
            entity.Property(e => e.Opt744).HasColumnName("opt_744");
            entity.Property(e => e.Opt745).HasColumnName("opt_745");
            entity.Property(e => e.Opt746).HasColumnName("opt_746");
            entity.Property(e => e.Opt747).HasColumnName("opt_747");
            entity.Property(e => e.Opt748).HasColumnName("opt_748");
            entity.Property(e => e.Opt749).HasColumnName("opt_749");
            entity.Property(e => e.Opt75).HasColumnName("opt_75");
            entity.Property(e => e.Opt750).HasColumnName("opt_750");
            entity.Property(e => e.Opt751).HasColumnName("opt_751");
            entity.Property(e => e.Opt752).HasColumnName("opt_752");
            entity.Property(e => e.Opt753).HasColumnName("opt_753");
            entity.Property(e => e.Opt754).HasColumnName("opt_754");
            entity.Property(e => e.Opt755).HasColumnName("opt_755");
            entity.Property(e => e.Opt756).HasColumnName("opt_756");
            entity.Property(e => e.Opt757).HasColumnName("opt_757");
            entity.Property(e => e.Opt758).HasColumnName("opt_758");
            entity.Property(e => e.Opt759).HasColumnName("opt_759");
            entity.Property(e => e.Opt76).HasColumnName("opt_76");
            entity.Property(e => e.Opt760).HasColumnName("opt_760");
            entity.Property(e => e.Opt761).HasColumnName("opt_761");
            entity.Property(e => e.Opt762).HasColumnName("opt_762");
            entity.Property(e => e.Opt763).HasColumnName("opt_763");
            entity.Property(e => e.Opt764).HasColumnName("opt_764");
            entity.Property(e => e.Opt765).HasColumnName("opt_765");
            entity.Property(e => e.Opt766).HasColumnName("opt_766");
            entity.Property(e => e.Opt767).HasColumnName("opt_767");
            entity.Property(e => e.Opt768).HasColumnName("opt_768");
            entity.Property(e => e.Opt769).HasColumnName("opt_769");
            entity.Property(e => e.Opt77).HasColumnName("opt_77");
            entity.Property(e => e.Opt770).HasColumnName("opt_770");
            entity.Property(e => e.Opt771).HasColumnName("opt_771");
            entity.Property(e => e.Opt772).HasColumnName("opt_772");
            entity.Property(e => e.Opt773).HasColumnName("opt_773");
            entity.Property(e => e.Opt774).HasColumnName("opt_774");
            entity.Property(e => e.Opt775).HasColumnName("opt_775");
            entity.Property(e => e.Opt776).HasColumnName("opt_776");
            entity.Property(e => e.Opt777).HasColumnName("opt_777");
            entity.Property(e => e.Opt778).HasColumnName("opt_778");
            entity.Property(e => e.Opt779).HasColumnName("opt_779");
            entity.Property(e => e.Opt78).HasColumnName("opt_78");
            entity.Property(e => e.Opt780).HasColumnName("opt_780");
            entity.Property(e => e.Opt781).HasColumnName("opt_781");
            entity.Property(e => e.Opt782).HasColumnName("opt_782");
            entity.Property(e => e.Opt783).HasColumnName("opt_783");
            entity.Property(e => e.Opt784).HasColumnName("opt_784");
            entity.Property(e => e.Opt785).HasColumnName("opt_785");
            entity.Property(e => e.Opt786).HasColumnName("opt_786");
            entity.Property(e => e.Opt787).HasColumnName("opt_787");
            entity.Property(e => e.Opt788).HasColumnName("opt_788");
            entity.Property(e => e.Opt789).HasColumnName("opt_789");
            entity.Property(e => e.Opt79).HasColumnName("opt_79");
            entity.Property(e => e.Opt790).HasColumnName("opt_790");
            entity.Property(e => e.Opt791).HasColumnName("opt_791");
            entity.Property(e => e.Opt792).HasColumnName("opt_792");
            entity.Property(e => e.Opt793).HasColumnName("opt_793");
            entity.Property(e => e.Opt794).HasColumnName("opt_794");
            entity.Property(e => e.Opt795).HasColumnName("opt_795");
            entity.Property(e => e.Opt796).HasColumnName("opt_796");
            entity.Property(e => e.Opt797).HasColumnName("opt_797");
            entity.Property(e => e.Opt798).HasColumnName("opt_798");
            entity.Property(e => e.Opt799).HasColumnName("opt_799");
            entity.Property(e => e.Opt8).HasColumnName("opt_8");
            entity.Property(e => e.Opt80).HasColumnName("opt_80");
            entity.Property(e => e.Opt800).HasColumnName("opt_800");
            entity.Property(e => e.Opt801).HasColumnName("opt_801");
            entity.Property(e => e.Opt802).HasColumnName("opt_802");
            entity.Property(e => e.Opt803).HasColumnName("opt_803");
            entity.Property(e => e.Opt804).HasColumnName("opt_804");
            entity.Property(e => e.Opt805).HasColumnName("opt_805");
            entity.Property(e => e.Opt806).HasColumnName("opt_806");
            entity.Property(e => e.Opt807).HasColumnName("opt_807");
            entity.Property(e => e.Opt808).HasColumnName("opt_808");
            entity.Property(e => e.Opt809).HasColumnName("opt_809");
            entity.Property(e => e.Opt81).HasColumnName("opt_81");
            entity.Property(e => e.Opt810).HasColumnName("opt_810");
            entity.Property(e => e.Opt811).HasColumnName("opt_811");
            entity.Property(e => e.Opt812).HasColumnName("opt_812");
            entity.Property(e => e.Opt813).HasColumnName("opt_813");
            entity.Property(e => e.Opt814).HasColumnName("opt_814");
            entity.Property(e => e.Opt815).HasColumnName("opt_815");
            entity.Property(e => e.Opt816).HasColumnName("opt_816");
            entity.Property(e => e.Opt817).HasColumnName("opt_817");
            entity.Property(e => e.Opt818).HasColumnName("opt_818");
            entity.Property(e => e.Opt819).HasColumnName("opt_819");
            entity.Property(e => e.Opt82).HasColumnName("opt_82");
            entity.Property(e => e.Opt820).HasColumnName("opt_820");
            entity.Property(e => e.Opt821).HasColumnName("opt_821");
            entity.Property(e => e.Opt822).HasColumnName("opt_822");
            entity.Property(e => e.Opt823).HasColumnName("opt_823");
            entity.Property(e => e.Opt824).HasColumnName("opt_824");
            entity.Property(e => e.Opt825).HasColumnName("opt_825");
            entity.Property(e => e.Opt826).HasColumnName("opt_826");
            entity.Property(e => e.Opt827).HasColumnName("opt_827");
            entity.Property(e => e.Opt828).HasColumnName("opt_828");
            entity.Property(e => e.Opt829).HasColumnName("opt_829");
            entity.Property(e => e.Opt83).HasColumnName("opt_83");
            entity.Property(e => e.Opt830).HasColumnName("opt_830");
            entity.Property(e => e.Opt831).HasColumnName("opt_831");
            entity.Property(e => e.Opt832).HasColumnName("opt_832");
            entity.Property(e => e.Opt833).HasColumnName("opt_833");
            entity.Property(e => e.Opt834).HasColumnName("opt_834");
            entity.Property(e => e.Opt835).HasColumnName("opt_835");
            entity.Property(e => e.Opt836).HasColumnName("opt_836");
            entity.Property(e => e.Opt837).HasColumnName("opt_837");
            entity.Property(e => e.Opt838).HasColumnName("opt_838");
            entity.Property(e => e.Opt839).HasColumnName("opt_839");
            entity.Property(e => e.Opt84).HasColumnName("opt_84");
            entity.Property(e => e.Opt840).HasColumnName("opt_840");
            entity.Property(e => e.Opt841).HasColumnName("opt_841");
            entity.Property(e => e.Opt842).HasColumnName("opt_842");
            entity.Property(e => e.Opt843).HasColumnName("opt_843");
            entity.Property(e => e.Opt844).HasColumnName("opt_844");
            entity.Property(e => e.Opt845).HasColumnName("opt_845");
            entity.Property(e => e.Opt846).HasColumnName("opt_846");
            entity.Property(e => e.Opt847).HasColumnName("opt_847");
            entity.Property(e => e.Opt848).HasColumnName("opt_848");
            entity.Property(e => e.Opt849).HasColumnName("opt_849");
            entity.Property(e => e.Opt85).HasColumnName("opt_85");
            entity.Property(e => e.Opt850).HasColumnName("opt_850");
            entity.Property(e => e.Opt851).HasColumnName("opt_851");
            entity.Property(e => e.Opt852).HasColumnName("opt_852");
            entity.Property(e => e.Opt853).HasColumnName("opt_853");
            entity.Property(e => e.Opt854).HasColumnName("opt_854");
            entity.Property(e => e.Opt855).HasColumnName("opt_855");
            entity.Property(e => e.Opt856).HasColumnName("opt_856");
            entity.Property(e => e.Opt857).HasColumnName("opt_857");
            entity.Property(e => e.Opt858).HasColumnName("opt_858");
            entity.Property(e => e.Opt859).HasColumnName("opt_859");
            entity.Property(e => e.Opt86).HasColumnName("opt_86");
            entity.Property(e => e.Opt860).HasColumnName("opt_860");
            entity.Property(e => e.Opt861).HasColumnName("opt_861");
            entity.Property(e => e.Opt862).HasColumnName("opt_862");
            entity.Property(e => e.Opt863).HasColumnName("opt_863");
            entity.Property(e => e.Opt864).HasColumnName("opt_864");
            entity.Property(e => e.Opt865).HasColumnName("opt_865");
            entity.Property(e => e.Opt866).HasColumnName("opt_866");
            entity.Property(e => e.Opt867).HasColumnName("opt_867");
            entity.Property(e => e.Opt868).HasColumnName("opt_868");
            entity.Property(e => e.Opt869).HasColumnName("opt_869");
            entity.Property(e => e.Opt87).HasColumnName("opt_87");
            entity.Property(e => e.Opt870).HasColumnName("opt_870");
            entity.Property(e => e.Opt871).HasColumnName("opt_871");
            entity.Property(e => e.Opt872).HasColumnName("opt_872");
            entity.Property(e => e.Opt873).HasColumnName("opt_873");
            entity.Property(e => e.Opt874).HasColumnName("opt_874");
            entity.Property(e => e.Opt875).HasColumnName("opt_875");
            entity.Property(e => e.Opt876).HasColumnName("opt_876");
            entity.Property(e => e.Opt877).HasColumnName("opt_877");
            entity.Property(e => e.Opt878).HasColumnName("opt_878");
            entity.Property(e => e.Opt879).HasColumnName("opt_879");
            entity.Property(e => e.Opt88).HasColumnName("opt_88");
            entity.Property(e => e.Opt880).HasColumnName("opt_880");
            entity.Property(e => e.Opt881).HasColumnName("opt_881");
            entity.Property(e => e.Opt882).HasColumnName("opt_882");
            entity.Property(e => e.Opt883).HasColumnName("opt_883");
            entity.Property(e => e.Opt884).HasColumnName("opt_884");
            entity.Property(e => e.Opt885).HasColumnName("opt_885");
            entity.Property(e => e.Opt886).HasColumnName("opt_886");
            entity.Property(e => e.Opt887).HasColumnName("opt_887");
            entity.Property(e => e.Opt888).HasColumnName("opt_888");
            entity.Property(e => e.Opt889).HasColumnName("opt_889");
            entity.Property(e => e.Opt89).HasColumnName("opt_89");
            entity.Property(e => e.Opt890).HasColumnName("opt_890");
            entity.Property(e => e.Opt891).HasColumnName("opt_891");
            entity.Property(e => e.Opt892).HasColumnName("opt_892");
            entity.Property(e => e.Opt893).HasColumnName("opt_893");
            entity.Property(e => e.Opt894).HasColumnName("opt_894");
            entity.Property(e => e.Opt895).HasColumnName("opt_895");
            entity.Property(e => e.Opt896).HasColumnName("opt_896");
            entity.Property(e => e.Opt897).HasColumnName("opt_897");
            entity.Property(e => e.Opt898).HasColumnName("opt_898");
            entity.Property(e => e.Opt899).HasColumnName("opt_899");
            entity.Property(e => e.Opt9).HasColumnName("opt_9");
            entity.Property(e => e.Opt90).HasColumnName("opt_90");
            entity.Property(e => e.Opt900).HasColumnName("opt_900");
            entity.Property(e => e.Opt901).HasColumnName("opt_901");
            entity.Property(e => e.Opt902).HasColumnName("opt_902");
            entity.Property(e => e.Opt903).HasColumnName("opt_903");
            entity.Property(e => e.Opt904).HasColumnName("opt_904");
            entity.Property(e => e.Opt905).HasColumnName("opt_905");
            entity.Property(e => e.Opt906).HasColumnName("opt_906");
            entity.Property(e => e.Opt907).HasColumnName("opt_907");
            entity.Property(e => e.Opt908).HasColumnName("opt_908");
            entity.Property(e => e.Opt909).HasColumnName("opt_909");
            entity.Property(e => e.Opt91).HasColumnName("opt_91");
            entity.Property(e => e.Opt910).HasColumnName("opt_910");
            entity.Property(e => e.Opt911).HasColumnName("opt_911");
            entity.Property(e => e.Opt912).HasColumnName("opt_912");
            entity.Property(e => e.Opt913).HasColumnName("opt_913");
            entity.Property(e => e.Opt914).HasColumnName("opt_914");
            entity.Property(e => e.Opt915).HasColumnName("opt_915");
            entity.Property(e => e.Opt916).HasColumnName("opt_916");
            entity.Property(e => e.Opt917).HasColumnName("opt_917");
            entity.Property(e => e.Opt918).HasColumnName("opt_918");
            entity.Property(e => e.Opt919).HasColumnName("opt_919");
            entity.Property(e => e.Opt92).HasColumnName("opt_92");
            entity.Property(e => e.Opt920).HasColumnName("opt_920");
            entity.Property(e => e.Opt921).HasColumnName("opt_921");
            entity.Property(e => e.Opt922).HasColumnName("opt_922");
            entity.Property(e => e.Opt923).HasColumnName("opt_923");
            entity.Property(e => e.Opt924).HasColumnName("opt_924");
            entity.Property(e => e.Opt925).HasColumnName("opt_925");
            entity.Property(e => e.Opt926).HasColumnName("opt_926");
            entity.Property(e => e.Opt927).HasColumnName("opt_927");
            entity.Property(e => e.Opt928).HasColumnName("opt_928");
            entity.Property(e => e.Opt929).HasColumnName("opt_929");
            entity.Property(e => e.Opt93).HasColumnName("opt_93");
            entity.Property(e => e.Opt930).HasColumnName("opt_930");
            entity.Property(e => e.Opt931).HasColumnName("opt_931");
            entity.Property(e => e.Opt932).HasColumnName("opt_932");
            entity.Property(e => e.Opt933).HasColumnName("opt_933");
            entity.Property(e => e.Opt934).HasColumnName("opt_934");
            entity.Property(e => e.Opt935).HasColumnName("opt_935");
            entity.Property(e => e.Opt936).HasColumnName("opt_936");
            entity.Property(e => e.Opt937).HasColumnName("opt_937");
            entity.Property(e => e.Opt938).HasColumnName("opt_938");
            entity.Property(e => e.Opt939).HasColumnName("opt_939");
            entity.Property(e => e.Opt94).HasColumnName("opt_94");
            entity.Property(e => e.Opt940).HasColumnName("opt_940");
            entity.Property(e => e.Opt941).HasColumnName("opt_941");
            entity.Property(e => e.Opt942).HasColumnName("opt_942");
            entity.Property(e => e.Opt943).HasColumnName("opt_943");
            entity.Property(e => e.Opt944).HasColumnName("opt_944");
            entity.Property(e => e.Opt945).HasColumnName("opt_945");
            entity.Property(e => e.Opt946).HasColumnName("opt_946");
            entity.Property(e => e.Opt947).HasColumnName("opt_947");
            entity.Property(e => e.Opt948).HasColumnName("opt_948");
            entity.Property(e => e.Opt949).HasColumnName("opt_949");
            entity.Property(e => e.Opt95).HasColumnName("opt_95");
            entity.Property(e => e.Opt950).HasColumnName("opt_950");
            entity.Property(e => e.Opt951).HasColumnName("opt_951");
            entity.Property(e => e.Opt952).HasColumnName("opt_952");
            entity.Property(e => e.Opt953).HasColumnName("opt_953");
            entity.Property(e => e.Opt954).HasColumnName("opt_954");
            entity.Property(e => e.Opt955).HasColumnName("opt_955");
            entity.Property(e => e.Opt956).HasColumnName("opt_956");
            entity.Property(e => e.Opt957).HasColumnName("opt_957");
            entity.Property(e => e.Opt958).HasColumnName("opt_958");
            entity.Property(e => e.Opt959).HasColumnName("opt_959");
            entity.Property(e => e.Opt96).HasColumnName("opt_96");
            entity.Property(e => e.Opt960).HasColumnName("opt_960");
            entity.Property(e => e.Opt961).HasColumnName("opt_961");
            entity.Property(e => e.Opt962).HasColumnName("opt_962");
            entity.Property(e => e.Opt963).HasColumnName("opt_963");
            entity.Property(e => e.Opt964).HasColumnName("opt_964");
            entity.Property(e => e.Opt965).HasColumnName("opt_965");
            entity.Property(e => e.Opt966).HasColumnName("opt_966");
            entity.Property(e => e.Opt967).HasColumnName("opt_967");
            entity.Property(e => e.Opt968).HasColumnName("opt_968");
            entity.Property(e => e.Opt969).HasColumnName("opt_969");
            entity.Property(e => e.Opt97).HasColumnName("opt_97");
            entity.Property(e => e.Opt970).HasColumnName("opt_970");
            entity.Property(e => e.Opt971).HasColumnName("opt_971");
            entity.Property(e => e.Opt972).HasColumnName("opt_972");
            entity.Property(e => e.Opt973).HasColumnName("opt_973");
            entity.Property(e => e.Opt974).HasColumnName("opt_974");
            entity.Property(e => e.Opt975).HasColumnName("opt_975");
            entity.Property(e => e.Opt976).HasColumnName("opt_976");
            entity.Property(e => e.Opt977).HasColumnName("opt_977");
            entity.Property(e => e.Opt978).HasColumnName("opt_978");
            entity.Property(e => e.Opt979).HasColumnName("opt_979");
            entity.Property(e => e.Opt98).HasColumnName("opt_98");
            entity.Property(e => e.Opt980).HasColumnName("opt_980");
            entity.Property(e => e.Opt981).HasColumnName("opt_981");
            entity.Property(e => e.Opt982).HasColumnName("opt_982");
            entity.Property(e => e.Opt983).HasColumnName("opt_983");
            entity.Property(e => e.Opt984).HasColumnName("opt_984");
            entity.Property(e => e.Opt985).HasColumnName("opt_985");
            entity.Property(e => e.Opt986).HasColumnName("opt_986");
            entity.Property(e => e.Opt987).HasColumnName("opt_987");
            entity.Property(e => e.Opt988).HasColumnName("opt_988");
            entity.Property(e => e.Opt989).HasColumnName("opt_989");
            entity.Property(e => e.Opt99).HasColumnName("opt_99");
            entity.Property(e => e.Opt990).HasColumnName("opt_990");
            entity.Property(e => e.Opt991).HasColumnName("opt_991");
            entity.Property(e => e.Opt992).HasColumnName("opt_992");
            entity.Property(e => e.Opt993).HasColumnName("opt_993");
            entity.Property(e => e.Opt994).HasColumnName("opt_994");
            entity.Property(e => e.Opt995).HasColumnName("opt_995");
            entity.Property(e => e.Opt996).HasColumnName("opt_996");
            entity.Property(e => e.Opt997).HasColumnName("opt_997");
            entity.Property(e => e.Opt998).HasColumnName("opt_998");
            entity.Property(e => e.Opt999).HasColumnName("opt_999");
        });

        modelBuilder.Entity<ExactTrialModule>(entity =>
        {
            entity.HasNoKey();

            entity.HasIndex(e => e.ItemCode, "ExactTrialModules_Index").IsClustered();

            entity.Property(e => e.ActivationDate).HasColumnType("datetime");
            entity.Property(e => e.Description).HasMaxLength(60);
            entity.Property(e => e.ExpirationDate).HasColumnType("datetime");
            entity.Property(e => e.ItemCode).HasMaxLength(30);
            entity.Property(e => e.TermId).HasColumnName("TermID");
        });

        modelBuilder.Entity<Facard>(entity =>
        {
            entity
                .HasNoKey()
                .ToView("facard");

            entity.Property(e => e.Activatedate)
                .HasColumnType("datetime")
                .HasColumnName("activatedate");
            entity.Property(e => e.AddressGuid).HasColumnName("AddressGUID");
            entity.Property(e => e.Artcode)
                .HasMaxLength(30)
                .HasColumnName("artcode");
            entity.Property(e => e.Assetcode)
                .HasMaxLength(30)
                .HasColumnName("assetcode");
            entity.Property(e => e.Assetgroup)
                .HasMaxLength(20)
                .HasColumnName("assetgroup");
            entity.Property(e => e.AttachGuid).HasColumnName("attach_guid");
            entity.Property(e => e.Bedrnr)
                .HasMaxLength(3)
                .HasColumnName("bedrnr");
            entity.Property(e => e.Classification)
                .HasMaxLength(1)
                .IsFixedLength();
            entity.Property(e => e.Costlastmnt).HasColumnName("costlastmnt");
            entity.Property(e => e.Costlastmntfc).HasColumnName("costlastmntfc");
            entity.Property(e => e.Crdnr)
                .HasMaxLength(6)
                .IsFixedLength()
                .HasColumnName("crdnr");
            entity.Property(e => e.Currqtyunits).HasColumnName("currqtyunits");
            entity.Property(e => e.Debnr).HasColumnName("debnr");
            entity.Property(e => e.Descr500)
                .HasMaxLength(60)
                .HasColumnName("descr50_0");
            entity.Property(e => e.Descr501)
                .HasMaxLength(50)
                .HasColumnName("descr50_1");
            entity.Property(e => e.Descr502)
                .HasMaxLength(50)
                .HasColumnName("descr50_2");
            entity.Property(e => e.Descr503)
                .HasMaxLength(50)
                .HasColumnName("descr50_3");
            entity.Property(e => e.Descr504)
                .HasMaxLength(50)
                .HasColumnName("descr50_4");
            entity.Property(e => e.Enddate)
                .HasColumnType("datetime")
                .HasColumnName("enddate");
            entity.Property(e => e.Exchrate).HasColumnName("exchrate");
            entity.Property(e => e.Fiscalgroup)
                .HasMaxLength(20)
                .HasColumnName("fiscalgroup");
            entity.Property(e => e.Freefield1)
                .HasMaxLength(255)
                .HasColumnName("freefield1");
            entity.Property(e => e.Freefield10).HasColumnName("freefield10");
            entity.Property(e => e.Freefield11).HasColumnName("freefield11");
            entity.Property(e => e.Freefield12).HasColumnName("freefield12");
            entity.Property(e => e.Freefield13).HasColumnName("freefield13");
            entity.Property(e => e.Freefield14).HasColumnName("freefield14");
            entity.Property(e => e.Freefield15).HasColumnName("freefield15");
            entity.Property(e => e.Freefield16)
                .HasColumnType("datetime")
                .HasColumnName("freefield16");
            entity.Property(e => e.Freefield17)
                .HasColumnType("datetime")
                .HasColumnName("freefield17");
            entity.Property(e => e.Freefield18)
                .HasColumnType("datetime")
                .HasColumnName("freefield18");
            entity.Property(e => e.Freefield19)
                .HasMaxLength(255)
                .HasColumnName("freefield19");
            entity.Property(e => e.Freefield2)
                .HasMaxLength(255)
                .HasColumnName("freefield2");
            entity.Property(e => e.Freefield20)
                .HasMaxLength(255)
                .HasColumnName("freefield20");
            entity.Property(e => e.Freefield3)
                .HasMaxLength(255)
                .HasColumnName("freefield3");
            entity.Property(e => e.Freefield4)
                .HasMaxLength(255)
                .HasColumnName("freefield4");
            entity.Property(e => e.Freefield5)
                .HasMaxLength(255)
                .HasColumnName("freefield5");
            entity.Property(e => e.Freefield6).HasColumnName("freefield6");
            entity.Property(e => e.Freefield7).HasColumnName("freefield7");
            entity.Property(e => e.Freefield8).HasColumnName("freefield8");
            entity.Property(e => e.Freefield9).HasColumnName("freefield9");
            entity.Property(e => e.Id)
                .ValueGeneratedOnAdd()
                .HasColumnName("ID");
            entity.Property(e => e.Kstdrcode)
                .HasMaxLength(8)
                .IsFixedLength()
                .HasColumnName("kstdrcode");
            entity.Property(e => e.Kstplcode)
                .HasMaxLength(8)
                .IsFixedLength()
                .HasColumnName("kstplcode");
            entity.Property(e => e.Lastmntdate)
                .HasColumnType("datetime")
                .HasColumnName("lastmntdate");
            entity.Property(e => e.Miscamt).HasColumnName("miscamt");
            entity.Property(e => e.Miscamtfc).HasColumnName("miscamtfc");
            entity.Property(e => e.NotesGuid).HasColumnName("notesGuid");
            entity.Property(e => e.Origbkvalue).HasColumnName("origbkvalue");
            entity.Property(e => e.Origbkvaluefc).HasColumnName("origbkvaluefc");
            entity.Property(e => e.Origpurchamt).HasColumnName("origpurchamt");
            entity.Property(e => e.Origpurchamtfc).HasColumnName("origpurchamtfc");
            entity.Property(e => e.Parentid).HasColumnName("parentid");
            entity.Property(e => e.Passengercar).HasColumnName("passengercar");
            entity.Property(e => e.Picture).HasColumnName("picture");
            entity.Property(e => e.Picturefilename)
                .HasMaxLength(128)
                .HasColumnName("picturefilename");
            entity.Property(e => e.Pricelist)
                .HasMaxLength(15)
                .HasColumnName("pricelist");
            entity.Property(e => e.Primarymeth)
                .HasMaxLength(20)
                .HasColumnName("primarymeth");
            entity.Property(e => e.Projectnr)
                .HasMaxLength(20)
                .HasColumnName("projectnr");
            entity.Property(e => e.Propertytype)
                .HasMaxLength(1)
                .IsFixedLength()
                .HasColumnName("propertytype");
            entity.Property(e => e.Qtyrecd).HasColumnName("qtyrecd");
            entity.Property(e => e.Receiptnum)
                .HasMaxLength(8)
                .IsFixedLength()
                .HasColumnName("receiptnum");
            entity.Property(e => e.ResId).HasColumnName("res_id");
            entity.Property(e => e.Residualvalue).HasColumnName("residualvalue");
            entity.Property(e => e.Secondarymeth)
                .HasMaxLength(20)
                .HasColumnName("secondarymeth");
            entity.Property(e => e.Status)
                .HasMaxLength(1)
                .IsFixedLength();
            entity.Property(e => e.Syscreated)
                .HasColumnType("datetime")
                .HasColumnName("syscreated");
            entity.Property(e => e.Syscreator).HasColumnName("syscreator");
            entity.Property(e => e.Sysguid).HasColumnName("sysguid");
            entity.Property(e => e.Sysmodified)
                .HasColumnType("datetime")
                .HasColumnName("sysmodified");
            entity.Property(e => e.Sysmodifier).HasColumnName("sysmodifier");
            entity.Property(e => e.Timestamp)
                .IsRowVersion()
                .IsConcurrencyToken()
                .HasColumnName("timestamp");
            entity.Property(e => e.Usagestartper)
                .HasMaxLength(3)
                .IsFixedLength()
                .HasColumnName("usagestartper");
            entity.Property(e => e.Usagestartyear)
                .HasMaxLength(4)
                .IsFixedLength()
                .HasColumnName("usagestartyear");
            entity.Property(e => e.Valcode)
                .HasMaxLength(3)
                .IsFixedLength()
                .HasColumnName("valcode");
        });

        modelBuilder.Entity<Fadpre>(entity =>
        {
            entity.HasKey(e => e.Id).IsClustered(false);

            entity.ToTable("fadpre");

            entity.HasIndex(e => new { e.Artcode, e.Assetcode, e.Valuation, e.Seqnum }, "fadpre")
                .IsUnique()
                .IsClustered();

            entity.Property(e => e.Id).HasColumnName("ID");
            entity.Property(e => e.Artcode)
                .HasMaxLength(30)
                .HasColumnName("artcode");
            entity.Property(e => e.Assetcode)
                .HasMaxLength(20)
                .HasColumnName("assetcode");
            entity.Property(e => e.Assetpartnum)
                .HasMaxLength(20)
                .HasColumnName("assetpartnum");
            entity.Property(e => e.Bkvalueend).HasColumnName("bkvalueend");
            entity.Property(e => e.Bkvalueendfc).HasColumnName("bkvalueendfc");
            entity.Property(e => e.Bkvaluestart).HasColumnName("bkvaluestart");
            entity.Property(e => e.Bkvaluestartfc).HasColumnName("bkvaluestartfc");
            entity.Property(e => e.Cumdepr).HasColumnName("cumdepr");
            entity.Property(e => e.Cumdeprfc).HasColumnName("cumdeprfc");
            entity.Property(e => e.Currbkvalue).HasColumnName("currbkvalue");
            entity.Property(e => e.Currbkvaluefc).HasColumnName("currbkvaluefc");
            entity.Property(e => e.Dateend)
                .HasColumnType("datetime")
                .HasColumnName("dateend");
            entity.Property(e => e.Datestart)
                .HasColumnType("datetime")
                .HasColumnName("datestart");
            entity.Property(e => e.Deprfactor).HasColumnName("deprfactor");
            entity.Property(e => e.Deprmeth)
                .HasMaxLength(20)
                .HasColumnName("deprmeth");
            entity.Property(e => e.Exchrate).HasColumnName("exchrate");
            entity.Property(e => e.Firstdepramt).HasColumnName("firstdepramt");
            entity.Property(e => e.Firstdepramtfc).HasColumnName("firstdepramtfc");
            entity.Property(e => e.Hghrchgmethadj)
                .HasMaxLength(1)
                .IsFixedLength()
                .HasColumnName("hghrchgmethadj");
            entity.Property(e => e.Lwrchgmethadj)
                .HasMaxLength(1)
                .IsFixedLength()
                .HasColumnName("lwrchgmethadj");
            entity.Property(e => e.Numdeprpers)
                .HasMaxLength(4)
                .IsFixedLength()
                .HasColumnName("numdeprpers");
            entity.Property(e => e.Origcumdepr).HasColumnName("origcumdepr");
            entity.Property(e => e.Origcumdeprfc).HasColumnName("origcumdeprfc");
            entity.Property(e => e.Periodend)
                .HasMaxLength(3)
                .IsFixedLength()
                .HasColumnName("periodend");
            entity.Property(e => e.Periodlastdepr)
                .HasMaxLength(3)
                .IsFixedLength()
                .HasColumnName("periodlastdepr");
            entity.Property(e => e.Periodstart)
                .HasMaxLength(3)
                .IsFixedLength()
                .HasColumnName("periodstart");
            entity.Property(e => e.Purchamtend).HasColumnName("purchamtend");
            entity.Property(e => e.Purchamtendfc).HasColumnName("purchamtendfc");
            entity.Property(e => e.Purchamtstart).HasColumnName("purchamtstart");
            entity.Property(e => e.Purchamtstartfc).HasColumnName("purchamtstartfc");
            entity.Property(e => e.Salvagevalue).HasColumnName("salvagevalue");
            entity.Property(e => e.Salvagevaluefc).HasColumnName("salvagevaluefc");
            entity.Property(e => e.Seqnum)
                .HasMaxLength(10)
                .IsFixedLength()
                .HasColumnName("seqnum");
            entity.Property(e => e.Switchacclevel).HasColumnName("switchacclevel");
            entity.Property(e => e.Syscreated)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("syscreated");
            entity.Property(e => e.Syscreator).HasColumnName("syscreator");
            entity.Property(e => e.Sysguid)
                .HasDefaultValueSql("(newid())")
                .HasColumnName("sysguid");
            entity.Property(e => e.Sysmodified)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("sysmodified");
            entity.Property(e => e.Sysmodifier).HasColumnName("sysmodifier");
            entity.Property(e => e.Timestamp)
                .IsRowVersion()
                .IsConcurrencyToken()
                .HasColumnName("timestamp");
            entity.Property(e => e.Valcode)
                .HasMaxLength(3)
                .IsFixedLength()
                .HasColumnName("valcode");
            entity.Property(e => e.Valuation)
                .HasMaxLength(4)
                .IsFixedLength()
                .HasColumnName("valuation");
            entity.Property(e => e.Yearend)
                .HasMaxLength(4)
                .IsFixedLength()
                .HasColumnName("yearend");
            entity.Property(e => e.Yearlastdepr)
                .HasMaxLength(4)
                .IsFixedLength()
                .HasColumnName("yearlastdepr");
            entity.Property(e => e.Yearstart)
                .HasMaxLength(4)
                .IsFixedLength()
                .HasColumnName("yearstart");
        });

        modelBuilder.Entity<Fadprm>(entity =>
        {
            entity.HasKey(e => e.Id).IsClustered(false);

            entity.ToTable("fadprm");

            entity.HasIndex(e => new { e.Entrymeth, e.Deprmeth }, "fadent").IsUnique();

            entity.HasIndex(e => e.Deprmeth, "fadprm")
                .IsUnique()
                .IsClustered();

            entity.Property(e => e.Id).HasColumnName("ID");
            entity.Property(e => e.Calcbasis)
                .HasMaxLength(1)
                .IsFixedLength()
                .HasColumnName("calcbasis");
            entity.Property(e => e.Changetolnr)
                .HasMaxLength(1)
                .IsFixedLength()
                .HasColumnName("changetolnr");
            entity.Property(e => e.Country)
                .HasMaxLength(3)
                .IsFixedLength();
            entity.Property(e => e.DeprInPerDisp)
                .HasMaxLength(1)
                .IsFixedLength()
                .HasColumnName("depr_in_per_disp");
            entity.Property(e => e.Deprcode)
                .HasMaxLength(2)
                .IsFixedLength()
                .HasColumnName("deprcode");
            entity.Property(e => e.Deprfulldisp).HasColumnName("deprfulldisp");
            entity.Property(e => e.Deprmeth)
                .HasMaxLength(20)
                .HasColumnName("deprmeth");
            entity.Property(e => e.Depryearactv)
                .HasMaxLength(1)
                .IsFixedLength()
                .HasColumnName("depryearactv");
            entity.Property(e => e.Descr500)
                .HasMaxLength(50)
                .HasColumnName("descr50_0");
            entity.Property(e => e.Descr501)
                .HasMaxLength(50)
                .HasColumnName("descr50_1");
            entity.Property(e => e.Descr502)
                .HasMaxLength(50)
                .HasColumnName("descr50_2");
            entity.Property(e => e.Descr503)
                .HasMaxLength(50)
                .HasColumnName("descr50_3");
            entity.Property(e => e.Descr504)
                .HasMaxLength(50)
                .HasColumnName("descr50_4");
            entity.Property(e => e.Entrymeth)
                .HasMaxLength(1)
                .IsFixedLength()
                .HasColumnName("entrymeth");
            entity.Property(e => e.Fiscaltype)
                .HasMaxLength(1)
                .IsFixedLength()
                .HasColumnName("fiscaltype");
            entity.Property(e => e.Fixedamtper).HasColumnName("fixedamtper");
            entity.Property(e => e.Hghrdepradj)
                .HasMaxLength(1)
                .IsFixedLength()
                .HasColumnName("hghrdepradj");
            entity.Property(e => e.Lnrcalctype)
                .HasMaxLength(1)
                .IsFixedLength()
                .HasColumnName("lnrcalctype");
            entity.Property(e => e.Lwrdepradj)
                .HasMaxLength(1)
                .IsFixedLength()
                .HasColumnName("lwrdepradj");
            entity.Property(e => e.Nbvdate)
                .HasColumnType("datetime")
                .HasColumnName("NBVDate");
            entity.Property(e => e.NewPeriods)
                .HasMaxLength(4)
                .IsFixedLength();
            entity.Property(e => e.Numperiods)
                .HasMaxLength(4)
                .IsFixedLength()
                .HasColumnName("numperiods");
            entity.Property(e => e.Numyears)
                .HasMaxLength(4)
                .IsFixedLength()
                .HasColumnName("numyears");
            entity.Property(e => e.Percper).HasColumnName("percper");
            entity.Property(e => e.Percper2).HasColumnName("percper2");
            entity.Property(e => e.Perfamt).HasColumnName("perfamt");
            entity.Property(e => e.Prec).HasColumnName("prec");
            entity.Property(e => e.ProRataCalc).HasColumnName("pro_rata_calc");
            entity.Property(e => e.Roundcase)
                .HasMaxLength(1)
                .IsFixedLength()
                .HasColumnName("roundcase");
            entity.Property(e => e.Roundtype)
                .HasMaxLength(1)
                .IsFixedLength()
                .HasColumnName("roundtype");
            entity.Property(e => e.Startdeprcase)
                .HasMaxLength(1)
                .IsFixedLength()
                .HasColumnName("startdeprcase");
            entity.Property(e => e.Syscreated)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("syscreated");
            entity.Property(e => e.Syscreator).HasColumnName("syscreator");
            entity.Property(e => e.Sysguid)
                .HasDefaultValueSql("(newid())")
                .HasColumnName("sysguid");
            entity.Property(e => e.Sysmodified)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("sysmodified");
            entity.Property(e => e.Sysmodifier).HasColumnName("sysmodifier");
            entity.Property(e => e.Timestamp)
                .IsRowVersion()
                .IsConcurrencyToken()
                .HasColumnName("timestamp");
            entity.Property(e => e.UseNbv).HasColumnName("UseNBV");
        });

        modelBuilder.Entity<Fadprt>(entity =>
        {
            entity.HasKey(e => e.Id).IsClustered(false);

            entity.ToTable("fadprt");

            entity.HasIndex(e => new { e.Deprmeth, e.Deprseqnum }, "fadprt")
                .IsUnique()
                .IsClustered();

            entity.Property(e => e.Id).HasColumnName("ID");
            entity.Property(e => e.Depramt).HasColumnName("depramt");
            entity.Property(e => e.Deprmeth)
                .HasMaxLength(20)
                .HasColumnName("deprmeth");
            entity.Property(e => e.Deprperc).HasColumnName("deprperc");
            entity.Property(e => e.Deprseqnum)
                .HasMaxLength(4)
                .IsFixedLength()
                .HasColumnName("deprseqnum");
            entity.Property(e => e.Perfamt).HasColumnName("perfamt");
            entity.Property(e => e.Syscreated)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("syscreated");
            entity.Property(e => e.Syscreator).HasColumnName("syscreator");
            entity.Property(e => e.Sysguid)
                .HasDefaultValueSql("(newid())")
                .HasColumnName("sysguid");
            entity.Property(e => e.Sysmodified)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("sysmodified");
            entity.Property(e => e.Sysmodifier).HasColumnName("sysmodifier");
            entity.Property(e => e.Timestamp)
                .IsRowVersion()
                .IsConcurrencyToken()
                .HasColumnName("timestamp");
        });

        modelBuilder.Entity<Fagrp>(entity =>
        {
            entity.HasKey(e => e.Id).IsClustered(false);

            entity.ToTable("fagrp");

            entity.HasIndex(e => new { e.Fiscalgroup, e.Assetgroup }, "fagfgr").IsUnique();

            entity.HasIndex(e => e.Assetgroup, "fagrp")
                .IsUnique()
                .IsClustered();

            entity.Property(e => e.Id).HasColumnName("ID");
            entity.Property(e => e.AssetAc)
                .HasMaxLength(9)
                .IsFixedLength()
                .HasColumnName("AssetAC");
            entity.Property(e => e.Assetgroup)
                .HasMaxLength(20)
                .HasColumnName("assetgroup");
            entity.Property(e => e.DeprBs)
                .HasMaxLength(9)
                .IsFixedLength()
                .HasColumnName("DeprBS");
            entity.Property(e => e.DeprPl)
                .HasMaxLength(9)
                .IsFixedLength()
                .HasColumnName("DeprPL");
            entity.Property(e => e.Descr500)
                .HasMaxLength(50)
                .HasColumnName("descr50_0");
            entity.Property(e => e.Descr501)
                .HasMaxLength(50)
                .HasColumnName("descr50_1");
            entity.Property(e => e.Descr502)
                .HasMaxLength(50)
                .HasColumnName("descr50_2");
            entity.Property(e => e.Descr503)
                .HasMaxLength(50)
                .HasColumnName("descr50_3");
            entity.Property(e => e.Descr504)
                .HasMaxLength(50)
                .HasColumnName("descr50_4");
            entity.Property(e => e.Extra)
                .HasMaxLength(9)
                .IsFixedLength();
            entity.Property(e => e.Fiscalgroup)
                .HasMaxLength(20)
                .HasColumnName("fiscalgroup");
            entity.Property(e => e.Kstdrcode)
                .HasMaxLength(8)
                .IsFixedLength()
                .HasColumnName("kstdrcode");
            entity.Property(e => e.Kstplcode)
                .HasMaxLength(8)
                .IsFixedLength()
                .HasColumnName("kstplcode");
            entity.Property(e => e.Primarymeth)
                .HasMaxLength(20)
                .HasColumnName("primarymeth");
            entity.Property(e => e.Reference1)
                .HasMaxLength(20)
                .HasColumnName("reference1");
            entity.Property(e => e.Reference2)
                .HasMaxLength(20)
                .HasColumnName("reference2");
            entity.Property(e => e.Secondarymeth)
                .HasMaxLength(20)
                .HasColumnName("secondarymeth");
            entity.Property(e => e.SpecialDeprBs)
                .HasMaxLength(9)
                .IsFixedLength()
                .HasColumnName("SpecialDeprBS");
            entity.Property(e => e.SpecialDeprPl)
                .HasMaxLength(9)
                .IsFixedLength()
                .HasColumnName("SpecialDeprPL");
            entity.Property(e => e.Syscreated)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("syscreated");
            entity.Property(e => e.Syscreator).HasColumnName("syscreator");
            entity.Property(e => e.Sysguid)
                .HasDefaultValueSql("(newid())")
                .HasColumnName("sysguid");
            entity.Property(e => e.Sysmodified)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("sysmodified");
            entity.Property(e => e.Sysmodifier).HasColumnName("sysmodifier");
            entity.Property(e => e.Timestamp)
                .IsRowVersion()
                .IsConcurrencyToken()
                .HasColumnName("timestamp");
            entity.Property(e => e.Valuelimit).HasColumnName("valuelimit");
            entity.Property(e => e.VatcorrectionExpenseGl)
                .HasMaxLength(9)
                .IsFixedLength()
                .HasColumnName("VATCorrectionExpenseGL");
            entity.Property(e => e.VatcorrectionJournal)
                .HasMaxLength(3)
                .IsFixedLength()
                .HasColumnName("VATCorrectionJournal");
            entity.Property(e => e.VatcorrectionRevenueGl)
                .HasMaxLength(9)
                .IsFixedLength()
                .HasColumnName("VATCorrectionRevenueGL");
            entity.Property(e => e.WriteOffBalanceSheet)
                .HasMaxLength(9)
                .IsFixedLength();
            entity.Property(e => e.WriteOffProfitLoss)
                .HasMaxLength(9)
                .IsFixedLength();
        });

        modelBuilder.Entity<Fakcod>(entity =>
        {
            entity.HasKey(e => e.Id).IsClustered(false);

            entity.ToTable("fakcod");

            entity.HasIndex(e => e.FaktCode, "fakcod")
                .IsUnique()
                .IsClustered();

            entity.HasIndex(e => new { e.Zoekcd10, e.Id }, "fakzcd").IsUnique();

            entity.HasIndex(e => new { e.Bkjrcode, e.Dagbknr, e.Id }, "fcodbk").IsUnique();

            entity.Property(e => e.Id).HasColumnName("ID");
            entity.Property(e => e.BkjrDummy).HasColumnName("bkjr_dummy");
            entity.Property(e => e.Bkjrcode).HasColumnName("bkjrcode");
            entity.Property(e => e.Blokkeer).HasColumnName("blokkeer");
            entity.Property(e => e.Dagbknr)
                .HasMaxLength(3)
                .IsFixedLength()
                .HasColumnName("dagbknr");
            entity.Property(e => e.FaktCode)
                .HasMaxLength(3)
                .IsFixedLength()
                .HasColumnName("fakt_code");
            entity.Property(e => e.FaktLaycd)
                .HasMaxLength(8)
                .IsFixedLength()
                .HasColumnName("fakt_laycd");
            entity.Property(e => e.Oms400)
                .HasMaxLength(40)
                .HasColumnName("oms40_0");
            entity.Property(e => e.Oms401)
                .HasMaxLength(40)
                .HasColumnName("oms40_1");
            entity.Property(e => e.Oms402)
                .HasMaxLength(40)
                .HasColumnName("oms40_2");
            entity.Property(e => e.Oms403)
                .HasMaxLength(40)
                .HasColumnName("oms40_3");
            entity.Property(e => e.Oms404)
                .HasMaxLength(40)
                .HasColumnName("oms40_4");
            entity.Property(e => e.Syscreated)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("syscreated");
            entity.Property(e => e.Syscreator).HasColumnName("syscreator");
            entity.Property(e => e.Sysguid)
                .HasDefaultValueSql("(newid())")
                .HasColumnName("sysguid");
            entity.Property(e => e.Sysmodified)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("sysmodified");
            entity.Property(e => e.Sysmodifier).HasColumnName("sysmodifier");
            entity.Property(e => e.Timestamp)
                .IsRowVersion()
                .IsConcurrencyToken()
                .HasColumnName("timestamp");
            entity.Property(e => e.Type)
                .HasMaxLength(1)
                .IsFixedLength();
            entity.Property(e => e.Zoekcd10)
                .HasMaxLength(10)
                .IsFixedLength()
                .HasColumnName("zoekcd10");
        });

        modelBuilder.Entity<Fakvcd>(entity =>
        {
            entity.HasKey(e => e.Id).IsClustered(false);

            entity.ToTable("fakvcd");

            entity.HasIndex(e => e.FaktCode, "fakvcd")
                .IsUnique()
                .IsClustered();

            entity.HasIndex(e => new { e.Zoekcd10, e.Id }, "fakvzk").IsUnique();

            entity.Property(e => e.Id).HasColumnName("ID");
            entity.Property(e => e.DefaultCd)
                .HasMaxLength(3)
                .IsFixedLength()
                .HasColumnName("default_cd");
            entity.Property(e => e.FaktCode)
                .HasMaxLength(3)
                .IsFixedLength()
                .HasColumnName("fakt_code");
            entity.Property(e => e.Oms400)
                .HasMaxLength(40)
                .HasColumnName("oms40_0");
            entity.Property(e => e.Oms401)
                .HasMaxLength(40)
                .HasColumnName("oms40_1");
            entity.Property(e => e.Oms402)
                .HasMaxLength(40)
                .HasColumnName("oms40_2");
            entity.Property(e => e.Oms403)
                .HasMaxLength(40)
                .HasColumnName("oms40_3");
            entity.Property(e => e.Oms404)
                .HasMaxLength(40)
                .HasColumnName("oms40_4");
            entity.Property(e => e.Syscreated)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("syscreated");
            entity.Property(e => e.Syscreator).HasColumnName("syscreator");
            entity.Property(e => e.Sysguid)
                .HasDefaultValueSql("(newid())")
                .HasColumnName("sysguid");
            entity.Property(e => e.Sysmodified)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("sysmodified");
            entity.Property(e => e.Sysmodifier).HasColumnName("sysmodifier");
            entity.Property(e => e.Timestamp)
                .IsRowVersion()
                .IsConcurrencyToken()
                .HasColumnName("timestamp");
            entity.Property(e => e.Zoekcd10)
                .HasMaxLength(10)
                .IsFixedLength()
                .HasColumnName("zoekcd10");
        });

        modelBuilder.Entity<Fatran>(entity =>
        {
            entity.HasKey(e => e.Id).IsClustered(false);

            entity.ToTable("fatran");

            entity.HasIndex(e => new { e.Assetgroup, e.Assetcode, e.Trantype, e.Valuation, e.Deprmeth, e.Jrnyear, e.Jrnper, e.Id }, "fatavd").IsUnique();

            entity.HasIndex(e => new { e.Artcode, e.Assetcode, e.Trandate, e.Valuation, e.Trantype, e.Seqnum, e.Id }, "fatdat").IsUnique();

            entity.HasIndex(e => new { e.Artcode, e.Assetcode, e.Trantype, e.Entrynumber, e.Id }, "fatent").IsUnique();

            entity.HasIndex(e => new { e.Assetgroup, e.Artcode, e.Assetcode, e.Status, e.Trantype, e.Id }, "fatgap").IsUnique();

            entity.HasIndex(e => new { e.Trandate, e.Assetgroup, e.Valuation, e.Trantype, e.Assetcode, e.Id }, "fatgta").IsUnique();

            entity.HasIndex(e => new { e.Artcode, e.Assetcode, e.Valuation, e.Tranyear, e.Tranper, e.Seqnum }, "fatran")
                .IsUnique()
                .IsClustered();

            entity.HasIndex(e => new { e.Artcode, e.Assetcode, e.Trantype, e.Tranyear, e.Tranper, e.Valuation, e.Seqnum }, "fatrtp").IsUnique();

            entity.HasIndex(e => new { e.Trantype, e.Tranyear, e.Tranper, e.Artcode, e.Assetcode, e.Id }, "fattyp").IsUnique();

            entity.HasIndex(e => new { e.Valuation, e.Trantype, e.Assetgroup, e.Assetcode, e.Id }, "fatvga").IsUnique();

            entity.HasIndex(e => new { e.Trantype, e.Valuation, e.Reknr, e.Assetgroup, e.Id }, "fatvrg").IsUnique();

            entity.Property(e => e.Id).HasColumnName("ID");
            entity.Property(e => e.Artcode)
                .HasMaxLength(30)
                .HasColumnName("artcode");
            entity.Property(e => e.Assetcode)
                .HasMaxLength(20)
                .HasColumnName("assetcode");
            entity.Property(e => e.Assetgroup)
                .HasMaxLength(20)
                .HasColumnName("assetgroup");
            entity.Property(e => e.Assetpartnum)
                .HasMaxLength(20)
                .HasColumnName("assetpartnum");
            entity.Property(e => e.Bookvalue).HasColumnName("bookvalue");
            entity.Property(e => e.Bookvaluefc).HasColumnName("bookvaluefc");
            entity.Property(e => e.Bookvaluepart).HasColumnName("bookvaluepart");
            entity.Property(e => e.Bookvaluepartfc).HasColumnName("bookvaluepartfc");
            entity.Property(e => e.Cumdepramt).HasColumnName("cumdepramt");
            entity.Property(e => e.Cumdepramtfc).HasColumnName("cumdepramtfc");
            entity.Property(e => e.Cumreval).HasColumnName("cumreval");
            entity.Property(e => e.Cumrevalfc).HasColumnName("cumrevalfc");
            entity.Property(e => e.Cumrevalneg).HasColumnName("cumrevalneg");
            entity.Property(e => e.Cumrevalnegfc).HasColumnName("cumrevalnegfc");
            entity.Property(e => e.Cumrevalpos).HasColumnName("cumrevalpos");
            entity.Property(e => e.Cumrevalposfc).HasColumnName("cumrevalposfc");
            entity.Property(e => e.Dagbknr)
                .HasMaxLength(3)
                .IsFixedLength()
                .HasColumnName("dagbknr");
            entity.Property(e => e.Depradjamt).HasColumnName("depradjamt");
            entity.Property(e => e.Depradjamtfc).HasColumnName("depradjamtfc");
            entity.Property(e => e.Depramt).HasColumnName("depramt");
            entity.Property(e => e.Depramtfc).HasColumnName("depramtfc");
            entity.Property(e => e.Deprcalcrate).HasColumnName("deprcalcrate");
            entity.Property(e => e.Deprfactor).HasColumnName("deprfactor");
            entity.Property(e => e.Deprmeth)
                .HasMaxLength(20)
                .HasColumnName("deprmeth");
            entity.Property(e => e.Descr50)
                .HasMaxLength(50)
                .HasColumnName("descr50");
            entity.Property(e => e.Disposalexp).HasColumnName("disposalexp");
            entity.Property(e => e.Disposalexpfc).HasColumnName("disposalexpfc");
            entity.Property(e => e.Disposaltype)
                .HasMaxLength(1)
                .IsFixedLength()
                .HasColumnName("disposaltype");
            entity.Property(e => e.Entrynumber)
                .HasMaxLength(8)
                .IsFixedLength()
                .HasColumnName("entrynumber");
            entity.Property(e => e.Exchrate).HasColumnName("exchrate");
            entity.Property(e => e.Fiscalgroup)
                .HasMaxLength(20)
                .HasColumnName("fiscalgroup");
            entity.Property(e => e.Hghrdepramt).HasColumnName("hghrdepramt");
            entity.Property(e => e.Hghrdepramtfc).HasColumnName("hghrdepramtfc");
            entity.Property(e => e.Jrnper)
                .HasMaxLength(3)
                .IsFixedLength()
                .HasColumnName("jrnper");
            entity.Property(e => e.Jrnyear)
                .HasMaxLength(4)
                .IsFixedLength()
                .HasColumnName("jrnyear");
            entity.Property(e => e.Kstdrcode)
                .HasMaxLength(8)
                .IsFixedLength()
                .HasColumnName("kstdrcode");
            entity.Property(e => e.Kstplcode)
                .HasMaxLength(8)
                .IsFixedLength()
                .HasColumnName("kstplcode");
            entity.Property(e => e.Lwrdepramt).HasColumnName("lwrdepramt");
            entity.Property(e => e.Lwrdepramtfc).HasColumnName("lwrdepramtfc");
            entity.Property(e => e.Newdataval)
                .HasMaxLength(20)
                .HasColumnName("newdataval");
            entity.Property(e => e.Olddataval)
                .HasMaxLength(20)
                .HasColumnName("olddataval");
            entity.Property(e => e.Plamount).HasColumnName("plamount");
            entity.Property(e => e.Plamountfc).HasColumnName("plamountfc");
            entity.Property(e => e.Purchamt).HasColumnName("purchamt");
            entity.Property(e => e.Purchamtfc).HasColumnName("purchamtfc");
            entity.Property(e => e.Purchamtpart).HasColumnName("purchamtpart");
            entity.Property(e => e.Purchamtpartfc).HasColumnName("purchamtpartfc");
            entity.Property(e => e.Reknr)
                .HasMaxLength(9)
                .IsFixedLength()
                .HasColumnName("reknr");
            entity.Property(e => e.ResId).HasColumnName("res_id");
            entity.Property(e => e.Revalamt).HasColumnName("revalamt");
            entity.Property(e => e.Revalamtfc).HasColumnName("revalamtfc");
            entity.Property(e => e.Revalamtneg).HasColumnName("revalamtneg");
            entity.Property(e => e.Revalamtnegfc).HasColumnName("revalamtnegfc");
            entity.Property(e => e.Revalamtpos).HasColumnName("revalamtpos");
            entity.Property(e => e.Revalamtposfc).HasColumnName("revalamtposfc");
            entity.Property(e => e.Salesamt).HasColumnName("salesamt");
            entity.Property(e => e.Salesamtfc).HasColumnName("salesamtfc");
            entity.Property(e => e.Salvagevalue).HasColumnName("salvagevalue");
            entity.Property(e => e.Salvagevaluefc).HasColumnName("salvagevaluefc");
            entity.Property(e => e.Seqnum)
                .HasMaxLength(10)
                .IsFixedLength()
                .HasColumnName("seqnum");
            entity.Property(e => e.Status)
                .HasMaxLength(1)
                .IsFixedLength()
                .HasColumnName("status");
            entity.Property(e => e.Syscreated)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("syscreated");
            entity.Property(e => e.Syscreator).HasColumnName("syscreator");
            entity.Property(e => e.Sysguid)
                .HasDefaultValueSql("(newid())")
                .HasColumnName("sysguid");
            entity.Property(e => e.Sysmodified)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("sysmodified");
            entity.Property(e => e.Sysmodifier).HasColumnName("sysmodifier");
            entity.Property(e => e.Timestamp)
                .IsRowVersion()
                .IsConcurrencyToken()
                .HasColumnName("timestamp");
            entity.Property(e => e.Tranamt).HasColumnName("tranamt");
            entity.Property(e => e.Tranamtfc).HasColumnName("tranamtfc");
            entity.Property(e => e.Trandate)
                .HasColumnType("datetime")
                .HasColumnName("trandate");
            entity.Property(e => e.Tranper)
                .HasMaxLength(3)
                .IsFixedLength()
                .HasColumnName("tranper");
            entity.Property(e => e.Tranperc).HasColumnName("tranperc");
            entity.Property(e => e.Trantype)
                .HasMaxLength(1)
                .IsFixedLength()
                .HasColumnName("trantype");
            entity.Property(e => e.Tranyear)
                .HasMaxLength(4)
                .IsFixedLength()
                .HasColumnName("tranyear");
            entity.Property(e => e.Valcode)
                .HasMaxLength(3)
                .IsFixedLength()
                .HasColumnName("valcode");
            entity.Property(e => e.Valuation)
                .HasMaxLength(4)
                .IsFixedLength()
                .HasColumnName("valuation");
        });

        modelBuilder.Entity<Favorite>(entity =>
        {
            entity.HasIndex(e => new { e.ResId, e.Category }, "res_id_Category");

            entity.Property(e => e.Id)
                .HasDefaultValueSql("(newid())")
                .HasColumnName("ID");
            entity.Property(e => e.Description).HasMaxLength(255);
            entity.Property(e => e.ResId).HasColumnName("res_id");
            entity.Property(e => e.Syscreated)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("syscreated");
            entity.Property(e => e.Url)
                .HasMaxLength(4000)
                .HasColumnName("URL");
        });

        modelBuilder.Entity<FavoriteCategory>(entity =>
        {
            entity.HasIndex(e => e.ResId, "res_id");

            entity.Property(e => e.Id)
                .HasDefaultValueSql("(newid())")
                .HasColumnName("ID");
            entity.Property(e => e.Description).HasMaxLength(60);
            entity.Property(e => e.ResId).HasColumnName("res_id");
        });

        modelBuilder.Entity<Feed>(entity =>
        {
            entity.ToTable("Feed");

            entity.HasIndex(e => new { e.CreatorId, e.ModifiedDate }, "IX_Feed_CreatorID_ModifiedDate_Type_Status_EffectiveStart_ID").IsDescending(false, true);

            entity.HasIndex(e => e.EffectiveEnd, "IX_Feed_EffectiveEnd").IsDescending();

            entity.HasIndex(e => e.EffectiveStart, "IX_Feed_EffectiveStart_Type_Status_EffectiveEnd_ID_CreatorID").IsDescending();

            entity.Property(e => e.Id)
                .ValueGeneratedNever()
                .HasColumnName("ID");
            entity.Property(e => e.CreatorId).HasColumnName("CreatorID");
            entity.Property(e => e.Summary).HasMaxLength(1000);
            entity.Property(e => e.Title).HasMaxLength(500);
        });

        modelBuilder.Entity<FeedAction>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__FeedActi__3214EC2758150093");

            entity.ToTable("FeedAction");

            entity.HasIndex(e => new { e.FeedId, e.SocialIdentityId }, "IX_FeedAction_FeedIDIdentityID");

            entity.Property(e => e.Id)
                .ValueGeneratedNever()
                .HasColumnName("ID");
            entity.Property(e => e.FeedId).HasColumnName("FeedID");
            entity.Property(e => e.SocialIdentityId).HasColumnName("SocialIdentityID");
        });

        modelBuilder.Entity<FeedAttachment>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__FeedAtta__3214EC27211B9828");

            entity.ToTable("FeedAttachment");

            entity.HasIndex(e => e.FeedId, "IX_FeedAttachment_FeedID");

            entity.HasIndex(e => new { e.EntityKey, e.EntityType }, "IX_FeedAttachment_Key_Type");

            entity.HasIndex(e => new { e.OrderId, e.FeedId, e.EntityType }, "IX_FeedAttachment_OrderID_FeedID_Type");

            entity.Property(e => e.Id)
                .HasDefaultValueSql("(newid())")
                .HasColumnName("ID");
            entity.Property(e => e.EntityKey).HasMaxLength(255);
            entity.Property(e => e.EntityName).HasMaxLength(1000);
            entity.Property(e => e.FeedId).HasColumnName("FeedID");
            entity.Property(e => e.OrderId)
                .ValueGeneratedOnAdd()
                .HasColumnName("OrderID");
        });

        modelBuilder.Entity<FeedFilterTab>(entity =>
        {
            entity.HasIndex(e => new { e.ResourceId, e.TabType }, "IX_FeedFilterTabs_Resource");

            entity.Property(e => e.Id)
                .ValueGeneratedNever()
                .HasColumnName("ID");
            entity.Property(e => e.FilterOptionXml)
                .HasColumnType("xml")
                .HasColumnName("FilterOptionXML");
            entity.Property(e => e.Syscreated)
                .HasColumnType("datetime")
                .HasColumnName("syscreated");
            entity.Property(e => e.Syscreator).HasColumnName("syscreator");
            entity.Property(e => e.Sysmodified)
                .HasColumnType("datetime")
                .HasColumnName("sysmodified");
            entity.Property(e => e.Sysmodifier).HasColumnName("sysmodifier");
            entity.Property(e => e.TabName).HasMaxLength(60);
        });

        modelBuilder.Entity<FeedShare>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__FeedShar__3214EC2754E727E4");

            entity.ToTable("FeedShare");

            entity.HasIndex(e => e.FeedId, "IX_FeedShare_FeedID");

            entity.HasIndex(e => e.SocialIdentityId, "IX_FeedShare_SocialIdentityID");

            entity.Property(e => e.Id)
                .HasDefaultValueSql("(newid())")
                .HasColumnName("ID");
            entity.Property(e => e.FeedId).HasColumnName("FeedID");
            entity.Property(e => e.SocialIdentityId).HasColumnName("SocialIdentityID");
            entity.Property(e => e.Status).HasDefaultValue((byte)1);
        });

        modelBuilder.Entity<FilteredIdentity>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__Filtered__3214EC07DC1A0840");

            entity.ToTable("FilteredIdentity");

            entity.HasIndex(e => e.PreferenceId, "IX_FilteredIdentity_PreferenceId");

            entity.Property(e => e.Id).HasDefaultValueSql("(newid())");
        });

        modelBuilder.Entity<Frhkrg>(entity =>
        {
            entity.HasKey(e => e.Id).IsClustered(false);

            entity.ToTable("frhkrg");

            entity.HasIndex(e => new { e.Ordernr, e.Faknr, e.Id }, "fhkord").IsUnique();

            entity.HasIndex(e => new { e.Bkjrcode, e.Dagbknr, e.Faknr, e.Id }, "frhbkj").IsUnique();

            entity.HasIndex(e => new { e.Fakdat, e.Debnr, e.Id }, "frhdat").IsUnique();

            entity.HasIndex(e => new { e.Debnr, e.Fakdat, e.Faknr, e.Dagbknr }, "frhdeb").IsUnique();

            entity.HasIndex(e => new { e.Fakdebnr, e.Faknr, e.Id }, "frhfdb").IsUnique();

            entity.HasIndex(e => new { e.Faknr, e.Fakdat, e.Dagbknr }, "frhkrg")
                .IsUnique()
                .IsClustered();

            entity.HasIndex(e => new { e.PakbonNr, e.Faknr, e.Id }, "frhpak").IsUnique();

            entity.HasIndex(e => new { e.RepresentId, e.Debnr, e.Fakdat, e.Id }, "frhver").IsUnique();

            entity.HasIndex(e => e.Einddebnr, "ix_einddebnr");

            entity.HasIndex(e => e.Magcode, "ix_magcode");

            entity.HasIndex(e => e.Orddeb, "ix_orddeb");

            entity.Property(e => e.Id).HasColumnName("ID");
            entity.Property(e => e.AflWeek)
                .HasMaxLength(2)
                .IsFixedLength()
                .HasColumnName("afl_week");
            entity.Property(e => e.Afldat)
                .HasColumnType("datetime")
                .HasColumnName("afldat");
            entity.Property(e => e.Approved).HasColumnType("datetime");
            entity.Property(e => e.BdrDiscVal).HasColumnName("bdr_disc_val");
            entity.Property(e => e.BdrKbVal).HasColumnName("bdr_kb_val");
            entity.Property(e => e.BdrVal).HasColumnName("bdr_val");
            entity.Property(e => e.BdrVatOrdVal).HasColumnName("bdr_vat_ord_val");
            entity.Property(e => e.BdrVatShipVal).HasColumnName("bdr_vat_ship_val");
            entity.Property(e => e.Betcond)
                .HasMaxLength(2)
                .IsFixedLength()
                .HasColumnName("betcond");
            entity.Property(e => e.Bkjrcode).HasColumnName("bkjrcode");
            entity.Property(e => e.BrutoGew).HasColumnName("bruto_gew");
            entity.Property(e => e.BtwCdOrd)
                .HasMaxLength(3)
                .IsFixedLength()
                .HasColumnName("btw_cd_ord");
            entity.Property(e => e.BtwCode)
                .HasMaxLength(3)
                .IsFixedLength()
                .HasColumnName("btw_code");
            entity.Property(e => e.CalcInclVat)
                .HasMaxLength(1)
                .IsFixedLength()
                .HasColumnName("calc_incl_vat");
            entity.Property(e => e.CalcMethPc)
                .HasMaxLength(1)
                .IsFixedLength()
                .HasColumnName("calc_meth_pc");
            entity.Property(e => e.CashRegisterAccount).HasMaxLength(34);
            entity.Property(e => e.Colli)
                .HasMaxLength(5)
                .IsFixedLength()
                .HasColumnName("colli");
            entity.Property(e => e.Dagbknr)
                .HasMaxLength(3)
                .IsFixedLength()
                .HasColumnName("dagbknr");
            entity.Property(e => e.Debnr)
                .HasMaxLength(6)
                .IsFixedLength()
                .HasColumnName("debnr");
            entity.Property(e => e.DelAddressLine1)
                .HasMaxLength(100)
                .HasColumnName("del_AddressLine1");
            entity.Property(e => e.DelAddressLine2)
                .HasMaxLength(100)
                .HasColumnName("del_AddressLine2");
            entity.Property(e => e.DelAddressLine3)
                .HasMaxLength(100)
                .HasColumnName("del_AddressLine3");
            entity.Property(e => e.DelCity)
                .HasMaxLength(100)
                .HasColumnName("del_City");
            entity.Property(e => e.DelCntJobDesc)
                .HasMaxLength(50)
                .HasColumnName("del_cnt_job_desc");
            entity.Property(e => e.DelContactperson)
                .HasMaxLength(100)
                .HasColumnName("del_contactperson");
            entity.Property(e => e.DelDebtorName)
                .HasMaxLength(50)
                .HasColumnName("del_debtor_name");
            entity.Property(e => e.DelFax)
                .HasMaxLength(50)
                .HasColumnName("del_Fax");
            entity.Property(e => e.DelInitials)
                .HasMaxLength(10)
                .HasColumnName("del_Initials");
            entity.Property(e => e.DelLandcode)
                .HasMaxLength(3)
                .IsFixedLength()
                .HasColumnName("del_landcode");
            entity.Property(e => e.DelPhone)
                .HasMaxLength(50)
                .HasColumnName("del_Phone");
            entity.Property(e => e.DelPostCode)
                .HasMaxLength(20)
                .HasColumnName("del_PostCode");
            entity.Property(e => e.DelPredcode)
                .HasMaxLength(4)
                .IsFixedLength()
                .HasColumnName("del_predcode");
            entity.Property(e => e.DelStateCode)
                .HasMaxLength(3)
                .IsFixedLength()
                .HasColumnName("del_StateCode");
            entity.Property(e => e.DocAttachmentId).HasColumnName("DocAttachmentID");
            entity.Property(e => e.Docnumber)
                .HasMaxLength(30)
                .HasColumnName("docnumber");
            entity.Property(e => e.DocumentId).HasColumnName("DocumentID");
            entity.Property(e => e.Einddebnr)
                .HasMaxLength(6)
                .IsFixedLength()
                .HasColumnName("einddebnr");
            entity.Property(e => e.ExArtcode)
                .HasMaxLength(2)
                .IsFixedLength()
                .HasColumnName("ex_artcode");
            entity.Property(e => e.ExternalNumber).HasMaxLength(30);
            entity.Property(e => e.FakAdrnr)
                .HasMaxLength(10)
                .IsFixedLength()
                .HasColumnName("fak_adrnr");
            entity.Property(e => e.FakSoort)
                .HasMaxLength(1)
                .IsFixedLength()
                .HasColumnName("fak_soort");
            entity.Property(e => e.Fakdat)
                .HasColumnType("datetime")
                .HasColumnName("fakdat");
            entity.Property(e => e.Fakdebnr)
                .HasMaxLength(6)
                .IsFixedLength()
                .HasColumnName("fakdebnr");
            entity.Property(e => e.Faknr)
                .HasMaxLength(8)
                .IsFixedLength()
                .HasColumnName("faknr");
            entity.Property(e => e.FaktKort).HasColumnName("fakt_kort");
            entity.Property(e => e.Freefield1)
                .HasMaxLength(75)
                .HasColumnName("freefield1");
            entity.Property(e => e.Freefield2)
                .HasMaxLength(75)
                .HasColumnName("freefield2");
            entity.Property(e => e.Freefield3)
                .HasMaxLength(75)
                .HasColumnName("freefield3");
            entity.Property(e => e.Freefield4).HasColumnName("freefield4");
            entity.Property(e => e.Freefield5).HasColumnName("freefield5");
            entity.Property(e => e.GoldenTaxInvoiceNumber).HasMaxLength(8);
            entity.Property(e => e.InvAddressLine1)
                .HasMaxLength(100)
                .HasColumnName("inv_AddressLine1");
            entity.Property(e => e.InvAddressLine2)
                .HasMaxLength(100)
                .HasColumnName("inv_AddressLine2");
            entity.Property(e => e.InvAddressLine3)
                .HasMaxLength(100)
                .HasColumnName("inv_AddressLine3");
            entity.Property(e => e.InvCity)
                .HasMaxLength(100)
                .HasColumnName("inv_City");
            entity.Property(e => e.InvCntJobDesc)
                .HasMaxLength(50)
                .HasColumnName("inv_cnt_job_desc");
            entity.Property(e => e.InvContactemail)
                .HasMaxLength(128)
                .HasColumnName("inv_contactemail");
            entity.Property(e => e.InvContactperson)
                .HasMaxLength(100)
                .HasColumnName("inv_contactperson");
            entity.Property(e => e.InvDebtorName)
                .HasMaxLength(50)
                .HasColumnName("inv_debtor_name");
            entity.Property(e => e.InvFax)
                .HasMaxLength(50)
                .HasColumnName("inv_Fax");
            entity.Property(e => e.InvInVv).HasColumnName("inv_in_vv");
            entity.Property(e => e.InvInitials)
                .HasMaxLength(10)
                .HasColumnName("inv_Initials");
            entity.Property(e => e.InvLandcode)
                .HasMaxLength(3)
                .IsFixedLength()
                .HasColumnName("inv_landcode");
            entity.Property(e => e.InvPhone)
                .HasMaxLength(50)
                .HasColumnName("inv_Phone");
            entity.Property(e => e.InvPostCode)
                .HasMaxLength(20)
                .HasColumnName("inv_PostCode");
            entity.Property(e => e.InvPredcode)
                .HasMaxLength(4)
                .IsFixedLength()
                .HasColumnName("inv_predcode");
            entity.Property(e => e.InvStateCode)
                .HasMaxLength(3)
                .IsFixedLength()
                .HasColumnName("inv_StateCode");
            entity.Property(e => e.IsoTaalcd)
                .HasMaxLength(3)
                .IsFixedLength()
                .HasColumnName("iso_taalcd");
            entity.Property(e => e.Koers).HasColumnName("koers");
            entity.Property(e => e.Kstplcode)
                .HasMaxLength(8)
                .IsFixedLength()
                .HasColumnName("kstplcode");
            entity.Property(e => e.Levwijze)
                .HasMaxLength(5)
                .IsFixedLength()
                .HasColumnName("levwijze");
            entity.Property(e => e.Magcode)
                .HasMaxLength(4)
                .IsFixedLength()
                .HasColumnName("magcode");
            entity.Property(e => e.NettoGew).HasColumnName("netto_gew");
            entity.Property(e => e.Nettoprijs).HasColumnName("nettoprijs");
            entity.Property(e => e.OrdAddressLine1)
                .HasMaxLength(100)
                .HasColumnName("ord_AddressLine1");
            entity.Property(e => e.OrdAddressLine2)
                .HasMaxLength(100)
                .HasColumnName("ord_AddressLine2");
            entity.Property(e => e.OrdAddressLine3)
                .HasMaxLength(100)
                .HasColumnName("ord_AddressLine3");
            entity.Property(e => e.OrdCity)
                .HasMaxLength(100)
                .HasColumnName("ord_City");
            entity.Property(e => e.OrdCntJobDesc)
                .HasMaxLength(50)
                .HasColumnName("ord_cnt_job_desc");
            entity.Property(e => e.OrdContactperson)
                .HasMaxLength(100)
                .HasColumnName("ord_contactperson");
            entity.Property(e => e.OrdDebtorName)
                .HasMaxLength(50)
                .HasColumnName("ord_debtor_name");
            entity.Property(e => e.OrdFax)
                .HasMaxLength(50)
                .HasColumnName("ord_Fax");
            entity.Property(e => e.OrdInitials)
                .HasMaxLength(10)
                .HasColumnName("ord_Initials");
            entity.Property(e => e.OrdLandcode)
                .HasMaxLength(3)
                .IsFixedLength()
                .HasColumnName("ord_landcode");
            entity.Property(e => e.OrdPhone)
                .HasMaxLength(50)
                .HasColumnName("ord_Phone");
            entity.Property(e => e.OrdPostCode)
                .HasMaxLength(20)
                .HasColumnName("ord_PostCode");
            entity.Property(e => e.OrdPredcode)
                .HasMaxLength(4)
                .IsFixedLength()
                .HasColumnName("ord_predcode");
            entity.Property(e => e.OrdStateCode)
                .HasMaxLength(3)
                .IsFixedLength()
                .HasColumnName("ord_StateCode");
            entity.Property(e => e.Orddat)
                .HasColumnType("datetime")
                .HasColumnName("orddat");
            entity.Property(e => e.Orddeb)
                .HasMaxLength(6)
                .IsFixedLength()
                .HasColumnName("orddeb");
            entity.Property(e => e.Orderkost).HasColumnName("orderkost");
            entity.Property(e => e.Ordernr)
                .HasMaxLength(8)
                .IsFixedLength()
                .HasColumnName("ordernr");
            entity.Property(e => e.OrdkostVv).HasColumnName("ordkost_vv");
            entity.Property(e => e.PakbonDat)
                .HasColumnType("datetime")
                .HasColumnName("pakbon_dat");
            entity.Property(e => e.PakbonNr)
                .HasMaxLength(8)
                .IsFixedLength()
                .HasColumnName("pakbon_nr");
            entity.Property(e => e.Paymentmethod)
                .HasMaxLength(1)
                .IsFixedLength()
                .HasColumnName("paymentmethod");
            entity.Property(e => e.Projectnr)
                .HasMaxLength(20)
                .HasColumnName("projectnr");
            entity.Property(e => e.Refer)
                .HasMaxLength(20)
                .HasColumnName("refer");
            entity.Property(e => e.Refer1)
                .HasMaxLength(20)
                .HasColumnName("refer1");
            entity.Property(e => e.Refer2)
                .HasMaxLength(20)
                .HasColumnName("refer2");
            entity.Property(e => e.Refer3)
                .HasMaxLength(20)
                .HasColumnName("refer3");
            entity.Property(e => e.RepresentId).HasColumnName("represent_id");
            entity.Property(e => e.Routecode)
                .HasMaxLength(2)
                .IsFixedLength()
                .HasColumnName("routecode");
            entity.Property(e => e.Selcode)
                .HasMaxLength(2)
                .IsFixedLength()
                .HasColumnName("selcode");
            entity.Property(e => e.Syscreated)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("syscreated");
            entity.Property(e => e.Syscreator).HasColumnName("syscreator");
            entity.Property(e => e.Sysguid)
                .HasDefaultValueSql("(newid())")
                .HasColumnName("sysguid");
            entity.Property(e => e.Sysmodified)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("sysmodified");
            entity.Property(e => e.Sysmodifier).HasColumnName("sysmodifier");
            entity.Property(e => e.Timestamp)
                .IsRowVersion()
                .IsConcurrencyToken()
                .HasColumnName("timestamp");
            entity.Property(e => e.TntpostAmount).HasColumnName("TNTPostAmount");
            entity.Property(e => e.TntpostDateSent)
                .HasColumnType("datetime")
                .HasColumnName("TNTPostDateSent");
            entity.Property(e => e.TntpostNrOfPages)
                .HasMaxLength(8)
                .IsFixedLength()
                .HasColumnName("TNTPostNrOfPages");
            entity.Property(e => e.TntpostQtySent)
                .HasMaxLength(8)
                .IsFixedLength()
                .HasColumnName("TNTPostQtySent");
            entity.Property(e => e.TntpostSession).HasColumnName("TNTPostSession");
            entity.Property(e => e.TntpostUserName).HasColumnName("TNTPostUserName");
            entity.Property(e => e.TotBdr).HasColumnName("tot_bdr");
            entity.Property(e => e.TotBdrVv).HasColumnName("tot_bdr_vv");
            entity.Property(e => e.TotBdrb).HasColumnName("tot_bdrb");
            entity.Property(e => e.TotBdrbvv).HasColumnName("tot_bdrbvv");
            entity.Property(e => e.UserId)
                .HasMaxLength(8)
                .IsFixedLength()
                .HasColumnName("user_id");
            entity.Property(e => e.Valcode)
                .HasMaxLength(3)
                .IsFixedLength()
                .HasColumnName("valcode");
            entity.Property(e => e.VrachtkVv).HasColumnName("vrachtk_vv");
            entity.Property(e => e.Vrachtkost).HasColumnName("vrachtkost");
        });

        modelBuilder.Entity<Frhsrg>(entity =>
        {
            entity.HasKey(e => e.Id).IsClustered(false);

            entity.ToTable("frhsrg");

            entity.HasIndex(e => e.Ordernr, "fhsord");

            entity.HasIndex(e => e.PakbonNr, "fhspak");

            entity.HasIndex(e => new { e.Artcode, e.Faknr, e.Regel, e.Id }, "frhafn").IsUnique();

            entity.HasIndex(e => new { e.Artcode, e.Fakdat, e.Faknr, e.Dagbknr, e.Regel }, "frhard").IsUnique();

            entity.HasIndex(e => new { e.Projectnr, e.Fakdat }, "frhprj");

            entity.HasIndex(e => new { e.Faknr, e.Fakdat, e.Dagbknr, e.Regel }, "frhsrg")
                .IsUnique()
                .IsClustered();

            entity.HasIndex(e => e.Magcode, "ix_magcode");

            entity.HasIndex(e => e.Verzdebnr, "ix_verzdebnr");

            entity.Property(e => e.Id).HasColumnName("ID");
            entity.Property(e => e.AflWeek)
                .HasMaxLength(2)
                .IsFixedLength()
                .HasColumnName("afl_week");
            entity.Property(e => e.Afldat)
                .HasColumnType("datetime")
                .HasColumnName("afldat");
            entity.Property(e => e.ArSoort)
                .HasMaxLength(1)
                .IsFixedLength()
                .HasColumnName("ar_soort");
            entity.Property(e => e.Artcode)
                .HasMaxLength(30)
                .HasColumnName("artcode");
            entity.Property(e => e.BdrDEvVal).HasColumnName("bdr_d_ev_val");
            entity.Property(e => e.BdrEvEdVal).HasColumnName("bdr_ev_ed_val");
            entity.Property(e => e.BdrInvDVal).HasColumnName("bdr_inv_d_val");
            entity.Property(e => e.BdrVatVal).HasColumnName("bdr_vat_val");
            entity.Property(e => e.BtwCode)
                .HasMaxLength(3)
                .IsFixedLength()
                .HasColumnName("btw_code");
            entity.Property(e => e.Dagbknr)
                .HasMaxLength(3)
                .IsFixedLength()
                .HasColumnName("dagbknr");
            entity.Property(e => e.Docnumber)
                .HasMaxLength(30)
                .HasColumnName("docnumber");
            entity.Property(e => e.EsrAantal).HasColumnName("esr_aantal");
            entity.Property(e => e.Explsrtart)
                .HasMaxLength(1)
                .IsFixedLength()
                .HasColumnName("explsrtart");
            entity.Property(e => e.Fakdat)
                .HasColumnType("datetime")
                .HasColumnName("fakdat");
            entity.Property(e => e.Faknr)
                .HasMaxLength(8)
                .IsFixedLength()
                .HasColumnName("faknr");
            entity.Property(e => e.IntraNr)
                .HasMaxLength(10)
                .IsFixedLength()
                .HasColumnName("intra_nr");
            entity.Property(e => e.Koers).HasColumnName("koers");
            entity.Property(e => e.Korting).HasColumnName("korting");
            entity.Property(e => e.Kstdrcode)
                .HasMaxLength(8)
                .IsFixedLength()
                .HasColumnName("kstdrcode");
            entity.Property(e => e.Kstplcode)
                .HasMaxLength(8)
                .IsFixedLength()
                .HasColumnName("kstplcode");
            entity.Property(e => e.Magcode)
                .HasMaxLength(4)
                .IsFixedLength()
                .HasColumnName("magcode");
            entity.Property(e => e.Maglok)
                .HasMaxLength(10)
                .IsFixedLength()
                .HasColumnName("maglok");
            entity.Property(e => e.Oms45)
                .HasMaxLength(45)
                .HasColumnName("oms45");
            entity.Property(e => e.Ordernr)
                .HasMaxLength(8)
                .IsFixedLength()
                .HasColumnName("ordernr");
            entity.Property(e => e.Ordreg).HasColumnName("ordreg");
            entity.Property(e => e.PakbonDat)
                .HasColumnType("datetime")
                .HasColumnName("pakbon_dat");
            entity.Property(e => e.PakbonNr)
                .HasMaxLength(8)
                .IsFixedLength()
                .HasColumnName("pakbon_nr");
            entity.Property(e => e.PrBedr).HasColumnName("pr_bedr");
            entity.Property(e => e.Prijs83).HasColumnName("prijs83");
            entity.Property(e => e.PrijsN).HasColumnName("prijs_n");
            entity.Property(e => e.Prijslijst)
                .HasMaxLength(15)
                .HasColumnName("prijslijst");
            entity.Property(e => e.Projectnr)
                .HasMaxLength(20)
                .HasColumnName("projectnr");
            entity.Property(e => e.Prshisnr)
                .HasMaxLength(8)
                .IsFixedLength()
                .HasColumnName("prshisnr");
            entity.Property(e => e.ReasonDiscount).HasMaxLength(8);
            entity.Property(e => e.ReasonReturn).HasMaxLength(8);
            entity.Property(e => e.Regel)
                .HasMaxLength(4)
                .IsFixedLength()
                .HasColumnName("regel");
            entity.Property(e => e.ResId).HasColumnName("res_id");
            entity.Property(e => e.SerialNumber)
                .HasMaxLength(22)
                .HasColumnName("serial_number");
            entity.Property(e => e.Syscreated)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("syscreated");
            entity.Property(e => e.Syscreator).HasColumnName("syscreator");
            entity.Property(e => e.Sysguid)
                .HasDefaultValueSql("(newid())")
                .HasColumnName("sysguid");
            entity.Property(e => e.Sysmodified)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("sysmodified");
            entity.Property(e => e.Sysmodifier).HasColumnName("sysmodifier");
            entity.Property(e => e.TaxCode2)
                .HasMaxLength(3)
                .IsFixedLength();
            entity.Property(e => e.TaxCode3)
                .HasMaxLength(3)
                .IsFixedLength();
            entity.Property(e => e.TaxCode4)
                .HasMaxLength(3)
                .IsFixedLength();
            entity.Property(e => e.TaxCode5)
                .HasMaxLength(3)
                .IsFixedLength();
            entity.Property(e => e.Timestamp)
                .IsRowVersion()
                .IsConcurrencyToken()
                .HasColumnName("timestamp");
            entity.Property(e => e.Unitcode)
                .HasMaxLength(8)
                .IsFixedLength()
                .HasColumnName("unitcode");
            entity.Property(e => e.Unitfactor)
                .HasDefaultValue(1.0)
                .HasColumnName("unitfactor");
            entity.Property(e => e.Verzdebnr)
                .HasMaxLength(6)
                .IsFixedLength()
                .HasColumnName("verzdebnr");
            entity.Property(e => e.VrzAdrcd)
                .HasMaxLength(6)
                .IsFixedLength()
                .HasColumnName("vrz_adrcd");
            entity.Property(e => e.VrzAdrnr)
                .HasMaxLength(10)
                .IsFixedLength()
                .HasColumnName("vrz_adrnr");
            entity.Property(e => e.Vvp).HasColumnName("vvp");
        });

        modelBuilder.Entity<Frhstx>(entity =>
        {
            entity.HasKey(e => e.Id).IsClustered(false);

            entity.ToTable("frhstx");

            entity.HasIndex(e => new { e.Faknr, e.Fakdat, e.Dagbknr, e.Regel }, "frhstx")
                .IsUnique()
                .IsClustered();

            entity.Property(e => e.Id).HasColumnName("ID");
            entity.Property(e => e.Dagbknr)
                .HasMaxLength(3)
                .IsFixedLength()
                .HasColumnName("dagbknr");
            entity.Property(e => e.Fakdat)
                .HasColumnType("datetime")
                .HasColumnName("fakdat");
            entity.Property(e => e.Faknr)
                .HasMaxLength(8)
                .IsFixedLength()
                .HasColumnName("faknr");
            entity.Property(e => e.Regel)
                .HasMaxLength(4)
                .IsFixedLength()
                .HasColumnName("regel");
            entity.Property(e => e.Reknr)
                .HasMaxLength(9)
                .IsFixedLength()
                .HasColumnName("reknr");
            entity.Property(e => e.Syscreated)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("syscreated");
            entity.Property(e => e.Syscreator).HasColumnName("syscreator");
            entity.Property(e => e.Sysguid)
                .HasDefaultValueSql("(newid())")
                .HasColumnName("sysguid");
            entity.Property(e => e.Sysmodified)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("sysmodified");
            entity.Property(e => e.Sysmodifier).HasColumnName("sysmodifier");
            entity.Property(e => e.Tekst)
                .HasMaxLength(160)
                .HasColumnName("tekst");
            entity.Property(e => e.Timestamp)
                .IsRowVersion()
                .IsConcurrencyToken()
                .HasColumnName("timestamp");
        });

        modelBuilder.Entity<Frkrg>(entity =>
        {
            entity.HasKey(e => e.Id).IsClustered(false);

            entity.ToTable("frkrg");

            entity.HasIndex(e => new { e.Afldat, e.FaktCode, e.Volgnr5 }, "afkrg").IsUnique();

            entity.HasIndex(e => new { e.Debnr, e.FaktCode, e.Volgnr5 }, "dbvlg").IsUnique();

            entity.HasIndex(e => new { e.CntrId, e.Id }, "frkeca").IsUnique();

            entity.HasIndex(e => new { e.FaktCode, e.Faknr, e.Id }, "frkfak").IsUnique();

            entity.HasIndex(e => new { e.Fkbguids, e.Fkbseqnr, e.Id }, "frkfkb").IsUnique();

            entity.HasIndex(e => new { e.Faknr, e.Id }, "frkfnr").IsUnique();

            entity.HasIndex(e => new { e.PakbonNr, e.FaktCode, e.Volgnr5 }, "frkpak").IsUnique();

            entity.HasIndex(e => new { e.FaktCode, e.Volgnr5 }, "frkrg")
                .IsUnique()
                .IsClustered();

            entity.HasIndex(e => new { e.Ordernr, e.FaktCode, e.Volgnr5 }, "frord").IsUnique();

            entity.HasIndex(e => e.Crdnr, "ix_crdnr");

            entity.HasIndex(e => e.Einddebnr, "ix_einddebnr");

            entity.HasIndex(e => e.Fakdebnr, "ix_fakdebnr");

            entity.Property(e => e.Id).HasColumnName("ID");
            entity.Property(e => e.Actionmessage)
                .HasMaxLength(60)
                .HasColumnName("actionmessage");
            entity.Property(e => e.Actionstatus).HasColumnName("actionstatus");
            entity.Property(e => e.AflWeek)
                .HasMaxLength(2)
                .IsFixedLength()
                .HasColumnName("afl_week");
            entity.Property(e => e.Afldat)
                .HasColumnType("datetime")
                .HasColumnName("afldat");
            entity.Property(e => e.Approved).HasColumnType("datetime");
            entity.Property(e => e.BdrDEvVal).HasColumnName("bdr_d_ev_val");
            entity.Property(e => e.BdrDiscVal).HasColumnName("bdr_disc_val");
            entity.Property(e => e.BdrEvEdVal).HasColumnName("bdr_ev_ed_val");
            entity.Property(e => e.BdrEvVal).HasColumnName("bdr_ev_val");
            entity.Property(e => e.BdrKb2Val).HasColumnName("bdr_kb2_val");
            entity.Property(e => e.BdrKbVal).HasColumnName("bdr_kb_val");
            entity.Property(e => e.BdrLinedEvVal).HasColumnName("bdr_lined_ev_val");
            entity.Property(e => e.BdrLinediscVal).HasColumnName("bdr_linedisc_val");
            entity.Property(e => e.BdrVal).HasColumnName("bdr_val");
            entity.Property(e => e.BdrVatOrdVal).HasColumnName("bdr_vat_ord_val");
            entity.Property(e => e.BdrVatShipVal).HasColumnName("bdr_vat_ship_val");
            entity.Property(e => e.BdrVatVal).HasColumnName("bdr_vat_val");
            entity.Property(e => e.Betcond)
                .HasMaxLength(2)
                .IsFixedLength()
                .HasColumnName("betcond");
            entity.Property(e => e.BrutoGew).HasColumnName("bruto_gew");
            entity.Property(e => e.BtwCdOrd)
                .HasMaxLength(3)
                .IsFixedLength()
                .HasColumnName("btw_cd_ord");
            entity.Property(e => e.BtwCode)
                .HasMaxLength(3)
                .IsFixedLength()
                .HasColumnName("btw_code");
            entity.Property(e => e.CalcInclVat)
                .HasMaxLength(1)
                .IsFixedLength()
                .HasColumnName("calc_incl_vat");
            entity.Property(e => e.CalcMethPc)
                .HasMaxLength(1)
                .IsFixedLength()
                .HasColumnName("calc_meth_pc");
            entity.Property(e => e.CashRegisterAccount).HasMaxLength(34);
            entity.Property(e => e.CntrId)
                .HasMaxLength(38)
                .HasColumnName("cntr_id");
            entity.Property(e => e.Colli)
                .HasMaxLength(5)
                .IsFixedLength()
                .HasColumnName("colli");
            entity.Property(e => e.Contractnr)
                .HasMaxLength(8)
                .IsFixedLength()
                .HasColumnName("contractnr");
            entity.Property(e => e.CrdDgbknr)
                .HasMaxLength(3)
                .IsFixedLength()
                .HasColumnName("crd_dgbknr");
            entity.Property(e => e.CrdFaktnr)
                .HasMaxLength(8)
                .IsFixedLength()
                .HasColumnName("crd_faktnr");
            entity.Property(e => e.Crdnr)
                .HasMaxLength(6)
                .IsFixedLength()
                .HasColumnName("crdnr");
            entity.Property(e => e.Datum)
                .HasColumnType("datetime")
                .HasColumnName("datum");
            entity.Property(e => e.Debnr)
                .HasMaxLength(6)
                .IsFixedLength()
                .HasColumnName("debnr");
            entity.Property(e => e.DelAddressLine1)
                .HasMaxLength(100)
                .HasColumnName("del_AddressLine1");
            entity.Property(e => e.DelAddressLine2)
                .HasMaxLength(100)
                .HasColumnName("del_AddressLine2");
            entity.Property(e => e.DelAddressLine3)
                .HasMaxLength(100)
                .HasColumnName("del_AddressLine3");
            entity.Property(e => e.DelCity)
                .HasMaxLength(100)
                .HasColumnName("del_City");
            entity.Property(e => e.DelCntJobDesc)
                .HasMaxLength(50)
                .HasColumnName("del_cnt_job_desc");
            entity.Property(e => e.DelContactperson)
                .HasMaxLength(100)
                .HasColumnName("del_contactperson");
            entity.Property(e => e.DelDebtorName)
                .HasMaxLength(50)
                .HasColumnName("del_debtor_name");
            entity.Property(e => e.DelFax)
                .HasMaxLength(50)
                .HasColumnName("del_Fax");
            entity.Property(e => e.DelInitials)
                .HasMaxLength(10)
                .HasColumnName("del_Initials");
            entity.Property(e => e.DelLandcode)
                .HasMaxLength(3)
                .IsFixedLength()
                .HasColumnName("del_landcode");
            entity.Property(e => e.DelPhone)
                .HasMaxLength(50)
                .HasColumnName("del_Phone");
            entity.Property(e => e.DelPostCode)
                .HasMaxLength(20)
                .HasColumnName("del_PostCode");
            entity.Property(e => e.DelPredcode)
                .HasMaxLength(4)
                .IsFixedLength()
                .HasColumnName("del_predcode");
            entity.Property(e => e.DelStateCode)
                .HasMaxLength(3)
                .IsFixedLength()
                .HasColumnName("del_StateCode");
            entity.Property(e => e.DirInk).HasColumnName("dir_ink");
            entity.Property(e => e.DocAttachmentId).HasColumnName("DocAttachmentID");
            entity.Property(e => e.Docnumber)
                .HasMaxLength(30)
                .HasColumnName("docnumber");
            entity.Property(e => e.DocumentId).HasColumnName("DocumentID");
            entity.Property(e => e.EcaType)
                .HasMaxLength(1)
                .IsFixedLength()
                .HasColumnName("eca_type");
            entity.Property(e => e.Einddebnr)
                .HasMaxLength(6)
                .IsFixedLength()
                .HasColumnName("einddebnr");
            entity.Property(e => e.EsyAdres1)
                .HasMaxLength(30)
                .HasColumnName("esy_adres1");
            entity.Property(e => e.EsyCntpers)
                .HasMaxLength(30)
                .HasColumnName("esy_cntpers");
            entity.Property(e => e.EsyLandcode)
                .HasMaxLength(3)
                .IsFixedLength()
                .HasColumnName("esy_landcode");
            entity.Property(e => e.EsyPhone)
                .HasMaxLength(15)
                .HasColumnName("esy_phone");
            entity.Property(e => e.EsyPostcode)
                .HasMaxLength(8)
                .IsFixedLength()
                .HasColumnName("esy_postcode");
            entity.Property(e => e.EsyPredcode)
                .HasMaxLength(4)
                .IsFixedLength()
                .HasColumnName("esy_predcode");
            entity.Property(e => e.EsyVrlttrs)
                .HasMaxLength(10)
                .IsFixedLength()
                .HasColumnName("esy_vrlttrs");
            entity.Property(e => e.EsyWoonpl)
                .HasMaxLength(30)
                .HasColumnName("esy_woonpl");
            entity.Property(e => e.ExArtcode)
                .HasMaxLength(2)
                .IsFixedLength()
                .HasColumnName("ex_artcode");
            entity.Property(e => e.FakSoort)
                .HasMaxLength(1)
                .IsFixedLength()
                .HasColumnName("fak_soort");
            entity.Property(e => e.Fakcrdnr)
                .HasMaxLength(6)
                .IsFixedLength()
                .HasColumnName("fakcrdnr");
            entity.Property(e => e.Fakdebnr)
                .HasMaxLength(6)
                .IsFixedLength()
                .HasColumnName("fakdebnr");
            entity.Property(e => e.Faknr)
                .HasMaxLength(8)
                .IsFixedLength()
                .HasColumnName("faknr");
            entity.Property(e => e.FaktCode)
                .HasMaxLength(3)
                .IsFixedLength()
                .HasColumnName("fakt_code");
            entity.Property(e => e.FaktKort).HasColumnName("fakt_kort");
            entity.Property(e => e.Fiattering).HasColumnName("fiattering");
            entity.Property(e => e.Fkbguids)
                .HasMaxLength(38)
                .HasColumnName("fkbguids");
            entity.Property(e => e.Fkbseqnr)
                .HasMaxLength(5)
                .IsFixedLength()
                .HasColumnName("fkbseqnr");
            entity.Property(e => e.Freefield1)
                .HasMaxLength(75)
                .HasColumnName("freefield1");
            entity.Property(e => e.Freefield2)
                .HasMaxLength(75)
                .HasColumnName("freefield2");
            entity.Property(e => e.Freefield3)
                .HasMaxLength(75)
                .HasColumnName("freefield3");
            entity.Property(e => e.Freefield4).HasColumnName("freefield4");
            entity.Property(e => e.Freefield5).HasColumnName("freefield5");
            entity.Property(e => e.InvAddressLine1)
                .HasMaxLength(100)
                .HasColumnName("inv_AddressLine1");
            entity.Property(e => e.InvAddressLine2)
                .HasMaxLength(100)
                .HasColumnName("inv_AddressLine2");
            entity.Property(e => e.InvAddressLine3)
                .HasMaxLength(100)
                .HasColumnName("inv_AddressLine3");
            entity.Property(e => e.InvCity)
                .HasMaxLength(100)
                .HasColumnName("inv_City");
            entity.Property(e => e.InvCntJobDesc)
                .HasMaxLength(50)
                .HasColumnName("inv_cnt_job_desc");
            entity.Property(e => e.InvContactemail)
                .HasMaxLength(128)
                .HasColumnName("inv_contactemail");
            entity.Property(e => e.InvContactperson)
                .HasMaxLength(100)
                .HasColumnName("inv_contactperson");
            entity.Property(e => e.InvDebtorName)
                .HasMaxLength(50)
                .HasColumnName("inv_debtor_name");
            entity.Property(e => e.InvFax)
                .HasMaxLength(50)
                .HasColumnName("inv_Fax");
            entity.Property(e => e.InvInVv).HasColumnName("inv_in_vv");
            entity.Property(e => e.InvInitials)
                .HasMaxLength(10)
                .HasColumnName("inv_Initials");
            entity.Property(e => e.InvLandcode)
                .HasMaxLength(3)
                .IsFixedLength()
                .HasColumnName("inv_landcode");
            entity.Property(e => e.InvPhone)
                .HasMaxLength(50)
                .HasColumnName("inv_Phone");
            entity.Property(e => e.InvPostCode)
                .HasMaxLength(20)
                .HasColumnName("inv_PostCode");
            entity.Property(e => e.InvPredcode)
                .HasMaxLength(4)
                .IsFixedLength()
                .HasColumnName("inv_predcode");
            entity.Property(e => e.InvStateCode)
                .HasMaxLength(3)
                .IsFixedLength()
                .HasColumnName("inv_StateCode");
            entity.Property(e => e.IsoTaalcd)
                .HasMaxLength(3)
                .IsFixedLength()
                .HasColumnName("iso_taalcd");
            entity.Property(e => e.KlantnLev)
                .HasMaxLength(10)
                .IsFixedLength()
                .HasColumnName("klantn_lev");
            entity.Property(e => e.Koers).HasColumnName("koers");
            entity.Property(e => e.Kstplcode)
                .HasMaxLength(8)
                .IsFixedLength()
                .HasColumnName("kstplcode");
            entity.Property(e => e.Layout)
                .HasMaxLength(8)
                .IsFixedLength()
                .HasColumnName("layout");
            entity.Property(e => e.Levwijze)
                .HasMaxLength(5)
                .IsFixedLength()
                .HasColumnName("levwijze");
            entity.Property(e => e.Magcode)
                .HasMaxLength(4)
                .IsFixedLength()
                .HasColumnName("magcode");
            entity.Property(e => e.NettoGew).HasColumnName("netto_gew");
            entity.Property(e => e.Nettoprijs).HasColumnName("nettoprijs");
            entity.Property(e => e.OfferteNr)
                .HasMaxLength(8)
                .IsFixedLength()
                .HasColumnName("offerte_nr");
            entity.Property(e => e.OrdAddressLine1)
                .HasMaxLength(100)
                .HasColumnName("ord_AddressLine1");
            entity.Property(e => e.OrdAddressLine2)
                .HasMaxLength(100)
                .HasColumnName("ord_AddressLine2");
            entity.Property(e => e.OrdAddressLine3)
                .HasMaxLength(100)
                .HasColumnName("ord_AddressLine3");
            entity.Property(e => e.OrdCity)
                .HasMaxLength(100)
                .HasColumnName("ord_City");
            entity.Property(e => e.OrdCntJobDesc)
                .HasMaxLength(50)
                .HasColumnName("ord_cnt_job_desc");
            entity.Property(e => e.OrdContactperson)
                .HasMaxLength(100)
                .HasColumnName("ord_contactperson");
            entity.Property(e => e.OrdDebtorName)
                .HasMaxLength(50)
                .HasColumnName("ord_debtor_name");
            entity.Property(e => e.OrdFax)
                .HasMaxLength(50)
                .HasColumnName("ord_Fax");
            entity.Property(e => e.OrdInitials)
                .HasMaxLength(10)
                .HasColumnName("ord_Initials");
            entity.Property(e => e.OrdLandcode)
                .HasMaxLength(3)
                .IsFixedLength()
                .HasColumnName("ord_landcode");
            entity.Property(e => e.OrdPhone)
                .HasMaxLength(50)
                .HasColumnName("ord_Phone");
            entity.Property(e => e.OrdPostCode)
                .HasMaxLength(20)
                .HasColumnName("ord_PostCode");
            entity.Property(e => e.OrdPredcode)
                .HasMaxLength(4)
                .IsFixedLength()
                .HasColumnName("ord_predcode");
            entity.Property(e => e.OrdStateCode)
                .HasMaxLength(3)
                .IsFixedLength()
                .HasColumnName("ord_StateCode");
            entity.Property(e => e.Orddat)
                .HasColumnType("datetime")
                .HasColumnName("orddat");
            entity.Property(e => e.Orderkost).HasColumnName("orderkost");
            entity.Property(e => e.Ordernr)
                .HasMaxLength(8)
                .IsFixedLength()
                .HasColumnName("ordernr");
            entity.Property(e => e.PakbonDat)
                .HasColumnType("datetime")
                .HasColumnName("pakbon_dat");
            entity.Property(e => e.PakbonNr)
                .HasMaxLength(8)
                .IsFixedLength()
                .HasColumnName("pakbon_nr");
            entity.Property(e => e.Paymentmethod)
                .HasMaxLength(1)
                .IsFixedLength()
                .HasColumnName("paymentmethod");
            entity.Property(e => e.Percentag).HasColumnName("percentag");
            entity.Property(e => e.Percentag2).HasColumnName("percentag2");
            entity.Property(e => e.ProdOrder)
                .HasMaxLength(12)
                .HasColumnName("prod_order");
            entity.Property(e => e.Projectnr)
                .HasMaxLength(20)
                .HasColumnName("projectnr");
            entity.Property(e => e.Proldate)
                .HasColumnType("datetime")
                .HasColumnName("proldate");
            entity.Property(e => e.Prolrundate)
                .HasColumnType("datetime")
                .HasColumnName("prolrundate");
            entity.Property(e => e.Refer)
                .HasMaxLength(20)
                .HasColumnName("refer");
            entity.Property(e => e.Refer1)
                .HasMaxLength(20)
                .HasColumnName("refer1");
            entity.Property(e => e.Refer2)
                .HasMaxLength(20)
                .HasColumnName("refer2");
            entity.Property(e => e.Refer3)
                .HasMaxLength(20)
                .HasColumnName("refer3");
            entity.Property(e => e.RepresentId).HasColumnName("represent_id");
            entity.Property(e => e.Routecode)
                .HasMaxLength(2)
                .IsFixedLength()
                .HasColumnName("routecode");
            entity.Property(e => e.Selcode)
                .HasMaxLength(2)
                .IsFixedLength()
                .HasColumnName("selcode");
            entity.Property(e => e.ServOrder)
                .HasMaxLength(8)
                .IsFixedLength()
                .HasColumnName("serv_order");
            entity.Property(e => e.StatCode)
                .HasMaxLength(1)
                .IsFixedLength()
                .HasColumnName("stat_code");
            entity.Property(e => e.Status)
                .HasMaxLength(1)
                .IsFixedLength()
                .HasColumnName("status");
            entity.Property(e => e.Syscreated)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("syscreated");
            entity.Property(e => e.Syscreator).HasColumnName("syscreator");
            entity.Property(e => e.Sysguid)
                .HasDefaultValueSql("(newid())")
                .HasColumnName("sysguid");
            entity.Property(e => e.Sysmodified)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("sysmodified");
            entity.Property(e => e.Sysmodifier).HasColumnName("sysmodifier");
            entity.Property(e => e.Timestamp)
                .IsRowVersion()
                .IsConcurrencyToken()
                .HasColumnName("timestamp");
            entity.Property(e => e.TotBdr).HasColumnName("tot_bdr");
            entity.Property(e => e.TypeProd)
                .HasMaxLength(1)
                .IsFixedLength()
                .HasColumnName("type_prod");
            entity.Property(e => e.UserId)
                .HasMaxLength(8)
                .IsFixedLength()
                .HasColumnName("user_id");
            entity.Property(e => e.Valcode)
                .HasMaxLength(3)
                .IsFixedLength()
                .HasColumnName("valcode");
            entity.Property(e => e.Vervdatfak)
                .HasColumnType("datetime")
                .HasColumnName("vervdatfak");
            entity.Property(e => e.Vervdatkrd)
                .HasColumnType("datetime")
                .HasColumnName("vervdatkrd");
            entity.Property(e => e.Vervdatkrd2)
                .HasColumnType("datetime")
                .HasColumnName("vervdatkrd2");
            entity.Property(e => e.Verzdebnr)
                .HasMaxLength(6)
                .IsFixedLength()
                .HasColumnName("verzdebnr");
            entity.Property(e => e.Volgnr5)
                .HasMaxLength(5)
                .IsFixedLength()
                .HasColumnName("volgnr5");
            entity.Property(e => e.Vrachtkost).HasColumnName("vrachtkost");
            entity.Property(e => e.VrzAdrcd)
                .HasMaxLength(6)
                .IsFixedLength()
                .HasColumnName("vrz_adrcd");
            entity.Property(e => e.VrzAdrnr)
                .HasMaxLength(10)
                .IsFixedLength()
                .HasColumnName("vrz_adrnr");
        });

        modelBuilder.Entity<Frsrg>(entity =>
        {
            entity.HasKey(e => e.Id).IsClustered(false);

            entity.ToTable("frsrg");

            entity.HasIndex(e => new { e.Artcode, e.FaktCode, e.Volgnr5, e.Regel }, "arvrg").IsUnique();

            entity.HasIndex(e => new { e.Ordernr, e.FaktCode, e.Volgnr5, e.Regel }, "frsord").IsUnique();

            entity.HasIndex(e => new { e.PakbonNr, e.FaktCode, e.Volgnr5, e.Regel }, "frspak").IsUnique();

            entity.HasIndex(e => new { e.FaktCode, e.Volgnr5, e.Regel }, "frsrg")
                .IsUnique()
                .IsClustered();

            entity.Property(e => e.Id).HasColumnName("ID");
            entity.Property(e => e.Affiliates)
                .HasMaxLength(1)
                .IsFixedLength()
                .HasColumnName("affiliates");
            entity.Property(e => e.AflWeek)
                .HasMaxLength(2)
                .IsFixedLength()
                .HasColumnName("afl_week");
            entity.Property(e => e.Afldat)
                .HasColumnType("datetime")
                .HasColumnName("afldat");
            entity.Property(e => e.ArSoort)
                .HasMaxLength(1)
                .IsFixedLength()
                .HasColumnName("ar_soort");
            entity.Property(e => e.Artcode)
                .HasMaxLength(30)
                .HasColumnName("artcode");
            entity.Property(e => e.AvOntIn).HasColumnName("av_ont_in");
            entity.Property(e => e.BdrDEvVal).HasColumnName("bdr_d_ev_val");
            entity.Property(e => e.BdrEvEdVal).HasColumnName("bdr_ev_ed_val");
            entity.Property(e => e.BdrInvDVal).HasColumnName("bdr_inv_d_val");
            entity.Property(e => e.BdrVal).HasColumnName("bdr_val");
            entity.Property(e => e.BdrVatVal).HasColumnName("bdr_vat_val");
            entity.Property(e => e.Boecode)
                .HasMaxLength(2)
                .IsFixedLength()
                .HasColumnName("boecode");
            entity.Property(e => e.Breedte).HasColumnName("breedte");
            entity.Property(e => e.BtwCode)
                .HasMaxLength(3)
                .IsFixedLength()
                .HasColumnName("btw_code");
            entity.Property(e => e.Container).HasColumnName("container");
            entity.Property(e => e.Contractnr)
                .HasMaxLength(8)
                .IsFixedLength()
                .HasColumnName("contractnr");
            entity.Property(e => e.Correction).HasColumnName("correction");
            entity.Property(e => e.Csacode)
                .HasMaxLength(1)
                .IsFixedLength()
                .HasColumnName("csacode");
            entity.Property(e => e.Dimensie)
                .HasMaxLength(3)
                .IsFixedLength()
                .HasColumnName("dimensie");
            entity.Property(e => e.Docnumber)
                .HasMaxLength(30)
                .HasColumnName("docnumber");
            entity.Property(e => e.Dummy11)
                .HasMaxLength(11)
                .HasColumnName("dummy11");
            entity.Property(e => e.Dummy5)
                .HasMaxLength(5)
                .IsFixedLength()
                .HasColumnName("dummy5");
            entity.Property(e => e.EindDatC)
                .HasColumnType("datetime")
                .HasColumnName("eind_dat_c");
            entity.Property(e => e.EsrAantal).HasColumnName("esr_aantal");
            entity.Property(e => e.EsyQtyBor).HasColumnName("esy_qty_bor");
            entity.Property(e => e.EsyQtyCnl).HasColumnName("esy_qty_cnl");
            entity.Property(e => e.EsyQtyDel).HasColumnName("esy_qty_del");
            entity.Property(e => e.EsyQtyOrd).HasColumnName("esy_qty_ord");
            entity.Property(e => e.Explsrtart)
                .HasMaxLength(1)
                .IsFixedLength()
                .HasColumnName("explsrtart");
            entity.Property(e => e.ExtraPr).HasColumnName("extra_pr");
            entity.Property(e => e.FaktCode)
                .HasMaxLength(3)
                .IsFixedLength()
                .HasColumnName("fakt_code");
            entity.Property(e => e.GewichtBi).HasColumnName("gewicht_bi");
            entity.Property(e => e.Gip).HasColumnName("gip");
            entity.Property(e => e.Hoogte).HasColumnName("hoogte");
            entity.Property(e => e.IntRegio)
                .HasMaxLength(10)
                .IsFixedLength()
                .HasColumnName("int_regio");
            entity.Property(e => e.IntraLvcd)
                .HasMaxLength(10)
                .IsFixedLength()
                .HasColumnName("intra_lvcd");
            entity.Property(e => e.Koers).HasColumnName("koers");
            entity.Property(e => e.KortFlags)
                .HasMaxLength(1)
                .IsFixedLength()
                .HasColumnName("kort_flags");
            entity.Property(e => e.Korting).HasColumnName("korting");
            entity.Property(e => e.Kstdrcode)
                .HasMaxLength(8)
                .IsFixedLength()
                .HasColumnName("kstdrcode");
            entity.Property(e => e.Kstplcode)
                .HasMaxLength(8)
                .IsFixedLength()
                .HasColumnName("kstplcode");
            entity.Property(e => e.Kstsrt)
                .HasMaxLength(8)
                .IsFixedLength()
                .HasColumnName("kstsrt");
            entity.Property(e => e.LandIso)
                .HasMaxLength(3)
                .IsFixedLength()
                .HasColumnName("land_iso");
            entity.Property(e => e.Landabc)
                .HasMaxLength(3)
                .IsFixedLength()
                .HasColumnName("landabc");
            entity.Property(e => e.Landbest)
                .HasMaxLength(3)
                .IsFixedLength()
                .HasColumnName("landbest");
            entity.Property(e => e.Landherk)
                .HasMaxLength(3)
                .IsFixedLength()
                .HasColumnName("landherk");
            entity.Property(e => e.Landoorspr)
                .HasMaxLength(3)
                .IsFixedLength()
                .HasColumnName("landoorspr");
            entity.Property(e => e.Lengte).HasColumnName("lengte");
            entity.Property(e => e.Magcode)
                .HasMaxLength(4)
                .IsFixedLength()
                .HasColumnName("magcode");
            entity.Property(e => e.Maglok)
                .HasMaxLength(10)
                .IsFixedLength()
                .HasColumnName("maglok");
            entity.Property(e => e.Oms160)
                .HasMaxLength(160)
                .HasColumnName("oms160");
            entity.Property(e => e.Oms45)
                .HasMaxLength(45)
                .HasColumnName("oms45");
            entity.Property(e => e.Ordernr)
                .HasMaxLength(8)
                .IsFixedLength()
                .HasColumnName("ordernr");
            entity.Property(e => e.Ordreg).HasColumnName("ordreg");
            entity.Property(e => e.PakbonDat)
                .HasColumnType("datetime")
                .HasColumnName("pakbon_dat");
            entity.Property(e => e.PakbonNr)
                .HasMaxLength(8)
                .IsFixedLength()
                .HasColumnName("pakbon_nr");
            entity.Property(e => e.PercCon).HasColumnName("perc_con");
            entity.Property(e => e.PercGar).HasColumnName("perc_gar");
            entity.Property(e => e.PltsLl)
                .HasMaxLength(10)
                .IsFixedLength()
                .HasColumnName("plts_ll");
            entity.Property(e => e.PrBedr).HasColumnName("pr_bedr");
            entity.Property(e => e.PrKstpl)
                .HasMaxLength(8)
                .IsFixedLength()
                .HasColumnName("pr_kstpl");
            entity.Property(e => e.Prijs83).HasColumnName("prijs83");
            entity.Property(e => e.PrijsN).HasColumnName("prijs_n");
            entity.Property(e => e.Prijslijst)
                .HasMaxLength(15)
                .HasColumnName("prijslijst");
            entity.Property(e => e.ProdOrder)
                .HasMaxLength(12)
                .HasColumnName("prod_order");
            entity.Property(e => e.Project)
                .HasMaxLength(8)
                .IsFixedLength()
                .HasColumnName("project");
            entity.Property(e => e.Projectnr)
                .HasMaxLength(20)
                .HasColumnName("projectnr");
            entity.Property(e => e.ProjvrwC).HasColumnName("projvrw_c");
            entity.Property(e => e.Prshisnr)
                .HasMaxLength(8)
                .IsFixedLength()
                .HasColumnName("prshisnr");
            entity.Property(e => e.ReasonDiscount).HasMaxLength(8);
            entity.Property(e => e.ReasonReturn).HasMaxLength(8);
            entity.Property(e => e.Regel)
                .HasMaxLength(4)
                .IsFixedLength()
                .HasColumnName("regel");
            entity.Property(e => e.RegelHfda)
                .HasMaxLength(4)
                .IsFixedLength()
                .HasColumnName("regel_hfda");
            entity.Property(e => e.Reknr)
                .HasMaxLength(9)
                .IsFixedLength()
                .HasColumnName("reknr");
            entity.Property(e => e.Request).HasColumnName("request");
            entity.Property(e => e.ResId).HasColumnName("res_id");
            entity.Property(e => e.SerieNum)
                .HasMaxLength(22)
                .HasColumnName("serie_num");
            entity.Property(e => e.ServOrder)
                .HasMaxLength(8)
                .IsFixedLength()
                .HasColumnName("serv_order");
            entity.Property(e => e.StateenhI).HasColumnName("stateenh_i");
            entity.Property(e => e.Statistnr)
                .HasMaxLength(9)
                .IsFixedLength()
                .HasColumnName("statistnr");
            entity.Property(e => e.Status)
                .HasMaxLength(1)
                .IsFixedLength()
                .HasColumnName("status");
            entity.Property(e => e.Stelsel)
                .HasMaxLength(10)
                .IsFixedLength()
                .HasColumnName("stelsel");
            entity.Property(e => e.Syscreated)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("syscreated");
            entity.Property(e => e.Syscreator).HasColumnName("syscreator");
            entity.Property(e => e.Sysguid)
                .HasDefaultValueSql("(newid())")
                .HasColumnName("sysguid");
            entity.Property(e => e.Sysmodified)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("sysmodified");
            entity.Property(e => e.Sysmodifier).HasColumnName("sysmodifier");
            entity.Property(e => e.Taric)
                .HasMaxLength(2)
                .IsFixedLength()
                .HasColumnName("taric");
            entity.Property(e => e.TaxCode2)
                .HasMaxLength(3)
                .IsFixedLength();
            entity.Property(e => e.TaxCode3)
                .HasMaxLength(3)
                .IsFixedLength();
            entity.Property(e => e.TaxCode4)
                .HasMaxLength(3)
                .IsFixedLength();
            entity.Property(e => e.TaxCode5)
                .HasMaxLength(3)
                .IsFixedLength();
            entity.Property(e => e.Timestamp)
                .IsRowVersion()
                .IsConcurrencyToken()
                .HasColumnName("timestamp");
            entity.Property(e => e.TransactA)
                .HasMaxLength(10)
                .IsFixedLength()
                .HasColumnName("transact_a");
            entity.Property(e => e.TransactB)
                .HasMaxLength(10)
                .IsFixedLength()
                .HasColumnName("transact_b");
            entity.Property(e => e.TrsshpmCd)
                .HasMaxLength(10)
                .IsFixedLength()
                .HasColumnName("trsshpm_cd");
            entity.Property(e => e.Unit)
                .HasMaxLength(5)
                .IsFixedLength()
                .HasColumnName("unit");
            entity.Property(e => e.Unitcode)
                .HasMaxLength(8)
                .IsFixedLength()
                .HasColumnName("unitcode");
            entity.Property(e => e.Unitfactor)
                .HasDefaultValue(1.0)
                .HasColumnName("unitfactor");
            entity.Property(e => e.Vervoer)
                .HasMaxLength(10)
                .IsFixedLength()
                .HasColumnName("vervoer");
            entity.Property(e => e.Volgnr5)
                .HasMaxLength(5)
                .IsFixedLength()
                .HasColumnName("volgnr5");
            entity.Property(e => e.VolgnrMut)
                .HasMaxLength(10)
                .IsFixedLength()
                .HasColumnName("volgnr_mut");
            entity.Property(e => e.Vvp).HasColumnName("vvp");
        });

        modelBuilder.Entity<Frstx>(entity =>
        {
            entity.HasKey(e => e.Id).IsClustered(false);

            entity.ToTable("frstx");

            entity.HasIndex(e => new { e.FaktCode, e.Volgnr5, e.Regel }, "frstx")
                .IsUnique()
                .IsClustered();

            entity.Property(e => e.Id).HasColumnName("ID");
            entity.Property(e => e.FaktCode)
                .HasMaxLength(3)
                .IsFixedLength()
                .HasColumnName("fakt_code");
            entity.Property(e => e.Regel)
                .HasMaxLength(4)
                .IsFixedLength()
                .HasColumnName("regel");
            entity.Property(e => e.Reknr)
                .HasMaxLength(9)
                .IsFixedLength()
                .HasColumnName("reknr");
            entity.Property(e => e.Status)
                .HasMaxLength(1)
                .IsFixedLength()
                .HasColumnName("status");
            entity.Property(e => e.Syscreated)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("syscreated");
            entity.Property(e => e.Syscreator).HasColumnName("syscreator");
            entity.Property(e => e.Sysguid)
                .HasDefaultValueSql("(newid())")
                .HasColumnName("sysguid");
            entity.Property(e => e.Sysmodified)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("sysmodified");
            entity.Property(e => e.Sysmodifier).HasColumnName("sysmodifier");
            entity.Property(e => e.Tekst)
                .HasMaxLength(160)
                .HasColumnName("tekst");
            entity.Property(e => e.Timestamp)
                .IsRowVersion()
                .IsConcurrencyToken()
                .HasColumnName("timestamp");
            entity.Property(e => e.Volgnr5)
                .HasMaxLength(5)
                .IsFixedLength()
                .HasColumnName("volgnr5");
        });

        modelBuilder.Entity<Frvkrg>(entity =>
        {
            entity.HasKey(e => e.Id).IsClustered(false);

            entity.ToTable("frvkrg");

            entity.HasIndex(e => new { e.Debnr, e.FaktCode, e.Volgnr5 }, "frvkdv").IsUnique();

            entity.HasIndex(e => new { e.FaktCode, e.Volgnr5 }, "frvkrg")
                .IsUnique()
                .IsClustered();

            entity.HasIndex(e => e.Debnr, "ix_debnr");

            entity.HasIndex(e => e.Verzdebnr, "ix_verzdebnr");

            entity.Property(e => e.Id).HasColumnName("ID");
            entity.Property(e => e.AdrCode)
                .HasMaxLength(2)
                .IsFixedLength()
                .HasColumnName("adr_code");
            entity.Property(e => e.Afldat)
                .HasColumnType("datetime")
                .HasColumnName("afldat");
            entity.Property(e => e.Betcond)
                .HasMaxLength(2)
                .IsFixedLength()
                .HasColumnName("betcond");
            entity.Property(e => e.BrutoGew).HasColumnName("bruto_gew");
            entity.Property(e => e.BtwCdOrd)
                .HasMaxLength(3)
                .IsFixedLength()
                .HasColumnName("btw_cd_ord");
            entity.Property(e => e.BtwCode)
                .HasMaxLength(3)
                .IsFixedLength()
                .HasColumnName("btw_code");
            entity.Property(e => e.Colli)
                .HasMaxLength(5)
                .IsFixedLength()
                .HasColumnName("colli");
            entity.Property(e => e.Debnr)
                .HasMaxLength(6)
                .IsFixedLength()
                .HasColumnName("debnr");
            entity.Property(e => e.DelAddressLine1)
                .HasMaxLength(100)
                .HasColumnName("del_AddressLine1");
            entity.Property(e => e.DelAddressLine2)
                .HasMaxLength(100)
                .HasColumnName("del_AddressLine2");
            entity.Property(e => e.DelAddressLine3)
                .HasMaxLength(100)
                .HasColumnName("del_AddressLine3");
            entity.Property(e => e.DelCity)
                .HasMaxLength(100)
                .HasColumnName("del_City");
            entity.Property(e => e.DelCntJobDesc)
                .HasMaxLength(50)
                .HasColumnName("del_cnt_job_desc");
            entity.Property(e => e.DelContactperson)
                .HasMaxLength(100)
                .HasColumnName("del_contactperson");
            entity.Property(e => e.DelDebtorName)
                .HasMaxLength(50)
                .HasColumnName("del_debtor_name");
            entity.Property(e => e.DelFax)
                .HasMaxLength(50)
                .HasColumnName("del_Fax");
            entity.Property(e => e.DelInitials)
                .HasMaxLength(10)
                .HasColumnName("del_Initials");
            entity.Property(e => e.DelLandcode)
                .HasMaxLength(3)
                .IsFixedLength()
                .HasColumnName("del_landcode");
            entity.Property(e => e.DelPhone)
                .HasMaxLength(50)
                .HasColumnName("del_Phone");
            entity.Property(e => e.DelPostCode)
                .HasMaxLength(20)
                .HasColumnName("del_PostCode");
            entity.Property(e => e.DelPredcode)
                .HasMaxLength(4)
                .IsFixedLength()
                .HasColumnName("del_predcode");
            entity.Property(e => e.DelStateCode)
                .HasMaxLength(3)
                .IsFixedLength()
                .HasColumnName("del_StateCode");
            entity.Property(e => e.Einddebnr)
                .HasMaxLength(6)
                .IsFixedLength()
                .HasColumnName("einddebnr");
            entity.Property(e => e.ExArtcode)
                .HasMaxLength(2)
                .IsFixedLength()
                .HasColumnName("ex_artcode");
            entity.Property(e => e.Fakdebnr)
                .HasMaxLength(6)
                .IsFixedLength()
                .HasColumnName("fakdebnr");
            entity.Property(e => e.FaktCode)
                .HasMaxLength(3)
                .IsFixedLength()
                .HasColumnName("fakt_code");
            entity.Property(e => e.FaktKort).HasColumnName("fakt_kort");
            entity.Property(e => e.InvAddressLine1)
                .HasMaxLength(100)
                .HasColumnName("inv_AddressLine1");
            entity.Property(e => e.InvAddressLine2)
                .HasMaxLength(100)
                .HasColumnName("inv_AddressLine2");
            entity.Property(e => e.InvAddressLine3)
                .HasMaxLength(100)
                .HasColumnName("inv_AddressLine3");
            entity.Property(e => e.InvCity)
                .HasMaxLength(100)
                .HasColumnName("inv_City");
            entity.Property(e => e.InvCntJobDesc)
                .HasMaxLength(50)
                .HasColumnName("inv_cnt_job_desc");
            entity.Property(e => e.InvContactperson)
                .HasMaxLength(100)
                .HasColumnName("inv_contactperson");
            entity.Property(e => e.InvDebtorName)
                .HasMaxLength(50)
                .HasColumnName("inv_debtor_name");
            entity.Property(e => e.InvFax)
                .HasMaxLength(50)
                .HasColumnName("inv_Fax");
            entity.Property(e => e.InvInVv).HasColumnName("inv_in_vv");
            entity.Property(e => e.InvInitials)
                .HasMaxLength(10)
                .HasColumnName("inv_Initials");
            entity.Property(e => e.InvLandcode)
                .HasMaxLength(3)
                .IsFixedLength()
                .HasColumnName("inv_landcode");
            entity.Property(e => e.InvPhone)
                .HasMaxLength(50)
                .HasColumnName("inv_Phone");
            entity.Property(e => e.InvPostCode)
                .HasMaxLength(20)
                .HasColumnName("inv_PostCode");
            entity.Property(e => e.InvPredcode)
                .HasMaxLength(4)
                .IsFixedLength()
                .HasColumnName("inv_predcode");
            entity.Property(e => e.InvStateCode)
                .HasMaxLength(3)
                .IsFixedLength()
                .HasColumnName("inv_StateCode");
            entity.Property(e => e.IsoTaalcd)
                .HasMaxLength(3)
                .IsFixedLength()
                .HasColumnName("iso_taalcd");
            entity.Property(e => e.Koers).HasColumnName("koers");
            entity.Property(e => e.Kstplcode)
                .HasMaxLength(8)
                .IsFixedLength()
                .HasColumnName("kstplcode");
            entity.Property(e => e.Levwijze)
                .HasMaxLength(5)
                .IsFixedLength()
                .HasColumnName("levwijze");
            entity.Property(e => e.Magcode)
                .HasMaxLength(4)
                .IsFixedLength()
                .HasColumnName("magcode");
            entity.Property(e => e.NettoGew).HasColumnName("netto_gew");
            entity.Property(e => e.Nettoprijs).HasColumnName("nettoprijs");
            entity.Property(e => e.OrdAddressLine1)
                .HasMaxLength(100)
                .HasColumnName("ord_AddressLine1");
            entity.Property(e => e.OrdAddressLine2)
                .HasMaxLength(100)
                .HasColumnName("ord_AddressLine2");
            entity.Property(e => e.OrdAddressLine3)
                .HasMaxLength(100)
                .HasColumnName("ord_AddressLine3");
            entity.Property(e => e.OrdCity)
                .HasMaxLength(100)
                .HasColumnName("ord_City");
            entity.Property(e => e.OrdCntJobDesc)
                .HasMaxLength(50)
                .HasColumnName("ord_cnt_job_desc");
            entity.Property(e => e.OrdContactperson)
                .HasMaxLength(100)
                .HasColumnName("ord_contactperson");
            entity.Property(e => e.OrdDebtorName)
                .HasMaxLength(50)
                .HasColumnName("ord_debtor_name");
            entity.Property(e => e.OrdFax)
                .HasMaxLength(50)
                .HasColumnName("ord_Fax");
            entity.Property(e => e.OrdInitials)
                .HasMaxLength(10)
                .HasColumnName("ord_Initials");
            entity.Property(e => e.OrdLandcode)
                .HasMaxLength(3)
                .IsFixedLength()
                .HasColumnName("ord_landcode");
            entity.Property(e => e.OrdPhone)
                .HasMaxLength(50)
                .HasColumnName("ord_Phone");
            entity.Property(e => e.OrdPostCode)
                .HasMaxLength(20)
                .HasColumnName("ord_PostCode");
            entity.Property(e => e.OrdPredcode)
                .HasMaxLength(4)
                .IsFixedLength()
                .HasColumnName("ord_predcode");
            entity.Property(e => e.OrdStateCode)
                .HasMaxLength(3)
                .IsFixedLength()
                .HasColumnName("ord_StateCode");
            entity.Property(e => e.Orddat)
                .HasColumnType("datetime")
                .HasColumnName("orddat");
            entity.Property(e => e.Orderkost).HasColumnName("orderkost");
            entity.Property(e => e.Ordernr)
                .HasMaxLength(8)
                .IsFixedLength()
                .HasColumnName("ordernr");
            entity.Property(e => e.ProdOrder)
                .HasMaxLength(12)
                .HasColumnName("prod_order");
            entity.Property(e => e.ProjectNr).HasMaxLength(20);
            entity.Property(e => e.Refer)
                .HasMaxLength(20)
                .HasColumnName("refer");
            entity.Property(e => e.Refer1)
                .HasMaxLength(20)
                .HasColumnName("refer1");
            entity.Property(e => e.Refer2)
                .HasMaxLength(20)
                .HasColumnName("refer2");
            entity.Property(e => e.Refer3)
                .HasMaxLength(20)
                .HasColumnName("refer3");
            entity.Property(e => e.RepresentId).HasColumnName("represent_id");
            entity.Property(e => e.Selcode)
                .HasMaxLength(2)
                .IsFixedLength()
                .HasColumnName("selcode");
            entity.Property(e => e.StatCode)
                .HasMaxLength(1)
                .IsFixedLength()
                .HasColumnName("stat_code");
            entity.Property(e => e.Syscreated)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("syscreated");
            entity.Property(e => e.Syscreator).HasColumnName("syscreator");
            entity.Property(e => e.Sysguid)
                .HasDefaultValueSql("(newid())")
                .HasColumnName("sysguid");
            entity.Property(e => e.Sysmodified)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("sysmodified");
            entity.Property(e => e.Sysmodifier).HasColumnName("sysmodifier");
            entity.Property(e => e.Timestamp)
                .IsRowVersion()
                .IsConcurrencyToken()
                .HasColumnName("timestamp");
            entity.Property(e => e.TypeProd)
                .HasMaxLength(1)
                .IsFixedLength()
                .HasColumnName("type_prod");
            entity.Property(e => e.UserId)
                .HasMaxLength(8)
                .IsFixedLength()
                .HasColumnName("user_id");
            entity.Property(e => e.Valcode)
                .HasMaxLength(3)
                .IsFixedLength()
                .HasColumnName("valcode");
            entity.Property(e => e.Verzdebnr)
                .HasMaxLength(6)
                .IsFixedLength()
                .HasColumnName("verzdebnr");
            entity.Property(e => e.Volgnr5)
                .HasMaxLength(5)
                .IsFixedLength()
                .HasColumnName("volgnr5");
            entity.Property(e => e.Vrachtkost).HasColumnName("vrachtkost");
            entity.Property(e => e.VrzAdrcd)
                .HasMaxLength(6)
                .IsFixedLength()
                .HasColumnName("vrz_adrcd");
            entity.Property(e => e.VrzAdrnr)
                .HasMaxLength(10)
                .IsFixedLength()
                .HasColumnName("vrz_adrnr");
        });

        modelBuilder.Entity<Frvsrg>(entity =>
        {
            entity.HasKey(e => e.Id).IsClustered(false);

            entity.ToTable("frvsrg");

            entity.HasIndex(e => new { e.FaktCode, e.Volgnr5, e.Regel }, "frvsrg")
                .IsUnique()
                .IsClustered();

            entity.Property(e => e.Id).HasColumnName("ID");
            entity.Property(e => e.Affiliates)
                .HasMaxLength(1)
                .IsFixedLength()
                .HasColumnName("affiliates");
            entity.Property(e => e.AflWeek)
                .HasMaxLength(2)
                .IsFixedLength()
                .HasColumnName("afl_week");
            entity.Property(e => e.ArSoort)
                .HasMaxLength(1)
                .IsFixedLength()
                .HasColumnName("ar_soort");
            entity.Property(e => e.Artcode)
                .HasMaxLength(30)
                .HasColumnName("artcode");
            entity.Property(e => e.Boecode)
                .HasMaxLength(2)
                .IsFixedLength()
                .HasColumnName("boecode");
            entity.Property(e => e.Breedte).HasColumnName("breedte");
            entity.Property(e => e.BtwCode)
                .HasMaxLength(3)
                .IsFixedLength()
                .HasColumnName("btw_code");
            entity.Property(e => e.Container).HasColumnName("container");
            entity.Property(e => e.Csacode)
                .HasMaxLength(1)
                .IsFixedLength()
                .HasColumnName("csacode");
            entity.Property(e => e.Dimensie)
                .HasMaxLength(3)
                .IsFixedLength()
                .HasColumnName("dimensie");
            entity.Property(e => e.EsrAantal).HasColumnName("esr_aantal");
            entity.Property(e => e.Explsrtart)
                .HasMaxLength(1)
                .IsFixedLength()
                .HasColumnName("explsrtart");
            entity.Property(e => e.ExtraPr).HasColumnName("extra_pr");
            entity.Property(e => e.FaktCode)
                .HasMaxLength(3)
                .IsFixedLength()
                .HasColumnName("fakt_code");
            entity.Property(e => e.GewichtBi).HasColumnName("gewicht_bi");
            entity.Property(e => e.GipTekst).HasColumnName("gip_tekst");
            entity.Property(e => e.Hoogte).HasColumnName("hoogte");
            entity.Property(e => e.IntRegio)
                .HasMaxLength(10)
                .IsFixedLength()
                .HasColumnName("int_regio");
            entity.Property(e => e.IntraLvcd)
                .HasMaxLength(10)
                .IsFixedLength()
                .HasColumnName("intra_lvcd");
            entity.Property(e => e.Korting).HasColumnName("korting");
            entity.Property(e => e.Kstdrcode)
                .HasMaxLength(8)
                .IsFixedLength()
                .HasColumnName("kstdrcode");
            entity.Property(e => e.Kstplcode)
                .HasMaxLength(8)
                .IsFixedLength()
                .HasColumnName("kstplcode");
            entity.Property(e => e.Kstsrt)
                .HasMaxLength(8)
                .IsFixedLength()
                .HasColumnName("kstsrt");
            entity.Property(e => e.LandIso)
                .HasMaxLength(3)
                .IsFixedLength()
                .HasColumnName("land_iso");
            entity.Property(e => e.Landabc)
                .HasMaxLength(3)
                .IsFixedLength()
                .HasColumnName("landabc");
            entity.Property(e => e.Landbest)
                .HasMaxLength(3)
                .IsFixedLength()
                .HasColumnName("landbest");
            entity.Property(e => e.Landherk)
                .HasMaxLength(3)
                .IsFixedLength()
                .HasColumnName("landherk");
            entity.Property(e => e.Landoorspr)
                .HasMaxLength(3)
                .IsFixedLength()
                .HasColumnName("landoorspr");
            entity.Property(e => e.Lengte).HasColumnName("lengte");
            entity.Property(e => e.Magcode)
                .HasMaxLength(4)
                .IsFixedLength()
                .HasColumnName("magcode");
            entity.Property(e => e.Oms45)
                .HasMaxLength(45)
                .HasColumnName("oms45");
            entity.Property(e => e.PltsLl)
                .HasMaxLength(10)
                .IsFixedLength()
                .HasColumnName("plts_ll");
            entity.Property(e => e.PrAant).HasColumnName("pr_aant");
            entity.Property(e => e.PrBedr).HasColumnName("pr_bedr");
            entity.Property(e => e.PrKstpl)
                .HasMaxLength(8)
                .IsFixedLength()
                .HasColumnName("pr_kstpl");
            entity.Property(e => e.Prijs83).HasColumnName("prijs83");
            entity.Property(e => e.PrijsN).HasColumnName("prijs_n");
            entity.Property(e => e.Prijslijst)
                .HasMaxLength(15)
                .HasColumnName("prijslijst");
            entity.Property(e => e.ProdOrder)
                .HasMaxLength(12)
                .HasColumnName("prod_order");
            entity.Property(e => e.Project)
                .HasMaxLength(8)
                .IsFixedLength()
                .HasColumnName("project");
            entity.Property(e => e.ProjectNr).HasMaxLength(20);
            entity.Property(e => e.Regel)
                .HasMaxLength(4)
                .IsFixedLength()
                .HasColumnName("regel");
            entity.Property(e => e.StateenhI).HasColumnName("stateenh_i");
            entity.Property(e => e.Statistnr)
                .HasMaxLength(9)
                .IsFixedLength()
                .HasColumnName("statistnr");
            entity.Property(e => e.Stelsel)
                .HasMaxLength(10)
                .IsFixedLength()
                .HasColumnName("stelsel");
            entity.Property(e => e.Syscreated)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("syscreated");
            entity.Property(e => e.Syscreator).HasColumnName("syscreator");
            entity.Property(e => e.Sysguid)
                .HasDefaultValueSql("(newid())")
                .HasColumnName("sysguid");
            entity.Property(e => e.Sysmodified)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("sysmodified");
            entity.Property(e => e.Sysmodifier).HasColumnName("sysmodifier");
            entity.Property(e => e.Taric)
                .HasMaxLength(2)
                .IsFixedLength()
                .HasColumnName("taric");
            entity.Property(e => e.TaxCode2)
                .HasMaxLength(3)
                .IsFixedLength();
            entity.Property(e => e.TaxCode3)
                .HasMaxLength(3)
                .IsFixedLength();
            entity.Property(e => e.TaxCode4)
                .HasMaxLength(3)
                .IsFixedLength();
            entity.Property(e => e.TaxCode5)
                .HasMaxLength(3)
                .IsFixedLength();
            entity.Property(e => e.Timestamp)
                .IsRowVersion()
                .IsConcurrencyToken()
                .HasColumnName("timestamp");
            entity.Property(e => e.TransactA)
                .HasMaxLength(10)
                .IsFixedLength()
                .HasColumnName("transact_a");
            entity.Property(e => e.TransactB)
                .HasMaxLength(10)
                .IsFixedLength()
                .HasColumnName("transact_b");
            entity.Property(e => e.TrsshpmCd)
                .HasMaxLength(10)
                .IsFixedLength()
                .HasColumnName("trsshpm_cd");
            entity.Property(e => e.Vervoer)
                .HasMaxLength(10)
                .IsFixedLength()
                .HasColumnName("vervoer");
            entity.Property(e => e.Volgnr5)
                .HasMaxLength(5)
                .IsFixedLength()
                .HasColumnName("volgnr5");
        });

        modelBuilder.Entity<Frvstx>(entity =>
        {
            entity.HasKey(e => e.Id).IsClustered(false);

            entity.ToTable("frvstx");

            entity.HasIndex(e => new { e.FaktCode, e.Volgnr5, e.Regel }, "frvstx")
                .IsUnique()
                .IsClustered();

            entity.Property(e => e.Id).HasColumnName("ID");
            entity.Property(e => e.FaktCode)
                .HasMaxLength(3)
                .IsFixedLength()
                .HasColumnName("fakt_code");
            entity.Property(e => e.Regel)
                .HasMaxLength(4)
                .IsFixedLength()
                .HasColumnName("regel");
            entity.Property(e => e.Reknr)
                .HasMaxLength(9)
                .IsFixedLength()
                .HasColumnName("reknr");
            entity.Property(e => e.Syscreated)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("syscreated");
            entity.Property(e => e.Syscreator).HasColumnName("syscreator");
            entity.Property(e => e.Sysguid)
                .HasDefaultValueSql("(newid())")
                .HasColumnName("sysguid");
            entity.Property(e => e.Sysmodified)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("sysmodified");
            entity.Property(e => e.Sysmodifier).HasColumnName("sysmodifier");
            entity.Property(e => e.Tekst)
                .HasMaxLength(160)
                .HasColumnName("tekst");
            entity.Property(e => e.Timestamp)
                .IsRowVersion()
                .IsConcurrencyToken()
                .HasColumnName("timestamp");
            entity.Property(e => e.Volgnr5)
                .HasMaxLength(5)
                .IsFixedLength()
                .HasColumnName("volgnr5");
        });

        modelBuilder.Entity<Gbkmut>(entity =>
        {
            entity.ToTable("gbkmut");

            entity.HasIndex(e => new { e.Crdnr, e.Reknr, e.Faktuurnr, e.Datum, e.BdrHfl, e.Transtype, e.Transsubtype, e.Entryorigin, e.CompanyCode, e.ReminderCount }, "IX_gbkmut_AP");

            entity.HasIndex(e => new { e.Debnr, e.Reknr, e.Faktuurnr, e.Datum, e.BdrHfl, e.AmountCentral, e.Transtype, e.Transsubtype, e.Entryorigin, e.CompanyCode, e.ReminderCount }, "IX_gbkmut_AR");

            entity.HasIndex(e => new { e.BankTransactionGuid, e.Transtype, e.Reknr, e.Debnr, e.Crdnr }, "IX_gbkmut_BankTransactionGUID");

            entity.HasIndex(e => new { e.BudVers, e.CompanyCode, e.Bkjrcode, e.Reknr, e.Periode, e.Verwerknrl, e.Transtype, e.Transsubtype, e.AmountCentral, e.BdrHfl }, "IX_gbkmut_Budget");

            entity.HasIndex(e => new { e.CompanyCode, e.Timestamp, e.TransactionType, e.EntryGuid, e.Transtype, e.Verwerknrl }, "IX_gbkmut_CompanyTS");

            entity.HasIndex(e => new { e.Kstplcode, e.Reknr, e.Datum, e.Transtype }, "IX_gbkmut_CostCenter");

            entity.HasIndex(e => new { e.Kstdrcode, e.Reknr, e.Datum, e.Transtype }, "IX_gbkmut_CostUnit");

            entity.HasIndex(e => new { e.EntryGuid, e.Regel }, "IX_gbkmut_EntryGuid");

            entity.HasIndex(e => new { e.Reknr, e.Datum, e.Dagbknr, e.Transtype, e.Transsubtype, e.ReminderCount, e.Verwerknrl, e.Reviewed, e.Checked }, "IX_gbkmut_GLCard");

            entity.HasIndex(e => new { e.Transtype, e.Transsubtype, e.Freefield1, e.ResId, e.Checked, e.BlockItem, e.Reviewed, e.ReminderCount, e.Warehouse, e.TransactionGuid2 }, "IX_gbkmut_InternalUse");

            entity.HasIndex(e => new { e.Artcode, e.Reknr, e.Datum, e.Transtype }, "IX_gbkmut_Items");

            entity.HasIndex(e => new { e.Artcode, e.Datum, e.Bkstnr, e.Type, e.LineType }, "IX_gbkmut_LastRevaluation");

            entity.HasIndex(e => new { e.BkstnrSub, e.Regel, e.BudVers, e.Transtype, e.Transsubtype, e.Freefield1 }, "IX_gbkmut_MRP");

            entity.HasIndex(e => e.Faktuurnr, "IX_gbkmut_OurRef");

            entity.HasIndex(e => new { e.Datum, e.ResId, e.CompCode }, "IX_gbkmut_Payroll");

            entity.HasIndex(e => e.Verwerknrl, "IX_gbkmut_Processed");

            entity.HasIndex(e => new { e.Project, e.Reknr, e.Datum, e.Transtype }, "IX_gbkmut_Project");

            entity.HasIndex(e => e.ReconcileNumber, "IX_gbkmut_ReconcileNumber");

            entity.HasIndex(e => new { e.ResId, e.Reknr, e.Datum, e.Transtype }, "IX_gbkmut_Resource");

            entity.HasIndex(e => e.BkstnrSub, "IX_gbkmut_SOnr");

            entity.HasIndex(e => e.Shipment, "IX_gbkmut_ShipmentItem");

            entity.HasIndex(e => e.TransactionGuid, "IX_gbkmut_TransactionGuid").IsUnique();

            entity.HasIndex(e => e.TransactionGuid2, "IX_gbkmut_TransactionGuid2");

            entity.HasIndex(e => new { e.Transtype, e.Transsubtype, e.Freefield1, e.Selcode, e.Warehouse, e.BlockItem, e.Datum, e.Docdate, e.BkstnrSub, e.Reknr }, "IX_gbkmut_Transtype");

            entity.HasIndex(e => new { e.Warehouse, e.Artcode, e.Reknr, e.StockTrackingNumber, e.Datum, e.Transtype, e.Transsubtype, e.Aantal, e.BdrHfl, e.WarehouseLocation }, "IX_gbkmut_Warehouse");

            entity.HasIndex(e => new { e.Warehouse, e.WarehouseLocation, e.Artcode, e.Reknr, e.Transtype, e.Datum }, "IX_gbkmut_WarehouseLocation");

            entity.HasIndex(e => e.Bkstnr, "IX_gbkmut_bkstnr");

            entity.HasIndex(e => e.CmpWwn, "IX_gbkmut_cmp_wwn");

            entity.HasIndex(e => new { e.Artcode, e.Facode }, "IX_gbkmut_facode");

            entity.HasIndex(e => e.Orderdebtor, "IX_gbkmut_orderdebtor");

            entity.HasIndex(e => new { e.Syscreated, e.Syscreator, e.Dagbknr }, "IX_gbkmut_syscreated_syscreator_journal");

            entity.HasIndex(e => e.Unitcode, "IX_gbkmut_unitcode");

            entity.HasIndex(e => new { e.Transtype, e.Transsubtype, e.Freefield1, e.Project, e.StartTime, e.EndTime, e.BudVers }, "IX_prod_gbkmut");

            entity.HasIndex(e => e.Docnumber, "docnumber");

            entity.HasIndex(e => new { e.EntryGuid, e.Faktuurnr, e.Datum, e.Transtype, e.BdrHfl, e.Debnr, e.Crdnr }, "entry_invoice");

            entity.HasIndex(e => new { e.Bkjrcode, e.Reknr, e.Periode, e.Datum, e.Id }, "gbmrkp").IsUnique();

            entity.Property(e => e.Id).HasColumnName("ID");
            entity.Property(e => e.Aantal).HasColumnName("aantal");
            entity.Property(e => e.Afldat)
                .HasColumnType("datetime")
                .HasColumnName("afldat");
            entity.Property(e => e.Artcode)
                .HasMaxLength(30)
                .HasColumnName("artcode");
            entity.Property(e => e.Backflush).HasColumnName("backflush");
            entity.Property(e => e.BankTransactionGuid).HasColumnName("BankTransactionGUID");
            entity.Property(e => e.Bankacc)
                .HasMaxLength(34)
                .HasColumnName("bankacc");
            entity.Property(e => e.BdrHfl).HasColumnName("bdr_hfl");
            entity.Property(e => e.BdrVal).HasColumnName("bdr_val");
            entity.Property(e => e.Bdrkredbep).HasColumnName("bdrkredbep");
            entity.Property(e => e.Bdrkredbp2).HasColumnName("bdrkredbp2");
            entity.Property(e => e.Betaalref)
                .HasMaxLength(35)
                .HasColumnName("betaalref");
            entity.Property(e => e.Betcond)
                .HasMaxLength(2)
                .IsFixedLength()
                .HasColumnName("betcond");
            entity.Property(e => e.Bkjrcode).HasColumnName("bkjrcode");
            entity.Property(e => e.Bkstnr)
                .HasMaxLength(20)
                .HasColumnName("bkstnr");
            entity.Property(e => e.BkstnrSub)
                .HasMaxLength(20)
                .HasColumnName("bkstnr_sub");
            entity.Property(e => e.BtwBdr3).HasColumnName("btw_bdr_3");
            entity.Property(e => e.BtwCode)
                .HasMaxLength(6)
                .IsFixedLength()
                .HasColumnName("btw_code");
            entity.Property(e => e.BtwGrond).HasColumnName("btw_grond");
            entity.Property(e => e.BtwGrval).HasColumnName("btw_grval");
            entity.Property(e => e.BtwNummer)
                .HasMaxLength(20)
                .HasColumnName("btw_nummer");
            entity.Property(e => e.Btwper).HasColumnName("btwper");
            entity.Property(e => e.BudVers)
                .HasMaxLength(8)
                .IsFixedLength()
                .HasColumnName("bud_vers");
            entity.Property(e => e.CashRegisterAccount).HasMaxLength(34);
            entity.Property(e => e.CmpWwn).HasColumnName("cmp_wwn");
            entity.Property(e => e.CompCode)
                .HasMaxLength(8)
                .IsFixedLength()
                .HasColumnName("comp_code");
            entity.Property(e => e.CompanyCode)
                .HasMaxLength(3)
                .IsFixedLength();
            entity.Property(e => e.Correction)
                .HasMaxLength(6)
                .IsFixedLength();
            entity.Property(e => e.Crdnr)
                .HasMaxLength(12)
                .HasColumnName("crdnr");
            entity.Property(e => e.CurrencyAliasAc)
                .HasMaxLength(3)
                .IsFixedLength();
            entity.Property(e => e.CurrencyCode)
                .HasMaxLength(3)
                .IsFixedLength();
            entity.Property(e => e.Dagbknr)
                .HasMaxLength(10)
                .IsFixedLength()
                .HasColumnName("dagbknr");
            entity.Property(e => e.Datum)
                .HasColumnType("datetime")
                .HasColumnName("datum");
            entity.Property(e => e.DbkVerwnr).HasColumnName("dbk_verwnr");
            entity.Property(e => e.Debnr)
                .HasMaxLength(12)
                .HasColumnName("debnr");
            entity.Property(e => e.DocAttachmentId).HasColumnName("DocAttachmentID");
            entity.Property(e => e.Docdate)
                .HasColumnType("datetime")
                .HasColumnName("docdate");
            entity.Property(e => e.Docnumber)
                .HasMaxLength(30)
                .HasColumnName("docnumber");
            entity.Property(e => e.DocumentId).HasColumnName("DocumentID");
            entity.Property(e => e.EndTime).HasColumnType("datetime");
            entity.Property(e => e.Entryorigin)
                .HasMaxLength(1)
                .IsFixedLength()
                .HasColumnName("entryorigin");
            entity.Property(e => e.ExternalNumber).HasMaxLength(30);
            entity.Property(e => e.ExternalNumberRecordId).HasColumnName("ExternalNumberRecordID");
            entity.Property(e => e.Exvalbdr).HasColumnName("exvalbdr");
            entity.Property(e => e.Exvalcode)
                .HasMaxLength(3)
                .IsFixedLength()
                .HasColumnName("exvalcode");
            entity.Property(e => e.Facode)
                .HasMaxLength(20)
                .HasColumnName("facode");
            entity.Property(e => e.Faktuurnr)
                .HasMaxLength(8)
                .IsFixedLength()
                .HasColumnName("faktuurnr");
            entity.Property(e => e.Freefield1)
                .HasMaxLength(75)
                .HasColumnName("freefield1");
            entity.Property(e => e.Freefield2)
                .HasMaxLength(75)
                .HasColumnName("freefield2");
            entity.Property(e => e.Freefield3)
                .HasMaxLength(75)
                .HasColumnName("freefield3");
            entity.Property(e => e.Freefield4).HasColumnName("freefield4");
            entity.Property(e => e.Freefield5).HasColumnName("freefield5");
            entity.Property(e => e.IbtdeliveryNr)
                .HasMaxLength(8)
                .HasColumnName("IBTDeliveryNr");
            entity.Property(e => e.ImSerialNr).HasMaxLength(22);
            entity.Property(e => e.ImportationNr)
                .HasMaxLength(8)
                .IsFixedLength();
            entity.Property(e => e.IntArea).HasMaxLength(10);
            entity.Property(e => e.IntDeliveryMethod).HasMaxLength(10);
            entity.Property(e => e.IntLandAssembly).HasMaxLength(3);
            entity.Property(e => e.IntLandDestOrig).HasMaxLength(3);
            entity.Property(e => e.IntLandIso)
                .HasMaxLength(3)
                .HasColumnName("IntLandISO");
            entity.Property(e => e.IntPort).HasMaxLength(10);
            entity.Property(e => e.IntStandardCode).HasMaxLength(10);
            entity.Property(e => e.IntStatNr).HasMaxLength(9);
            entity.Property(e => e.IntSystem).HasMaxLength(10);
            entity.Property(e => e.IntTransA).HasMaxLength(10);
            entity.Property(e => e.IntTransB).HasMaxLength(10);
            entity.Property(e => e.IntTransShipment).HasMaxLength(10);
            entity.Property(e => e.IntTransportMethod).HasMaxLength(10);
            entity.Property(e => e.Koers).HasColumnName("koers");
            entity.Property(e => e.Koers3).HasColumnName("koers3");
            entity.Property(e => e.Kredbep)
                .HasMaxLength(1)
                .IsFixedLength()
                .HasColumnName("kredbep");
            entity.Property(e => e.Kstdrcode)
                .HasMaxLength(10)
                .IsFixedLength()
                .HasColumnName("kstdrcode");
            entity.Property(e => e.Kstplcode)
                .HasMaxLength(10)
                .IsFixedLength()
                .HasColumnName("kstplcode");
            entity.Property(e => e.LastReminderDate).HasColumnType("datetime");
            entity.Property(e => e.LastReminderLayout).HasMaxLength(8);
            entity.Property(e => e.Oms25)
                .HasMaxLength(60)
                .HasColumnName("oms25");
            entity.Property(e => e.Oorsprong)
                .HasMaxLength(1)
                .IsFixedLength()
                .HasColumnName("oorsprong");
            entity.Property(e => e.Operation).HasMaxLength(10);
            entity.Property(e => e.Orderdebtor).HasColumnName("orderdebtor");
            entity.Property(e => e.OriginalQuantity).HasColumnName("Original_Quantity");
            entity.Property(e => e.PaymentMethod)
                .HasMaxLength(1)
                .HasDefaultValueSql("((0))")
                .IsFixedLength();
            entity.Property(e => e.PayrollSubtype)
                .HasMaxLength(4)
                .IsFixedLength();
            entity.Property(e => e.Periode)
                .HasMaxLength(3)
                .IsFixedLength()
                .HasColumnName("periode");
            entity.Property(e => e.Pricelist).HasMaxLength(15);
            entity.Property(e => e.Project)
                .HasMaxLength(20)
                .HasColumnName("project");
            entity.Property(e => e.Raplist)
                .HasMaxLength(6)
                .IsFixedLength()
                .HasColumnName("raplist");
            entity.Property(e => e.Rapnr)
                .HasMaxLength(6)
                .IsFixedLength()
                .HasColumnName("rapnr");
            entity.Property(e => e.Reasoncode).HasMaxLength(30);
            entity.Property(e => e.Regel)
                .HasMaxLength(4)
                .IsFixedLength()
                .HasColumnName("regel");
            entity.Property(e => e.Regelcode)
                .HasMaxLength(1)
                .IsFixedLength()
                .HasColumnName("regelcode");
            entity.Property(e => e.Reknr)
                .HasMaxLength(9)
                .IsFixedLength()
                .HasColumnName("reknr");
            entity.Property(e => e.ReportingDate).HasColumnType("datetime");
            entity.Property(e => e.ResId).HasColumnName("res_id");
            entity.Property(e => e.RevaluationCurrency)
                .HasMaxLength(3)
                .IsFixedLength();
            entity.Property(e => e.Routing).HasMaxLength(10);
            entity.Property(e => e.Selcode)
                .HasMaxLength(2)
                .IsFixedLength();
            entity.Property(e => e.Shipment).HasMaxLength(30);
            entity.Property(e => e.StartTime).HasColumnType("datetime");
            entity.Property(e => e.StatNr).HasColumnName("stat_nr");
            entity.Property(e => e.StockTrackingNumber)
                .HasMaxLength(8)
                .IsFixedLength();
            entity.Property(e => e.Storno).HasColumnName("storno");
            entity.Property(e => e.Syscreated)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("syscreated");
            entity.Property(e => e.Syscreator).HasColumnName("syscreator");
            entity.Property(e => e.Sysguid)
                .HasDefaultValueSql("(newid())")
                .HasColumnName("sysguid");
            entity.Property(e => e.Sysmodified)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("sysmodified");
            entity.Property(e => e.Sysmodifier).HasColumnName("sysmodifier");
            entity.Property(e => e.TaxCode2)
                .HasMaxLength(3)
                .IsFixedLength();
            entity.Property(e => e.TaxCode3)
                .HasMaxLength(3)
                .IsFixedLength();
            entity.Property(e => e.TaxCode4)
                .HasMaxLength(3)
                .IsFixedLength();
            entity.Property(e => e.TaxCode5)
                .HasMaxLength(3)
                .IsFixedLength();
            entity.Property(e => e.Tegreknr)
                .HasMaxLength(9)
                .IsFixedLength()
                .HasColumnName("tegreknr");
            entity.Property(e => e.Timestamp)
                .IsRowVersion()
                .IsConcurrencyToken()
                .HasColumnName("timestamp");
            entity.Property(e => e.TransactionGuid).HasDefaultValueSql("(newid())");
            entity.Property(e => e.TransactionNumber).HasMaxLength(20);
            entity.Property(e => e.Transsubtype)
                .HasMaxLength(1)
                .HasDefaultValue("N")
                .IsFixedLength()
                .HasColumnName("transsubtype");
            entity.Property(e => e.Transtype)
                .HasMaxLength(1)
                .HasDefaultValue("N")
                .IsFixedLength()
                .HasColumnName("transtype");
            entity.Property(e => e.Unitcode)
                .HasMaxLength(8)
                .IsFixedLength();
            entity.Property(e => e.Valcode)
                .HasMaxLength(3)
                .IsFixedLength()
                .HasColumnName("valcode");
            entity.Property(e => e.Vervdatfak)
                .HasColumnType("datetime")
                .HasColumnName("vervdatfak");
            entity.Property(e => e.Vervdatkrd)
                .HasColumnType("datetime")
                .HasColumnName("vervdatkrd");
            entity.Property(e => e.Vervdtkrd2)
                .HasColumnType("datetime")
                .HasColumnName("vervdtkrd2");
            entity.Property(e => e.Verwerknrl).HasColumnName("verwerknrl");
            entity.Property(e => e.VlgnGbk2)
                .HasMaxLength(30)
                .HasColumnName("vlgn_gbk2");
            entity.Property(e => e.Volgnr5)
                .HasMaxLength(5)
                .IsFixedLength()
                .HasColumnName("volgnr5");
            entity.Property(e => e.Warehouse)
                .HasMaxLength(4)
                .IsFixedLength()
                .HasColumnName("warehouse");
            entity.Property(e => e.WarehouseLocation)
                .HasMaxLength(10)
                .IsFixedLength()
                .HasColumnName("warehouse_location");
            entity.Property(e => e.Wisselkrs).HasColumnName("wisselkrs");
        });

        modelBuilder.Entity<GlhistoryMap>(entity =>
        {
            entity.ToTable("GLHistoryMaps");

            entity.Property(e => e.Id).HasColumnName("ID");
            entity.Property(e => e.Created)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime");
            entity.Property(e => e.Division)
                .HasMaxLength(3)
                .IsFixedLength();
            entity.Property(e => e.DivisionGl)
                .HasMaxLength(9)
                .IsFixedLength()
                .HasColumnName("DivisionGL");
            entity.Property(e => e.HistoricalDate).HasColumnType("datetime");
            entity.Property(e => e.Modified)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime");
            entity.Property(e => e.Parent)
                .HasMaxLength(3)
                .IsFixedLength();
            entity.Property(e => e.ParentGl)
                .HasMaxLength(9)
                .IsFixedLength()
                .HasColumnName("ParentGL");
            entity.Property(e => e.ParentPeriod)
                .HasMaxLength(3)
                .IsFixedLength();
        });

        modelBuilder.Entity<Glmap>(entity =>
        {
            entity.ToTable("GLMaps");

            entity.HasIndex(e => new { e.Division, e.Parent, e.ParentYear, e.ParentPeriod }, "IX_GLMaps_GetGLMaps");

            entity.HasIndex(e => new { e.Division, e.DivisionGl, e.Parent, e.ParentYear, e.ParentPeriod }, "IX_GLMaps_GetParentGL").IsUnique();

            entity.Property(e => e.Id).HasColumnName("ID");
            entity.Property(e => e.Created)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime");
            entity.Property(e => e.Division)
                .HasMaxLength(3)
                .IsFixedLength();
            entity.Property(e => e.DivisionGl)
                .HasMaxLength(9)
                .IsFixedLength()
                .HasColumnName("DivisionGL");
            entity.Property(e => e.HistoricalDate).HasColumnType("datetime");
            entity.Property(e => e.Modified)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime");
            entity.Property(e => e.Parent)
                .HasMaxLength(3)
                .IsFixedLength();
            entity.Property(e => e.ParentGl)
                .HasMaxLength(9)
                .IsFixedLength()
                .HasColumnName("ParentGL");
            entity.Property(e => e.ParentPeriod)
                .HasMaxLength(3)
                .IsFixedLength();
        });

        modelBuilder.Entity<GroupMember>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__GroupMem__3214EC27B626D5BA");

            entity.ToTable("GroupMember");

            entity.HasIndex(e => e.GroupId, "IX_GroupMember_GroupID");

            entity.Property(e => e.Id)
                .ValueGeneratedNever()
                .HasColumnName("ID");
            entity.Property(e => e.GroupId).HasColumnName("GroupID");
            entity.Property(e => e.MemberId).HasColumnName("MemberID");
        });

        modelBuilder.Entity<GroupPolicy>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__GroupPol__3214EC27AEC438CE");

            entity.ToTable("GroupPolicy");

            entity.HasIndex(e => e.GroupId, "IX_GroupPolicy_GroupID");

            entity.Property(e => e.Id)
                .ValueGeneratedNever()
                .HasColumnName("ID");
            entity.Property(e => e.GroupId).HasColumnName("GroupID");
        });

        modelBuilder.Entity<Grtbk>(entity =>
        {
            entity.HasKey(e => e.Id).IsClustered(false);

            entity.ToTable("grtbk");

            entity.HasIndex(e => e.Oms250, "GLDecription_0");

            entity.HasIndex(e => e.Oms251, "GLDecription_1");

            entity.HasIndex(e => e.Oms252, "GLDecription_2");

            entity.HasIndex(e => e.Oms253, "GLDecription_3");

            entity.HasIndex(e => e.Oms254, "GLDecription_4");

            entity.HasIndex(e => new { e.Omzrek, e.Reknr }, "IX_GLSubType");

            entity.HasIndex(e => e.AccountCode, "IX_grtbk_AccountCode");

            entity.HasIndex(e => new { e.CompanyCode, e.Reknr }, "IX_grtbk_Clustered")
                .IsUnique()
                .IsClustered();

            entity.HasIndex(e => new { e.ReknrL, e.Id }, "gbkrek");

            entity.HasIndex(e => e.Reknr, "grtbk");

            entity.Property(e => e.Id).HasColumnName("ID");
            entity.Property(e => e.Aandacht).HasColumnName("aandacht");
            entity.Property(e => e.Aantallen).HasColumnName("aantallen");
            entity.Property(e => e.AccountCode)
                .HasMaxLength(9)
                .IsFixedLength();
            entity.Property(e => e.ActRek).HasColumnName("act_rek");
            entity.Property(e => e.AfletMut).HasColumnName("aflet_mut");
            entity.Property(e => e.Afletteren).HasColumnName("afletteren");
            entity.Property(e => e.Afsreknr)
                .HasMaxLength(9)
                .IsFixedLength()
                .HasColumnName("afsreknr");
            entity.Property(e => e.Alternativeledger)
                .HasMaxLength(30)
                .HasColumnName("alternativeledger");
            entity.Property(e => e.AnalytAcc).HasColumnName("analyt_acc");
            entity.Property(e => e.AssociateGl)
                .HasMaxLength(9)
                .IsFixedLength()
                .HasColumnName("AssociateGL");
            entity.Property(e => e.BalVw)
                .HasMaxLength(1)
                .IsFixedLength()
                .HasColumnName("bal_vw");
            entity.Property(e => e.BkjrMut).HasColumnName("bkjr_mut");
            entity.Property(e => e.Bkjrcode).HasColumnName("bkjrcode");
            entity.Property(e => e.Blokkeer).HasColumnName("blokkeer");
            entity.Property(e => e.Blznr).HasColumnName("blznr");
            entity.Property(e => e.BtwCode)
                .HasMaxLength(3)
                .IsFixedLength()
                .HasColumnName("btw_code");
            entity.Property(e => e.CentrAccount)
                .HasMaxLength(1)
                .IsFixedLength()
                .HasColumnName("centr_account");
            entity.Property(e => e.Class01)
                .HasMaxLength(30)
                .HasColumnName("Class_01");
            entity.Property(e => e.Class02)
                .HasMaxLength(30)
                .HasColumnName("Class_02");
            entity.Property(e => e.Class03)
                .HasMaxLength(30)
                .HasColumnName("Class_03");
            entity.Property(e => e.Class04)
                .HasMaxLength(30)
                .HasColumnName("Class_04");
            entity.Property(e => e.Class05)
                .HasMaxLength(30)
                .HasColumnName("Class_05");
            entity.Property(e => e.Class06)
                .HasMaxLength(30)
                .HasColumnName("Class_06");
            entity.Property(e => e.Class07)
                .HasMaxLength(30)
                .HasColumnName("Class_07");
            entity.Property(e => e.Class08)
                .HasMaxLength(30)
                .HasColumnName("Class_08");
            entity.Property(e => e.Class09)
                .HasMaxLength(30)
                .HasColumnName("Class_09");
            entity.Property(e => e.Class10)
                .HasMaxLength(30)
                .HasColumnName("Class_10");
            entity.Property(e => e.Class11)
                .HasMaxLength(30)
                .HasColumnName("Class_11");
            entity.Property(e => e.Class12)
                .HasMaxLength(30)
                .HasColumnName("Class_12");
            entity.Property(e => e.CompanyCode)
                .HasMaxLength(3)
                .IsFixedLength();
            entity.Property(e => e.Debcrd)
                .HasMaxLength(1)
                .IsFixedLength()
                .HasColumnName("debcrd");
            entity.Property(e => e.DocumentId).HasColumnName("DocumentID");
            entity.Property(e => e.ExcludeVatlisting).HasColumnName("ExcludeVATListing");
            entity.Property(e => e.Freefield1)
                .HasMaxLength(75)
                .HasColumnName("freefield1");
            entity.Property(e => e.Freefield10)
                .HasMaxLength(75)
                .HasColumnName("freefield10");
            entity.Property(e => e.Freefield11).HasColumnName("freefield11");
            entity.Property(e => e.Freefield12).HasColumnName("freefield12");
            entity.Property(e => e.Freefield13).HasColumnName("freefield13");
            entity.Property(e => e.Freefield14).HasColumnName("freefield14");
            entity.Property(e => e.Freefield15).HasColumnName("freefield15");
            entity.Property(e => e.Freefield16).HasColumnName("freefield16");
            entity.Property(e => e.Freefield17).HasColumnName("freefield17");
            entity.Property(e => e.Freefield18).HasColumnName("freefield18");
            entity.Property(e => e.Freefield19).HasColumnName("freefield19");
            entity.Property(e => e.Freefield2)
                .HasMaxLength(75)
                .HasColumnName("freefield2");
            entity.Property(e => e.Freefield20).HasColumnName("freefield20");
            entity.Property(e => e.Freefield3)
                .HasMaxLength(75)
                .HasColumnName("freefield3");
            entity.Property(e => e.Freefield4)
                .HasMaxLength(75)
                .HasColumnName("freefield4");
            entity.Property(e => e.Freefield5)
                .HasMaxLength(75)
                .HasColumnName("freefield5");
            entity.Property(e => e.Freefield6)
                .HasMaxLength(75)
                .HasColumnName("freefield6");
            entity.Property(e => e.Freefield7)
                .HasMaxLength(75)
                .HasColumnName("freefield7");
            entity.Property(e => e.Freefield8)
                .HasMaxLength(75)
                .HasColumnName("freefield8");
            entity.Property(e => e.Freefield9)
                .HasMaxLength(75)
                .HasColumnName("freefield9");
            entity.Property(e => e.Gbktext).HasColumnName("gbktext");
            entity.Property(e => e.Herwaard).HasColumnName("herwaard");
            entity.Property(e => e.IntBalanceDebit)
                .HasMaxLength(9)
                .IsFixedLength();
            entity.Property(e => e.Kstdrrek).HasColumnName("kstdrrek");
            entity.Property(e => e.Kstplrek).HasColumnName("kstplrek");
            entity.Property(e => e.Mineraal)
                .HasMaxLength(1)
                .IsFixedLength()
                .HasColumnName("mineraal");
            entity.Property(e => e.OffBalSubClassCredit)
                .HasMaxLength(3)
                .IsFixedLength();
            entity.Property(e => e.Oms250)
                .HasMaxLength(60)
                .HasColumnName("oms25_0");
            entity.Property(e => e.Oms251)
                .HasMaxLength(60)
                .HasColumnName("oms25_1");
            entity.Property(e => e.Oms252)
                .HasMaxLength(60)
                .HasColumnName("oms25_2");
            entity.Property(e => e.Oms253)
                .HasMaxLength(60)
                .HasColumnName("oms25_3");
            entity.Property(e => e.Oms254)
                .HasMaxLength(60)
                .HasColumnName("oms25_4");
            entity.Property(e => e.Omzrek)
                .HasMaxLength(1)
                .IsFixedLength()
                .HasColumnName("omzrek");
            entity.Property(e => e.PercNaf).HasColumnName("perc_naf");
            entity.Property(e => e.PercPrive).HasColumnName("perc_prive");
            entity.Property(e => e.Prnbifunc).HasColumnName("prnbifunc");
            entity.Property(e => e.Projectrek).HasColumnName("projectrek");
            entity.Property(e => e.Reknr)
                .HasMaxLength(9)
                .IsFixedLength()
                .HasColumnName("reknr");
            entity.Property(e => e.Reknr2)
                .HasMaxLength(9)
                .IsFixedLength()
                .HasColumnName("reknr_2");
            entity.Property(e => e.ReknrL)
                .HasMaxLength(9)
                .IsFixedLength()
                .HasColumnName("reknr_l");
            entity.Property(e => e.ReknrNaf)
                .HasMaxLength(9)
                .IsFixedLength()
                .HasColumnName("reknr_naf");
            entity.Property(e => e.ReknrPriv)
                .HasMaxLength(9)
                .IsFixedLength()
                .HasColumnName("reknr_priv");
            entity.Property(e => e.SchemeType)
                .HasMaxLength(1)
                .IsFixedLength()
                .HasColumnName("scheme_type");
            entity.Property(e => e.Statusdate)
                .HasColumnType("datetime")
                .HasColumnName("statusdate");
            entity.Property(e => e.StdKstdr)
                .HasMaxLength(8)
                .IsFixedLength()
                .HasColumnName("std_kstdr");
            entity.Property(e => e.StdKstpl)
                .HasMaxLength(8)
                .IsFixedLength()
                .HasColumnName("std_kstpl");
            entity.Property(e => e.SubclassPass)
                .HasMaxLength(3)
                .IsFixedLength()
                .HasColumnName("subclass_pass");
            entity.Property(e => e.Subtotrek)
                .HasMaxLength(1)
                .IsFixedLength()
                .HasColumnName("subtotrek");
            entity.Property(e => e.Syscreated)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("syscreated");
            entity.Property(e => e.Syscreator).HasColumnName("syscreator");
            entity.Property(e => e.Sysguid)
                .HasDefaultValueSql("(newid())")
                .HasColumnName("sysguid");
            entity.Property(e => e.Sysmodified)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("sysmodified");
            entity.Property(e => e.Sysmodifier).HasColumnName("sysmodifier");
            entity.Property(e => e.Timestamp)
                .IsRowVersion()
                .IsConcurrencyToken()
                .HasColumnName("timestamp");
            entity.Property(e => e.TypeAdjustmentInflation)
                .HasMaxLength(1)
                .IsFixedLength();
            entity.Property(e => e.TypeCom)
                .HasMaxLength(1)
                .IsFixedLength()
                .HasColumnName("type_com");
            entity.Property(e => e.TypeRek)
                .HasMaxLength(1)
                .IsFixedLength()
                .HasColumnName("type_rek");
            entity.Property(e => e.TypeRek2)
                .HasMaxLength(1)
                .IsFixedLength()
                .HasColumnName("type_rek2");
            entity.Property(e => e.UseCostcenterAllocation).HasDefaultValue((byte)1);
            entity.Property(e => e.UseIbactive).HasColumnName("UseIBActive");
            entity.Property(e => e.Verdicht).HasColumnName("verdicht");
            entity.Property(e => e.WijzReg).HasColumnName("wijz_reg");
            entity.Property(e => e.Wisselrek).HasColumnName("wisselrek");
        });

        modelBuilder.Entity<GuidRelation>(entity =>
        {
            entity.HasKey(e => new { e.Type, e.Parent, e.Id });

            entity.HasIndex(e => new { e.Type, e.Id }, "GuidRelations_ID");

            entity.Property(e => e.Id).HasColumnName("ID");
        });

        modelBuilder.Entity<Hashtag>(entity =>
        {
            entity.HasIndex(e => e.Name, "IX_Hahstags_Name").IsUnique();

            entity.HasIndex(e => e.TrendRatio, "IX_Hahstags_TrendRatio").IsDescending();

            entity.Property(e => e.Id)
                .HasDefaultValueSql("(newsequentialid())")
                .HasColumnName("ID");
            entity.Property(e => e.CreatedOn).HasDefaultValueSql("(getdate())");
            entity.Property(e => e.Name).HasMaxLength(140);
            entity.Property(e => e.TrendRatio).HasColumnType("decimal(10, 4)");
        });

        modelBuilder.Entity<HashtagReference>(entity =>
        {
            entity.HasIndex(e => e.CreatedOn, "IX_HashtagReferences_CreatedOn").IsDescending();

            entity.HasIndex(e => new { e.EntityId, e.EntityType }, "IX_HashtagReferences_Entity");

            entity.HasIndex(e => e.HashtagId, "IX_HashtagReferences_HashtagID");

            entity.HasIndex(e => e.ModifiedOn, "IX_HashtagReferences_ModifiedOn").IsDescending();

            entity.Property(e => e.Id)
                .HasDefaultValueSql("(newsequentialid())")
                .HasColumnName("ID");
            entity.Property(e => e.EntityId).HasColumnName("EntityID");
            entity.Property(e => e.HashtagId).HasColumnName("HashtagID");
        });

        modelBuilder.Entity<HourEntryDraft>(entity =>
        {
            entity.ToTable("HourEntryDraft");

            entity.Property(e => e.Id)
                .ValueGeneratedNever()
                .HasColumnName("ID");
            entity.Property(e => e.AmountFc).HasColumnName("AmountFC");
            entity.Property(e => e.AmountFcactual).HasColumnName("AmountFCActual");
            entity.Property(e => e.Created).HasColumnType("datetime");
            entity.Property(e => e.Currency)
                .HasMaxLength(3)
                .IsFixedLength();
            entity.Property(e => e.CustomerId).HasColumnName("CustomerID");
            entity.Property(e => e.Description).HasMaxLength(255);
            entity.Property(e => e.DocumentId).HasColumnName("DocumentID");
            entity.Property(e => e.EmpId).HasColumnName("EmpID");
            entity.Property(e => e.ItemCode).HasMaxLength(30);
            entity.Property(e => e.Modified).HasColumnType("datetime");
            entity.Property(e => e.Product).HasMaxLength(30);
            entity.Property(e => e.ProjectNumber).HasMaxLength(20);
            entity.Property(e => e.StartDate).HasColumnType("datetime");
        });

        modelBuilder.Entity<HourEntryFavourite>(entity =>
        {
            entity.HasIndex(e => new { e.EmployeeId, e.Section }, "IX_HourEntryFavourites_EmployeeID_Section");

            entity.Property(e => e.Id)
                .HasDefaultValueSql("(newsequentialid())")
                .HasColumnName("ID");
            entity.Property(e => e.CustomerId).HasColumnName("CustomerID");
            entity.Property(e => e.DeliverableCode).HasMaxLength(30);
            entity.Property(e => e.Description).HasMaxLength(255);
            entity.Property(e => e.EmployeeId).HasColumnName("EmployeeID");
            entity.Property(e => e.ItemCode).HasMaxLength(30);
            entity.Property(e => e.ProjectNumber).HasMaxLength(20);
            entity.Property(e => e.SettingName).HasMaxLength(60);
            entity.Property(e => e.Syscreated)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("syscreated");
            entity.Property(e => e.Syscreator).HasColumnName("syscreator");
            entity.Property(e => e.Sysmodified)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("sysmodified");
            entity.Property(e => e.Sysmodifier).HasColumnName("sysmodifier");
        });

        modelBuilder.Entity<HrcompResource>(entity =>
        {
            entity.ToTable("hrcomp_resource");

            entity.HasIndex(e => new { e.ResId, e.CompCode, e.Id }, "CompcodeResID");

            entity.HasIndex(e => new { e.CompCode, e.ResId, e.Startdate }, "CompcodeStartdate");

            entity.HasIndex(e => e.Creditor, "ix_creditor");

            entity.Property(e => e.Id).HasColumnName("ID");
            entity.Property(e => e.Amount).HasColumnName("amount");
            entity.Property(e => e.Bankaccount)
                .HasMaxLength(34)
                .HasColumnName("bankaccount");
            entity.Property(e => e.CompCode)
                .HasMaxLength(8)
                .IsFixedLength()
                .HasColumnName("comp_code");
            entity.Property(e => e.CompanyCode)
                .HasMaxLength(3)
                .IsFixedLength();
            entity.Property(e => e.ComponentGuid).HasDefaultValueSql("(newid())");
            entity.Property(e => e.Contract).HasColumnName("contract");
            entity.Property(e => e.CountryChar1)
                .HasMaxLength(1)
                .IsFixedLength()
                .HasColumnName("Country_char1");
            entity.Property(e => e.CountryChar2)
                .HasMaxLength(1)
                .IsFixedLength()
                .HasColumnName("Country_char2");
            entity.Property(e => e.CountryChar3)
                .HasMaxLength(1)
                .IsFixedLength()
                .HasColumnName("Country_char3");
            entity.Property(e => e.CountryDate1)
                .HasColumnType("datetime")
                .HasColumnName("Country_date1");
            entity.Property(e => e.CountryDate2)
                .HasColumnType("datetime")
                .HasColumnName("Country_date2");
            entity.Property(e => e.CountryFloat1).HasColumnName("Country_float1");
            entity.Property(e => e.CountryFloat2).HasColumnName("Country_float2");
            entity.Property(e => e.CountryFloat3).HasColumnName("Country_float3");
            entity.Property(e => e.CountryFloat4).HasColumnName("Country_float4");
            entity.Property(e => e.CountryFloat5).HasColumnName("Country_float5");
            entity.Property(e => e.CountryNy1).HasColumnName("Country_ny1");
            entity.Property(e => e.CountryNy2).HasColumnName("Country_ny2");
            entity.Property(e => e.CountryNy3).HasColumnName("Country_ny3");
            entity.Property(e => e.Creditor)
                .HasMaxLength(6)
                .IsFixedLength()
                .HasColumnName("creditor");
            entity.Property(e => e.CreditorAccount)
                .HasMaxLength(9)
                .IsFixedLength()
                .HasColumnName("creditor_account");
            entity.Property(e => e.CreditorCostcenter)
                .HasMaxLength(8)
                .IsFixedLength()
                .HasColumnName("creditor_costcenter");
            entity.Property(e => e.CreditorCostunit)
                .HasMaxLength(8)
                .IsFixedLength()
                .HasColumnName("creditor_costunit");
            entity.Property(e => e.Currency)
                .HasMaxLength(3)
                .IsFixedLength();
            entity.Property(e => e.DeviatingDescr50)
                .HasMaxLength(50)
                .HasColumnName("deviating_descr50");
            entity.Property(e => e.DocAttachmentId).HasColumnName("DocAttachmentID");
            entity.Property(e => e.Enddate)
                .HasColumnType("datetime")
                .HasColumnName("enddate");
            entity.Property(e => e.Hourlywage).HasColumnName("hourlywage");
            entity.Property(e => e.JobTitle)
                .HasMaxLength(12)
                .HasColumnName("Job_title");
            entity.Property(e => e.LedgerAccount)
                .HasMaxLength(9)
                .IsFixedLength()
                .HasColumnName("ledger_account");
            entity.Property(e => e.LedgerCostcenter)
                .HasMaxLength(8)
                .IsFixedLength()
                .HasColumnName("ledger_costcenter");
            entity.Property(e => e.LedgerCostunit)
                .HasMaxLength(8)
                .IsFixedLength()
                .HasColumnName("ledger_costunit");
            entity.Property(e => e.LocalCode)
                .HasMaxLength(4)
                .IsFixedLength();
            entity.Property(e => e.Notes).HasColumnName("notes");
            entity.Property(e => e.Number).HasColumnName("number");
            entity.Property(e => e.NumberDaysPeriod).HasColumnName("number_days_period");
            entity.Property(e => e.PaidBy)
                .HasMaxLength(1)
                .IsFixedLength()
                .HasColumnName("paid_by");
            entity.Property(e => e.Percentage).HasColumnName("percentage");
            entity.Property(e => e.Project).HasMaxLength(20);
            entity.Property(e => e.ReferenceCode)
                .HasMaxLength(8)
                .IsFixedLength();
            entity.Property(e => e.ReferenceNr1).HasMaxLength(20);
            entity.Property(e => e.ReferenceNr2).HasMaxLength(20);
            entity.Property(e => e.ResId).HasColumnName("res_id");
            entity.Property(e => e.SalaryScale).HasMaxLength(10);
            entity.Property(e => e.Scale)
                .HasMaxLength(9)
                .IsFixedLength();
            entity.Property(e => e.Startdate)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("startdate");
            entity.Property(e => e.StateCode)
                .HasMaxLength(3)
                .IsFixedLength();
            entity.Property(e => e.Syscreated)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("syscreated");
            entity.Property(e => e.Syscreator).HasColumnName("syscreator");
            entity.Property(e => e.Sysguid)
                .HasDefaultValueSql("(newid())")
                .HasColumnName("sysguid");
            entity.Property(e => e.Sysmodified)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("sysmodified");
            entity.Property(e => e.Sysmodifier).HasColumnName("sysmodifier");
            entity.Property(e => e.Timestamp)
                .IsRowVersion()
                .IsConcurrencyToken()
                .HasColumnName("timestamp");
        });

        modelBuilder.Entity<HrcompTran>(entity =>
        {
            entity.ToTable("hrcomp_trans");

            entity.HasIndex(e => e.DeclarationDate, "IX_declaration_date");

            entity.HasIndex(e => e.ComponentGuid, "ix_compguid");

            entity.HasIndex(e => e.Creditor, "ix_creditor");

            entity.HasIndex(e => new { e.PayrollYear, e.Period, e.ResId, e.CompType, e.CompSubType, e.CompCode, e.Status, e.RunNumber, e.LedgerCostcenter }, "ix_status");

            entity.Property(e => e.Id).HasColumnName("ID");
            entity.Property(e => e.AmountCosts).HasColumnName("amount_costs");
            entity.Property(e => e.AmountToBePaid).HasColumnName("amount_to_be_paid");
            entity.Property(e => e.Bankaccount)
                .HasMaxLength(34)
                .HasColumnName("bankaccount");
            entity.Property(e => e.BaseValue).HasColumnName("base_value");
            entity.Property(e => e.CalcCountryFloat1).HasColumnName("calc_country_float1");
            entity.Property(e => e.CalcCountryFloat2).HasColumnName("calc_country_float2");
            entity.Property(e => e.CalcCountryFloat3).HasColumnName("calc_country_float3");
            entity.Property(e => e.Calculationdate)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("calculationdate");
            entity.Property(e => e.CompCode)
                .HasMaxLength(8)
                .IsFixedLength()
                .HasColumnName("comp_code");
            entity.Property(e => e.CompSubType)
                .HasMaxLength(4)
                .IsFixedLength()
                .HasColumnName("comp_sub_type");
            entity.Property(e => e.CompType)
                .HasMaxLength(1)
                .IsFixedLength()
                .HasColumnName("comp_type");
            entity.Property(e => e.Companycode)
                .HasMaxLength(3)
                .IsFixedLength()
                .HasColumnName("companycode");
            entity.Property(e => e.Contract).HasColumnName("contract");
            entity.Property(e => e.Country)
                .HasMaxLength(3)
                .IsFixedLength()
                .HasColumnName("country");
            entity.Property(e => e.CountryChar1)
                .HasMaxLength(1)
                .IsFixedLength()
                .HasColumnName("country_char1");
            entity.Property(e => e.CountryChar2)
                .HasMaxLength(1)
                .IsFixedLength()
                .HasColumnName("country_char2");
            entity.Property(e => e.CountryChar3)
                .HasMaxLength(1)
                .IsFixedLength()
                .HasColumnName("country_char3");
            entity.Property(e => e.CountryChar4)
                .HasMaxLength(1)
                .IsFixedLength()
                .HasColumnName("country_char4");
            entity.Property(e => e.CountryChar5)
                .HasMaxLength(1)
                .IsFixedLength()
                .HasColumnName("country_char5");
            entity.Property(e => e.CountryChar6)
                .HasMaxLength(1)
                .IsFixedLength()
                .HasColumnName("country_char6");
            entity.Property(e => e.CountryChar7)
                .HasMaxLength(1)
                .IsFixedLength()
                .HasColumnName("country_char7");
            entity.Property(e => e.CountryChar8)
                .HasMaxLength(1)
                .IsFixedLength()
                .HasColumnName("country_char8");
            entity.Property(e => e.CountryChar9)
                .HasMaxLength(1)
                .IsFixedLength()
                .HasColumnName("country_char9");
            entity.Property(e => e.CountryFloat1).HasColumnName("country_float1");
            entity.Property(e => e.CountryFloat2).HasColumnName("country_float2");
            entity.Property(e => e.CountryFloat3).HasColumnName("country_float3");
            entity.Property(e => e.CountryFloat4).HasColumnName("country_float4");
            entity.Property(e => e.CountryFloat5).HasColumnName("country_float5");
            entity.Property(e => e.CountryFloat6).HasColumnName("country_float6");
            entity.Property(e => e.CountryNy1).HasColumnName("country_ny1");
            entity.Property(e => e.CountryNy10).HasColumnName("country_ny10");
            entity.Property(e => e.CountryNy11).HasColumnName("country_ny11");
            entity.Property(e => e.CountryNy12).HasColumnName("country_ny12");
            entity.Property(e => e.CountryNy13).HasColumnName("country_ny13");
            entity.Property(e => e.CountryNy14).HasColumnName("country_ny14");
            entity.Property(e => e.CountryNy15).HasColumnName("country_ny15");
            entity.Property(e => e.CountryNy16).HasColumnName("country_ny16");
            entity.Property(e => e.CountryNy17).HasColumnName("country_ny17");
            entity.Property(e => e.CountryNy18).HasColumnName("country_ny18");
            entity.Property(e => e.CountryNy2).HasColumnName("country_ny2");
            entity.Property(e => e.CountryNy3).HasColumnName("country_ny3");
            entity.Property(e => e.CountryNy4).HasColumnName("country_ny4");
            entity.Property(e => e.CountryNy5).HasColumnName("country_ny5");
            entity.Property(e => e.CountryNy6).HasColumnName("country_ny6");
            entity.Property(e => e.CountryNy7).HasColumnName("country_ny7");
            entity.Property(e => e.CountryNy8).HasColumnName("country_ny8");
            entity.Property(e => e.CountryNy9).HasColumnName("country_ny9");
            entity.Property(e => e.CountryString1)
                .HasMaxLength(75)
                .HasColumnName("country_string1");
            entity.Property(e => e.Creditor)
                .HasMaxLength(6)
                .IsFixedLength()
                .HasColumnName("creditor");
            entity.Property(e => e.CreditorAccount)
                .HasMaxLength(9)
                .IsFixedLength()
                .HasColumnName("creditor_account");
            entity.Property(e => e.CreditorCostcenter)
                .HasMaxLength(8)
                .IsFixedLength()
                .HasColumnName("creditor_costcenter");
            entity.Property(e => e.CreditorCostunit)
                .HasMaxLength(8)
                .IsFixedLength()
                .HasColumnName("creditor_costunit");
            entity.Property(e => e.Currency)
                .HasMaxLength(3)
                .IsFixedLength()
                .HasColumnName("currency");
            entity.Property(e => e.DeclarationDate)
                .HasColumnType("datetime")
                .HasColumnName("declaration_date");
            entity.Property(e => e.DeclarationMade).HasColumnName("declaration_made");
            entity.Property(e => e.DeclarationNumber)
                .HasMaxLength(15)
                .HasColumnName("declaration_number");
            entity.Property(e => e.DeclarationPeriod).HasColumnName("declaration_period");
            entity.Property(e => e.DeclarationSequence).HasColumnName("declaration_sequence");
            entity.Property(e => e.DeviatingDescr50)
                .HasMaxLength(50)
                .HasColumnName("deviating_descr50");
            entity.Property(e => e.DocAttachmentId).HasColumnName("DocAttachmentID");
            entity.Property(e => e.EntryAmount).HasColumnName("entry_amount");
            entity.Property(e => e.EntryPercentage).HasColumnName("entry_percentage");
            entity.Property(e => e.Entryorigin)
                .HasMaxLength(1)
                .IsFixedLength()
                .HasColumnName("entryorigin");
            entity.Property(e => e.Formulafield)
                .HasMaxLength(2000)
                .HasColumnName("formulafield");
            entity.Property(e => e.Hourlywage).HasColumnName("hourlywage");
            entity.Property(e => e.ItemCode).HasMaxLength(30);
            entity.Property(e => e.LedgerAccount)
                .HasMaxLength(9)
                .IsFixedLength()
                .HasColumnName("ledger_account");
            entity.Property(e => e.LedgerCostcenter)
                .HasMaxLength(8)
                .IsFixedLength()
                .HasColumnName("ledger_costcenter");
            entity.Property(e => e.LedgerCostunit)
                .HasMaxLength(8)
                .IsFixedLength()
                .HasColumnName("ledger_costunit");
            entity.Property(e => e.LocalCode)
                .HasMaxLength(4)
                .IsFixedLength();
            entity.Property(e => e.Notes).HasColumnName("notes");
            entity.Property(e => e.Number).HasColumnName("number");
            entity.Property(e => e.NumberDaysAbsent).HasColumnName("number_days_absent");
            entity.Property(e => e.NumberDaysComponent).HasColumnName("number_days_component");
            entity.Property(e => e.NumberDaysPeriod).HasColumnName("number_days_period");
            entity.Property(e => e.Ourreference)
                .HasMaxLength(8)
                .IsFixedLength()
                .HasColumnName("ourreference");
            entity.Property(e => e.PaidBy)
                .HasMaxLength(1)
                .IsFixedLength()
                .HasColumnName("paid_by");
            entity.Property(e => e.PaymentPeriod)
                .HasMaxLength(1)
                .IsFixedLength()
                .HasColumnName("payment_period");
            entity.Property(e => e.Period).HasColumnName("period");
            entity.Property(e => e.Project)
                .HasMaxLength(20)
                .HasColumnName("project");
            entity.Property(e => e.ReferenceNr1).HasMaxLength(20);
            entity.Property(e => e.ReferenceNr2).HasMaxLength(20);
            entity.Property(e => e.ResId).HasColumnName("res_id");
            entity.Property(e => e.RunNumber).HasDefaultValue((short)1);
            entity.Property(e => e.StateCode)
                .HasMaxLength(3)
                .IsFixedLength();
            entity.Property(e => e.Status)
                .HasMaxLength(1)
                .IsFixedLength()
                .HasColumnName("status");
            entity.Property(e => e.Syscreated)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("syscreated");
            entity.Property(e => e.Syscreator).HasColumnName("syscreator");
            entity.Property(e => e.Sysguid)
                .HasDefaultValueSql("(newid())")
                .HasColumnName("sysguid");
            entity.Property(e => e.Sysmodified)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("sysmodified");
            entity.Property(e => e.Sysmodifier).HasColumnName("sysmodifier");
            entity.Property(e => e.Timestamp)
                .IsRowVersion()
                .IsConcurrencyToken()
                .HasColumnName("timestamp");
            entity.Property(e => e.Unit)
                .HasMaxLength(1)
                .IsFixedLength()
                .HasColumnName("unit");
            entity.Property(e => e.VoidDate).HasColumnType("datetime");
            entity.Property(e => e.Yourreference)
                .HasMaxLength(30)
                .HasColumnName("yourreference");
        });

        modelBuilder.Entity<HrcompanyPeriod>(entity =>
        {
            entity.HasKey(e => e.Id)
                .HasName("PK_CompanyPeriods")
                .IsClustered(false);

            entity.ToTable("HRCompanyPeriods");

            entity.HasIndex(e => new { e.CompanyCode, e.FinYear, e.FinPeriod }, "Index1").IsClustered();

            entity.Property(e => e.Id)
                .ValueGeneratedNever()
                .HasColumnName("ID");
            entity.Property(e => e.CompanyCode)
                .HasMaxLength(3)
                .IsFixedLength();
            entity.Property(e => e.Syscreated)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("syscreated");
            entity.Property(e => e.Syscreator).HasColumnName("syscreator");
            entity.Property(e => e.Sysmodified)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("sysmodified");
            entity.Property(e => e.Sysmodifier).HasColumnName("sysmodifier");
        });

        modelBuilder.Entity<Hrcompetency>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("HRCompetencies");

            entity.HasIndex(e => e.Id, "ix_HRCompetencies").IsClustered();

            entity.Property(e => e.Description).HasMaxLength(60);
            entity.Property(e => e.Id).HasColumnName("ID");
            entity.Property(e => e.Sysmodified)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("sysmodified");
            entity.Property(e => e.Sysmodifier).HasColumnName("sysmodifier");
        });

        modelBuilder.Entity<HrcompetencyRating>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("HRCompetencyRatings");

            entity.HasIndex(e => new { e.EmpId, e.ReferenceDate, e.CompetencyId }, "ix_HRCompetencyRatings").IsClustered();

            entity.Property(e => e.CompetencyId).HasColumnName("CompetencyID");
            entity.Property(e => e.EmpId).HasColumnName("EmpID");
            entity.Property(e => e.Id).HasColumnName("ID");
            entity.Property(e => e.Rating)
                .HasMaxLength(1)
                .IsFixedLength();
            entity.Property(e => e.ReferenceDate).HasColumnType("datetime");
            entity.Property(e => e.Syscreated)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("syscreated");
            entity.Property(e => e.Syscreator).HasColumnName("syscreator");
            entity.Property(e => e.Sysmodified)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("sysmodified");
            entity.Property(e => e.Sysmodifier).HasColumnName("sysmodifier");
        });

        modelBuilder.Entity<Hrcomponent>(entity =>
        {
            entity.HasKey(e => e.Id).IsClustered(false);

            entity.ToTable("hrcomponents");

            entity.HasIndex(e => new { e.Country, e.CompCode, e.Startdate, e.CompanyCode }, "CompcodeStartdate")
                .IsUnique()
                .IsClustered();

            entity.HasIndex(e => new { e.Country, e.CompCode, e.Startdate }, "CompcodeStartdateCountry");

            entity.HasIndex(e => e.Creditor, "creditor");

            entity.Property(e => e.Id).HasColumnName("ID");
            entity.Property(e => e.Age).HasColumnName("age");
            entity.Property(e => e.Bankaccount)
                .HasMaxLength(34)
                .HasColumnName("bankaccount");
            entity.Property(e => e.Blocked)
                .HasDefaultValue((byte)1)
                .HasColumnName("blocked");
            entity.Property(e => e.CompCode)
                .HasMaxLength(8)
                .IsFixedLength()
                .HasColumnName("comp_code");
            entity.Property(e => e.CompStatus)
                .HasMaxLength(1)
                .IsFixedLength()
                .HasColumnName("comp_status");
            entity.Property(e => e.CompSubType)
                .HasMaxLength(4)
                .IsFixedLength()
                .HasColumnName("comp_sub_type");
            entity.Property(e => e.CompType)
                .HasMaxLength(1)
                .IsFixedLength()
                .HasColumnName("comp_type");
            entity.Property(e => e.CompVisible)
                .HasMaxLength(1)
                .IsFixedLength()
                .HasColumnName("comp_visible");
            entity.Property(e => e.CompanyCode)
                .HasMaxLength(3)
                .IsFixedLength();
            entity.Property(e => e.Country)
                .HasMaxLength(3)
                .IsFixedLength()
                .HasColumnName("country");
            entity.Property(e => e.CountryChar1)
                .HasMaxLength(1)
                .IsFixedLength()
                .HasColumnName("country_char1");
            entity.Property(e => e.CountryChar2)
                .HasMaxLength(1)
                .IsFixedLength()
                .HasColumnName("country_char2");
            entity.Property(e => e.CountryChar3)
                .HasMaxLength(1)
                .IsFixedLength()
                .HasColumnName("country_char3");
            entity.Property(e => e.CountryChar4)
                .HasMaxLength(1)
                .IsFixedLength()
                .HasColumnName("country_char4");
            entity.Property(e => e.CountryChar5)
                .HasMaxLength(1)
                .IsFixedLength()
                .HasColumnName("country_char5");
            entity.Property(e => e.CountryChar6)
                .HasMaxLength(1)
                .IsFixedLength()
                .HasColumnName("country_char6");
            entity.Property(e => e.CountryChar7)
                .HasMaxLength(1)
                .IsFixedLength()
                .HasColumnName("country_char7");
            entity.Property(e => e.CountryChar8)
                .HasMaxLength(1)
                .IsFixedLength()
                .HasColumnName("country_char8");
            entity.Property(e => e.CountryChar9)
                .HasMaxLength(1)
                .IsFixedLength()
                .HasColumnName("country_char9");
            entity.Property(e => e.CountryFloat1).HasColumnName("country_float1");
            entity.Property(e => e.CountryFloat10).HasColumnName("Country_float10");
            entity.Property(e => e.CountryFloat11).HasColumnName("Country_float11");
            entity.Property(e => e.CountryFloat12).HasColumnName("Country_float12");
            entity.Property(e => e.CountryFloat2).HasColumnName("country_float2");
            entity.Property(e => e.CountryFloat3).HasColumnName("country_float3");
            entity.Property(e => e.CountryFloat4).HasColumnName("country_float4");
            entity.Property(e => e.CountryFloat5).HasColumnName("country_float5");
            entity.Property(e => e.CountryFloat6).HasColumnName("country_float6");
            entity.Property(e => e.CountryFloat7).HasColumnName("Country_float7");
            entity.Property(e => e.CountryFloat8).HasColumnName("Country_float8");
            entity.Property(e => e.CountryFloat9).HasColumnName("Country_float9");
            entity.Property(e => e.CountryGuid1).HasColumnName("country_guid1");
            entity.Property(e => e.CountryGuid2).HasColumnName("country_guid2");
            entity.Property(e => e.CountryNy1).HasColumnName("country_ny1");
            entity.Property(e => e.CountryNy10).HasColumnName("country_ny10");
            entity.Property(e => e.CountryNy11).HasColumnName("country_ny11");
            entity.Property(e => e.CountryNy12).HasColumnName("country_ny12");
            entity.Property(e => e.CountryNy13).HasColumnName("country_ny13");
            entity.Property(e => e.CountryNy14).HasColumnName("country_ny14");
            entity.Property(e => e.CountryNy15).HasColumnName("country_ny15");
            entity.Property(e => e.CountryNy16).HasColumnName("country_ny16");
            entity.Property(e => e.CountryNy17).HasColumnName("country_ny17");
            entity.Property(e => e.CountryNy18).HasColumnName("country_ny18");
            entity.Property(e => e.CountryNy2).HasColumnName("country_ny2");
            entity.Property(e => e.CountryNy3).HasColumnName("country_ny3");
            entity.Property(e => e.CountryNy4).HasColumnName("country_ny4");
            entity.Property(e => e.CountryNy5).HasColumnName("country_ny5");
            entity.Property(e => e.CountryNy6).HasColumnName("country_ny6");
            entity.Property(e => e.CountryNy7).HasColumnName("country_ny7");
            entity.Property(e => e.CountryNy8).HasColumnName("country_ny8");
            entity.Property(e => e.CountryNy9).HasColumnName("country_ny9");
            entity.Property(e => e.CountryString1)
                .HasMaxLength(75)
                .HasColumnName("country_string1");
            entity.Property(e => e.Creditor)
                .HasMaxLength(6)
                .IsFixedLength()
                .HasColumnName("creditor");
            entity.Property(e => e.CreditorAccount)
                .HasMaxLength(9)
                .IsFixedLength()
                .HasColumnName("creditor_account");
            entity.Property(e => e.CreditorCostcenter)
                .HasMaxLength(8)
                .IsFixedLength()
                .HasColumnName("creditor_costcenter");
            entity.Property(e => e.CreditorCostunit)
                .HasMaxLength(8)
                .IsFixedLength()
                .HasColumnName("creditor_costunit");
            entity.Property(e => e.Currency)
                .HasMaxLength(3)
                .IsFixedLength()
                .HasColumnName("currency");
            entity.Property(e => e.DefaultAmount).HasColumnName("default_amount");
            entity.Property(e => e.DefaultPercentage).HasColumnName("default_percentage");
            entity.Property(e => e.Descr500)
                .HasMaxLength(50)
                .HasColumnName("descr50_0");
            entity.Property(e => e.Descr501)
                .HasMaxLength(50)
                .HasColumnName("descr50_1");
            entity.Property(e => e.Descr502)
                .HasMaxLength(50)
                .HasColumnName("descr50_2");
            entity.Property(e => e.Descr503)
                .HasMaxLength(50)
                .HasColumnName("descr50_3");
            entity.Property(e => e.Descr504)
                .HasMaxLength(50)
                .HasColumnName("descr50_4");
            entity.Property(e => e.DocAttachmentId).HasColumnName("DocAttachmentID");
            entity.Property(e => e.EditResourceLevel)
                .HasDefaultValue((byte)1)
                .HasColumnName("edit_resource_level");
            entity.Property(e => e.Enddate)
                .HasColumnType("datetime")
                .HasColumnName("enddate");
            entity.Property(e => e.Formulafield)
                .HasMaxLength(2000)
                .HasColumnName("formulafield");
            entity.Property(e => e.JobActivity)
                .HasMaxLength(10)
                .IsFixedLength();
            entity.Property(e => e.LedgerAccount)
                .HasMaxLength(9)
                .IsFixedLength()
                .HasColumnName("ledger_account");
            entity.Property(e => e.LedgerCostcenter)
                .HasMaxLength(8)
                .IsFixedLength()
                .HasColumnName("ledger_costcenter");
            entity.Property(e => e.LedgerCostunit)
                .HasMaxLength(8)
                .IsFixedLength()
                .HasColumnName("ledger_costunit");
            entity.Property(e => e.LedgerType)
                .HasMaxLength(1)
                .HasDefaultValue("C")
                .IsFixedLength();
            entity.Property(e => e.LocalCode)
                .HasMaxLength(4)
                .IsFixedLength();
            entity.Property(e => e.MainType)
                .HasMaxLength(8)
                .IsFixedLength();
            entity.Property(e => e.Notes).HasColumnName("notes");
            entity.Property(e => e.Origin)
                .HasMaxLength(1)
                .HasDefaultValue("N")
                .IsFixedLength();
            entity.Property(e => e.OriginalCode)
                .HasMaxLength(8)
                .IsFixedLength();
            entity.Property(e => e.PaidBy)
                .HasMaxLength(1)
                .IsFixedLength()
                .HasColumnName("paid_by");
            entity.Property(e => e.ParentCode)
                .HasMaxLength(8)
                .IsFixedLength()
                .HasColumnName("parent_code");
            entity.Property(e => e.PaymentPeriod)
                .HasMaxLength(1)
                .IsFixedLength()
                .HasColumnName("payment_period");
            entity.Property(e => e.Payroll).HasColumnName("payroll");
            entity.Property(e => e.Scale)
                .HasMaxLength(9)
                .IsFixedLength()
                .HasColumnName("scale");
            entity.Property(e => e.Startdate)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("startdate");
            entity.Property(e => e.StateCode)
                .HasMaxLength(3)
                .IsFixedLength();
            entity.Property(e => e.Syscreated)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("syscreated");
            entity.Property(e => e.Syscreator).HasColumnName("syscreator");
            entity.Property(e => e.Sysguid)
                .HasDefaultValueSql("(newid())")
                .HasColumnName("sysguid");
            entity.Property(e => e.Sysmodified)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("sysmodified");
            entity.Property(e => e.Sysmodifier).HasColumnName("sysmodifier");
            entity.Property(e => e.Timestamp)
                .IsRowVersion()
                .IsConcurrencyToken()
                .HasColumnName("timestamp");
            entity.Property(e => e.Unit)
                .HasMaxLength(1)
                .IsFixedLength()
                .HasColumnName("unit");
        });

        modelBuilder.Entity<Hrcomponentitemlink>(entity =>
        {
            entity.HasKey(e => e.Id).IsClustered(false);

            entity.ToTable("hrcomponentitemlinks");

            entity.HasIndex(e => new { e.Type, e.CompCode, e.ItemCode }, "TypeCompCodeItemCode");

            entity.HasIndex(e => new { e.Type, e.RelCode, e.CompCode }, "TypeRelCodeCompCode");

            entity.HasIndex(e => e.Id, "hrcomponentitemlinks_Index").IsClustered();

            entity.Property(e => e.Id).HasColumnName("ID");
            entity.Property(e => e.Assortment).HasMaxLength(30);
            entity.Property(e => e.CompCode)
                .HasMaxLength(8)
                .IsFixedLength()
                .HasColumnName("comp_code");
            entity.Property(e => e.ItemCode).HasMaxLength(30);
            entity.Property(e => e.LedgerAccount)
                .HasMaxLength(9)
                .HasColumnName("Ledger_account");
            entity.Property(e => e.PayrollComponent).HasMaxLength(8);
            entity.Property(e => e.RelCode).HasMaxLength(10);
            entity.Property(e => e.Syscreated)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("syscreated");
            entity.Property(e => e.Syscreator).HasColumnName("syscreator");
            entity.Property(e => e.Sysguid)
                .HasDefaultValueSql("(newid())")
                .HasColumnName("sysguid");
            entity.Property(e => e.Sysmodified)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("sysmodified");
            entity.Property(e => e.Sysmodifier).HasColumnName("sysmodifier");
            entity.Property(e => e.Timestamp)
                .IsRowVersion()
                .IsConcurrencyToken()
                .HasColumnName("timestamp");
            entity.Property(e => e.Type)
                .HasMaxLength(1)
                .HasDefaultValue("A")
                .IsFixedLength();
        });

        modelBuilder.Entity<HreffectivedateDataLog>(entity =>
        {
            entity.HasKey(e => e.Id).IsClustered(false);

            entity.ToTable("HREffectivedateDataLog");

            entity.HasIndex(e => new { e.ResId, e.TableName, e.FieldName }, "HREffectivedateResid").IsClustered();

            entity.Property(e => e.Id).HasColumnName("ID");
            entity.Property(e => e.EffectiveDate)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime");
            entity.Property(e => e.FieldName).HasMaxLength(50);
            entity.Property(e => e.NewValue).HasMaxLength(255);
            entity.Property(e => e.OldValue).HasMaxLength(255);
            entity.Property(e => e.ResId).HasColumnName("res_id");
            entity.Property(e => e.Status)
                .HasMaxLength(1)
                .IsFixedLength();
            entity.Property(e => e.Syscreated)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("syscreated");
            entity.Property(e => e.Syscreator).HasColumnName("syscreator");
            entity.Property(e => e.Sysguid)
                .HasDefaultValueSql("(newid())")
                .HasColumnName("sysguid");
            entity.Property(e => e.Sysmodified)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("sysmodified");
            entity.Property(e => e.Sysmodifier).HasColumnName("sysmodifier");
            entity.Property(e => e.TableName).HasMaxLength(50);
            entity.Property(e => e.Timestamp)
                .IsRowVersion()
                .IsConcurrencyToken()
                .HasColumnName("timestamp");
        });

        modelBuilder.Entity<HremployeePeriod>(entity =>
        {
            entity.HasKey(e => e.Id).IsClustered(false);

            entity.ToTable("HREmployeePeriods");

            entity.HasIndex(e => new { e.EmpId, e.FinYear, e.FinPeriod }, "Index1").IsClustered();

            entity.Property(e => e.Id)
                .ValueGeneratedNever()
                .HasColumnName("ID");
            entity.Property(e => e.EmpId).HasColumnName("EmpID");
            entity.Property(e => e.Syscreated)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("syscreated");
            entity.Property(e => e.Syscreator).HasColumnName("syscreator");
            entity.Property(e => e.Sysmodified)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("sysmodified");
            entity.Property(e => e.Sysmodifier).HasColumnName("sysmodifier");
        });

        modelBuilder.Entity<HrerrorLog>(entity =>
        {
            entity.ToTable("HRErrorLog");

            entity.HasIndex(e => new { e.TransId, e.TransType }, "IX_HRErrorLog_TransId_TransType");

            entity.Property(e => e.Id)
                .HasDefaultValueSql("(newid())")
                .HasColumnName("ID");
            entity.Property(e => e.AppName).HasMaxLength(50);
            entity.Property(e => e.Comp)
                .HasMaxLength(3)
                .IsFixedLength();
            entity.Property(e => e.Created)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime");
            entity.Property(e => e.Description).HasMaxLength(255);
            entity.Property(e => e.TransId).HasColumnName("TransID");
            entity.Property(e => e.TransType).HasMaxLength(30);
            entity.Property(e => e.Value1).HasMaxLength(255);
            entity.Property(e => e.Value2).HasMaxLength(255);
            entity.Property(e => e.Value3).HasMaxLength(255);
        });

        modelBuilder.Entity<Hrfin>(entity =>
        {
            entity.HasKey(e => e.Id).IsClustered(false);

            entity.ToTable("hrfin");

            entity.HasIndex(e => new { e.ResId, e.Line }, "hrfin")
                .IsUnique()
                .IsClustered();

            entity.Property(e => e.Id).HasColumnName("ID");
            entity.Property(e => e.CompType)
                .HasMaxLength(8)
                .IsFixedLength()
                .HasColumnName("comp_type");
            entity.Property(e => e.EmployeeAmt).HasColumnName("employee_amt");
            entity.Property(e => e.EmployerAmt).HasColumnName("employer_amt");
            entity.Property(e => e.EndDate)
                .HasColumnType("datetime")
                .HasColumnName("end_date");
            entity.Property(e => e.Gn)
                .HasMaxLength(1)
                .IsFixedLength()
                .HasColumnName("gn");
            entity.Property(e => e.Hours).HasColumnName("hours");
            entity.Property(e => e.Line).HasColumnName("line");
            entity.Property(e => e.Notes).HasColumnName("notes");
            entity.Property(e => e.PayPeriod)
                .HasMaxLength(1)
                .IsFixedLength()
                .HasColumnName("pay_period");
            entity.Property(e => e.PayType)
                .HasDefaultValue(1)
                .HasColumnName("pay_type");
            entity.Property(e => e.ResId).HasColumnName("res_id");
            entity.Property(e => e.StartDate)
                .HasColumnType("datetime")
                .HasColumnName("start_date");
            entity.Property(e => e.Syscreated)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("syscreated");
            entity.Property(e => e.Syscreator).HasColumnName("syscreator");
            entity.Property(e => e.Sysguid)
                .HasDefaultValueSql("(newid())")
                .HasColumnName("sysguid");
            entity.Property(e => e.Sysmodified)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("sysmodified");
            entity.Property(e => e.Sysmodifier).HasColumnName("sysmodifier");
            entity.Property(e => e.Timestamp)
                .IsRowVersion()
                .IsConcurrencyToken()
                .HasColumnName("timestamp");
            entity.Property(e => e.Valcode)
                .HasMaxLength(3)
                .IsFixedLength()
                .HasColumnName("valcode");
        });

        modelBuilder.Entity<Hrfint>(entity =>
        {
            entity.HasKey(e => e.Id).IsClustered(false);

            entity.ToTable("hrfint");

            entity.HasIndex(e => new { e.Country, e.JobActivity, e.Scale }, "CountryJobActivityScale");

            entity.HasIndex(e => new { e.MainType, e.Country }, "MainTypeCountry");

            entity.HasIndex(e => e.CompType, "hrfint")
                .IsUnique()
                .IsClustered();

            entity.HasIndex(e => new { e.Fingroup, e.CompType }, "hrgrp").IsUnique();

            entity.Property(e => e.Id).HasColumnName("ID");
            entity.Property(e => e.CompType)
                .HasMaxLength(8)
                .IsFixedLength()
                .HasColumnName("comp_type");
            entity.Property(e => e.Country)
                .HasMaxLength(3)
                .IsFixedLength()
                .HasColumnName("country");
            entity.Property(e => e.Currency)
                .HasMaxLength(3)
                .IsFixedLength()
                .HasColumnName("currency");
            entity.Property(e => e.DefAmt).HasColumnName("def_amt");
            entity.Property(e => e.DefAmtEditable).HasDefaultValue(true);
            entity.Property(e => e.Descr500)
                .HasMaxLength(50)
                .HasColumnName("descr50_0");
            entity.Property(e => e.Descr501)
                .HasMaxLength(50)
                .HasColumnName("descr50_1");
            entity.Property(e => e.Descr502)
                .HasMaxLength(50)
                .HasColumnName("descr50_2");
            entity.Property(e => e.Descr503)
                .HasMaxLength(50)
                .HasColumnName("descr50_3");
            entity.Property(e => e.Descr504)
                .HasMaxLength(50)
                .HasColumnName("descr50_4");
            entity.Property(e => e.DocId).HasColumnName("DocID");
            entity.Property(e => e.EmployeeNy).HasColumnName("employee_ny");
            entity.Property(e => e.EmployerNy).HasColumnName("employer_ny");
            entity.Property(e => e.EndDate).HasColumnType("datetime");
            entity.Property(e => e.Fingroup)
                .HasMaxLength(1)
                .IsFixedLength()
                .HasColumnName("fingroup");
            entity.Property(e => e.Fixed)
                .HasMaxLength(1)
                .IsFixedLength()
                .HasColumnName("fixed");
            entity.Property(e => e.Gbknr2)
                .HasMaxLength(9)
                .IsFixedLength()
                .HasColumnName("gbknr2");
            entity.Property(e => e.Glac)
                .HasMaxLength(9)
                .IsFixedLength()
                .HasColumnName("glac");
            entity.Property(e => e.Gn)
                .HasMaxLength(1)
                .IsFixedLength()
                .HasColumnName("gn");
            entity.Property(e => e.JobActivity)
                .HasMaxLength(10)
                .IsFixedLength();
            entity.Property(e => e.MainType)
                .HasMaxLength(8)
                .IsFixedLength();
            entity.Property(e => e.Notes).HasColumnName("notes");
            entity.Property(e => e.PayPeriod)
                .HasMaxLength(1)
                .IsFixedLength()
                .HasColumnName("pay_period");
            entity.Property(e => e.Payroll).HasColumnName("payroll");
            entity.Property(e => e.Scale).HasColumnName("scale");
            entity.Property(e => e.StartDate).HasColumnType("datetime");
            entity.Property(e => e.Syscreated)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("syscreated");
            entity.Property(e => e.Syscreator).HasColumnName("syscreator");
            entity.Property(e => e.Sysguid)
                .HasDefaultValueSql("(newid())")
                .HasColumnName("sysguid");
            entity.Property(e => e.Sysmodified)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("sysmodified");
            entity.Property(e => e.Sysmodifier).HasColumnName("sysmodifier");
            entity.Property(e => e.Timestamp)
                .IsRowVersion()
                .IsConcurrencyToken()
                .HasColumnName("timestamp");
            entity.Property(e => e.ToeSrt)
                .HasMaxLength(1)
                .IsFixedLength()
                .HasColumnName("toe_srt");
            entity.Property(e => e.Unit)
                .HasMaxLength(1)
                .IsFixedLength()
                .HasColumnName("unit");
        });

        modelBuilder.Entity<Hrfree>(entity =>
        {
            entity.HasKey(e => e.Id).IsClustered(false);

            entity.ToTable("hrfree");

            entity.HasIndex(e => new { e.Filetype, e.Reckey }, "hrfree")
                .IsUnique()
                .IsClustered();

            entity.Property(e => e.Id).HasColumnName("ID");
            entity.Property(e => e.Descr60)
                .HasMaxLength(60)
                .HasColumnName("descr60");
            entity.Property(e => e.DocId).HasColumnName("DocID");
            entity.Property(e => e.Filetype)
                .HasMaxLength(4)
                .IsFixedLength()
                .HasColumnName("filetype");
            entity.Property(e => e.Hrgroup)
                .HasMaxLength(10)
                .IsFixedLength()
                .HasColumnName("hrgroup");
            entity.Property(e => e.JobGroup)
                .HasMaxLength(10)
                .IsFixedLength();
            entity.Property(e => e.Notes).HasColumnName("notes");
            entity.Property(e => e.Reckey)
                .HasMaxLength(10)
                .IsFixedLength()
                .HasColumnName("reckey");
            entity.Property(e => e.Syscreated)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("syscreated");
            entity.Property(e => e.Syscreator).HasColumnName("syscreator");
            entity.Property(e => e.Sysguid)
                .HasDefaultValueSql("(newid())")
                .HasColumnName("sysguid");
            entity.Property(e => e.Sysmodified)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("sysmodified");
            entity.Property(e => e.Sysmodifier).HasColumnName("sysmodifier");
            entity.Property(e => e.Timestamp)
                .IsRowVersion()
                .IsConcurrencyToken()
                .HasColumnName("timestamp");
        });

        modelBuilder.Entity<HrfreeField>(entity =>
        {
            entity.HasKey(e => e.Id).IsClustered(false);

            entity.ToTable("HRFreeFields");

            entity.HasIndex(e => e.Id, "HRFreeFields_Index").IsClustered();

            entity.Property(e => e.Id)
                .HasDefaultValueSql("(newid())")
                .HasColumnName("ID");
            entity.Property(e => e.CompanyNr)
                .HasMaxLength(3)
                .IsFixedLength();
            entity.Property(e => e.DateField1).HasMaxLength(30);
            entity.Property(e => e.DateField2).HasMaxLength(30);
            entity.Property(e => e.DateField3).HasMaxLength(30);
            entity.Property(e => e.DateField4).HasMaxLength(30);
            entity.Property(e => e.DateField5).HasMaxLength(30);
            entity.Property(e => e.NumberField1).HasMaxLength(30);
            entity.Property(e => e.NumberField2).HasMaxLength(30);
            entity.Property(e => e.NumberField3).HasMaxLength(30);
            entity.Property(e => e.NumberField4).HasMaxLength(30);
            entity.Property(e => e.NumberField5).HasMaxLength(30);
            entity.Property(e => e.TableName).HasMaxLength(128);
            entity.Property(e => e.TextField1).HasMaxLength(30);
            entity.Property(e => e.TextField2).HasMaxLength(30);
            entity.Property(e => e.TextField3).HasMaxLength(30);
            entity.Property(e => e.TextField4).HasMaxLength(30);
            entity.Property(e => e.TextField5).HasMaxLength(30);
            entity.Property(e => e.YesNoField1).HasMaxLength(30);
            entity.Property(e => e.YesNoField2).HasMaxLength(30);
            entity.Property(e => e.YesNoField3).HasMaxLength(30);
            entity.Property(e => e.YesNoField4).HasMaxLength(30);
            entity.Property(e => e.YesNoField5).HasMaxLength(30);
        });

        modelBuilder.Entity<HrhumresLink>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("HRHumresLinks");

            entity.HasIndex(e => new { e.Type, e.ChildId }, "ix_HRHumresLinks_ChildID");

            entity.HasIndex(e => new { e.Type, e.ResId, e.ChildId }, "ix_HRHumresLinks_HumLinks").IsClustered();

            entity.Property(e => e.ChildId).HasColumnName("ChildID");
            entity.Property(e => e.Id)
                .ValueGeneratedOnAdd()
                .HasColumnName("ID");
            entity.Property(e => e.LinkedDate).HasColumnType("datetime");
            entity.Property(e => e.ResId).HasColumnName("Res_id");
            entity.Property(e => e.Syscreated)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("syscreated");
            entity.Property(e => e.Syscreator).HasColumnName("syscreator");
            entity.Property(e => e.Sysmodified)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("sysmodified");
            entity.Property(e => e.Sysmodifier).HasColumnName("sysmodifier");
            entity.Property(e => e.Timestamp)
                .IsRowVersion()
                .IsConcurrencyToken()
                .HasColumnName("timestamp");
            entity.Property(e => e.Type)
                .HasMaxLength(1)
                .IsFixedLength();
        });

        modelBuilder.Entity<Hrjbtl>(entity =>
        {
            entity.HasKey(e => e.Id).IsClustered(false);

            entity.ToTable("hrjbtl");

            entity.HasIndex(e => e.JobTitle, "hrjbtl")
                .IsUnique()
                .IsClustered();

            entity.Property(e => e.Id).HasColumnName("ID");
            entity.Property(e => e.BeroepCd)
                .HasMaxLength(4)
                .IsFixedLength()
                .HasColumnName("beroep_cd");
            entity.Property(e => e.CodeFnc)
                .HasMaxLength(12)
                .HasColumnName("code_fnc");
            entity.Property(e => e.DelDocName)
                .HasMaxLength(128)
                .HasColumnName("del_doc_name");
            entity.Property(e => e.DelDocPath)
                .HasMaxLength(128)
                .HasColumnName("del_doc_path");
            entity.Property(e => e.Descr50)
                .HasMaxLength(150)
                .HasColumnName("descr50");
            entity.Property(e => e.DocId).HasColumnName("DocID");
            entity.Property(e => e.Exttar).HasColumnName("exttar");
            entity.Property(e => e.Inttar).HasColumnName("inttar");
            entity.Property(e => e.JobFullDescriptionOld).HasMaxLength(128);
            entity.Property(e => e.JobGrp)
                .HasMaxLength(10)
                .IsFixedLength()
                .HasColumnName("job_grp");
            entity.Property(e => e.JobLevel).HasColumnName("job_level");
            entity.Property(e => e.JobOldCode).HasMaxLength(9);
            entity.Property(e => e.JobOldCodeJ).HasMaxLength(10);
            entity.Property(e => e.JobTitle)
                .HasMaxLength(12)
                .HasColumnName("job_title");
            entity.Property(e => e.Kmrateint).HasColumnName("kmrateint");
            entity.Property(e => e.Notes).HasColumnName("notes");
            entity.Property(e => e.Prodpct).HasColumnName("prodpct");
            entity.Property(e => e.Productiv).HasColumnName("productiv");
            entity.Property(e => e.RoleId).HasColumnName("RoleID");
            entity.Property(e => e.Schaalcode)
                .HasMaxLength(2)
                .IsFixedLength()
                .HasColumnName("schaalcode");
            entity.Property(e => e.Schaalsrt)
                .HasMaxLength(2)
                .IsFixedLength()
                .HasColumnName("schaalsrt");
            entity.Property(e => e.Syscreated)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("syscreated");
            entity.Property(e => e.Syscreator).HasColumnName("syscreator");
            entity.Property(e => e.Sysguid)
                .HasDefaultValueSql("(newid())")
                .HasColumnName("sysguid");
            entity.Property(e => e.Sysmodified)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("sysmodified");
            entity.Property(e => e.Sysmodifier).HasColumnName("sysmodifier");
            entity.Property(e => e.Timestamp)
                .IsRowVersion()
                .IsConcurrencyToken()
                .HasColumnName("timestamp");
            entity.Property(e => e.VertGrp)
                .HasMaxLength(10)
                .IsFixedLength()
                .HasColumnName("vert_grp");
            entity.Property(e => e.WkcpRisk)
                .HasMaxLength(4)
                .IsFixedLength()
                .HasColumnName("wkcp_risk");
            entity.Property(e => e.Xdefratelv)
                .HasMaxLength(1)
                .IsFixedLength()
                .HasColumnName("xdefratelv");
        });

        modelBuilder.Entity<Hrloc>(entity =>
        {
            entity.HasKey(e => e.Id).IsClustered(false);

            entity.ToTable("hrloc");

            entity.HasIndex(e => e.Loc, "hrloc")
                .IsUnique()
                .IsClustered();

            entity.Property(e => e.Id).HasColumnName("ID");
            entity.Property(e => e.AddrNo)
                .HasMaxLength(10)
                .IsFixedLength()
                .HasColumnName("addr_no");
            entity.Property(e => e.AddrSuf)
                .HasMaxLength(2)
                .IsFixedLength()
                .HasColumnName("addr_suf");
            entity.Property(e => e.City)
                .HasMaxLength(30)
                .HasColumnName("city");
            entity.Property(e => e.Country)
                .HasMaxLength(3)
                .IsFixedLength()
                .HasColumnName("country");
            entity.Property(e => e.Descr50)
                .HasMaxLength(50)
                .HasColumnName("descr50");
            entity.Property(e => e.Faxnr)
                .HasMaxLength(15)
                .HasColumnName("faxnr");
            entity.Property(e => e.FullName)
                .HasMaxLength(150)
                .IsFixedLength();
            entity.Property(e => e.Loc)
                .HasMaxLength(10)
                .IsFixedLength()
                .HasColumnName("loc");
            entity.Property(e => e.OldCode)
                .HasMaxLength(12)
                .IsFixedLength()
                .HasColumnName("OldCOde");
            entity.Property(e => e.Postcode)
                .HasMaxLength(8)
                .IsFixedLength()
                .HasColumnName("postcode");
            entity.Property(e => e.Region)
                .HasMaxLength(30)
                .IsFixedLength();
            entity.Property(e => e.StateCode)
                .HasMaxLength(3)
                .IsFixedLength();
            entity.Property(e => e.Street0)
                .HasMaxLength(30)
                .HasColumnName("street_0");
            entity.Property(e => e.Street1)
                .HasMaxLength(30)
                .HasColumnName("street_1");
            entity.Property(e => e.Syscreated)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("syscreated");
            entity.Property(e => e.Syscreator).HasColumnName("syscreator");
            entity.Property(e => e.Sysguid)
                .HasDefaultValueSql("(newid())")
                .HasColumnName("sysguid");
            entity.Property(e => e.Sysmodified)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("sysmodified");
            entity.Property(e => e.Sysmodifier).HasColumnName("sysmodifier");
            entity.Property(e => e.Telnr)
                .HasMaxLength(15)
                .HasColumnName("telnr");
            entity.Property(e => e.Timestamp)
                .IsRowVersion()
                .IsConcurrencyToken()
                .HasColumnName("timestamp");
            entity.Property(e => e.Type)
                .HasMaxLength(10)
                .IsFixedLength();
            entity.Property(e => e.WeekendEnd).HasDefaultValue(7);
            entity.Property(e => e.WeekendStart).HasDefaultValue(6);
            entity.Property(e => e.Xaddress2)
                .HasMaxLength(30)
                .HasColumnName("xaddress2");
        });

        modelBuilder.Entity<HrmactivityCompetenceLink>(entity =>
        {
            entity.HasKey(e => e.Id).IsClustered(false);

            entity.ToTable("HRMActivityCompetenceLinks");

            entity.HasIndex(e => new { e.JobActivity, e.CompetenceGroup, e.Competence, e.JobLevel }, "IX_HRMActivityCompetenceLinks").IsClustered();

            entity.Property(e => e.Id)
                .HasDefaultValueSql("(newid())")
                .HasColumnName("ID");
            entity.Property(e => e.JobActivity).HasMaxLength(10);
            entity.Property(e => e.Syscreated)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("syscreated");
            entity.Property(e => e.Syscreator).HasColumnName("syscreator");
            entity.Property(e => e.Sysmodified)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("sysmodified");
            entity.Property(e => e.Sysmodifier).HasColumnName("sysmodifier");
        });

        modelBuilder.Entity<HrmainFint>(entity =>
        {
            entity.ToTable("HRMainFint");

            entity.Property(e => e.Id)
                .HasMaxLength(8)
                .IsFixedLength()
                .HasColumnName("ID");
            entity.Property(e => e.Description).HasMaxLength(50);
            entity.Property(e => e.ViewOrder).HasDefaultValue(0);
        });

        modelBuilder.Entity<HrmcompentenceReviewProfile>(entity =>
        {
            entity
                .HasNoKey()
                .ToView("HRMCompentenceReviewProfile");

            entity.Property(e => e.CompetenceRelationId).HasColumnName("CompetenceRelationID");
            entity.Property(e => e.JobActivity).HasMaxLength(10);
        });

        modelBuilder.Entity<Hrmcompetence>(entity =>
        {
            entity.ToTable("HRMCompetences");

            entity.HasIndex(e => new { e.Code, e.Type }, "IX_HRMCompetences_CodeType").IsUnique();

            entity.Property(e => e.Id)
                .HasDefaultValueSql("(newid())")
                .HasColumnName("ID");
            entity.Property(e => e.Code).HasMaxLength(20);
            entity.Property(e => e.CreatedDate)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime");
            entity.Property(e => e.Description).HasMaxLength(100);
            entity.Property(e => e.DocAttachmentId).HasColumnName("DocAttachmentID");
            entity.Property(e => e.Factor).HasDefaultValue((byte)1);
            entity.Property(e => e.ModifiedDate)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime");
            entity.Property(e => e.Type)
                .HasMaxLength(1)
                .HasDefaultValue("C")
                .IsFixedLength();
        });

        modelBuilder.Entity<HrmcompetenceGroup>(entity =>
        {
            entity.ToTable("HRMCompetenceGroups");

            entity.Property(e => e.Id)
                .HasDefaultValueSql("(newid())")
                .HasColumnName("ID");
            entity.Property(e => e.CreatedDate)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime");
            entity.Property(e => e.Description).HasMaxLength(100);
            entity.Property(e => e.DocumentId).HasColumnName("DocumentID");
            entity.Property(e => e.ModifiedDate)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime");
            entity.Property(e => e.RateObjectives)
                .HasMaxLength(1)
                .HasDefaultValue("N");
            entity.Property(e => e.Type)
                .HasMaxLength(1)
                .HasDefaultValue("C")
                .IsFixedLength();
        });

        modelBuilder.Entity<HrmcompetenceHierarchy>(entity =>
        {
            entity
                .HasNoKey()
                .ToView("HRMCompetenceHierarchy");

            entity.Property(e => e.CompetenceRelationId).HasColumnName("CompetenceRelationID");
            entity.Property(e => e.FullPath).HasMaxLength(500);
            entity.Property(e => e.FullSequenceNr)
                .HasMaxLength(15)
                .IsUnicode(false);
        });

        modelBuilder.Entity<HrmcompetenceLink>(entity =>
        {
            entity.ToTable("HRMCompetenceLinks");

            entity.HasIndex(e => new { e.CompetenceId, e.ProfileId }, "IX_HRMCompetenceLinks_CompLinks");

            entity.Property(e => e.Id)
                .HasDefaultValueSql("(newid())")
                .HasColumnName("ID");
            entity.Property(e => e.CardLayoutId).HasColumnName("CardLayoutID");
            entity.Property(e => e.CreatedDate)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime");
            entity.Property(e => e.DateValue).HasColumnType("datetime");
            entity.Property(e => e.Frequency)
                .HasMaxLength(1)
                .IsFixedLength();
            entity.Property(e => e.ModifiedDate)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime");
            entity.Property(e => e.ParentId).HasColumnName("ParentID");
        });

        modelBuilder.Entity<HrmcompetenceProfile>(entity =>
        {
            entity.ToTable("HRMCompetenceProfiles");

            entity.HasIndex(e => new { e.Type, e.ItemCode }, "IX_HRMCompeteProfItem");

            entity.HasIndex(e => new { e.Type, e.JobActivity }, "IX_HRMCompeteProfJobActivity");

            entity.HasIndex(e => new { e.Type, e.JobGroup }, "IX_HRMCompeteProfJobGroup");

            entity.HasIndex(e => new { e.Type, e.JobTitle }, "IX_HRMCompeteProfJobTitle");

            entity.HasIndex(e => new { e.Type, e.Project }, "IX_HRMCompeteProfProject");

            entity.HasIndex(e => new { e.Type, e.ResourceId }, "IX_HRMCompeteProfResource");

            entity.Property(e => e.Id)
                .HasDefaultValueSql("(newid())")
                .HasColumnName("ID");
            entity.Property(e => e.AgreementDate).HasColumnType("datetime");
            entity.Property(e => e.CompanyCode)
                .HasMaxLength(3)
                .IsFixedLength();
            entity.Property(e => e.CreatedDate)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime");
            entity.Property(e => e.Description).HasMaxLength(100);
            entity.Property(e => e.DocumentId).HasColumnName("DocumentID");
            entity.Property(e => e.EndDate).HasColumnType("datetime");
            entity.Property(e => e.GroupId).HasColumnName("GroupID");
            entity.Property(e => e.ItemCode).HasMaxLength(30);
            entity.Property(e => e.JobActivity)
                .HasMaxLength(10)
                .IsFixedLength();
            entity.Property(e => e.JobGroup)
                .HasMaxLength(10)
                .IsFixedLength();
            entity.Property(e => e.JobTitle).HasMaxLength(12);
            entity.Property(e => e.ModifiedDate)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime");
            entity.Property(e => e.Project).HasMaxLength(20);
            entity.Property(e => e.RateObjectives)
                .HasMaxLength(1)
                .HasDefaultValue("N");
            entity.Property(e => e.Rating)
                .HasMaxLength(3)
                .IsFixedLength();
            entity.Property(e => e.RequestStartDate).HasColumnType("datetime");
            entity.Property(e => e.StartDate).HasColumnType("datetime");
            entity.Property(e => e.Status)
                .HasMaxLength(1)
                .HasDefaultValue("N")
                .IsFixedLength();
            entity.Property(e => e.Type)
                .HasMaxLength(2)
                .IsFixedLength();
        });

        modelBuilder.Entity<HrmcompetenceRelation>(entity =>
        {
            entity.ToTable("HRMCompetenceRelations");

            entity.HasIndex(e => new { e.CompetenceId, e.GroupId }, "IX_HRMCompetenceRelations_CompetenceGroup").IsUnique();

            entity.Property(e => e.Id)
                .HasDefaultValueSql("(newid())")
                .HasColumnName("ID");
            entity.Property(e => e.Created)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime");
            entity.Property(e => e.Modified)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime");
        });

        modelBuilder.Entity<HrmfieldType>(entity =>
        {
            entity.ToTable("HRMFieldTypes");

            entity.Property(e => e.Id)
                .HasDefaultValueSql("(newid())")
                .HasColumnName("ID");
            entity.Property(e => e.CreatedDate)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime");
            entity.Property(e => e.DefaultDateValue).HasColumnType("datetime");
            entity.Property(e => e.DefaultStringValue).HasMaxLength(100);
            entity.Property(e => e.Description).HasMaxLength(100);
            entity.Property(e => e.ModifiedBy).HasDefaultValueSql("(suser_sname())");
            entity.Property(e => e.ModifiedDate)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime");
            entity.Property(e => e.Module)
                .HasMaxLength(1)
                .IsFixedLength();
            entity.Property(e => e.Type)
                .HasMaxLength(1)
                .HasDefaultValue("T")
                .IsFixedLength();
        });

        modelBuilder.Entity<HrmformElement>(entity =>
        {
            entity.ToTable("HRMFormElements");

            entity.HasIndex(e => e.FormLayoutId, "IX_HRMFormElements_ID");

            entity.Property(e => e.Id)
                .HasDefaultValueSql("(newid())")
                .HasColumnName("ID");
            entity.Property(e => e.Caption).HasMaxLength(60);
            entity.Property(e => e.CreatedDate)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime");
            entity.Property(e => e.EditManager).HasDefaultValue(true);
            entity.Property(e => e.ModifiedDate)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime");
            entity.Property(e => e.Reference).HasMaxLength(40);
            entity.Property(e => e.TermId).HasColumnName("TermID");
            entity.Property(e => e.UserDefineCaption).HasMaxLength(60);
            entity.Property(e => e.ViewManager).HasDefaultValue(true);
            entity.Property(e => e.ViewResource).HasDefaultValue(true);
        });

        modelBuilder.Entity<HrmformLayout>(entity =>
        {
            entity.ToTable("HRMFormLayouts");

            entity.HasIndex(e => new { e.Type, e.CompanyCode }, "IX_HRMFormLayouts_TypeDivision");

            entity.Property(e => e.Id)
                .HasDefaultValueSql("(newid())")
                .HasColumnName("ID");
            entity.Property(e => e.CompanyCode)
                .HasMaxLength(3)
                .IsFixedLength();
            entity.Property(e => e.CreatedDate)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime");
            entity.Property(e => e.Description).HasMaxLength(100);
            entity.Property(e => e.ModifiedDate)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime");
            entity.Property(e => e.Type)
                .HasMaxLength(3)
                .IsFixedLength();
        });

        modelBuilder.Entity<HrmpersonalObjective>(entity =>
        {
            entity.HasKey(e => e.Id).IsClustered(false);

            entity.ToTable("HRMPersonalObjectives");

            entity.HasIndex(e => new { e.ProfileId, e.HeaderId }, "IX_HRMPersonalObjectives").IsClustered();

            entity.Property(e => e.Id)
                .HasDefaultValueSql("(newid())")
                .HasColumnName("ID");
            entity.Property(e => e.DateCreated).HasColumnType("datetime");
            entity.Property(e => e.DateValue).HasColumnType("datetime");
            entity.Property(e => e.Description).HasMaxLength(100);
            entity.Property(e => e.HeaderId).HasColumnName("HeaderID");
            entity.Property(e => e.ProfileId).HasColumnName("ProfileID");
            entity.Property(e => e.Status)
                .HasMaxLength(1)
                .HasDefaultValue("A");
            entity.Property(e => e.StringValue).HasMaxLength(255);
            entity.Property(e => e.Syscreated)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("syscreated");
            entity.Property(e => e.Syscreator).HasColumnName("syscreator");
            entity.Property(e => e.Sysmodified)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("sysmodified");
            entity.Property(e => e.Sysmodifier).HasColumnName("sysmodifier");
        });

        modelBuilder.Entity<HrmpersonalObjectiveHeader>(entity =>
        {
            entity.HasKey(e => e.Id).IsClustered(false);

            entity.ToTable("HRMPersonalObjectiveHeaders");

            entity.HasIndex(e => new { e.ProfileId, e.CompetenceId }, "IX_HRMPersonalObjectiveHeaders")
                .IsUnique()
                .IsClustered();

            entity.Property(e => e.Id)
                .HasDefaultValueSql("(newid())")
                .HasColumnName("ID");
            entity.Property(e => e.CompetenceId).HasColumnName("CompetenceID");
            entity.Property(e => e.ProfileId).HasColumnName("ProfileID");
            entity.Property(e => e.Syscreated)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("syscreated");
            entity.Property(e => e.Syscreator).HasColumnName("syscreator");
            entity.Property(e => e.Sysmodified)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("sysmodified");
            entity.Property(e => e.Sysmodifier).HasColumnName("sysmodifier");
        });

        modelBuilder.Entity<HrmselectionValue>(entity =>
        {
            entity.ToTable("HRMSelectionValues");

            entity.Property(e => e.Id)
                .HasDefaultValueSql("(newid())")
                .HasColumnName("ID");
            entity.Property(e => e.CreatedDate)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime");
            entity.Property(e => e.Description).HasMaxLength(100);
            entity.Property(e => e.DisplayValue)
                .HasMaxLength(3)
                .IsFixedLength();
            entity.Property(e => e.ModifiedDate)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime");
        });

        modelBuilder.Entity<Hrpasswd>(entity =>
        {
            entity.HasKey(e => e.Id).IsClustered(false);

            entity.ToTable("HRPasswds");

            entity.HasIndex(e => e.Id, "HRPasswds_Index").IsClustered();

            entity.Property(e => e.Id)
                .HasDefaultValueSql("(newid())")
                .HasColumnName("ID");
            entity.Property(e => e.Word)
                .HasMaxLength(10)
                .IsFixedLength();
        });

        modelBuilder.Entity<Hrpayroll>(entity =>
        {
            entity.HasKey(e => e.Id).IsClustered(false);

            entity.ToTable("hrpayroll");

            entity.HasIndex(e => new { e.ResId, e.Startdate, e.Type, e.Contract }, "contract").IsUnique();

            entity.HasIndex(e => new { e.PayrollYear, e.ResId, e.Period }, "hrpayroll").IsClustered();

            entity.Property(e => e.Id).HasColumnName("ID");
            entity.Property(e => e.ComponentGroup)
                .HasMaxLength(10)
                .IsFixedLength()
                .HasColumnName("component_group");
            entity.Property(e => e.Contract).HasColumnName("contract");
            entity.Property(e => e.Country)
                .HasMaxLength(3)
                .IsFixedLength();
            entity.Property(e => e.Country15Char1).HasMaxLength(15);
            entity.Property(e => e.Country15Char2).HasMaxLength(15);
            entity.Property(e => e.Country15Char3).HasMaxLength(15);
            entity.Property(e => e.Country30Varchar1).HasMaxLength(30);
            entity.Property(e => e.Country30Varchar2).HasMaxLength(30);
            entity.Property(e => e.Country30Varchar3).HasMaxLength(30);
            entity.Property(e => e.Country30Varchar4).HasMaxLength(30);
            entity.Property(e => e.Country30Varchar5).HasMaxLength(30);
            entity.Property(e => e.Country70Varchar1).HasMaxLength(70);
            entity.Property(e => e.Country70Varchar2).HasMaxLength(70);
            entity.Property(e => e.Country70Varchar3).HasMaxLength(70);
            entity.Property(e => e.Country8Char1)
                .HasMaxLength(8)
                .IsFixedLength();
            entity.Property(e => e.Country8Char2)
                .HasMaxLength(8)
                .IsFixedLength();
            entity.Property(e => e.Country8Char3)
                .HasMaxLength(8)
                .IsFixedLength();
            entity.Property(e => e.Country8Char4)
                .HasMaxLength(8)
                .IsFixedLength();
            entity.Property(e => e.Country8Char5)
                .HasMaxLength(8)
                .IsFixedLength();
            entity.Property(e => e.Country8Char6)
                .HasMaxLength(8)
                .IsFixedLength();
            entity.Property(e => e.CountryDate1).HasColumnType("datetime");
            entity.Property(e => e.CountryDate10).HasColumnType("datetime");
            entity.Property(e => e.CountryDate11).HasColumnType("datetime");
            entity.Property(e => e.CountryDate12).HasColumnType("datetime");
            entity.Property(e => e.CountryDate13).HasColumnType("datetime");
            entity.Property(e => e.CountryDate14).HasColumnType("datetime");
            entity.Property(e => e.CountryDate15).HasColumnType("datetime");
            entity.Property(e => e.CountryDate16).HasColumnType("datetime");
            entity.Property(e => e.CountryDate17).HasColumnType("datetime");
            entity.Property(e => e.CountryDate18).HasColumnType("datetime");
            entity.Property(e => e.CountryDate19).HasColumnType("datetime");
            entity.Property(e => e.CountryDate2).HasColumnType("datetime");
            entity.Property(e => e.CountryDate20).HasColumnType("datetime");
            entity.Property(e => e.CountryDate21).HasColumnType("datetime");
            entity.Property(e => e.CountryDate22).HasColumnType("datetime");
            entity.Property(e => e.CountryDate3).HasColumnType("datetime");
            entity.Property(e => e.CountryDate4).HasColumnType("datetime");
            entity.Property(e => e.CountryDate5).HasColumnType("datetime");
            entity.Property(e => e.CountryDate6).HasColumnType("datetime");
            entity.Property(e => e.CountryDate7).HasColumnType("datetime");
            entity.Property(e => e.CountryDate8).HasColumnType("datetime");
            entity.Property(e => e.CountryDate9).HasColumnType("datetime");
            entity.Property(e => e.CountryTest1)
                .HasMaxLength(1)
                .IsFixedLength();
            entity.Property(e => e.CountryTest10)
                .HasMaxLength(1)
                .IsFixedLength();
            entity.Property(e => e.CountryTest11)
                .HasMaxLength(1)
                .IsFixedLength();
            entity.Property(e => e.CountryTest12)
                .HasMaxLength(1)
                .IsFixedLength();
            entity.Property(e => e.CountryTest13)
                .HasMaxLength(1)
                .IsFixedLength();
            entity.Property(e => e.CountryTest14)
                .HasMaxLength(1)
                .IsFixedLength();
            entity.Property(e => e.CountryTest15)
                .HasMaxLength(1)
                .IsFixedLength();
            entity.Property(e => e.CountryTest16)
                .HasMaxLength(1)
                .IsFixedLength();
            entity.Property(e => e.CountryTest17)
                .HasMaxLength(1)
                .IsFixedLength();
            entity.Property(e => e.CountryTest18)
                .HasMaxLength(1)
                .IsFixedLength();
            entity.Property(e => e.CountryTest19)
                .HasMaxLength(1)
                .IsFixedLength();
            entity.Property(e => e.CountryTest2)
                .HasMaxLength(1)
                .IsFixedLength();
            entity.Property(e => e.CountryTest20)
                .HasMaxLength(1)
                .IsFixedLength();
            entity.Property(e => e.CountryTest21)
                .HasMaxLength(1)
                .IsFixedLength();
            entity.Property(e => e.CountryTest22)
                .HasMaxLength(1)
                .IsFixedLength();
            entity.Property(e => e.CountryTest23)
                .HasMaxLength(1)
                .IsFixedLength();
            entity.Property(e => e.CountryTest24)
                .HasMaxLength(1)
                .IsFixedLength();
            entity.Property(e => e.CountryTest25)
                .HasMaxLength(1)
                .IsFixedLength();
            entity.Property(e => e.CountryTest26)
                .HasMaxLength(1)
                .IsFixedLength();
            entity.Property(e => e.CountryTest27)
                .HasMaxLength(1)
                .IsFixedLength();
            entity.Property(e => e.CountryTest28)
                .HasMaxLength(1)
                .IsFixedLength();
            entity.Property(e => e.CountryTest29)
                .HasMaxLength(1)
                .IsFixedLength();
            entity.Property(e => e.CountryTest3)
                .HasMaxLength(1)
                .IsFixedLength();
            entity.Property(e => e.CountryTest30)
                .HasMaxLength(1)
                .IsFixedLength();
            entity.Property(e => e.CountryTest31)
                .HasMaxLength(1)
                .IsFixedLength();
            entity.Property(e => e.CountryTest32)
                .HasMaxLength(1)
                .IsFixedLength();
            entity.Property(e => e.CountryTest33)
                .HasMaxLength(1)
                .IsFixedLength();
            entity.Property(e => e.CountryTest34)
                .HasMaxLength(1)
                .IsFixedLength();
            entity.Property(e => e.CountryTest35)
                .HasMaxLength(1)
                .IsFixedLength();
            entity.Property(e => e.CountryTest36)
                .HasMaxLength(1)
                .IsFixedLength();
            entity.Property(e => e.CountryTest37)
                .HasMaxLength(1)
                .IsFixedLength();
            entity.Property(e => e.CountryTest38)
                .HasMaxLength(1)
                .IsFixedLength();
            entity.Property(e => e.CountryTest39)
                .HasMaxLength(1)
                .IsFixedLength();
            entity.Property(e => e.CountryTest4)
                .HasMaxLength(1)
                .IsFixedLength();
            entity.Property(e => e.CountryTest40)
                .HasMaxLength(1)
                .IsFixedLength();
            entity.Property(e => e.CountryTest41)
                .HasMaxLength(1)
                .IsFixedLength();
            entity.Property(e => e.CountryTest42)
                .HasMaxLength(1)
                .IsFixedLength();
            entity.Property(e => e.CountryTest43)
                .HasMaxLength(1)
                .IsFixedLength();
            entity.Property(e => e.CountryTest44)
                .HasMaxLength(1)
                .IsFixedLength();
            entity.Property(e => e.CountryTest45)
                .HasMaxLength(1)
                .IsFixedLength();
            entity.Property(e => e.CountryTest46)
                .HasMaxLength(1)
                .IsFixedLength();
            entity.Property(e => e.CountryTest47)
                .HasMaxLength(1)
                .IsFixedLength();
            entity.Property(e => e.CountryTest48)
                .HasMaxLength(1)
                .IsFixedLength();
            entity.Property(e => e.CountryTest49)
                .HasMaxLength(1)
                .IsFixedLength();
            entity.Property(e => e.CountryTest5)
                .HasMaxLength(1)
                .IsFixedLength();
            entity.Property(e => e.CountryTest50)
                .HasMaxLength(1)
                .IsFixedLength();
            entity.Property(e => e.CountryTest6)
                .HasMaxLength(1)
                .IsFixedLength();
            entity.Property(e => e.CountryTest7)
                .HasMaxLength(1)
                .IsFixedLength();
            entity.Property(e => e.CountryTest8)
                .HasMaxLength(1)
                .IsFixedLength();
            entity.Property(e => e.CountryTest9)
                .HasMaxLength(1)
                .IsFixedLength();
            entity.Property(e => e.Description)
                .HasMaxLength(50)
                .HasColumnName("description");
            entity.Property(e => e.DocAttachmentId).HasColumnName("DocAttachmentID");
            entity.Property(e => e.Enddate)
                .HasColumnType("datetime")
                .HasColumnName("enddate");
            entity.Property(e => e.JobTitle)
                .HasMaxLength(12)
                .HasColumnName("job_title");
            entity.Property(e => e.PaymentPeriod)
                .HasMaxLength(1)
                .HasDefaultValue("M")
                .IsFixedLength()
                .HasColumnName("payment_period");
            entity.Property(e => e.Period).HasColumnName("period");
            entity.Property(e => e.ResId).HasColumnName("res_id");
            entity.Property(e => e.Startdate)
                .HasColumnType("datetime")
                .HasColumnName("startdate");
            entity.Property(e => e.Syscreated)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("syscreated");
            entity.Property(e => e.Syscreator).HasColumnName("syscreator");
            entity.Property(e => e.Sysguid)
                .HasDefaultValueSql("(newid())")
                .HasColumnName("sysguid");
            entity.Property(e => e.Sysmodified)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("sysmodified");
            entity.Property(e => e.Sysmodifier).HasColumnName("sysmodifier");
            entity.Property(e => e.Timestamp)
                .IsRowVersion()
                .IsConcurrencyToken()
                .HasColumnName("timestamp");
            entity.Property(e => e.Type)
                .HasMaxLength(1)
                .HasDefaultValue("N")
                .IsFixedLength()
                .HasColumnName("type");
        });

        modelBuilder.Entity<HrprocessLog>(entity =>
        {
            entity.ToTable("HRProcessLogs");

            entity.HasIndex(e => new { e.ProcessRequestsId, e.HreffectiveDateDataLogId }, "IX_HRProcLogs_EffecDatelog");

            entity.HasIndex(e => new { e.ProcessRequestsId, e.EmpId, e.FieldName }, "IX_HRProcLogs_Humres");

            entity.HasIndex(e => new { e.ProcessRequestsId, e.RequestId }, "IX_HRProcLogs_NewRequest");

            entity.HasIndex(e => new { e.ProcessRequestsId, e.OriginalRequest }, "IX_HRProcLogs_OrgRequest");

            entity.Property(e => e.Id)
                .ValueGeneratedNever()
                .HasColumnName("ID");
            entity.Property(e => e.EmpId).HasColumnName("EmpID");
            entity.Property(e => e.FieldName).HasMaxLength(50);
            entity.Property(e => e.HreffectiveDateDataLogId).HasColumnName("HREffectiveDateDataLogID");
            entity.Property(e => e.ProcessRequestsId).HasColumnName("ProcessRequestsID");
            entity.Property(e => e.ReferenceDate).HasColumnType("datetime");
            entity.Property(e => e.Syscreated)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("syscreated");
            entity.Property(e => e.Syscreator).HasColumnName("syscreator");
            entity.Property(e => e.Sysmodified)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("sysmodified");
            entity.Property(e => e.Sysmodifier).HasColumnName("sysmodifier");
            entity.Property(e => e.Timestamp)
                .IsRowVersion()
                .IsConcurrencyToken()
                .HasColumnName("timestamp");
        });

        modelBuilder.Entity<HrprocessRequest>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK_HRProcRequests");

            entity.ToTable("HRProcessRequests");

            entity.HasIndex(e => e.ProcessTypesId, "IX_HRProcessRequests");

            entity.Property(e => e.Id).HasColumnName("ID");
            entity.Property(e => e.Active).HasDefaultValue(true);
            entity.Property(e => e.Description).HasMaxLength(60);
            entity.Property(e => e.EmpId).HasColumnName("EmpID");
            entity.Property(e => e.FreeBoolField1).HasColumnName("FreeBoolField_1");
            entity.Property(e => e.FreeBoolField2).HasColumnName("FreeBoolField_2");
            entity.Property(e => e.FreeIntField1).HasColumnName("FreeIntField_1");
            entity.Property(e => e.FreeIntField2).HasColumnName("FreeIntField_2");
            entity.Property(e => e.FreeNumberField1).HasColumnName("FreeNumberField_1");
            entity.Property(e => e.FreeNumberField2).HasColumnName("FreeNumberField_2");
            entity.Property(e => e.FreeTextField1)
                .HasMaxLength(50)
                .HasColumnName("FreeTextField_1");
            entity.Property(e => e.FreeTextField2)
                .HasMaxLength(50)
                .HasColumnName("FreeTextField_2");
            entity.Property(e => e.Freefield1).HasColumnName("Freefield_1");
            entity.Property(e => e.Freefield2).HasColumnName("Freefield_2");
            entity.Property(e => e.NumberFrequency).HasDefaultValue(1);
            entity.Property(e => e.ProcessDescription).HasMaxLength(60);
            entity.Property(e => e.ProcessTypesId).HasColumnName("ProcessTypesID");
            entity.Property(e => e.Syscreated)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("syscreated");
            entity.Property(e => e.Syscreator).HasColumnName("syscreator");
            entity.Property(e => e.Sysmodified)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("sysmodified");
            entity.Property(e => e.Sysmodifier).HasColumnName("sysmodifier");
            entity.Property(e => e.Timestamp)
                .IsRowVersion()
                .IsConcurrencyToken()
                .HasColumnName("timestamp");
        });

        modelBuilder.Entity<HrprocessType>(entity =>
        {
            entity.ToTable("HRProcessTypes");

            entity.Property(e => e.Id).HasColumnName("ID");
            entity.Property(e => e.Active).HasDefaultValue(true);
            entity.Property(e => e.CompanyCode)
                .HasMaxLength(3)
                .IsFixedLength();
            entity.Property(e => e.CreateRole1).HasColumnName("CreateRole_1");
            entity.Property(e => e.CreateRole2).HasColumnName("CreateRole_2");
            entity.Property(e => e.CreateRole3).HasColumnName("CreateRole_3");
            entity.Property(e => e.CreateRoleLevel1).HasColumnName("CreateRoleLevel_1");
            entity.Property(e => e.CreateRoleLevel2).HasColumnName("CreateRoleLevel_2");
            entity.Property(e => e.CreateRoleLevel3).HasColumnName("CreateRoleLevel_3");
            entity.Property(e => e.Description).HasMaxLength(60);
            entity.Property(e => e.EndDate).HasColumnType("datetime");
            entity.Property(e => e.FieldName).HasMaxLength(60);
            entity.Property(e => e.ProcessRole1).HasColumnName("ProcessRole_1");
            entity.Property(e => e.ProcessRole2).HasColumnName("ProcessRole_2");
            entity.Property(e => e.ProcessRole3).HasColumnName("ProcessRole_3");
            entity.Property(e => e.ProcessRoleLevel1).HasColumnName("ProcessRoleLevel_1");
            entity.Property(e => e.ProcessRoleLevel2).HasColumnName("ProcessRoleLevel_2");
            entity.Property(e => e.ProcessRoleLevel3).HasColumnName("ProcessRoleLevel_3");
            entity.Property(e => e.StartDate).HasColumnType("datetime");
            entity.Property(e => e.Syscreated)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("syscreated");
            entity.Property(e => e.Syscreator).HasColumnName("syscreator");
            entity.Property(e => e.Sysmodified)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("sysmodified");
            entity.Property(e => e.Sysmodifier).HasColumnName("sysmodifier");
            entity.Property(e => e.TableName).HasMaxLength(60);
            entity.Property(e => e.Timestamp)
                .IsRowVersion()
                .IsConcurrencyToken()
                .HasColumnName("timestamp");
        });

        modelBuilder.Entity<Hrrole>(entity =>
        {
            entity.HasKey(e => e.Id).IsClustered(false);

            entity.ToTable("HRRoles");

            entity.HasIndex(e => e.EmpId, "EmpID");

            entity.HasIndex(e => new { e.RoleId, e.EmpId, e.RoleLevel }, "HRRoles").IsClustered();

            entity.Property(e => e.Id)
                .ValueGeneratedNever()
                .HasColumnName("ID");
            entity.Property(e => e.EmpId).HasColumnName("EmpID");
            entity.Property(e => e.RoleId).HasColumnName("RoleID");
        });

        modelBuilder.Entity<HrroleDef>(entity =>
        {
            entity.ToTable("HRRoleDefs");

            entity.Property(e => e.Id)
                .ValueGeneratedNever()
                .HasColumnName("ID");
            entity.Property(e => e.Description).HasMaxLength(60);
            entity.Property(e => e.DocId).HasColumnName("Doc_id");
            entity.Property(e => e.JobGroup)
                .HasMaxLength(10)
                .IsFixedLength();
            entity.Property(e => e.Ntgroup)
                .HasMaxLength(60)
                .HasColumnName("NTGroup");
        });

        modelBuilder.Entity<HrroleLevel>(entity =>
        {
            entity.ToTable("HRRoleLevels");

            entity.Property(e => e.Id)
                .ValueGeneratedNever()
                .HasColumnName("ID");
            entity.Property(e => e.Description).HasMaxLength(60);
            entity.Property(e => e.TermId).HasColumnName("TermID");
        });

        modelBuilder.Entity<Hrsk>(entity =>
        {
            entity.HasKey(e => e.Id).IsClustered(false);

            entity.ToTable("hrsk");

            entity.HasIndex(e => new { e.ResId, e.Line }, "hrsk")
                .IsUnique()
                .IsClustered();

            entity.Property(e => e.Id).HasColumnName("ID");
            entity.Property(e => e.Line).HasColumnName("line");
            entity.Property(e => e.ResId).HasColumnName("res_id");
            entity.Property(e => e.SkillType)
                .HasMaxLength(60)
                .HasColumnName("skill_type");
            entity.Property(e => e.Sklevel)
                .HasMaxLength(1)
                .IsFixedLength()
                .HasColumnName("sklevel");
            entity.Property(e => e.Syscreated)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("syscreated");
            entity.Property(e => e.Syscreator).HasColumnName("syscreator");
            entity.Property(e => e.Sysguid)
                .HasDefaultValueSql("(newid())")
                .HasColumnName("sysguid");
            entity.Property(e => e.Sysmodified)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("sysmodified");
            entity.Property(e => e.Sysmodifier).HasColumnName("sysmodifier");
            entity.Property(e => e.Timestamp)
                .IsRowVersion()
                .IsConcurrencyToken()
                .HasColumnName("timestamp");
        });

        modelBuilder.Entity<Hrwdoc>(entity =>
        {
            entity.HasKey(e => e.Id).IsClustered(false);

            entity.ToTable("hrwdoc");

            entity.HasIndex(e => new { e.DocCode, e.Type }, "hrwdoc")
                .IsUnique()
                .IsClustered();

            entity.Property(e => e.Id).HasColumnName("ID");
            entity.Property(e => e.Descr400)
                .HasMaxLength(40)
                .HasColumnName("descr40_0");
            entity.Property(e => e.Descr401)
                .HasMaxLength(40)
                .HasColumnName("descr40_1");
            entity.Property(e => e.Descr402)
                .HasMaxLength(40)
                .HasColumnName("descr40_2");
            entity.Property(e => e.Descr403)
                .HasMaxLength(40)
                .HasColumnName("descr40_3");
            entity.Property(e => e.Descr404)
                .HasMaxLength(40)
                .HasColumnName("descr40_4");
            entity.Property(e => e.DocCode)
                .HasMaxLength(8)
                .IsFixedLength()
                .HasColumnName("doc_code");
            entity.Property(e => e.Docid).HasColumnName("docid");
            entity.Property(e => e.MergeType)
                .HasMaxLength(1)
                .IsFixedLength();
            entity.Property(e => e.Syscreated)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("syscreated");
            entity.Property(e => e.Syscreator).HasColumnName("syscreator");
            entity.Property(e => e.Sysguid)
                .HasDefaultValueSql("(newid())")
                .HasColumnName("sysguid");
            entity.Property(e => e.Sysmodified)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("sysmodified");
            entity.Property(e => e.Sysmodifier).HasColumnName("sysmodifier");
            entity.Property(e => e.Timestamp)
                .IsRowVersion()
                .IsConcurrencyToken()
                .HasColumnName("timestamp");
            entity.Property(e => e.Type)
                .HasMaxLength(1)
                .IsFixedLength();
        });

        modelBuilder.Entity<Humre>(entity =>
        {
            entity.HasKey(e => e.Id).IsClustered(false);

            entity.ToTable("humres", tb => tb.HasTrigger("track_humres_changes"));

            entity.HasIndex(e => new { e.Comp, e.Crdnr }, "IDX_Humres_Comp_Crdnr");

            entity.HasIndex(e => e.ProcessedByBackgroundJob, "ProcessedByBackgroundJob");

            entity.HasIndex(e => e.UsrId, "UQ_humres_usr_id").IsUnique();

            entity.HasIndex(e => e.Crdnr, "crdnr");

            entity.HasIndex(e => new { e.BtwNummer, e.Id }, "hrbtw").IsUnique();

            entity.HasIndex(e => new { e.Buyer, e.ResId }, "hrsbuy").IsUnique();

            entity.HasIndex(e => new { e.Comp, e.Id }, "hrscmp").IsUnique();

            entity.HasIndex(e => new { e.Fullname, e.Id }, "hrsfnm").IsUnique();

            entity.HasIndex(e => new { e.Payempl, e.ResId }, "hrspay").IsUnique();

            entity.HasIndex(e => new { e.PrafdCode, e.Payempl, e.ResId }, "hrspra").IsUnique();

            entity.HasIndex(e => new { e.Projempl, e.ResId }, "hrsprj").IsUnique();

            entity.HasIndex(e => new { e.Representative, e.ResId }, "hrsrep").IsUnique();

            entity.HasIndex(e => new { e.SurName, e.Id }, "hrssnm").IsUnique();

            entity.HasIndex(e => new { e.SocsecNr, e.Payempl, e.ResId }, "hrssoc").IsUnique();

            entity.HasIndex(e => new { e.UsrId, e.Id }, "hrsusr").IsUnique();

            entity.HasIndex(e => new { e.UsrId2, e.Id }, "hrsusr2").IsUnique();

            entity.HasIndex(e => e.ResId, "humres")
                .IsUnique()
                .IsClustered();

            entity.HasIndex(e => new { e.EmpType, e.EmpStat, e.BackOfficeBlocked }, "ix_humres_BackOfficeBlocked");

            entity.HasIndex(e => new { e.EmpType, e.EmpStat, e.Blocked }, "ix_humres_typestatus");

            entity.HasIndex(e => new { e.Timestamp, e.EmpType }, "ix_timestamp");

            entity.HasIndex(e => new { e.ReptoId, e.Id }, "repto_id").IsUnique();

            entity.Property(e => e.Id).HasColumnName("ID");
            entity.Property(e => e.Absent).HasColumnName("absent");
            entity.Property(e => e.AddrNo)
                .HasMaxLength(10)
                .IsFixedLength()
                .UseCollation("SQL_Latin1_General_CP1_CI_AI")
                .HasColumnName("addr_no");
            entity.Property(e => e.AddrXtra)
                .HasMaxLength(10)
                .IsFixedLength()
                .UseCollation("SQL_Latin1_General_CP1_CI_AI")
                .HasColumnName("addr_xtra");
            entity.Property(e => e.AdjustedHireDate).HasColumnType("datetime");
            entity.Property(e => e.Adres1)
                .HasMaxLength(60)
                .UseCollation("SQL_Latin1_General_CP1_CI_AI")
                .HasColumnName("adres1");
            entity.Property(e => e.Adres2)
                .HasMaxLength(60)
                .UseCollation("SQL_Latin1_General_CP1_CI_AI")
                .HasColumnName("adres2");
            entity.Property(e => e.AdvCode)
                .HasMaxLength(1)
                .IsFixedLength()
                .HasColumnName("adv_code");
            entity.Property(e => e.Affix)
                .HasMaxLength(64)
                .UseCollation("SQL_Latin1_General_CP1_CI_AI")
                .HasColumnName("affix");
            entity.Property(e => e.ApplicationStage)
                .HasMaxLength(1)
                .IsFixedLength();
            entity.Property(e => e.Assistant).HasColumnName("assistant");
            entity.Property(e => e.AttachmentId).HasColumnName("AttachmentID");
            entity.Property(e => e.AttachmentType)
                .HasMaxLength(1)
                .IsFixedLength();
            entity.Property(e => e.Bankac0)
                .HasMaxLength(34)
                .HasColumnName("bankac_0");
            entity.Property(e => e.Bankac1)
                .HasMaxLength(34)
                .HasColumnName("bankac_1");
            entity.Property(e => e.BirthAffix)
                .HasMaxLength(64)
                .UseCollation("SQL_Latin1_General_CP1_CI_AI")
                .HasColumnName("birth_affix");
            entity.Property(e => e.BirthPrefix)
                .HasMaxLength(64)
                .UseCollation("SQL_Latin1_General_CP1_CI_AI")
                .HasColumnName("birth_prefix");
            entity.Property(e => e.Blocked).HasColumnName("blocked");
            entity.Property(e => e.BtwNummer)
                .HasMaxLength(20)
                .HasColumnName("btw_nummer");
            entity.Property(e => e.Buyer).HasColumnName("buyer");
            entity.Property(e => e.ChildBirthDate1).HasColumnType("datetime");
            entity.Property(e => e.ChildBirthDate2).HasColumnType("datetime");
            entity.Property(e => e.ChildBirthDate3).HasColumnType("datetime");
            entity.Property(e => e.ChildBirthDate4).HasColumnType("datetime");
            entity.Property(e => e.ChildBirthDate5).HasColumnType("datetime");
            entity.Property(e => e.ChildName1)
                .HasMaxLength(64)
                .UseCollation("SQL_Latin1_General_CP1_CI_AI");
            entity.Property(e => e.ChildName2)
                .HasMaxLength(64)
                .UseCollation("SQL_Latin1_General_CP1_CI_AI");
            entity.Property(e => e.ChildName3)
                .HasMaxLength(64)
                .UseCollation("SQL_Latin1_General_CP1_CI_AI");
            entity.Property(e => e.ChildName4)
                .HasMaxLength(64)
                .UseCollation("SQL_Latin1_General_CP1_CI_AI");
            entity.Property(e => e.ChildName5)
                .HasMaxLength(64)
                .UseCollation("SQL_Latin1_General_CP1_CI_AI");
            entity.Property(e => e.Classification)
                .HasMaxLength(3)
                .IsFixedLength();
            entity.Property(e => e.CmpWwn).HasColumnName("cmp_wwn");
            entity.Property(e => e.Comp)
                .HasMaxLength(3)
                .IsFixedLength()
                .HasColumnName("comp");
            entity.Property(e => e.ContEndDate)
                .HasColumnType("datetime")
                .HasColumnName("cont_end_date");
            entity.Property(e => e.Costcenter)
                .HasMaxLength(8)
                .IsFixedLength()
                .HasColumnName("costcenter");
            entity.Property(e => e.CrcardExpd)
                .HasColumnType("datetime")
                .HasColumnName("crcard_expd");
            entity.Property(e => e.CrcardNo)
                .HasMaxLength(30)
                .HasColumnName("crcard_no");
            entity.Property(e => e.CrcardType)
                .HasMaxLength(1)
                .IsFixedLength()
                .HasColumnName("crcard_type");
            entity.Property(e => e.Crdnr)
                .HasMaxLength(30)
                .HasColumnName("crdnr");
            entity.Property(e => e.DateOfDead).HasColumnType("datetime");
            entity.Property(e => e.Email)
                .HasMaxLength(255)
                .HasColumnName("email");
            entity.Property(e => e.EmpStat)
                .HasMaxLength(1)
                .IsFixedLength()
                .HasColumnName("emp_stat");
            entity.Property(e => e.EmpStatd)
                .HasColumnType("datetime")
                .HasColumnName("emp_statd");
            entity.Property(e => e.EmpType)
                .HasMaxLength(1)
                .IsFixedLength()
                .HasColumnName("emp_type");
            entity.Property(e => e.ExtraCode)
                .HasMaxLength(12)
                .HasColumnName("extra_code");
            entity.Property(e => e.ExtraText)
                .HasMaxLength(20)
                .HasColumnName("extra_text");
            entity.Property(e => e.Exttar).HasColumnName("exttar");
            entity.Property(e => e.Faxnr)
                .HasMaxLength(25)
                .HasColumnName("faxnr");
            entity.Property(e => e.FirstName)
                .HasMaxLength(64)
                .UseCollation("SQL_Latin1_General_CP1_CI_AI")
                .HasColumnName("first_name");
            entity.Property(e => e.Freefield1)
                .HasMaxLength(50)
                .UseCollation("SQL_Latin1_General_CP1_CI_AI")
                .HasColumnName("freefield1");
            entity.Property(e => e.Freefield10)
                .HasColumnType("datetime")
                .HasColumnName("freefield10");
            entity.Property(e => e.Freefield11).HasColumnName("freefield11");
            entity.Property(e => e.Freefield12).HasColumnName("freefield12");
            entity.Property(e => e.Freefield13).HasColumnName("freefield13");
            entity.Property(e => e.Freefield14).HasColumnName("freefield14");
            entity.Property(e => e.Freefield15).HasColumnName("freefield15");
            entity.Property(e => e.Freefield16).HasColumnName("freefield16");
            entity.Property(e => e.Freefield17).HasColumnName("freefield17");
            entity.Property(e => e.Freefield18).HasColumnName("freefield18");
            entity.Property(e => e.Freefield19).HasColumnName("freefield19");
            entity.Property(e => e.Freefield2)
                .HasMaxLength(50)
                .UseCollation("SQL_Latin1_General_CP1_CI_AI")
                .HasColumnName("freefield2");
            entity.Property(e => e.Freefield20).HasColumnName("freefield20");
            entity.Property(e => e.Freefield3)
                .HasMaxLength(50)
                .UseCollation("SQL_Latin1_General_CP1_CI_AI")
                .HasColumnName("freefield3");
            entity.Property(e => e.Freefield4)
                .HasMaxLength(50)
                .UseCollation("SQL_Latin1_General_CP1_CI_AI")
                .HasColumnName("freefield4");
            entity.Property(e => e.Freefield5)
                .HasMaxLength(50)
                .UseCollation("SQL_Latin1_General_CP1_CI_AI")
                .HasColumnName("freefield5");
            entity.Property(e => e.Freefield6)
                .HasColumnType("datetime")
                .HasColumnName("freefield6");
            entity.Property(e => e.Freefield7)
                .HasColumnType("datetime")
                .HasColumnName("freefield7");
            entity.Property(e => e.Freefield8)
                .HasColumnType("datetime")
                .HasColumnName("freefield8");
            entity.Property(e => e.Freefield9)
                .HasColumnType("datetime")
                .HasColumnName("freefield9");
            entity.Property(e => e.Fte).HasColumnName("fte");
            entity.Property(e => e.Fullname)
                .HasMaxLength(64)
                .UseCollation("SQL_Latin1_General_CP1_CI_AI")
                .HasColumnName("fullname");
            entity.Property(e => e.Funcnivo)
                .HasMaxLength(4)
                .IsFixedLength()
                .HasColumnName("funcnivo");
            entity.Property(e => e.GebLdat)
                .HasColumnType("datetime")
                .HasColumnName("geb_ldat");
            entity.Property(e => e.GebPl)
                .HasMaxLength(30)
                .UseCollation("SQL_Latin1_General_CP1_CI_AI")
                .HasColumnName("geb_pl");
            entity.Property(e => e.HomePageUrl)
                .HasMaxLength(255)
                .HasColumnName("HomePageURL");
            entity.Property(e => e.Identiteit)
                .HasMaxLength(20)
                .HasColumnName("identiteit");
            entity.Property(e => e.Initialen)
                .HasMaxLength(10)
                .IsFixedLength()
                .UseCollation("SQL_Latin1_General_CP1_CI_AI")
                .HasColumnName("initialen");
            entity.Property(e => e.InternetUrl)
                .HasMaxLength(255)
                .HasColumnName("InternetURL");
            entity.Property(e => e.Internetac)
                .HasMaxLength(60)
                .UseCollation("SQL_Latin1_General_CP1_CI_AI")
                .HasColumnName("internetac");
            entity.Property(e => e.Inttar).HasColumnName("inttar");
            entity.Property(e => e.IsPersonalAccount).HasDefaultValue((byte)0);
            entity.Property(e => e.IsoTaalcd)
                .HasMaxLength(3)
                .IsFixedLength()
                .HasColumnName("iso_taalcd");
            entity.Property(e => e.ItemCode).HasMaxLength(30);
            entity.Property(e => e.JobCategory)
                .HasMaxLength(10)
                .IsFixedLength()
                .UseCollation("SQL_Latin1_General_CP1_CI_AI");
            entity.Property(e => e.JobLevel).HasColumnName("job_level");
            entity.Property(e => e.JobTitle)
                .HasMaxLength(12)
                .HasColumnName("job_title");
            entity.Property(e => e.Kamer)
                .HasMaxLength(10)
                .IsFixedLength()
                .UseCollation("SQL_Latin1_General_CP1_CI_AI")
                .HasColumnName("kamer");
            entity.Property(e => e.KstdrCode)
                .HasMaxLength(8)
                .IsFixedLength()
                .HasColumnName("kstdr_code");
            entity.Property(e => e.LandIso)
                .HasMaxLength(3)
                .IsFixedLength()
                .HasColumnName("land_iso");
            entity.Property(e => e.LandIso2)
                .HasMaxLength(3)
                .IsFixedLength()
                .HasColumnName("land_iso2");
            entity.Property(e => e.Ldatindienst)
                .HasColumnType("datetime")
                .HasColumnName("ldatindienst");
            entity.Property(e => e.Ldatuitdienst)
                .HasColumnType("datetime")
                .HasColumnName("ldatuitdienst");
            entity.Property(e => e.Loc)
                .HasMaxLength(10)
                .IsFixedLength()
                .HasColumnName("loc");
            entity.Property(e => e.MaidenName)
                .HasMaxLength(30)
                .UseCollation("SQL_Latin1_General_CP1_CI_AI")
                .HasColumnName("maiden_name");
            entity.Property(e => e.Mail)
                .HasMaxLength(100)
                .HasColumnName("mail");
            entity.Property(e => e.MainLoc)
                .HasMaxLength(10)
                .IsFixedLength();
            entity.Property(e => e.MarDate)
                .HasColumnType("datetime")
                .HasColumnName("mar_date");
            entity.Property(e => e.MarStat)
                .HasMaxLength(1)
                .IsFixedLength()
                .HasColumnName("mar_stat");
            entity.Property(e => e.MiddleName)
                .HasMaxLength(30)
                .UseCollation("SQL_Latin1_General_CP1_CI_AI")
                .HasColumnName("middle_name");
            entity.Property(e => e.MobileShort)
                .HasMaxLength(15)
                .HasColumnName("mobile_short");
            entity.Property(e => e.MsnId)
                .HasMaxLength(60)
                .HasColumnName("MsnID");
            entity.Property(e => e.Mv1)
                .HasMaxLength(1)
                .IsFixedLength()
                .HasColumnName("mv1");
            entity.Property(e => e.Nat)
                .HasMaxLength(3)
                .IsFixedLength()
                .HasColumnName("nat");
            entity.Property(e => e.Notes).HasColumnName("notes");
            entity.Property(e => e.OfficialName)
                .HasMaxLength(3)
                .HasDefaultValue("01")
                .IsFixedLength();
            entity.Property(e => e.OldBu)
                .HasMaxLength(255)
                .IsFixedLength()
                .HasColumnName("OldBU");
            entity.Property(e => e.OldJobCode)
                .HasMaxLength(10)
                .IsFixedLength();
            entity.Property(e => e.OldNtfullName)
                .HasMaxLength(64)
                .HasColumnName("OldNTFullName");
            entity.Property(e => e.OldPhP).HasMaxLength(50);
            entity.Property(e => e.OldReferenceN).HasMaxLength(50);
            entity.Property(e => e.OldTabN).HasMaxLength(50);
            entity.Property(e => e.ParentId).HasColumnName("ParentID");
            entity.Property(e => e.Partner)
                .HasMaxLength(64)
                .UseCollation("SQL_Latin1_General_CP1_CI_AI");
            entity.Property(e => e.PartnerBirthDate).HasColumnType("datetime");
            entity.Property(e => e.Payempl).HasColumnName("payempl");
            entity.Property(e => e.PictureThumbnailFilename).HasMaxLength(128);
            entity.Property(e => e.Picturefilename)
                .HasMaxLength(128)
                .HasColumnName("picturefilename");
            entity.Property(e => e.Postcode)
                .HasMaxLength(20)
                .UseCollation("SQL_Latin1_General_CP1_CI_AI")
                .HasColumnName("postcode");
            entity.Property(e => e.PrafdCode)
                .HasMaxLength(8)
                .IsFixedLength()
                .HasColumnName("prafd_code");
            entity.Property(e => e.Predcode)
                .HasMaxLength(4)
                .IsFixedLength()
                .HasColumnName("predcode");
            entity.Property(e => e.Predcode2)
                .HasMaxLength(64)
                .HasColumnName("predcode2");
            entity.Property(e => e.Prefix)
                .HasMaxLength(64)
                .UseCollation("SQL_Latin1_General_CP1_CI_AI")
                .HasColumnName("prefix");
            entity.Property(e => e.ProbEndd)
                .HasColumnType("datetime")
                .HasColumnName("prob_endd");
            entity.Property(e => e.ProbPer)
                .HasMaxLength(2)
                .IsFixedLength()
                .HasColumnName("prob_per");
            entity.Property(e => e.ProbPert)
                .HasMaxLength(1)
                .IsFixedLength()
                .HasColumnName("prob_pert");
            entity.Property(e => e.Projempl).HasColumnName("projempl");
            entity.Property(e => e.PurLimit).HasColumnName("pur_limit");
            entity.Property(e => e.Race)
                .HasMaxLength(2)
                .IsFixedLength()
                .HasColumnName("race");
            entity.Property(e => e.Rating)
                .HasMaxLength(3)
                .IsFixedLength()
                .HasColumnName("rating");
            entity.Property(e => e.ReasonResign)
                .HasMaxLength(120)
                .UseCollation("SQL_Latin1_General_CP1_CI_AI")
                .HasColumnName("reason_resign");
            entity.Property(e => e.Representative).HasColumnName("representative");
            entity.Property(e => e.ReptoId).HasColumnName("repto_id");
            entity.Property(e => e.ResId).HasColumnName("res_id");
            entity.Property(e => e.Rmalimit).HasColumnName("RMALimit");
            entity.Property(e => e.SignatureFile).HasMaxLength(128);
            entity.Property(e => e.SipUri)
                .HasMaxLength(255)
                .HasColumnName("SipURI");
            entity.Property(e => e.SkypeId)
                .HasMaxLength(60)
                .HasColumnName("SkypeID");
            entity.Property(e => e.SlipTekst)
                .HasMaxLength(210)
                .HasColumnName("slip_tekst");
            entity.Property(e => e.SocsecNr)
                .HasMaxLength(50)
                .HasColumnName("socsec_nr");
            entity.Property(e => e.StateCode)
                .HasMaxLength(3)
                .IsFixedLength();
            entity.Property(e => e.SurName)
                .HasMaxLength(64)
                .UseCollation("SQL_Latin1_General_CP1_CI_AI")
                .HasColumnName("sur_name");
            entity.Property(e => e.Syscreated)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("syscreated");
            entity.Property(e => e.Syscreator).HasColumnName("syscreator");
            entity.Property(e => e.Sysguid)
                .HasDefaultValueSql("(newid())")
                .HasColumnName("sysguid");
            entity.Property(e => e.Sysmodified)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("sysmodified");
            entity.Property(e => e.Sysmodifier).HasColumnName("sysmodifier");
            entity.Property(e => e.Task)
                .HasMaxLength(90)
                .UseCollation("SQL_Latin1_General_CP1_CI_AI")
                .HasColumnName("task");
            entity.Property(e => e.TelnrPrv)
                .HasMaxLength(25)
                .HasColumnName("telnr_prv");
            entity.Property(e => e.TelnrPrv2)
                .HasMaxLength(25)
                .HasColumnName("telnr_prv2");
            entity.Property(e => e.TelnrWerk)
                .HasMaxLength(25)
                .HasColumnName("telnr_werk");
            entity.Property(e => e.TelnrWerk2)
                .HasMaxLength(25)
                .HasColumnName("telnr_werk2");
            entity.Property(e => e.Timestamp)
                .IsRowVersion()
                .IsConcurrencyToken()
                .HasColumnName("timestamp");
            entity.Property(e => e.Toestel)
                .HasMaxLength(10)
                .IsFixedLength()
                .HasColumnName("toestel");
            entity.Property(e => e.UitkCode)
                .HasMaxLength(3)
                .IsFixedLength()
                .HasColumnName("uitk_code");
            entity.Property(e => e.UserGroup)
                .HasMaxLength(30)
                .HasDefaultValue("Baco");
            entity.Property(e => e.UsrId)
                .HasMaxLength(255)
                .HasColumnName("usr_id");
            entity.Property(e => e.UsrId2)
                .HasMaxLength(255)
                .HasColumnName("usr_id2");
            entity.Property(e => e.VacancyQuantity).HasDefaultValue(1);
            entity.Property(e => e.VacancyStartDate).HasColumnType("datetime");
            entity.Property(e => e.VacancyType)
                .HasMaxLength(1)
                .HasDefaultValue("I")
                .IsFixedLength();
            entity.Property(e => e.Valcode)
                .HasMaxLength(3)
                .IsFixedLength()
                .HasColumnName("valcode");
            entity.Property(e => e.Woonpl)
                .HasMaxLength(30)
                .UseCollation("SQL_Latin1_General_CP1_CI_AI")
                .HasColumnName("woonpl");
            entity.Property(e => e.Workstat)
                .HasMaxLength(20)
                .UseCollation("SQL_Latin1_General_CP1_CI_AI")
                .HasColumnName("workstat");
            entity.Property(e => e.WorkstatAddr)
                .HasMaxLength(57)
                .UseCollation("SQL_Latin1_General_CP1_CI_AI")
                .HasColumnName("workstat_addr");
        });

        modelBuilder.Entity<HumresAudit>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("humres_audit");

            entity.Property(e => e.DateCreated)
                .HasColumnType("datetime")
                .HasColumnName("dateCreated");
            entity.Property(e => e.FieldName)
                .HasMaxLength(50)
                .HasColumnName("fieldName");
            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.NewValue)
                .HasMaxLength(50)
                .HasColumnName("newValue");
            entity.Property(e => e.OldValue)
                .HasMaxLength(50)
                .HasColumnName("oldValue");
            entity.Property(e => e.ResId).HasColumnName("res_id");
        });

        modelBuilder.Entity<HyperinflationaryPeriod>(entity =>
        {
            entity.HasIndex(e => new { e.CurrencyCode, e.YearFrom, e.PeriodFrom }, "IX_EffectivePeriod");

            entity.Property(e => e.Id).HasColumnName("ID");
            entity.Property(e => e.Created)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime");
            entity.Property(e => e.CurrencyCode)
                .HasMaxLength(3)
                .IsFixedLength();
            entity.Property(e => e.Modified)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime");
            entity.Property(e => e.PeriodFrom)
                .HasMaxLength(3)
                .IsFixedLength();
        });

        modelBuilder.Entity<IntegerRelation>(entity =>
        {
            entity.HasKey(e => new { e.Type, e.Parent, e.Id });

            entity.HasIndex(e => new { e.Type, e.Id }, "IntegerRelations_ID");

            entity.Property(e => e.Id).HasColumnName("ID");
        });

        modelBuilder.Entity<IntegrationServer>(entity =>
        {
            entity.HasNoKey();

            entity.HasIndex(e => e.InstanceName, "IX_IntegrationServers");

            entity.HasIndex(e => e.Id, "PK_IntegrationServers").IsClustered();

            entity.Property(e => e.ClientId).HasColumnName("ClientID");
            entity.Property(e => e.EndPoint).HasMaxLength(255);
            entity.Property(e => e.Id)
                .ValueGeneratedOnAdd()
                .HasColumnName("ID");
            entity.Property(e => e.InstanceName).HasMaxLength(255);
            entity.Property(e => e.ListenerEndPoint).HasMaxLength(255);
            entity.Property(e => e.Provider).HasMaxLength(16);
        });

        modelBuilder.Entity<Intfac>(entity =>
        {
            entity.HasKey(e => e.Id).IsClustered(false);

            entity.ToTable("intfac");

            entity.HasIndex(e => e.Statfactor, "intfac")
                .IsUnique()
                .IsClustered();

            entity.Property(e => e.Id).HasColumnName("ID");
            entity.Property(e => e.IntFactor).HasColumnName("int_factor");
            entity.Property(e => e.Oms25)
                .HasMaxLength(25)
                .HasColumnName("oms25");
            entity.Property(e => e.Statfactor)
                .HasMaxLength(3)
                .IsFixedLength()
                .HasColumnName("statfactor");
            entity.Property(e => e.Syscreated)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("syscreated");
            entity.Property(e => e.Syscreator).HasColumnName("syscreator");
            entity.Property(e => e.Sysguid)
                .HasDefaultValueSql("(newid())")
                .HasColumnName("sysguid");
            entity.Property(e => e.Sysmodified)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("sysmodified");
            entity.Property(e => e.Sysmodifier).HasColumnName("sysmodifier");
            entity.Property(e => e.Timestamp)
                .IsRowVersion()
                .IsConcurrencyToken()
                .HasColumnName("timestamp");
        });

        modelBuilder.Entity<Inthav>(entity =>
        {
            entity.HasKey(e => e.Id).IsClustered(false);

            entity.ToTable("inthav");

            entity.HasIndex(e => new { e.LandIso, e.PltsLl }, "inthav")
                .IsUnique()
                .IsClustered();

            entity.HasIndex(e => new { e.LandIso, e.Inthavcode, e.Id }, "inthcd").IsUnique();

            entity.HasIndex(e => new { e.LandIso, e.SoortHav, e.PltsLl }, "inthsh").IsUnique();

            entity.HasIndex(e => new { e.LandIso, e.Oms30, e.Id }, "intoms").IsUnique();

            entity.Property(e => e.Id).HasColumnName("ID");
            entity.Property(e => e.Inthavcode)
                .HasMaxLength(6)
                .IsFixedLength()
                .HasColumnName("inthavcode");
            entity.Property(e => e.LandIso)
                .HasMaxLength(3)
                .IsFixedLength()
                .HasColumnName("land_iso");
            entity.Property(e => e.Oms30)
                .HasMaxLength(30)
                .HasColumnName("oms30");
            entity.Property(e => e.PltsLl)
                .HasMaxLength(10)
                .IsFixedLength()
                .HasColumnName("plts_ll");
            entity.Property(e => e.SoortHav)
                .HasMaxLength(1)
                .IsFixedLength()
                .HasColumnName("soort_hav");
            entity.Property(e => e.Syscreated)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("syscreated");
            entity.Property(e => e.Syscreator).HasColumnName("syscreator");
            entity.Property(e => e.Sysguid)
                .HasDefaultValueSql("(newid())")
                .HasColumnName("sysguid");
            entity.Property(e => e.Sysmodified)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("sysmodified");
            entity.Property(e => e.Sysmodifier).HasColumnName("sysmodifier");
            entity.Property(e => e.Timestamp)
                .IsRowVersion()
                .IsConcurrencyToken()
                .HasColumnName("timestamp");
            entity.Property(e => e.Tonen)
                .HasDefaultValue((byte)1)
                .HasColumnName("tonen");
        });

        modelBuilder.Entity<Inthi>(entity =>
        {
            entity.HasKey(e => e.Id).IsClustered(false);

            entity.ToTable("inthis");

            entity.HasIndex(e => new { e.Artcode, e.Faknr, e.Id }, "intart").IsUnique();

            entity.HasIndex(e => new { e.Rubriek, e.Datum, e.Id }, "intdat").IsUnique();

            entity.HasIndex(e => new { e.Faknr, e.Artcode, e.Id }, "intfnr").IsUnique();

            entity.HasIndex(e => e.IntraNr, "inthis")
                .IsUnique()
                .IsClustered();

            entity.HasIndex(e => new { e.Rubriek, e.Statistnr, e.Datum, e.Id }, "inthnr").IsUnique();

            entity.HasIndex(e => e.TransactionGuid, "inttas");

            entity.HasIndex(e => new { e.Gereed, e.Statjaar, e.Statperiod, e.Id }, "intvw").IsUnique();

            entity.HasIndex(e => e.Crdnr, "ix_crdnr");

            entity.HasIndex(e => e.Debnr, "ix_debnr");

            entity.Property(e => e.Id).HasColumnName("ID");
            entity.Property(e => e.Aantal).HasColumnName("aantal");
            entity.Property(e => e.Affiliates)
                .HasMaxLength(1)
                .IsFixedLength()
                .HasColumnName("affiliates");
            entity.Property(e => e.Artcode)
                .HasMaxLength(30)
                .HasColumnName("artcode");
            entity.Property(e => e.Boecode)
                .HasMaxLength(2)
                .IsFixedLength()
                .HasColumnName("boecode");
            entity.Property(e => e.Container).HasColumnName("container");
            entity.Property(e => e.Crdnr)
                .HasMaxLength(6)
                .IsFixedLength()
                .HasColumnName("crdnr");
            entity.Property(e => e.Csacode)
                .HasMaxLength(1)
                .IsFixedLength()
                .HasColumnName("csacode");
            entity.Property(e => e.Datum)
                .HasColumnType("datetime")
                .HasColumnName("datum");
            entity.Property(e => e.Debnr)
                .HasMaxLength(6)
                .IsFixedLength()
                .HasColumnName("debnr");
            entity.Property(e => e.Docnumber)
                .HasMaxLength(30)
                .HasColumnName("docnumber");
            entity.Property(e => e.Faknr)
                .HasMaxLength(8)
                .IsFixedLength()
                .HasColumnName("faknr");
            entity.Property(e => e.Gereed).HasColumnName("gereed");
            entity.Property(e => e.GewichtIn).HasColumnName("gewicht_in");
            entity.Property(e => e.IntRegio)
                .HasMaxLength(10)
                .IsFixedLength()
                .HasColumnName("int_regio");
            entity.Property(e => e.IntraLvcd)
                .HasMaxLength(10)
                .IsFixedLength()
                .HasColumnName("intra_lvcd");
            entity.Property(e => e.IntraNr)
                .HasMaxLength(10)
                .IsFixedLength()
                .HasColumnName("intra_nr");
            entity.Property(e => e.Koers).HasColumnName("koers");
            entity.Property(e => e.LandIso)
                .HasMaxLength(3)
                .IsFixedLength()
                .HasColumnName("land_iso");
            entity.Property(e => e.Landabc)
                .HasMaxLength(3)
                .IsFixedLength()
                .HasColumnName("landabc");
            entity.Property(e => e.Landbest)
                .HasMaxLength(3)
                .IsFixedLength()
                .HasColumnName("landbest");
            entity.Property(e => e.Landherk)
                .HasMaxLength(3)
                .IsFixedLength()
                .HasColumnName("landherk");
            entity.Property(e => e.Landoorspr)
                .HasMaxLength(3)
                .IsFixedLength()
                .HasColumnName("landoorspr");
            entity.Property(e => e.Nettowrde).HasColumnName("nettowrde");
            entity.Property(e => e.Oms20)
                .HasMaxLength(20)
                .HasColumnName("oms20");
            entity.Property(e => e.Ontvfnr)
                .HasMaxLength(8)
                .IsFixedLength()
                .HasColumnName("ontvfnr");
            entity.Property(e => e.PltsLl)
                .HasMaxLength(10)
                .IsFixedLength()
                .HasColumnName("plts_ll");
            entity.Property(e => e.Ref)
                .HasMaxLength(35)
                .HasColumnName("ref");
            entity.Property(e => e.Rubriek)
                .HasMaxLength(1)
                .IsFixedLength()
                .HasColumnName("rubriek");
            entity.Property(e => e.Stateenh).HasColumnName("stateenh");
            entity.Property(e => e.Statfact2)
                .HasMaxLength(3)
                .IsFixedLength()
                .HasColumnName("statfact2");
            entity.Property(e => e.Statfactor)
                .HasMaxLength(3)
                .IsFixedLength()
                .HasColumnName("statfactor");
            entity.Property(e => e.Statistnr)
                .HasMaxLength(9)
                .IsFixedLength()
                .HasColumnName("statistnr");
            entity.Property(e => e.Statjaar)
                .HasMaxLength(4)
                .IsFixedLength()
                .HasColumnName("statjaar");
            entity.Property(e => e.Statperiod)
                .HasMaxLength(3)
                .IsFixedLength()
                .HasColumnName("statperiod");
            entity.Property(e => e.Status)
                .HasMaxLength(1)
                .IsFixedLength()
                .HasColumnName("status");
            entity.Property(e => e.Statwaarde).HasColumnName("statwaarde");
            entity.Property(e => e.Stelsel)
                .HasMaxLength(10)
                .IsFixedLength()
                .HasColumnName("stelsel");
            entity.Property(e => e.Syscreated)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("syscreated");
            entity.Property(e => e.Syscreator).HasColumnName("syscreator");
            entity.Property(e => e.Sysguid)
                .HasDefaultValueSql("(newid())")
                .HasColumnName("sysguid");
            entity.Property(e => e.Sysmodified)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("sysmodified");
            entity.Property(e => e.Sysmodifier).HasColumnName("sysmodifier");
            entity.Property(e => e.Taric)
                .HasMaxLength(2)
                .IsFixedLength()
                .HasColumnName("taric");
            entity.Property(e => e.Timestamp)
                .IsRowVersion()
                .IsConcurrencyToken()
                .HasColumnName("timestamp");
            entity.Property(e => e.TransactA)
                .HasMaxLength(10)
                .IsFixedLength()
                .HasColumnName("transact_a");
            entity.Property(e => e.TransactB)
                .HasMaxLength(10)
                .IsFixedLength()
                .HasColumnName("transact_b");
            entity.Property(e => e.TrsshpmCd)
                .HasMaxLength(10)
                .IsFixedLength()
                .HasColumnName("trsshpm_cd");
            entity.Property(e => e.ValBdr).HasColumnName("val_bdr");
            entity.Property(e => e.Valcode)
                .HasMaxLength(3)
                .IsFixedLength()
                .HasColumnName("valcode");
            entity.Property(e => e.Vervoer)
                .HasMaxLength(10)
                .IsFixedLength()
                .HasColumnName("vervoer");
        });

        modelBuilder.Entity<Intlev>(entity =>
        {
            entity.HasKey(e => e.Id).IsClustered(false);

            entity.ToTable("intlev");

            entity.HasIndex(e => new { e.LandIso, e.Intlevcode, e.Id }, "intlcd").IsUnique();

            entity.HasIndex(e => new { e.LandIso, e.IntraLvcd }, "intlev")
                .IsUnique()
                .IsClustered();

            entity.Property(e => e.Id).HasColumnName("ID");
            entity.Property(e => e.Intlevcode)
                .HasMaxLength(4)
                .IsFixedLength()
                .HasColumnName("intlevcode");
            entity.Property(e => e.IntraLvcd)
                .HasMaxLength(10)
                .IsFixedLength()
                .HasColumnName("intra_lvcd");
            entity.Property(e => e.LandIso)
                .HasMaxLength(3)
                .IsFixedLength()
                .HasColumnName("land_iso");
            entity.Property(e => e.Oms50)
                .HasMaxLength(60)
                .HasColumnName("oms50");
            entity.Property(e => e.Syscreated)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("syscreated");
            entity.Property(e => e.Syscreator).HasColumnName("syscreator");
            entity.Property(e => e.Sysguid)
                .HasDefaultValueSql("(newid())")
                .HasColumnName("sysguid");
            entity.Property(e => e.Sysmodified)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("sysmodified");
            entity.Property(e => e.Sysmodifier).HasColumnName("sysmodifier");
            entity.Property(e => e.Timestamp)
                .IsRowVersion()
                .IsConcurrencyToken()
                .HasColumnName("timestamp");
            entity.Property(e => e.Tonen)
                .HasDefaultValue((byte)1)
                .HasColumnName("tonen");
        });

        modelBuilder.Entity<Intmtf>(entity =>
        {
            entity.HasKey(e => e.Id).IsClustered(false);

            entity.ToTable("intmtf");

            entity.HasIndex(e => e.Maatstaf, "intmtf")
                .IsUnique()
                .IsClustered();

            entity.Property(e => e.Id).HasColumnName("ID");
            entity.Property(e => e.Maatstaf)
                .HasMaxLength(10)
                .IsFixedLength()
                .HasColumnName("maatstaf");
            entity.Property(e => e.Oms60)
                .HasMaxLength(60)
                .HasColumnName("oms60");
            entity.Property(e => e.Syscreated)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("syscreated");
            entity.Property(e => e.Syscreator).HasColumnName("syscreator");
            entity.Property(e => e.Sysguid)
                .HasDefaultValueSql("(newid())")
                .HasColumnName("sysguid");
            entity.Property(e => e.Sysmodified)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("sysmodified");
            entity.Property(e => e.Sysmodifier).HasColumnName("sysmodifier");
            entity.Property(e => e.Timestamp)
                .IsRowVersion()
                .IsConcurrencyToken()
                .HasColumnName("timestamp");
            entity.Property(e => e.Tonen)
                .HasDefaultValue((byte)1)
                .HasColumnName("tonen");
        });

        modelBuilder.Entity<Intnr>(entity =>
        {
            entity.HasKey(e => e.Id).IsClustered(false);

            entity.ToTable("intnr");

            entity.HasIndex(e => new { e.Maatstaf, e.Statistnr }, "intms").IsUnique();

            entity.HasIndex(e => e.Statistnr, "intnr")
                .IsUnique()
                .IsClustered();

            entity.HasIndex(e => new { e.Zoekcd10, e.Id }, "intzk").IsUnique();

            entity.Property(e => e.Id).HasColumnName("ID");
            entity.Property(e => e.FillWght).HasColumnName("fill_wght");
            entity.Property(e => e.Maatstaf)
                .HasMaxLength(10)
                .HasColumnName("maatstaf");
            entity.Property(e => e.Oms60)
                .HasMaxLength(60)
                .HasColumnName("oms60");
            entity.Property(e => e.Statistnr)
                .HasMaxLength(9)
                .IsFixedLength()
                .HasColumnName("statistnr");
            entity.Property(e => e.Syscreated)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("syscreated");
            entity.Property(e => e.Syscreator).HasColumnName("syscreator");
            entity.Property(e => e.Sysguid)
                .HasDefaultValueSql("(newid())")
                .HasColumnName("sysguid");
            entity.Property(e => e.Sysmodified)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("sysmodified");
            entity.Property(e => e.Sysmodifier).HasColumnName("sysmodifier");
            entity.Property(e => e.Tekst)
                .HasMaxLength(160)
                .HasColumnName("tekst");
            entity.Property(e => e.Timestamp)
                .IsRowVersion()
                .IsConcurrencyToken()
                .HasColumnName("timestamp");
            entity.Property(e => e.Tonen)
                .HasDefaultValue((byte)1)
                .HasColumnName("tonen");
            entity.Property(e => e.Zoekcd10)
                .HasMaxLength(10)
                .HasColumnName("zoekcd10");
        });

        modelBuilder.Entity<Intreg>(entity =>
        {
            entity.HasKey(e => e.Id).IsClustered(false);

            entity.ToTable("intreg");

            entity.HasIndex(e => new { e.LandIso, e.Intisoreg, e.Id }, "intrcd").IsUnique();

            entity.HasIndex(e => new { e.LandIso, e.IntRegio }, "intreg")
                .IsUnique()
                .IsClustered();

            entity.Property(e => e.Id).HasColumnName("ID");
            entity.Property(e => e.IntRegio)
                .HasMaxLength(10)
                .IsFixedLength()
                .HasColumnName("int_regio");
            entity.Property(e => e.Intisoreg)
                .HasMaxLength(3)
                .IsFixedLength()
                .HasColumnName("intisoreg");
            entity.Property(e => e.LandIso)
                .HasMaxLength(3)
                .IsFixedLength()
                .HasColumnName("land_iso");
            entity.Property(e => e.Oms50)
                .HasMaxLength(50)
                .HasColumnName("oms50");
            entity.Property(e => e.Syscreated)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("syscreated");
            entity.Property(e => e.Syscreator).HasColumnName("syscreator");
            entity.Property(e => e.Sysguid)
                .HasDefaultValueSql("(newid())")
                .HasColumnName("sysguid");
            entity.Property(e => e.Sysmodified)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("sysmodified");
            entity.Property(e => e.Sysmodifier).HasColumnName("sysmodifier");
            entity.Property(e => e.Timestamp)
                .IsRowVersion()
                .IsConcurrencyToken()
                .HasColumnName("timestamp");
            entity.Property(e => e.Tonen)
                .HasDefaultValue((byte)1)
                .HasColumnName("tonen");
        });

        modelBuilder.Entity<Intshp>(entity =>
        {
            entity.HasKey(e => e.Id).IsClustered(false);

            entity.ToTable("intshp");

            entity.HasIndex(e => new { e.LandIso, e.Intshpcode, e.Id }, "intscd").IsUnique();

            entity.HasIndex(e => new { e.LandIso, e.TrsshpmCd }, "intshp")
                .IsUnique()
                .IsClustered();

            entity.Property(e => e.Id).HasColumnName("ID");
            entity.Property(e => e.Intshpcode)
                .HasMaxLength(6)
                .IsFixedLength()
                .HasColumnName("intshpcode");
            entity.Property(e => e.LandIso)
                .HasMaxLength(3)
                .IsFixedLength()
                .HasColumnName("land_iso");
            entity.Property(e => e.Oms50)
                .HasMaxLength(50)
                .HasColumnName("oms50");
            entity.Property(e => e.Syscreated)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("syscreated");
            entity.Property(e => e.Syscreator).HasColumnName("syscreator");
            entity.Property(e => e.Sysguid)
                .HasDefaultValueSql("(newid())")
                .HasColumnName("sysguid");
            entity.Property(e => e.Sysmodified)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("sysmodified");
            entity.Property(e => e.Sysmodifier).HasColumnName("sysmodifier");
            entity.Property(e => e.Timestamp)
                .IsRowVersion()
                .IsConcurrencyToken()
                .HasColumnName("timestamp");
            entity.Property(e => e.Tonen)
                .HasDefaultValue((byte)1)
                .HasColumnName("tonen");
            entity.Property(e => e.TrsshpmCd)
                .HasMaxLength(10)
                .IsFixedLength()
                .HasColumnName("trsshpm_cd");
        });

        modelBuilder.Entity<Intstl>(entity =>
        {
            entity.HasKey(e => e.Id).IsClustered(false);

            entity.ToTable("intstl");

            entity.HasIndex(e => new { e.LandIso, e.Intsyscode, e.Id }, "intstc").IsUnique();

            entity.HasIndex(e => new { e.LandIso, e.Stelsel }, "intstl")
                .IsUnique()
                .IsClustered();

            entity.Property(e => e.Id).HasColumnName("ID");
            entity.Property(e => e.Intsyscode)
                .HasMaxLength(5)
                .IsFixedLength()
                .HasColumnName("intsyscode");
            entity.Property(e => e.LandIso)
                .HasMaxLength(3)
                .IsFixedLength()
                .HasColumnName("land_iso");
            entity.Property(e => e.Oms50)
                .HasMaxLength(60)
                .HasColumnName("oms50");
            entity.Property(e => e.Stelsel)
                .HasMaxLength(10)
                .IsFixedLength()
                .HasColumnName("stelsel");
            entity.Property(e => e.Syscreated)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("syscreated");
            entity.Property(e => e.Syscreator).HasColumnName("syscreator");
            entity.Property(e => e.Sysguid)
                .HasDefaultValueSql("(newid())")
                .HasColumnName("sysguid");
            entity.Property(e => e.Sysmodified)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("sysmodified");
            entity.Property(e => e.Sysmodifier).HasColumnName("sysmodifier");
            entity.Property(e => e.Timestamp)
                .IsRowVersion()
                .IsConcurrencyToken()
                .HasColumnName("timestamp");
            entity.Property(e => e.Tonen)
                .HasDefaultValue((byte)1)
                .HasColumnName("tonen");
        });

        modelBuilder.Entity<Inttb>(entity =>
        {
            entity.HasKey(e => e.Id).IsClustered(false);

            entity.ToTable("inttb");

            entity.HasIndex(e => new { e.LandIso, e.TransactA, e.TransactB }, "inttab").IsUnique();

            entity.HasIndex(e => new { e.LandIso, e.TransactB }, "inttb")
                .IsUnique()
                .IsClustered();

            entity.HasIndex(e => new { e.LandIso, e.Inttbcode, e.Id }, "inttbc").IsUnique();

            entity.Property(e => e.Id).HasColumnName("ID");
            entity.Property(e => e.Inttbcode)
                .HasMaxLength(1)
                .IsFixedLength()
                .HasColumnName("inttbcode");
            entity.Property(e => e.LandIso)
                .HasMaxLength(3)
                .IsFixedLength()
                .HasColumnName("land_iso");
            entity.Property(e => e.Oms50)
                .HasMaxLength(50)
                .HasColumnName("oms50");
            entity.Property(e => e.Syscreated)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("syscreated");
            entity.Property(e => e.Syscreator).HasColumnName("syscreator");
            entity.Property(e => e.Sysguid)
                .HasDefaultValueSql("(newid())")
                .HasColumnName("sysguid");
            entity.Property(e => e.Sysmodified)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("sysmodified");
            entity.Property(e => e.Sysmodifier).HasColumnName("sysmodifier");
            entity.Property(e => e.Timestamp)
                .IsRowVersion()
                .IsConcurrencyToken()
                .HasColumnName("timestamp");
            entity.Property(e => e.Tonen)
                .HasDefaultValue((byte)1)
                .HasColumnName("tonen");
            entity.Property(e => e.TransactA)
                .HasMaxLength(10)
                .IsFixedLength()
                .HasColumnName("transact_a");
            entity.Property(e => e.TransactB)
                .HasMaxLength(10)
                .IsFixedLength()
                .HasColumnName("transact_b");
        });

        modelBuilder.Entity<Inttra>(entity =>
        {
            entity.HasKey(e => e.Id).IsClustered(false);

            entity.ToTable("inttra");

            entity.HasIndex(e => new { e.LandIso, e.Vervoer }, "inttra")
                .IsUnique()
                .IsClustered();

            entity.HasIndex(e => new { e.LandIso, e.Inttracode, e.Id }, "inttrc").IsUnique();

            entity.Property(e => e.Id).HasColumnName("ID");
            entity.Property(e => e.Inttracode)
                .HasMaxLength(1)
                .IsFixedLength()
                .HasColumnName("inttracode");
            entity.Property(e => e.LandIso)
                .HasMaxLength(3)
                .IsFixedLength()
                .HasColumnName("land_iso");
            entity.Property(e => e.Oms50)
                .HasMaxLength(50)
                .HasColumnName("oms50");
            entity.Property(e => e.PltsLl)
                .HasMaxLength(10)
                .IsFixedLength()
                .HasColumnName("plts_ll");
            entity.Property(e => e.SoortHav)
                .HasMaxLength(1)
                .IsFixedLength()
                .HasColumnName("soort_hav");
            entity.Property(e => e.Syscreated)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("syscreated");
            entity.Property(e => e.Syscreator).HasColumnName("syscreator");
            entity.Property(e => e.Sysguid)
                .HasDefaultValueSql("(newid())")
                .HasColumnName("sysguid");
            entity.Property(e => e.Sysmodified)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("sysmodified");
            entity.Property(e => e.Sysmodifier).HasColumnName("sysmodifier");
            entity.Property(e => e.Timestamp)
                .IsRowVersion()
                .IsConcurrencyToken()
                .HasColumnName("timestamp");
            entity.Property(e => e.Tonen)
                .HasDefaultValue((byte)1)
                .HasColumnName("tonen");
            entity.Property(e => e.Vervoer)
                .HasMaxLength(10)
                .IsFixedLength()
                .HasColumnName("vervoer");
            entity.Property(e => e.WijzLl)
                .HasDefaultValue((byte)1)
                .HasColumnName("wijz_ll");
        });

        modelBuilder.Entity<Inttum>(entity =>
        {
            entity.HasKey(e => e.Id).IsClustered(false);

            entity.ToTable("intta");

            entity.HasIndex(e => new { e.LandIso, e.TransactA }, "intta")
                .IsUnique()
                .IsClustered();

            entity.HasIndex(e => new { e.LandIso, e.Inttacode, e.Id }, "inttac").IsUnique();

            entity.Property(e => e.Id).HasColumnName("ID");
            entity.Property(e => e.Inttacode)
                .HasMaxLength(1)
                .IsFixedLength()
                .HasColumnName("inttacode");
            entity.Property(e => e.LandIso)
                .HasMaxLength(3)
                .IsFixedLength()
                .HasColumnName("land_iso");
            entity.Property(e => e.Oms50)
                .HasMaxLength(50)
                .HasColumnName("oms50");
            entity.Property(e => e.Syscreated)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("syscreated");
            entity.Property(e => e.Syscreator).HasColumnName("syscreator");
            entity.Property(e => e.Sysguid)
                .HasDefaultValueSql("(newid())")
                .HasColumnName("sysguid");
            entity.Property(e => e.Sysmodified)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("sysmodified");
            entity.Property(e => e.Sysmodifier).HasColumnName("sysmodifier");
            entity.Property(e => e.Timestamp)
                .IsRowVersion()
                .IsConcurrencyToken()
                .HasColumnName("timestamp");
            entity.Property(e => e.Tonen)
                .HasDefaultValue((byte)1)
                .HasColumnName("tonen");
            entity.Property(e => e.TransactA)
                .HasMaxLength(10)
                .IsFixedLength()
                .HasColumnName("transact_a");
        });

        modelBuilder.Entity<InvoiceProposalGroup>(entity =>
        {
            entity.HasIndex(e => e.RequestId, "IX_InvoiceProposalGroups_RequestID");

            entity.Property(e => e.Id)
                .HasDefaultValueSql("(newsequentialid())")
                .HasColumnName("ID");
            entity.Property(e => e.Created)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime");
            entity.Property(e => e.Description).HasMaxLength(255);
            entity.Property(e => e.Modified)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime");
            entity.Property(e => e.RequestId).HasColumnName("RequestID");
            entity.Property(e => e.Type)
                .HasMaxLength(1)
                .HasDefaultValue("H")
                .IsFixedLength();
        });

        modelBuilder.Entity<InvoiceProposalLine>(entity =>
        {
            entity.HasIndex(e => e.GroupId, "IX_InvoiceProposalLines_GroupID");

            entity.Property(e => e.Id)
                .HasDefaultValueSql("(newsequentialid())")
                .HasColumnName("ID");
            entity.Property(e => e.Created)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime");
            entity.Property(e => e.GroupId).HasColumnName("GroupID");
            entity.Property(e => e.LineId).HasColumnName("LineID");
            entity.Property(e => e.Modified)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime");
        });

        modelBuilder.Entity<InvoiceTextLine>(entity =>
        {
            entity.HasIndex(e => e.RequestId, "IX_InvoiceTextLines_RequestID");

            entity.Property(e => e.Id)
                .HasDefaultValueSql("(newsequentialid())")
                .HasColumnName("ID");
            entity.Property(e => e.Created)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime");
            entity.Property(e => e.Description).HasMaxLength(255);
            entity.Property(e => e.Modified)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime");
            entity.Property(e => e.RequestId).HasColumnName("RequestID");
            entity.Property(e => e.StartDate)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime");
        });

        modelBuilder.Entity<Item>(entity =>
        {
            entity.HasKey(e => e.ItemCode);

            entity.HasIndex(e => new { e.ItemCode, e.Description }, "IX_ItemIdx1").IsUnique();

            entity.HasIndex(e => new { e.Assortment, e.Class01 }, "IX_Item_AssortmentClass_01");

            entity.HasIndex(e => new { e.Assortment, e.Class02 }, "IX_Item_AssortmentClass_02");

            entity.HasIndex(e => new { e.Assortment, e.Class03 }, "IX_Item_AssortmentClass_03");

            entity.HasIndex(e => new { e.Assortment, e.Class04 }, "IX_Item_AssortmentClass_04");

            entity.HasIndex(e => new { e.Assortment, e.Class05 }, "IX_Item_AssortmentClass_05");

            entity.HasIndex(e => new { e.Assortment, e.Class06 }, "IX_Item_AssortmentClass_06");

            entity.HasIndex(e => new { e.Assortment, e.Class07 }, "IX_Item_AssortmentClass_07");

            entity.HasIndex(e => new { e.Assortment, e.Class08 }, "IX_Item_AssortmentClass_08");

            entity.HasIndex(e => new { e.Assortment, e.Class09 }, "IX_Item_AssortmentClass_09");

            entity.HasIndex(e => new { e.Assortment, e.Class10 }, "IX_Item_AssortmentClass_10");

            entity.HasIndex(e => new { e.Assortment, e.IsSalesItem }, "IX_Item_AssortmentIsSalesItem");

            entity.HasIndex(e => new { e.Assortment, e.IsSubAssemblyItem }, "IX_Item_AssortmentIsSubAssemblyItem");

            entity.HasIndex(e => new { e.Assortment, e.ItemCode }, "IX_Item_AssortmentItemCode");

            entity.HasIndex(e => e.LevCrdnr, "IX_Item_lev_crdnr");

            entity.HasIndex(e => e.Timestamp, "IX_Item_timestamp");

            entity.HasIndex(e => e.Sysguid, "IX_sysguid");

            entity.Property(e => e.ItemCode).HasMaxLength(30);
            entity.Property(e => e.AantVerp).HasColumnName("aant_verp");
            entity.Property(e => e.Barcode)
                .HasMaxLength(60)
                .HasColumnName("BARCode");
            entity.Property(e => e.BarcodeType)
                .HasMaxLength(30)
                .HasColumnName("BARCodeType");
            entity.Property(e => e.Class01)
                .HasMaxLength(30)
                .HasColumnName("Class_01");
            entity.Property(e => e.Class02)
                .HasMaxLength(30)
                .HasColumnName("Class_02");
            entity.Property(e => e.Class03)
                .HasMaxLength(30)
                .HasColumnName("Class_03");
            entity.Property(e => e.Class04)
                .HasMaxLength(30)
                .HasColumnName("Class_04");
            entity.Property(e => e.Class05)
                .HasMaxLength(30)
                .HasColumnName("Class_05");
            entity.Property(e => e.Class06)
                .HasMaxLength(30)
                .HasColumnName("Class_06");
            entity.Property(e => e.Class07)
                .HasMaxLength(30)
                .HasColumnName("Class_07");
            entity.Property(e => e.Class08)
                .HasMaxLength(30)
                .HasColumnName("Class_08");
            entity.Property(e => e.Class09)
                .HasMaxLength(30)
                .HasColumnName("Class_09");
            entity.Property(e => e.Class10)
                .HasMaxLength(30)
                .HasColumnName("Class_10");
            entity.Property(e => e.Condition)
                .HasMaxLength(1)
                .IsFixedLength();
            entity.Property(e => e.ConfigurationClass).HasMaxLength(30);
            entity.Property(e => e.CostPriceCurrency).HasMaxLength(3);
            entity.Property(e => e.Description)
                .HasMaxLength(60)
                .UseCollation("SQL_Latin1_General_CP1_CI_AI");
            entity.Property(e => e.Description0)
                .HasMaxLength(60)
                .UseCollation("SQL_Latin1_General_CP1_CI_AI")
                .HasColumnName("Description_0");
            entity.Property(e => e.Description1)
                .HasMaxLength(60)
                .HasColumnName("Description_1");
            entity.Property(e => e.Description2)
                .HasMaxLength(60)
                .HasColumnName("Description_2");
            entity.Property(e => e.Description3)
                .HasMaxLength(60)
                .HasColumnName("Description_3");
            entity.Property(e => e.Description4)
                .HasMaxLength(60)
                .HasColumnName("Description_4");
            entity.Property(e => e.DimensionsInText)
                .HasMaxLength(60)
                .UseCollation("SQL_Latin1_General_CP1_CI_AI");
            entity.Property(e => e.Eancode)
                .HasMaxLength(30)
                .HasColumnName("EANCode");
            entity.Property(e => e.EenhVerk)
                .HasMaxLength(5)
                .IsFixedLength()
                .HasColumnName("eenh_verk");
            entity.Property(e => e.ExtraDutyVatcode)
                .HasMaxLength(3)
                .IsFixedLength()
                .HasColumnName("ExtraDutyVATcode");
            entity.Property(e => e.GlaccountAsset)
                .HasMaxLength(9)
                .HasColumnName("GLAccountAsset");
            entity.Property(e => e.GlaccountCost)
                .HasMaxLength(9)
                .HasColumnName("GLAccountCost");
            entity.Property(e => e.GlaccountDistribution)
                .HasMaxLength(9)
                .HasColumnName("GLAccountDistribution");
            entity.Property(e => e.GlaccountRevenue)
                .HasMaxLength(9)
                .HasColumnName("GLAccountRevenue");
            entity.Property(e => e.GlaccountStkChange)
                .HasMaxLength(9)
                .IsFixedLength()
                .HasColumnName("GLAccountStkChange");
            entity.Property(e => e.GlaccountStkCoverage)
                .HasMaxLength(9)
                .IsFixedLength()
                .HasColumnName("GLAccountStkCoverage");
            entity.Property(e => e.Id)
                .ValueGeneratedOnAdd()
                .HasColumnName("ID");
            entity.Property(e => e.ItemCodeReplacement).HasMaxLength(30);
            entity.Property(e => e.ItemToBeReceivedLedger)
                .HasMaxLength(9)
                .IsFixedLength();
            entity.Property(e => e.ItemType)
                .HasMaxLength(1)
                .IsFixedLength();
            entity.Property(e => e.LevCrdnr)
                .HasMaxLength(6)
                .IsFixedLength()
                .HasColumnName("lev_crdnr");
            entity.Property(e => e.LongDescription)
                .HasMaxLength(160)
                .UseCollation("SQL_Latin1_General_CP1_CI_AI");
            entity.Property(e => e.OrderPolicyCode)
                .HasMaxLength(1)
                .IsFixedLength();
            entity.Property(e => e.PackageDescription)
                .HasMaxLength(8)
                .IsFixedLength();
            entity.Property(e => e.Percentage1).HasColumnName("Percentage_1");
            entity.Property(e => e.Percentage2).HasColumnName("Percentage_2");
            entity.Property(e => e.PictureFilename).HasMaxLength(128);
            entity.Property(e => e.PurchaseCurrency)
                .HasMaxLength(3)
                .IsFixedLength();
            entity.Property(e => e.PurchaseFactor)
                .HasMaxLength(3)
                .IsFixedLength();
            entity.Property(e => e.PurchaseOrderAdviceCode)
                .HasMaxLength(1)
                .IsFixedLength();
            entity.Property(e => e.PurchaseVatCode)
                .HasMaxLength(3)
                .IsFixedLength();
            entity.Property(e => e.PurchaseVatincl).HasColumnName("PurchaseVATIncl");
            entity.Property(e => e.PurchaseVatperc).HasColumnName("PurchaseVATPerc");
            entity.Property(e => e.RegulationCurrency).HasMaxLength(3);
            entity.Property(e => e.RegulationItemsExcluded).HasMaxLength(255);
            entity.Property(e => e.RegulationItemsIncluded).HasMaxLength(255);
            entity.Property(e => e.SalesFactor)
                .HasMaxLength(3)
                .IsFixedLength();
            entity.Property(e => e.SalesVatCode)
                .HasMaxLength(3)
                .IsFixedLength();
            entity.Property(e => e.SearchCode).HasMaxLength(13);
            entity.Property(e => e.SecurityLevel).HasDefaultValue(10);
            entity.Property(e => e.SerialBatchItem)
                .HasMaxLength(1)
                .IsFixedLength();
            entity.Property(e => e.StatisticalNumber)
                .HasMaxLength(9)
                .IsFixedLength();
            entity.Property(e => e.Status)
                .HasMaxLength(1)
                .IsFixedLength()
                .HasColumnName("status");
            entity.Property(e => e.StockCurrency).HasMaxLength(3);
            entity.Property(e => e.StockValuationDate).HasColumnType("datetime");
            entity.Property(e => e.Syscreated)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("syscreated");
            entity.Property(e => e.Syscreator).HasColumnName("syscreator");
            entity.Property(e => e.Sysguid)
                .HasDefaultValueSql("(newid())")
                .HasColumnName("sysguid");
            entity.Property(e => e.Sysmodified)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("sysmodified");
            entity.Property(e => e.Sysmodifier).HasColumnName("sysmodifier");
            entity.Property(e => e.TextDescription).UseCollation("SQL_Latin1_General_CP1_CI_AI");
            entity.Property(e => e.Timestamp)
                .IsRowVersion()
                .IsConcurrencyToken()
                .HasColumnName("timestamp");
            entity.Property(e => e.Type)
                .HasMaxLength(1)
                .IsFixedLength();
            entity.Property(e => e.UserDate01)
                .HasColumnType("datetime")
                .HasColumnName("UserDate_01");
            entity.Property(e => e.UserDate02)
                .HasColumnType("datetime")
                .HasColumnName("UserDate_02");
            entity.Property(e => e.UserDate03)
                .HasColumnType("datetime")
                .HasColumnName("UserDate_03");
            entity.Property(e => e.UserDate04)
                .HasColumnType("datetime")
                .HasColumnName("UserDate_04");
            entity.Property(e => e.UserDate05)
                .HasColumnType("datetime")
                .HasColumnName("UserDate_05");
            entity.Property(e => e.UserField01)
                .HasMaxLength(255)
                .UseCollation("SQL_Latin1_General_CP1_CI_AI")
                .HasColumnName("UserField_01");
            entity.Property(e => e.UserField02)
                .HasMaxLength(255)
                .UseCollation("SQL_Latin1_General_CP1_CI_AI")
                .HasColumnName("UserField_02");
            entity.Property(e => e.UserField03)
                .HasMaxLength(255)
                .UseCollation("SQL_Latin1_General_CP1_CI_AI")
                .HasColumnName("UserField_03");
            entity.Property(e => e.UserField04)
                .HasMaxLength(255)
                .UseCollation("SQL_Latin1_General_CP1_CI_AI")
                .HasColumnName("UserField_04");
            entity.Property(e => e.UserField05)
                .HasMaxLength(255)
                .UseCollation("SQL_Latin1_General_CP1_CI_AI")
                .HasColumnName("UserField_05");
            entity.Property(e => e.UserField06)
                .HasMaxLength(255)
                .UseCollation("SQL_Latin1_General_CP1_CI_AI")
                .HasColumnName("UserField_06");
            entity.Property(e => e.UserField07)
                .HasMaxLength(255)
                .UseCollation("SQL_Latin1_General_CP1_CI_AI")
                .HasColumnName("UserField_07");
            entity.Property(e => e.UserField08)
                .HasMaxLength(255)
                .UseCollation("SQL_Latin1_General_CP1_CI_AI")
                .HasColumnName("UserField_08");
            entity.Property(e => e.UserField09)
                .HasMaxLength(255)
                .UseCollation("SQL_Latin1_General_CP1_CI_AI")
                .HasColumnName("UserField_09");
            entity.Property(e => e.UserField10)
                .HasMaxLength(255)
                .UseCollation("SQL_Latin1_General_CP1_CI_AI")
                .HasColumnName("UserField_10");
            entity.Property(e => e.UserNumber01).HasColumnName("UserNumber_01");
            entity.Property(e => e.UserNumber02).HasColumnName("UserNumber_02");
            entity.Property(e => e.UserNumber03).HasColumnName("UserNumber_03");
            entity.Property(e => e.UserNumber04).HasColumnName("UserNumber_04");
            entity.Property(e => e.UserNumber05).HasColumnName("UserNumber_05");
            entity.Property(e => e.UserNumber06).HasColumnName("UserNumber_06");
            entity.Property(e => e.UserNumber07).HasColumnName("UserNumber_07");
            entity.Property(e => e.UserNumber08).HasColumnName("UserNumber_08");
            entity.Property(e => e.UserNumber09).HasColumnName("UserNumber_09");
            entity.Property(e => e.UserNumber10).HasColumnName("UserNumber_10");
            entity.Property(e => e.UserNumber11).HasColumnName("UserNumber_11");
            entity.Property(e => e.UserNumber12).HasColumnName("UserNumber_12");
            entity.Property(e => e.UserNumber13).HasColumnName("UserNumber_13");
            entity.Property(e => e.UserYesNo01).HasColumnName("UserYesNo_01");
            entity.Property(e => e.UserYesNo02).HasColumnName("UserYesNo_02");
            entity.Property(e => e.UserYesNo03).HasColumnName("UserYesNo_03");
            entity.Property(e => e.UserYesNo04).HasColumnName("UserYesNo_04");
            entity.Property(e => e.UserYesNo05).HasColumnName("UserYesNo_05");
            entity.Property(e => e.ValuationMethod)
                .HasMaxLength(1)
                .IsFixedLength();
            entity.Property(e => e.WareHouse).HasMaxLength(4);
            entity.Property(e => e.WareHouseLocation).HasMaxLength(30);
            entity.Property(e => e.WeightInText)
                .HasMaxLength(60)
                .UseCollation("SQL_Latin1_General_CP1_CI_AI");
        });

        modelBuilder.Entity<ItemAccount>(entity =>
        {
            entity.HasKey(e => e.Id).IsClustered(false);

            entity.HasIndex(e => new { e.AccountCode, e.ItemCode }, "IX_ItemAccounts_AccountItemCode");

            entity.HasIndex(e => e.Eancode, "IX_ItemAccounts_EANCode");

            entity.HasIndex(e => new { e.ItemCode, e.AccountCode }, "IX_ItemAccounts_ItemAccount")
                .IsUnique()
                .IsClustered();

            entity.HasIndex(e => new { e.ItemCode, e.MainAccount }, "IX_ItemAccounts_ItemCodeMainAccount").IsDescending(false, true);

            entity.HasIndex(e => e.Crdnr, "IX_ItemAccounts_crdnr");

            entity.Property(e => e.Id).HasColumnName("ID");
            entity.Property(e => e.CountryOfOrigin)
                .HasMaxLength(3)
                .IsFixedLength();
            entity.Property(e => e.Crdnr)
                .HasMaxLength(6)
                .IsFixedLength()
                .HasColumnName("crdnr");
            entity.Property(e => e.DocumentId).HasColumnName("DocumentID");
            entity.Property(e => e.Eancode)
                .HasMaxLength(60)
                .HasColumnName("EANCode");
            entity.Property(e => e.ItemCode).HasMaxLength(30);
            entity.Property(e => e.ItemCodeAccount).HasMaxLength(30);
            entity.Property(e => e.PurchaseCurrency)
                .HasMaxLength(3)
                .IsFixedLength();
            entity.Property(e => e.PurchaseOrderSize).HasDefaultValue(1.0);
            entity.Property(e => e.PurchasePackage).HasMaxLength(30);
            entity.Property(e => e.PurchaseUnit).HasMaxLength(30);
            entity.Property(e => e.PurchaseUnitToInternalUnitFactor).HasDefaultValue(1.0);
            entity.Property(e => e.PurchaseUnitToPurchasePackageFactor).HasDefaultValue(1.0);
            entity.Property(e => e.PurchaseVatcode)
                .HasMaxLength(3)
                .IsFixedLength()
                .HasColumnName("PurchaseVATCode");
            entity.Property(e => e.PurchaseVatincl).HasColumnName("PurchaseVATIncl");
            entity.Property(e => e.PurchaseVatperc).HasColumnName("PurchaseVATPerc");
            entity.Property(e => e.Syscreated)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("syscreated");
            entity.Property(e => e.Syscreator).HasColumnName("syscreator");
            entity.Property(e => e.Sysguid)
                .HasDefaultValueSql("(newid())")
                .HasColumnName("sysguid");
            entity.Property(e => e.Sysmodified)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("sysmodified");
            entity.Property(e => e.Sysmodifier).HasColumnName("sysmodifier");
            entity.Property(e => e.Timestamp)
                .IsRowVersion()
                .IsConcurrencyToken()
                .HasColumnName("timestamp");
        });

        modelBuilder.Entity<ItemAssortment>(entity =>
        {
            entity.HasKey(e => e.Assortment);

            entity.ToTable("ItemAssortment");

            entity.HasIndex(e => e.Code, "UQ_ItemAssortment").IsUnique();

            entity.HasIndex(e => new { e.SecurityLevel, e.Assortment }, "ix_ItemAssortment_SecurityLevel");

            entity.Property(e => e.Assortment).ValueGeneratedNever();
            entity.Property(e => e.AllowInCatalog).HasDefaultValue(true);
            entity.Property(e => e.AllowNewContract).HasDefaultValue(true);
            entity.Property(e => e.AllowNewDocument).HasDefaultValue(true);
            entity.Property(e => e.AllowNewItem).HasDefaultValue(true);
            entity.Property(e => e.CatalogClass1).HasColumnName("CatalogClass_1");
            entity.Property(e => e.CatalogClass2).HasColumnName("CatalogClass_2");
            entity.Property(e => e.CatalogClass3).HasColumnName("CatalogClass_3");
            entity.Property(e => e.CatalogItemSelection).HasMaxLength(255);
            entity.Property(e => e.CatalogOrder).HasDefaultValue(1);
            entity.Property(e => e.Code).HasMaxLength(30);
            entity.Property(e => e.ContractComponentParameter).HasMaxLength(30);
            entity.Property(e => e.ContractComponentProgId)
                .HasMaxLength(30)
                .HasColumnName("ContractComponentProgID");
            entity.Property(e => e.ContractDocCategory).HasMaxLength(30);
            entity.Property(e => e.ContractDocSecurity).HasDefaultValue(10);
            entity.Property(e => e.ContractDocSubCategory).HasMaxLength(30);
            entity.Property(e => e.ContractItemSelection).HasMaxLength(255);
            entity.Property(e => e.Costunit).HasMaxLength(8);
            entity.Property(e => e.Description).HasMaxLength(60);
            entity.Property(e => e.Description0)
                .HasMaxLength(60)
                .HasColumnName("Description_0");
            entity.Property(e => e.Description1)
                .HasMaxLength(60)
                .HasColumnName("Description_1");
            entity.Property(e => e.Description2)
                .HasMaxLength(60)
                .HasColumnName("Description_2");
            entity.Property(e => e.Description3)
                .HasMaxLength(60)
                .HasColumnName("Description_3");
            entity.Property(e => e.Description4)
                .HasMaxLength(60)
                .HasColumnName("Description_4");
            entity.Property(e => e.GlcostOfGoodsSold)
                .HasMaxLength(9)
                .HasColumnName("GLCostOfGoodsSold");
            entity.Property(e => e.GldeferredCost)
                .HasMaxLength(9)
                .HasColumnName("GLDeferredCost");
            entity.Property(e => e.GldeferredRevenue)
                .HasMaxLength(9)
                .HasColumnName("GLDeferredRevenue");
            entity.Property(e => e.Gldiscount)
                .HasMaxLength(9)
                .HasColumnName("GLDiscount");
            entity.Property(e => e.GlpriceDifference)
                .HasMaxLength(9)
                .HasColumnName("GLPriceDifference");
            entity.Property(e => e.GlrecognizeCosts)
                .HasMaxLength(9)
                .HasColumnName("GLRecognizeCosts");
            entity.Property(e => e.Glrevenue)
                .HasMaxLength(9)
                .HasColumnName("GLRevenue");
            entity.Property(e => e.GlstkChange)
                .HasMaxLength(9)
                .IsFixedLength()
                .HasColumnName("GLStkChange");
            entity.Property(e => e.GlstkCoverage)
                .HasMaxLength(9)
                .IsFixedLength()
                .HasColumnName("GLStkCoverage");
            entity.Property(e => e.Glstock)
                .HasMaxLength(9)
                .HasColumnName("GLStock");
            entity.Property(e => e.Id)
                .ValueGeneratedOnAdd()
                .HasColumnName("ID");
            entity.Property(e => e.ItemToBeReceivedLedger)
                .HasMaxLength(9)
                .IsFixedLength();
            entity.Property(e => e.LabelNuserDate01)
                .HasMaxLength(60)
                .HasColumnName("LabelNUserDate_01");
            entity.Property(e => e.LabelNuserDate02)
                .HasMaxLength(60)
                .HasColumnName("LabelNUserDate_02");
            entity.Property(e => e.LabelNuserDate03)
                .HasMaxLength(60)
                .HasColumnName("LabelNUserDate_03");
            entity.Property(e => e.LabelNuserDate04)
                .HasMaxLength(60)
                .HasColumnName("LabelNUserDate_04");
            entity.Property(e => e.LabelNuserDate05)
                .HasMaxLength(60)
                .HasColumnName("LabelNUserDate_05");
            entity.Property(e => e.LabelNuserField01)
                .HasMaxLength(60)
                .HasColumnName("LabelNUserField_01");
            entity.Property(e => e.LabelNuserField02)
                .HasMaxLength(60)
                .HasColumnName("LabelNUserField_02");
            entity.Property(e => e.LabelNuserField03)
                .HasMaxLength(60)
                .HasColumnName("LabelNUserField_03");
            entity.Property(e => e.LabelNuserField04)
                .HasMaxLength(60)
                .HasColumnName("LabelNUserField_04");
            entity.Property(e => e.LabelNuserField05)
                .HasMaxLength(60)
                .HasColumnName("LabelNUserField_05");
            entity.Property(e => e.LabelNuserField06)
                .HasMaxLength(60)
                .HasColumnName("LabelNUserField_06");
            entity.Property(e => e.LabelNuserField07)
                .HasMaxLength(60)
                .HasColumnName("LabelNUserField_07");
            entity.Property(e => e.LabelNuserField08)
                .HasMaxLength(60)
                .HasColumnName("LabelNUserField_08");
            entity.Property(e => e.LabelNuserField09)
                .HasMaxLength(60)
                .HasColumnName("LabelNUserField_09");
            entity.Property(e => e.LabelNuserField10)
                .HasMaxLength(60)
                .HasColumnName("LabelNUserField_10");
            entity.Property(e => e.LabelNuserNumber01)
                .HasMaxLength(60)
                .HasColumnName("LabelNUserNumber_01");
            entity.Property(e => e.LabelNuserNumber02)
                .HasMaxLength(60)
                .HasColumnName("LabelNUserNumber_02");
            entity.Property(e => e.LabelNuserNumber03)
                .HasMaxLength(60)
                .HasColumnName("LabelNUserNumber_03");
            entity.Property(e => e.LabelNuserNumber04)
                .HasMaxLength(60)
                .HasColumnName("LabelNUserNumber_04");
            entity.Property(e => e.LabelNuserNumber05)
                .HasMaxLength(60)
                .HasColumnName("LabelNUserNumber_05");
            entity.Property(e => e.LabelNuserYesNo01)
                .HasMaxLength(60)
                .HasColumnName("LabelNUserYesNo_01");
            entity.Property(e => e.LabelNuserYesNo02)
                .HasMaxLength(60)
                .HasColumnName("LabelNUserYesNo_02");
            entity.Property(e => e.LabelNuserYesNo03)
                .HasMaxLength(60)
                .HasColumnName("LabelNUserYesNo_03");
            entity.Property(e => e.LabelNuserYesNo04)
                .HasMaxLength(60)
                .HasColumnName("LabelNUserYesNo_04");
            entity.Property(e => e.LabelNuserYesNo05)
                .HasMaxLength(60)
                .HasColumnName("LabelNUserYesNo_05");
            entity.Property(e => e.LabelUserDate01)
                .HasMaxLength(60)
                .HasColumnName("LabelUserDate_01");
            entity.Property(e => e.LabelUserDate02)
                .HasMaxLength(60)
                .HasColumnName("LabelUserDate_02");
            entity.Property(e => e.LabelUserDate03)
                .HasMaxLength(60)
                .HasColumnName("LabelUserDate_03");
            entity.Property(e => e.LabelUserDate04)
                .HasMaxLength(60)
                .HasColumnName("LabelUserDate_04");
            entity.Property(e => e.LabelUserDate05)
                .HasMaxLength(60)
                .HasColumnName("LabelUserDate_05");
            entity.Property(e => e.LabelUserField01)
                .HasMaxLength(60)
                .HasColumnName("LabelUserField_01");
            entity.Property(e => e.LabelUserField02)
                .HasMaxLength(60)
                .HasColumnName("LabelUserField_02");
            entity.Property(e => e.LabelUserField03)
                .HasMaxLength(60)
                .HasColumnName("LabelUserField_03");
            entity.Property(e => e.LabelUserField04)
                .HasMaxLength(60)
                .HasColumnName("LabelUserField_04");
            entity.Property(e => e.LabelUserField05)
                .HasMaxLength(60)
                .HasColumnName("LabelUserField_05");
            entity.Property(e => e.LabelUserField06)
                .HasMaxLength(60)
                .HasColumnName("LabelUserField_06");
            entity.Property(e => e.LabelUserField07)
                .HasMaxLength(60)
                .HasColumnName("LabelUserField_07");
            entity.Property(e => e.LabelUserField08)
                .HasMaxLength(60)
                .HasColumnName("LabelUserField_08");
            entity.Property(e => e.LabelUserField09)
                .HasMaxLength(60)
                .HasColumnName("LabelUserField_09");
            entity.Property(e => e.LabelUserField10)
                .HasMaxLength(60)
                .HasColumnName("LabelUserField_10");
            entity.Property(e => e.LabelUserNumber01)
                .HasMaxLength(60)
                .HasColumnName("LabelUserNumber_01");
            entity.Property(e => e.LabelUserNumber02)
                .HasMaxLength(60)
                .HasColumnName("LabelUserNumber_02");
            entity.Property(e => e.LabelUserNumber03)
                .HasMaxLength(60)
                .HasColumnName("LabelUserNumber_03");
            entity.Property(e => e.LabelUserNumber04)
                .HasMaxLength(60)
                .HasColumnName("LabelUserNumber_04");
            entity.Property(e => e.LabelUserNumber05)
                .HasMaxLength(60)
                .HasColumnName("LabelUserNumber_05");
            entity.Property(e => e.LabelUserNumber06)
                .HasMaxLength(60)
                .HasColumnName("LabelUserNumber_06");
            entity.Property(e => e.LabelUserNumber09)
                .HasMaxLength(60)
                .HasColumnName("LabelUserNumber_09");
            entity.Property(e => e.LabelUserNumber10)
                .HasMaxLength(60)
                .HasColumnName("LabelUserNumber_10");
            entity.Property(e => e.LabelUserNumber11)
                .HasMaxLength(60)
                .HasColumnName("LabelUserNumber_11");
            entity.Property(e => e.LabelUserNumber12)
                .HasMaxLength(60)
                .HasColumnName("LabelUserNumber_12");
            entity.Property(e => e.LabelUserNumber13)
                .HasMaxLength(60)
                .HasColumnName("LabelUserNumber_13");
            entity.Property(e => e.LabelUserYesNo01)
                .HasMaxLength(60)
                .HasColumnName("LabelUserYesNo_01");
            entity.Property(e => e.LabelUserYesNo02)
                .HasMaxLength(60)
                .HasColumnName("LabelUserYesNo_02");
            entity.Property(e => e.LabelUserYesNo03)
                .HasMaxLength(60)
                .HasColumnName("LabelUserYesNo_03");
            entity.Property(e => e.LabelUserYesNo04)
                .HasMaxLength(60)
                .HasColumnName("LabelUserYesNo_04");
            entity.Property(e => e.LabelUserYesNo05)
                .HasMaxLength(60)
                .HasColumnName("LabelUserYesNo_05");
            entity.Property(e => e.PictureFilename).HasMaxLength(128);
            entity.Property(e => e.RoundOffMethod)
                .HasMaxLength(1)
                .HasDefaultValue("N")
                .IsFixedLength();
            entity.Property(e => e.SecurityLevel).HasDefaultValue(10);
            entity.Property(e => e.StatNumber).HasMaxLength(9);
            entity.Property(e => e.Syscreated)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("syscreated");
            entity.Property(e => e.Syscreator).HasColumnName("syscreator");
            entity.Property(e => e.Sysguid)
                .HasDefaultValueSql("(newid())")
                .HasColumnName("sysguid");
            entity.Property(e => e.Sysmodified)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("sysmodified");
            entity.Property(e => e.Sysmodifier).HasColumnName("sysmodifier");
            entity.Property(e => e.Timestamp)
                .IsRowVersion()
                .IsConcurrencyToken()
                .HasColumnName("timestamp");
            entity.Property(e => e.UseCatalog).HasDefaultValue(true);
            entity.Property(e => e.UseCountries).HasDefaultValue(true);
            entity.Property(e => e.UseTranslations).HasDefaultValue(true);
        });

        modelBuilder.Entity<ItemAttachment>(entity =>
        {
            entity.HasKey(e => new { e.ItemCode, e.ReleaseId });

            entity.Property(e => e.ItemCode).HasMaxLength(30);
            entity.Property(e => e.ReleaseId).HasColumnName("ReleaseID");
            entity.Property(e => e.AttachmentDateTime).HasColumnType("datetime");
            entity.Property(e => e.AttachmentFilename).HasMaxLength(128);
            entity.Property(e => e.CheckedOut).HasColumnType("datetime");
            entity.Property(e => e.FileVersion).HasMaxLength(20);
            entity.Property(e => e.LastModified).HasColumnType("datetime");
            entity.Property(e => e.LastModifier).HasMaxLength(255);
        });

        modelBuilder.Entity<ItemAttachmentArchive>(entity =>
        {
            entity.HasKey(e => e.Id).IsClustered(false);

            entity.ToTable("ItemAttachmentArchive");

            entity.HasIndex(e => new { e.ItemCode, e.ReleaseId, e.ArchiveDate }, "Ix1").IsClustered();

            entity.Property(e => e.Id)
                .HasDefaultValueSql("(newid())")
                .HasColumnName("ID");
            entity.Property(e => e.ArchiveDate)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime");
            entity.Property(e => e.AttachmentFileName).HasMaxLength(128);
            entity.Property(e => e.FileVersion).HasMaxLength(20);
            entity.Property(e => e.ItemCode).HasMaxLength(30);
            entity.Property(e => e.LastModified).HasColumnType("datetime");
            entity.Property(e => e.LastModifier).HasMaxLength(255);
            entity.Property(e => e.ReleaseId).HasColumnName("ReleaseID");
        });

        modelBuilder.Entity<ItemBasket>(entity =>
        {
            entity.HasKey(e => e.Id).IsClustered(false);

            entity.HasIndex(e => new { e.BasketOwner, e.BasketMode, e.BasketStatus, e.Created }, "IX_ItemBaskets_BasketOwnerModeStatusCreated").IsClustered();

            entity.HasIndex(e => e.ItemCode, "IX_ItemBaskets_ItemCode");

            entity.HasIndex(e => new { e.ProcessNumber, e.Created }, "IX_ItemBaskets_ProcessNumberCreated");

            entity.HasIndex(e => e.RequestId, "IX_ItemBaskets_Request");

            entity.HasIndex(e => new { e.Account, e.BasketMode, e.BasketStatus, e.ItemCode }, "IX_ItemBaskets_StatusAccountItemCode");

            entity.HasIndex(e => new { e.Resource, e.BasketMode, e.BasketStatus, e.ItemCode }, "IX_ItemBaskets_StatusResourceItemCode");

            entity.Property(e => e.Id)
                .ValueGeneratedNever()
                .HasColumnName("ID");
            entity.Property(e => e.BillingType).HasDefaultValue(1);
            entity.Property(e => e.ContactId).HasColumnName("ContactID");
            entity.Property(e => e.CountryCode).HasMaxLength(3);
            entity.Property(e => e.Created).HasColumnType("datetime");
            entity.Property(e => e.CurrencyCode).HasMaxLength(3);
            entity.Property(e => e.ItemCode).HasMaxLength(30);
            entity.Property(e => e.Modified).HasColumnType("datetime");
            entity.Property(e => e.OrderNumber).HasMaxLength(30);
            entity.Property(e => e.Price).HasDefaultValue(1.0);
            entity.Property(e => e.PriceId).HasColumnName("PriceID");
            entity.Property(e => e.PriceLocal).HasDefaultValue(1.0);
            entity.Property(e => e.PriceQuantity).HasDefaultValue(1);
            entity.Property(e => e.ProcessNumber).HasMaxLength(30);
            entity.Property(e => e.Processed).HasColumnType("datetime");
            entity.Property(e => e.Project).HasMaxLength(20);
            entity.Property(e => e.Quantity).HasDefaultValue(1.0);
            entity.Property(e => e.ReferenceNumber).HasMaxLength(40);
            entity.Property(e => e.RequestId).HasColumnName("RequestID");
            entity.Property(e => e.StartDate).HasColumnType("datetime");
        });

        modelBuilder.Entity<ItemCatalog>(entity =>
        {
            entity.HasKey(e => e.Code);

            entity.Property(e => e.Code).HasMaxLength(30);
            entity.Property(e => e.AssortmentDisplay).HasDefaultValue(1);
            entity.Property(e => e.AssortmentName).HasMaxLength(60);
            entity.Property(e => e.AssortmentSelection).HasMaxLength(255);
            entity.Property(e => e.AssumeSecurityLevel).HasDefaultValue(100);
            entity.Property(e => e.CatalogColor).HasDefaultValue(51);
            entity.Property(e => e.CatalogColorSelected).HasDefaultValue(51);
            entity.Property(e => e.CatalogTextColor).HasDefaultValue(16777215);
            entity.Property(e => e.CatalogTextColorSelected).HasDefaultValue(16776960);
            entity.Property(e => e.CategoryColumns).HasDefaultValue(5);
            entity.Property(e => e.CategoryDisplay).HasDefaultValue(1);
            entity.Property(e => e.CategoryHeadingFontSize)
                .HasMaxLength(10)
                .HasDefaultValue("x-small");
            entity.Property(e => e.CategoryHeadingFontWeight)
                .HasMaxLength(10)
                .HasDefaultValue("bold");
            entity.Property(e => e.CategoryLayout).HasDefaultValue(1);
            entity.Property(e => e.CategorySelection).HasMaxLength(255);
            entity.Property(e => e.CategoryTextFontSize)
                .HasMaxLength(10)
                .HasDefaultValue("x-small");
            entity.Property(e => e.CategoryTextFontWeight)
                .HasMaxLength(10)
                .HasDefaultValue("normal");
            entity.Property(e => e.DefaultCountry).HasMaxLength(3);
            entity.Property(e => e.Description).HasMaxLength(60);
            entity.Property(e => e.FilterColumns).HasDefaultValue(5);
            entity.Property(e => e.FilterHeadingFontSize)
                .HasMaxLength(10)
                .HasDefaultValue("x-small");
            entity.Property(e => e.FilterHeadingFontWeight)
                .HasMaxLength(10)
                .HasDefaultValue("bold");
            entity.Property(e => e.FilterTextFontSize)
                .HasMaxLength(10)
                .HasDefaultValue("x-small");
            entity.Property(e => e.FilterTextFontWeight)
                .HasMaxLength(10)
                .HasDefaultValue("normal");
            entity.Property(e => e.NavBarFontSize)
                .HasMaxLength(10)
                .HasDefaultValue("x-small");
            entity.Property(e => e.NavBarFontWeight)
                .HasMaxLength(10)
                .HasDefaultValue("bold");
            entity.Property(e => e.NavBarShowInNavBar).HasDefaultValue(true);
            entity.Property(e => e.NewsHeadingFontSize)
                .HasMaxLength(10)
                .HasDefaultValue("x-small");
            entity.Property(e => e.NewsHeadingFontWeight)
                .HasMaxLength(10)
                .HasDefaultValue("bold");
            entity.Property(e => e.NewsTextFontSize)
                .HasMaxLength(10)
                .HasDefaultValue("x-small");
            entity.Property(e => e.NewsTextFontWeight)
                .HasMaxLength(10)
                .HasDefaultValue("normal");
            entity.Property(e => e.PageSize).HasDefaultValue(10);
            entity.Property(e => e.ProductColumn01).HasColumnName("ProductColumn_01");
            entity.Property(e => e.ProductColumn02).HasColumnName("ProductColumn_02");
            entity.Property(e => e.ProductColumn03).HasColumnName("ProductColumn_03");
            entity.Property(e => e.ProductColumn04).HasColumnName("ProductColumn_04");
            entity.Property(e => e.ProductColumn05).HasColumnName("ProductColumn_05");
            entity.Property(e => e.ProductColumn06).HasColumnName("ProductColumn_06");
            entity.Property(e => e.ProductDisplay).HasDefaultValue(1);
            entity.Property(e => e.ProductHeadingFontSize)
                .HasMaxLength(10)
                .HasDefaultValue("x-small");
            entity.Property(e => e.ProductHeadingFontWeight)
                .HasMaxLength(10)
                .HasDefaultValue("bold");
            entity.Property(e => e.ProductSelection).HasMaxLength(255);
            entity.Property(e => e.ProductShowActive).HasDefaultValue(true);
            entity.Property(e => e.ProductTextFontSize)
                .HasMaxLength(10)
                .HasDefaultValue("x-small");
            entity.Property(e => e.ProductTextFontWeight)
                .HasMaxLength(10)
                .HasDefaultValue("normal");
            entity.Property(e => e.SecurityLevel).HasDefaultValue(10);
            entity.Property(e => e.ShoppingMode).HasDefaultValue(10);
            entity.Property(e => e.ShoppingOrderMode).HasDefaultValue(1);
            entity.Property(e => e.SideBarFontSize)
                .HasMaxLength(10)
                .HasDefaultValue("xx-small");
            entity.Property(e => e.SideBarFontWeight)
                .HasMaxLength(10)
                .HasDefaultValue("bold");
            entity.Property(e => e.SideBarLinkColor).HasDefaultValue(10079487);
            entity.Property(e => e.SideBarLinkFontSize)
                .HasMaxLength(10)
                .HasDefaultValue("x-small");
            entity.Property(e => e.SideBarLinkFontWeight)
                .HasMaxLength(10)
                .HasDefaultValue("normal");
            entity.Property(e => e.SideBarLocation).HasDefaultValue(2);
            entity.Property(e => e.SideBarShowCountry).HasDefaultValue(true);
            entity.Property(e => e.SideBarShowLinks).HasDefaultValue(true);
            entity.Property(e => e.SideBarShowLinksContracts).HasDefaultValue(1);
            entity.Property(e => e.SideBarShowLinksNews).HasDefaultValue(1);
            entity.Property(e => e.SideBarShowLinksOrderFormLevel).HasDefaultValue(10);
            entity.Property(e => e.SideBarShowLinksPricelist).HasDefaultValue(true);
            entity.Property(e => e.SideBarShowLinksPricelistLevel).HasDefaultValue(10);
            entity.Property(e => e.SideBarShowLinksProducts).HasDefaultValue(true);
            entity.Property(e => e.SideBarShowLinksProductsLevel).HasDefaultValue(10);
            entity.Property(e => e.SideBarShowLinksReferences).HasDefaultValue(1);
            entity.Property(e => e.SideBarShowSearchLink).HasDefaultValue(true);
            entity.Property(e => e.SideBarWidth).HasDefaultValue(200);
            entity.Property(e => e.TabBarFontSize)
                .HasMaxLength(10)
                .HasDefaultValue("x-small");
            entity.Property(e => e.TabBarFontWeight)
                .HasMaxLength(10)
                .HasDefaultValue("normal");
        });

        modelBuilder.Entity<ItemClass>(entity =>
        {
            entity.HasKey(e => e.Id).IsClustered(false);

            entity.HasIndex(e => new { e.ItemJobLevel, e.ClassId, e.ItemClassCode }, "IX_ItemClasses_Security");

            entity.HasIndex(e => new { e.ClassId, e.ItemClassCode }, "UQ_ItemClasses_ClassIDItemClassCode")
                .IsUnique()
                .IsClustered();

            entity.Property(e => e.Id)
                .ValueGeneratedNever()
                .HasColumnName("ID");
            entity.Property(e => e.ClassId).HasColumnName("ClassID");
            entity.Property(e => e.Description).HasMaxLength(60);
            entity.Property(e => e.ItemClassCode).HasMaxLength(30);
            entity.Property(e => e.PictureFilename).HasMaxLength(128);
            entity.Property(e => e.Sysguid)
                .HasDefaultValueSql("(newid())")
                .HasColumnName("sysguid");
            entity.Property(e => e.Timestamp)
                .IsRowVersion()
                .IsConcurrencyToken()
                .HasColumnName("timestamp");
        });

        modelBuilder.Entity<ItemClassLink>(entity =>
        {
            entity.HasKey(e => e.Id).IsClustered(false);

            entity.HasIndex(e => new { e.Assortment, e.ClassId, e.ItemClassCode }, "UQ_ItemClassLinks_ClassIDItemClassCode")
                .IsUnique()
                .IsClustered();

            entity.Property(e => e.Id)
                .ValueGeneratedNever()
                .HasColumnName("ID");
            entity.Property(e => e.ClassId).HasColumnName("ClassID");
            entity.Property(e => e.ItemClassCode).HasMaxLength(30);
            entity.Property(e => e.Syscreated)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("syscreated");
            entity.Property(e => e.Syscreator).HasColumnName("syscreator");
            entity.Property(e => e.Sysmodified)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("sysmodified");
            entity.Property(e => e.Sysmodifier).HasColumnName("sysmodifier");
        });

        modelBuilder.Entity<ItemClassName>(entity =>
        {
            entity.HasKey(e => e.ClassId);

            entity.Property(e => e.ClassId)
                .ValueGeneratedNever()
                .HasColumnName("ClassID");
            entity.Property(e => e.Description).HasMaxLength(60);
            entity.Property(e => e.Sysguid)
                .HasDefaultValueSql("(newid())")
                .HasColumnName("sysguid");
            entity.Property(e => e.Timestamp)
                .IsRowVersion()
                .IsConcurrencyToken()
                .HasColumnName("timestamp");
        });

        modelBuilder.Entity<ItemCopyRelease>(entity =>
        {
            entity.Property(e => e.Id)
                .ValueGeneratedNever()
                .HasColumnName("ID");
            entity.Property(e => e.ExecutionEndDate).HasColumnType("datetime");
            entity.Property(e => e.ExecutionStartDate).HasColumnType("datetime");
            entity.Property(e => e.ReleaseFrom).HasMaxLength(30);
            entity.Property(e => e.ReleaseTo).HasMaxLength(30);
            entity.Property(e => e.ScheduleDate).HasColumnType("datetime");
            entity.Property(e => e.Status)
                .HasMaxLength(1)
                .IsFixedLength();
            entity.Property(e => e.Syscreated)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("syscreated");
            entity.Property(e => e.Syscreator).HasColumnName("syscreator");
        });

        modelBuilder.Entity<ItemCountry>(entity =>
        {
            entity.HasKey(e => e.Id).IsClustered(false);

            entity.HasIndex(e => new { e.CountryCode, e.ItemCode, e.AvailableFrom, e.AvailableUntil }, "IX_ItemCountries_CountryItemAvailableFromUntil").IsClustered();

            entity.HasIndex(e => e.OwnerCompany, "IX_ItemCountries_OwnerCompany");

            entity.HasIndex(e => e.OwnerPerson, "IX_ItemCountries_OwnerPerson");

            entity.HasIndex(e => new { e.ItemCode, e.CountryCode }, "UQ_ItemCountries_ItemCountry").IsUnique();

            entity.Property(e => e.Id)
                .ValueGeneratedNever()
                .HasColumnName("ID");
            entity.Property(e => e.AccountAltBalance).HasMaxLength(30);
            entity.Property(e => e.AccountAltProfitLoss).HasMaxLength(30);
            entity.Property(e => e.AvailableFrom).HasColumnType("datetime");
            entity.Property(e => e.AvailableUntil).HasColumnType("datetime");
            entity.Property(e => e.CountryCode).HasMaxLength(3);
            entity.Property(e => e.Description)
                .HasMaxLength(60)
                .UseCollation("SQL_Latin1_General_CP1_CI_AI");
            entity.Property(e => e.GlcostPrice)
                .HasMaxLength(30)
                .HasColumnName("GLCostPrice");
            entity.Property(e => e.Glrevenue)
                .HasMaxLength(30)
                .HasColumnName("GLRevenue");
            entity.Property(e => e.Glstock)
                .HasMaxLength(30)
                .HasColumnName("GLStock");
            entity.Property(e => e.ItemCode).HasMaxLength(30);
            entity.Property(e => e.Note).UseCollation("SQL_Latin1_General_CP1_CI_AI");
            entity.Property(e => e.OwnerCompany).HasMaxLength(3);
            entity.Property(e => e.Syscreated)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("syscreated");
            entity.Property(e => e.Syscreator).HasColumnName("syscreator");
            entity.Property(e => e.Sysmodified)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("sysmodified");
            entity.Property(e => e.Sysmodifier).HasColumnName("sysmodifier");
            entity.Property(e => e.Timestamp)
                .IsRowVersion()
                .IsConcurrencyToken()
                .HasColumnName("timestamp");
        });

        modelBuilder.Entity<ItemCountryTranslation>(entity =>
        {
            entity.HasKey(e => e.Id)
                .HasName("PK_ItemCountryTransactions")
                .IsClustered(false);

            entity.HasIndex(e => new { e.ItemCountryId, e.LanguageCode }, "UQ_ItemCountryTranslations")
                .IsUnique()
                .IsClustered();

            entity.Property(e => e.Id)
                .ValueGeneratedNever()
                .HasColumnName("ID");
            entity.Property(e => e.Description).HasMaxLength(255);
            entity.Property(e => e.ItemCountryId).HasColumnName("ItemCountryID");
            entity.Property(e => e.LanguageCode).HasMaxLength(3);
            entity.Property(e => e.Modified).HasColumnType("datetime");
            entity.Property(e => e.Timestamp)
                .IsRowVersion()
                .IsConcurrencyToken()
                .HasColumnName("timestamp");
        });

        modelBuilder.Entity<ItemDivision>(entity =>
        {
            entity.HasKey(e => e.Id).IsClustered(false);

            entity.HasIndex(e => new { e.DivisionCode, e.ItemCode }, "DivisionCode_ItemCode")
                .IsUnique()
                .IsClustered();

            entity.Property(e => e.Id).HasColumnName("ID");
            entity.Property(e => e.AvailableFrom).HasColumnType("datetime");
            entity.Property(e => e.AvailableUntil).HasColumnType("datetime");
            entity.Property(e => e.CommissionMethod)
                .HasMaxLength(1)
                .HasDefaultValue("M")
                .IsFixedLength();
            entity.Property(e => e.Condition)
                .HasMaxLength(1)
                .IsFixedLength();
            entity.Property(e => e.DivisionCode)
                .HasMaxLength(3)
                .IsFixedLength();
            entity.Property(e => e.GlaccountAsset)
                .HasMaxLength(9)
                .IsFixedLength()
                .HasColumnName("GLAccountAsset");
            entity.Property(e => e.GlaccountCost)
                .HasMaxLength(9)
                .IsFixedLength()
                .HasColumnName("GLAccountCost");
            entity.Property(e => e.GlaccountDiscount)
                .HasMaxLength(9)
                .IsFixedLength()
                .HasColumnName("GLAccountDiscount");
            entity.Property(e => e.GlaccountDistribution)
                .HasMaxLength(9)
                .IsFixedLength()
                .HasColumnName("GLAccountDistribution");
            entity.Property(e => e.GlaccountRevenue)
                .HasMaxLength(9)
                .IsFixedLength()
                .HasColumnName("GLAccountRevenue");
            entity.Property(e => e.GlaccountStkChange)
                .HasMaxLength(9)
                .IsFixedLength()
                .HasColumnName("GLAccountStkChange");
            entity.Property(e => e.GlaccountStkCoverage)
                .HasMaxLength(9)
                .IsFixedLength()
                .HasColumnName("GLAccountStkCoverage");
            entity.Property(e => e.IntrastatEnabled).HasDefaultValue(true);
            entity.Property(e => e.ItemCode).HasMaxLength(30);
            entity.Property(e => e.ItemCodeReplacement).HasMaxLength(30);
            entity.Property(e => e.LinkItemCode).HasMaxLength(30);
            entity.Property(e => e.OrderPolicyCode)
                .HasMaxLength(1)
                .IsFixedLength();
            entity.Property(e => e.PurchaseVatCode)
                .HasMaxLength(3)
                .IsFixedLength();
            entity.Property(e => e.SalesVatCode)
                .HasMaxLength(3)
                .IsFixedLength();
            entity.Property(e => e.SerialBatchMask).HasMaxLength(30);
            entity.Property(e => e.StatisticalNumber)
                .HasMaxLength(9)
                .IsFixedLength();
            entity.Property(e => e.Status)
                .HasMaxLength(1)
                .IsFixedLength()
                .HasColumnName("status");
            entity.Property(e => e.WareHouse)
                .HasMaxLength(4)
                .IsFixedLength();
        });

        modelBuilder.Entity<ItemDivisionAccount>(entity =>
        {
            entity.HasKey(e => e.Id).IsClustered(false);

            entity.HasIndex(e => new { e.ItemCode, e.AccountGuid, e.DivisionCode }, "IX_ItemDivisionAccounts")
                .IsUnique()
                .IsClustered();

            entity.Property(e => e.Id).HasColumnName("ID");
            entity.Property(e => e.AccountGuid).HasColumnName("AccountGUID");
            entity.Property(e => e.CountryOfAssembly)
                .HasMaxLength(3)
                .IsFixedLength();
            entity.Property(e => e.CountryOfOrigin)
                .HasMaxLength(3)
                .IsFixedLength();
            entity.Property(e => e.DivisionCode)
                .HasMaxLength(3)
                .IsFixedLength();
            entity.Property(e => e.DocumentId).HasColumnName("DocumentID");
            entity.Property(e => e.Eancode)
                .HasMaxLength(60)
                .HasColumnName("EANCode");
            entity.Property(e => e.ItemCode).HasMaxLength(30);
            entity.Property(e => e.ItemCodeAccount).HasMaxLength(30);
            entity.Property(e => e.Manufacturer).HasMaxLength(20);
            entity.Property(e => e.PurchaseCurrency)
                .HasMaxLength(3)
                .IsFixedLength();
            entity.Property(e => e.PurchaseOrderSize).HasDefaultValue(1.0);
            entity.Property(e => e.PurchasePackage).HasMaxLength(30);
            entity.Property(e => e.PurchaseVatcode)
                .HasMaxLength(3)
                .IsFixedLength()
                .HasColumnName("PurchaseVATCode");
            entity.Property(e => e.Syscreated)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("syscreated");
            entity.Property(e => e.Syscreator).HasColumnName("syscreator");
            entity.Property(e => e.Sysguid)
                .HasDefaultValueSql("(newid())")
                .HasColumnName("sysguid");
            entity.Property(e => e.Sysmodified)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("sysmodified");
            entity.Property(e => e.Sysmodifier).HasColumnName("sysmodifier");
            entity.Property(e => e.Timestamp)
                .IsRowVersion()
                .IsConcurrencyToken()
                .HasColumnName("timestamp");
        });

        modelBuilder.Entity<ItemDivisionAssortment>(entity =>
        {
            entity.HasKey(e => e.Id).IsClustered(false);

            entity.HasIndex(e => new { e.DivisionCode, e.Assortment }, "IX_ItemDivisionAssortments")
                .IsUnique()
                .IsClustered();

            entity.Property(e => e.Id).HasColumnName("ID");
            entity.Property(e => e.DivisionCode)
                .HasMaxLength(3)
                .IsFixedLength();
            entity.Property(e => e.GlaccountAsset)
                .HasMaxLength(9)
                .IsFixedLength()
                .HasColumnName("GLAccountAsset");
            entity.Property(e => e.GlaccountCost)
                .HasMaxLength(9)
                .IsFixedLength()
                .HasColumnName("GLAccountCost");
            entity.Property(e => e.GlaccountDiscount)
                .HasMaxLength(9)
                .IsFixedLength()
                .HasColumnName("GLAccountDiscount");
            entity.Property(e => e.GlaccountDistribution)
                .HasMaxLength(9)
                .IsFixedLength()
                .HasColumnName("GLAccountDistribution");
            entity.Property(e => e.GlaccountPriceDifferences)
                .HasMaxLength(9)
                .IsFixedLength()
                .HasColumnName("GLAccountPriceDifferences");
            entity.Property(e => e.GlaccountStkChange)
                .HasMaxLength(9)
                .IsFixedLength()
                .HasColumnName("GLAccountStkChange");
            entity.Property(e => e.GlaccountStkCoverage)
                .HasMaxLength(9)
                .IsFixedLength()
                .HasColumnName("GLAccountStkCoverage");
            entity.Property(e => e.Glrevenue)
                .HasMaxLength(9)
                .IsFixedLength()
                .HasColumnName("GLRevenue");
            entity.Property(e => e.Syscreated)
                .HasColumnType("datetime")
                .HasColumnName("syscreated");
            entity.Property(e => e.Syscreator).HasColumnName("syscreator");
            entity.Property(e => e.Sysmodified)
                .HasColumnType("datetime")
                .HasColumnName("sysmodified");
            entity.Property(e => e.Sysmodifier).HasColumnName("sysmodifier");
            entity.Property(e => e.Timestamp)
                .IsRowVersion()
                .IsConcurrencyToken()
                .HasColumnName("timestamp");
        });

        modelBuilder.Entity<ItemDivisionWarehouse>(entity =>
        {
            entity.HasKey(e => e.Id).IsClustered(false);

            entity.HasIndex(e => new { e.ItemCode, e.WarehouseCode, e.DivisionCode }, "IX_ItemDivisionWarehouses")
                .IsUnique()
                .IsClustered();

            entity.Property(e => e.Id).HasColumnName("ID");
            entity.Property(e => e.DivisionCode)
                .HasMaxLength(3)
                .IsFixedLength();
            entity.Property(e => e.ItemCode).HasMaxLength(30);
            entity.Property(e => e.LocationCode)
                .HasMaxLength(10)
                .IsFixedLength();
            entity.Property(e => e.OrderPolicyCode)
                .HasMaxLength(1)
                .IsFixedLength();
            entity.Property(e => e.ResId).HasColumnName("res_id");
            entity.Property(e => e.Syscreated)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("syscreated");
            entity.Property(e => e.Syscreator).HasColumnName("syscreator");
            entity.Property(e => e.Sysguid)
                .HasDefaultValueSql("(newid())")
                .HasColumnName("sysguid");
            entity.Property(e => e.Sysmodified)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("sysmodified");
            entity.Property(e => e.Sysmodifier).HasColumnName("sysmodifier");
            entity.Property(e => e.Timestamp)
                .IsRowVersion()
                .IsConcurrencyToken()
                .HasColumnName("timestamp");
            entity.Property(e => e.WarehouseCode)
                .HasMaxLength(4)
                .IsFixedLength();
        });

        modelBuilder.Entity<ItemNumber>(entity =>
        {
            entity.HasKey(e => e.Id).IsClustered(false);

            entity.HasIndex(e => new { e.AddressGuid, e.ItemCode, e.Number }, "IX_ItemNumbers_AddresGUID");

            entity.HasIndex(e => new { e.Associate, e.Classification, e.DateEnd, e.LastMaintenanceDate }, "IX_ItemNumbers_Associate");

            entity.HasIndex(e => new { e.Classification, e.DateFinal }, "IX_ItemNumbers_Classification_DateFinal");

            entity.HasIndex(e => new { e.Classification, e.DateStart }, "IX_ItemNumbers_Classification_DateStart");

            entity.HasIndex(e => e.CostCenter, "IX_ItemNumbers_CostCenter");

            entity.HasIndex(e => e.Hid, "IX_ItemNumbers_HID");

            entity.HasIndex(e => new { e.ItemCode, e.Number }, "IX_ItemNumbers_ItemNumber").IsClustered();

            entity.HasIndex(e => new { e.LotNumber, e.ItemCode }, "IX_ItemNumbers_LotNumber");

            entity.HasIndex(e => new { e.Number, e.ItemCode }, "IX_ItemNumbers_Number_ItemCode");

            entity.HasIndex(e => new { e.ParentId, e.Type, e.Associate }, "IX_ItemNumbers_ParentIDTypeAssociate");

            entity.HasIndex(e => new { e.ParentId, e.Type, e.OwnerCompany, e.DateStart, e.Number, e.ItemCode }, "IX_ItemNumbers_ParentIDTypeCompanyDateStartNumberItemCode");

            entity.HasIndex(e => new { e.ParentId, e.Type, e.OwnerCompany, e.Number }, "IX_ItemNumbers_ParentIDTypeCompanyNumber");

            entity.HasIndex(e => new { e.ParentId, e.Type, e.DateFinal, e.StatusValid, e.ItemCode }, "IX_ItemNumbers_ParentIDTypeDateFinalStatusValidItem");

            entity.HasIndex(e => new { e.ParentId, e.Type, e.DateStart, e.OwnerCompany }, "IX_ItemNumbers_ParentIDTypeDateStartCompany");

            entity.HasIndex(e => new { e.ParentId, e.Type, e.ItemCode }, "IX_ItemNumbers_ParentIDTypeItem");

            entity.HasIndex(e => new { e.ParentId, e.Type, e.Number }, "IX_ItemNumbers_ParentIDTypeNumber");

            entity.HasIndex(e => new { e.Projectnr, e.Number, e.ItemCode }, "IX_ItemNumbers_Projectnr");

            entity.HasIndex(e => new { e.Resource, e.ItemCode, e.Number }, "IX_ItemNumbers_ResourceItemCodeNumber");

            entity.HasIndex(e => e.Supplier, "IX_ItemNumbers_Supplier");

            entity.HasIndex(e => e.SupplierNumber, "IX_ItemNumbers_SupplierNumber");

            entity.HasIndex(e => new { e.Type, e.Associate, e.ItemCode, e.DateFinal }, "IX_ItemNumbers_TypeAssociateItemCodeDateFinal");

            entity.HasIndex(e => new { e.Type, e.OwnerCompany, e.DateEnd, e.Associate, e.Number }, "IX_ItemNumbers_TypeCompanyDateEndAssociateNumber");

            entity.HasIndex(e => new { e.Type, e.OwnerCompany, e.DateFinal, e.StatusValid, e.ItemCode }, "IX_ItemNumbers_TypeCompanyDateFinalStatusValidItem");

            entity.HasIndex(e => new { e.Type, e.OwnerCompany, e.DateStart, e.Quantity, e.PurchasePrice }, "IX_ItemNumbers_TypeCompanyDateStartQuantityPrice");

            entity.HasIndex(e => new { e.Type, e.DateStart, e.ItemCode, e.Quantity }, "IX_ItemNumbers_TypeDateStartItemCodeQuantity");

            entity.HasIndex(e => new { e.Type, e.ItemCode, e.DateStart, e.Quantity }, "IX_ItemNumbers_TypeItemCodeDateStartQuantity");

            entity.HasIndex(e => new { e.Type, e.OwnerCompany, e.UseIndex }, "IX_ItemNumbers_TypeOwnerCompanyUseIndex");

            entity.HasIndex(e => new { e.VariantId, e.Type }, "IX_ItemNumbers_VariantIDType");

            entity.HasIndex(e => e.Timestamp, "IX_ItemNumbers_timestamp");

            entity.Property(e => e.Id)
                .HasDefaultValueSql("(newid())")
                .HasColumnName("ID");
            entity.Property(e => e.Active).HasDefaultValue(true);
            entity.Property(e => e.AddressGuid).HasColumnName("AddressGUID");
            entity.Property(e => e.AssetGroup).HasMaxLength(20);
            entity.Property(e => e.ChildId).HasColumnName("ChildID");
            entity.Property(e => e.Classification)
                .HasMaxLength(1)
                .IsFixedLength();
            entity.Property(e => e.CostCenter)
                .HasMaxLength(8)
                .IsFixedLength();
            entity.Property(e => e.CostLastMaintenanceFc).HasColumnName("CostLastMaintenanceFC");
            entity.Property(e => e.CostUnit)
                .HasMaxLength(8)
                .IsFixedLength();
            entity.Property(e => e.CountryCode).HasMaxLength(3);
            entity.Property(e => e.CustomerReference).HasMaxLength(20);
            entity.Property(e => e.DateEnd).HasColumnType("datetime");
            entity.Property(e => e.DateFinal).HasColumnType("datetime");
            entity.Property(e => e.DateStart)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime");
            entity.Property(e => e.DepreciationBaseType)
                .HasMaxLength(1)
                .IsFixedLength();
            entity.Property(e => e.Description).HasMaxLength(60);
            entity.Property(e => e.Description2).HasMaxLength(50);
            entity.Property(e => e.Description3).HasMaxLength(50);
            entity.Property(e => e.Description4).HasMaxLength(50);
            entity.Property(e => e.Description5).HasMaxLength(50);
            entity.Property(e => e.DiscountPercent).HasDefaultValue(0.0);
            entity.Property(e => e.DocumentHid).HasColumnName("DocumentHID");
            entity.Property(e => e.DocumentId).HasColumnName("DocumentID");
            entity.Property(e => e.FiscalGroup).HasMaxLength(20);
            entity.Property(e => e.GrossPrice).HasDefaultValue(0.0);
            entity.Property(e => e.Hid)
                .ValueGeneratedOnAdd()
                .HasColumnName("HID");
            entity.Property(e => e.Indexation)
                .HasMaxLength(1)
                .IsFixedLength();
            entity.Property(e => e.InvoiceCurrency)
                .HasMaxLength(3)
                .IsFixedLength();
            entity.Property(e => e.InvoiceDebtorCode).HasMaxLength(20);
            entity.Property(e => e.InvoiceDivision)
                .HasMaxLength(3)
                .IsFixedLength();
            entity.Property(e => e.InvoiceFrequency)
                .HasMaxLength(1)
                .IsFixedLength();
            entity.Property(e => e.IsReadOnly).HasDefaultValue(false);
            entity.Property(e => e.ItemCode).HasMaxLength(30);
            entity.Property(e => e.LastIndexationDate).HasColumnType("datetime");
            entity.Property(e => e.LastMaintenanceDate).HasColumnType("datetime");
            entity.Property(e => e.LicenseDateEnd).HasColumnType("datetime");
            entity.Property(e => e.LotNumber).HasMaxLength(30);
            entity.Property(e => e.MiscellaneousAmountFc).HasColumnName("MiscellaneousAmountFC");
            entity.Property(e => e.Number).HasMaxLength(30);
            entity.Property(e => e.NumberInBatch).HasMaxLength(10);
            entity.Property(e => e.OwnReference).HasMaxLength(20);
            entity.Property(e => e.OwnerCompany).HasMaxLength(3);
            entity.Property(e => e.ParentId).HasColumnName("ParentID");
            entity.Property(e => e.PaymentCondition)
                .HasMaxLength(2)
                .IsFixedLength();
            entity.Property(e => e.PictureFilename).HasMaxLength(128);
            entity.Property(e => e.PreviousNumber).HasMaxLength(30);
            entity.Property(e => e.PriceCountry)
                .HasMaxLength(3)
                .IsFixedLength();
            entity.Property(e => e.PriceCurrency)
                .HasMaxLength(3)
                .IsFixedLength();
            entity.Property(e => e.PriceList).HasMaxLength(15);
            entity.Property(e => e.PrimaryMethod).HasMaxLength(20);
            entity.Property(e => e.ProductRelease).HasMaxLength(30);
            entity.Property(e => e.Projectnr).HasMaxLength(20);
            entity.Property(e => e.PropertyType)
                .HasMaxLength(1)
                .IsFixedLength();
            entity.Property(e => e.PurchaseCurrency)
                .HasMaxLength(3)
                .IsFixedLength();
            entity.Property(e => e.Quantity).HasDefaultValue(0.0);
            entity.Property(e => e.ReceiptNumber)
                .HasMaxLength(8)
                .IsFixedLength();
            entity.Property(e => e.RequestHid).HasColumnName("RequestHID");
            entity.Property(e => e.SalesInvoiceCurrency)
                .HasMaxLength(3)
                .IsFixedLength();
            entity.Property(e => e.SalesInvoiceDebtorCode).HasMaxLength(20);
            entity.Property(e => e.SalesInvoiceDivision)
                .HasMaxLength(3)
                .IsFixedLength();
            entity.Property(e => e.SalesPaymentCondition)
                .HasMaxLength(2)
                .IsFixedLength();
            entity.Property(e => e.SalesSelectionCode)
                .HasMaxLength(2)
                .IsFixedLength();
            entity.Property(e => e.SecondaryMethod).HasMaxLength(20);
            entity.Property(e => e.SelectionCode)
                .HasMaxLength(2)
                .IsFixedLength();
            entity.Property(e => e.ShadowCurrency)
                .HasMaxLength(3)
                .IsFixedLength();
            entity.Property(e => e.ShadowDateEnd).HasColumnType("datetime");
            entity.Property(e => e.SpecialCalcBasis)
                .HasMaxLength(1)
                .IsFixedLength();
            entity.Property(e => e.SpecialNumPeriods)
                .HasMaxLength(4)
                .IsFixedLength();
            entity.Property(e => e.SpecialNumYears)
                .HasMaxLength(4)
                .IsFixedLength();
            entity.Property(e => e.SpecialStartDate).HasColumnType("datetime");
            entity.Property(e => e.StartIndexationDate).HasColumnType("datetime");
            entity.Property(e => e.Status)
                .HasMaxLength(1)
                .IsFixedLength();
            entity.Property(e => e.Status2).HasMaxLength(20);
            entity.Property(e => e.SupplierNumber)
                .HasMaxLength(6)
                .IsFixedLength();
            entity.Property(e => e.Syscreated)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("syscreated");
            entity.Property(e => e.Syscreator).HasColumnName("syscreator");
            entity.Property(e => e.Sysmodified)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("sysmodified");
            entity.Property(e => e.Sysmodifier).HasColumnName("sysmodifier");
            entity.Property(e => e.Timestamp)
                .IsRowVersion()
                .IsConcurrencyToken()
                .HasColumnName("timestamp");
            entity.Property(e => e.UsageStartPeriod)
                .HasMaxLength(3)
                .IsFixedLength();
            entity.Property(e => e.UsageStartYear)
                .HasMaxLength(4)
                .IsFixedLength();
            entity.Property(e => e.UserDate01)
                .HasColumnType("datetime")
                .HasColumnName("UserDate_01");
            entity.Property(e => e.UserDate02)
                .HasColumnType("datetime")
                .HasColumnName("UserDate_02");
            entity.Property(e => e.UserDate03)
                .HasColumnType("datetime")
                .HasColumnName("UserDate_03");
            entity.Property(e => e.UserDate04)
                .HasColumnType("datetime")
                .HasColumnName("UserDate_04");
            entity.Property(e => e.UserDate05)
                .HasColumnType("datetime")
                .HasColumnName("UserDate_05");
            entity.Property(e => e.UserField01)
                .HasMaxLength(255)
                .HasColumnName("UserField_01");
            entity.Property(e => e.UserField02)
                .HasMaxLength(255)
                .HasColumnName("UserField_02");
            entity.Property(e => e.UserField03)
                .HasMaxLength(255)
                .HasColumnName("UserField_03");
            entity.Property(e => e.UserField04)
                .HasMaxLength(255)
                .HasColumnName("UserField_04");
            entity.Property(e => e.UserField05)
                .HasMaxLength(255)
                .HasColumnName("UserField_05");
            entity.Property(e => e.UserField06)
                .HasMaxLength(255)
                .HasColumnName("UserField_06");
            entity.Property(e => e.UserField07)
                .HasMaxLength(255)
                .HasColumnName("UserField_07");
            entity.Property(e => e.UserField08)
                .HasMaxLength(255)
                .HasColumnName("UserField_08");
            entity.Property(e => e.UserField09)
                .HasMaxLength(255)
                .HasColumnName("UserField_09");
            entity.Property(e => e.UserField10)
                .HasMaxLength(255)
                .HasColumnName("UserField_10");
            entity.Property(e => e.UserInteger01).HasColumnName("UserInteger_01");
            entity.Property(e => e.UserInteger02).HasColumnName("UserInteger_02");
            entity.Property(e => e.UserInteger03).HasColumnName("UserInteger_03");
            entity.Property(e => e.UserInteger04).HasColumnName("UserInteger_04");
            entity.Property(e => e.UserInteger05).HasColumnName("UserInteger_05");
            entity.Property(e => e.UserNumber01).HasColumnName("UserNumber_01");
            entity.Property(e => e.UserNumber02).HasColumnName("UserNumber_02");
            entity.Property(e => e.UserNumber03).HasColumnName("UserNumber_03");
            entity.Property(e => e.UserNumber04).HasColumnName("UserNumber_04");
            entity.Property(e => e.UserNumber05).HasColumnName("UserNumber_05");
            entity.Property(e => e.UserYesNo01)
                .HasDefaultValue(false)
                .HasColumnName("UserYesNo_01");
            entity.Property(e => e.UserYesNo02)
                .HasDefaultValue(false)
                .HasColumnName("UserYesNo_02");
            entity.Property(e => e.UserYesNo03)
                .HasDefaultValue(false)
                .HasColumnName("UserYesNo_03");
            entity.Property(e => e.UserYesNo04)
                .HasDefaultValue(false)
                .HasColumnName("UserYesNo_04");
            entity.Property(e => e.UserYesNo05)
                .HasDefaultValue(false)
                .HasColumnName("UserYesNo_05");
            entity.Property(e => e.VariantDescription).HasMaxLength(60);
            entity.Property(e => e.VariantId).HasColumnName("VariantID");
        });

        modelBuilder.Entity<ItemOvertime>(entity =>
        {
            entity.HasIndex(e => e.ParentItem, "IX_ItemOvertimes");

            entity.Property(e => e.Id)
                .HasDefaultValueSql("(newsequentialid())")
                .HasColumnName("ID");
            entity.Property(e => e.Created)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime");
            entity.Property(e => e.ItemCode).HasMaxLength(30);
            entity.Property(e => e.Modified)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime");
            entity.Property(e => e.ParentItem).HasMaxLength(30);
        });

        modelBuilder.Entity<ItemPrice>(entity =>
        {
            entity.HasKey(e => e.Id).IsClustered(false);

            entity.HasIndex(e => e.CountryCode, "IX_ItemPrices_Country");

            entity.HasIndex(e => new { e.ItemCode, e.CountryCode, e.ValidFrom, e.Quantity }, "IX_ItemPrices_Quantity").IsClustered();

            entity.Property(e => e.Id)
                .ValueGeneratedNever()
                .HasColumnName("ID");
            entity.Property(e => e.CountryCode).HasMaxLength(3);
            entity.Property(e => e.Description).HasMaxLength(60);
            entity.Property(e => e.ItemCode).HasMaxLength(30);
            entity.Property(e => e.PriceFrequency)
                .HasMaxLength(1)
                .IsFixedLength();
            entity.Property(e => e.Quantity).HasDefaultValue(1);
            entity.Property(e => e.SalesCurrency)
                .HasMaxLength(3)
                .IsFixedLength();
            entity.Property(e => e.SalesVatincl).HasColumnName("SalesVATIncl");
            entity.Property(e => e.SalesVatperc).HasColumnName("SalesVATPerc");
            entity.Property(e => e.Timestamp)
                .IsRowVersion()
                .IsConcurrencyToken()
                .HasColumnName("timestamp");
            entity.Property(e => e.ValidFrom).HasColumnType("datetime");
        });

        modelBuilder.Entity<ItemProcess>(entity =>
        {
            entity.HasKey(e => e.Id).IsClustered(false);

            entity.ToTable("ItemProcess");

            entity.HasIndex(e => e.RequestDate, "IX_ItemProcess_RequestDate").IsDescending();

            entity.HasIndex(e => e.Id, "ItemProcess_Index").IsClustered();

            entity.Property(e => e.Id)
                .ValueGeneratedNever()
                .HasColumnName("ID");
            entity.Property(e => e.Company).HasMaxLength(3);
            entity.Property(e => e.DateEnd).HasColumnType("datetime");
            entity.Property(e => e.DateStart).HasColumnType("datetime");
            entity.Property(e => e.DocumentId).HasColumnName("DocumentID");
            entity.Property(e => e.Indexation)
                .HasMaxLength(1)
                .IsFixedLength();
            entity.Property(e => e.InvoiceCurrency)
                .HasMaxLength(3)
                .IsFixedLength();
            entity.Property(e => e.InvoiceDebtor).HasMaxLength(20);
            entity.Property(e => e.InvoiceDivision)
                .HasMaxLength(3)
                .IsFixedLength();
            entity.Property(e => e.InvoiceFrequency)
                .HasMaxLength(1)
                .IsFixedLength();
            entity.Property(e => e.RequestDate).HasColumnType("datetime");
            entity.Property(e => e.SalesInvoiceDebtor).HasMaxLength(20);
            entity.Property(e => e.SalesInvoiceDivision)
                .HasMaxLength(3)
                .IsFixedLength();
            entity.Property(e => e.ScenarioCode).HasMaxLength(30);
            entity.Property(e => e.Xmlmessage).HasColumnName("XMLMessage");
        });

        modelBuilder.Entity<ItemProcessType>(entity =>
        {
            entity.HasKey(e => e.Type).HasName("PK_ItemProcessType");

            entity.Property(e => e.Type).ValueGeneratedNever();
            entity.Property(e => e.Description).HasMaxLength(60);
            entity.Property(e => e.DocCategory).HasMaxLength(30);
            entity.Property(e => e.DocSecurity).HasDefaultValue(10);
            entity.Property(e => e.DocSubCategory).HasMaxLength(30);
            entity.Property(e => e.TaskPrio).HasDefaultValue(3);
        });

        modelBuilder.Entity<ItemRelation>(entity =>
        {
            entity.HasKey(e => e.Id).IsClustered(false);

            entity.HasIndex(e => new { e.ItemCode, e.ItemCodeRelated }, "IX_ItemCodeItemRelated").IsClustered();

            entity.HasIndex(e => new { e.ItemCodeRelated, e.Type }, "IX_ItemCodeRelatedType");

            entity.HasIndex(e => new { e.Type, e.ItemCode }, "IX_TypeItemCode");

            entity.Property(e => e.Id)
                .ValueGeneratedNever()
                .HasColumnName("ID");
            entity.Property(e => e.ItemCode).HasMaxLength(30);
            entity.Property(e => e.ItemCodeRelated).HasMaxLength(30);
            entity.Property(e => e.Quantity).HasDefaultValue(1.0);
            entity.Property(e => e.Sysguid)
                .HasDefaultValueSql("(newid())")
                .HasColumnName("sysguid");
            entity.Property(e => e.Timestamp)
                .IsRowVersion()
                .IsConcurrencyToken()
                .HasColumnName("timestamp");
        });

        modelBuilder.Entity<ItemRelationType>(entity =>
        {
            entity.HasKey(e => e.Type);

            entity.Property(e => e.Type).ValueGeneratedNever();
            entity.Property(e => e.Description).HasMaxLength(60);
            entity.Property(e => e.SecurityLevel).HasDefaultValue(10);
            entity.Property(e => e.Timestamp)
                .IsRowVersion()
                .IsConcurrencyToken()
                .HasColumnName("timestamp");
        });

        modelBuilder.Entity<ItemRelationTypeState>(entity =>
        {
            entity.HasKey(e => e.State);

            entity.ToTable("ItemRelationTypeState");

            entity.Property(e => e.State).ValueGeneratedNever();
            entity.Property(e => e.BackgroundColor).HasDefaultValue(6737100);
            entity.Property(e => e.Description).HasMaxLength(60);
            entity.Property(e => e.DescriptionSufix).HasMaxLength(60);
            entity.Property(e => e.DescriptionSufixTermId).HasColumnName("DescriptionSufixTermID");
            entity.Property(e => e.ImageFileName).HasMaxLength(60);
            entity.Property(e => e.TermId).HasColumnName("TermID");
            entity.Property(e => e.Timestamp)
                .IsRowVersion()
                .IsConcurrencyToken()
                .HasColumnName("timestamp");
        });

        modelBuilder.Entity<ItemRelease>(entity =>
        {
            entity.HasKey(e => e.Id)
                .HasName("PK_ItemVersions")
                .IsClustered(false);

            entity.HasIndex(e => new { e.Assortment, e.Release }, "UQ_ItemReleases_AssortmentRelease")
                .IsUnique()
                .IsClustered();

            entity.Property(e => e.Id)
                .ValueGeneratedNever()
                .HasColumnName("ID");
            entity.Property(e => e.AllowUpload).HasDefaultValue(true);
            entity.Property(e => e.DownloadSecurityLevel).HasDefaultValue(10);
            entity.Property(e => e.ProductLine).HasMaxLength(30);
            entity.Property(e => e.ProductRelease).HasMaxLength(30);
            entity.Property(e => e.Release).HasMaxLength(30);
            entity.Property(e => e.Timestamp)
                .IsRowVersion()
                .IsConcurrencyToken()
                .HasColumnName("timestamp");
            entity.Property(e => e.UploadItemOwner).HasDefaultValue(true);
            entity.Property(e => e.UploadItemOwnerManager).HasDefaultValue(true);
            entity.Property(e => e.UploadRole).HasDefaultValue(21);
            entity.Property(e => e.UploadRoleLevel).HasDefaultValue(3);
        });

        modelBuilder.Entity<ItemReleaseStatus>(entity =>
        {
            entity.HasKey(e => e.Status);

            entity.ToTable("ItemReleaseStatus");

            entity.Property(e => e.Status).ValueGeneratedNever();
            entity.Property(e => e.Description).HasMaxLength(60);
            entity.Property(e => e.TermId).HasColumnName("TermID");
            entity.Property(e => e.Timestamp)
                .IsRowVersion()
                .IsConcurrencyToken()
                .HasColumnName("timestamp");
        });

        modelBuilder.Entity<ItemTranslation>(entity =>
        {
            entity.HasKey(e => e.Id).IsClustered(false);

            entity.HasIndex(e => new { e.LanguageCode, e.Description }, "LanguageCode_Description");

            entity.HasIndex(e => new { e.LanguageCode, e.ItemCode }, "LanguageCode_ItemCode");

            entity.HasIndex(e => new { e.ItemCode, e.LanguageCode }, "UQ_ItemTranslations")
                .IsUnique()
                .IsClustered();

            entity.Property(e => e.Id)
                .HasDefaultValueSql("(newid())")
                .HasColumnName("ID");
            entity.Property(e => e.Description).HasMaxLength(255);
            entity.Property(e => e.ItemCode).HasMaxLength(30);
            entity.Property(e => e.LanguageCode)
                .HasMaxLength(3)
                .IsFixedLength();
            entity.Property(e => e.Syscreated)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("syscreated");
            entity.Property(e => e.Syscreator).HasColumnName("syscreator");
            entity.Property(e => e.Sysmodified)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("sysmodified");
            entity.Property(e => e.Sysmodifier).HasColumnName("sysmodifier");
        });

        modelBuilder.Entity<ItemTranslationLog>(entity =>
        {
            entity.HasKey(e => e.Id).IsClustered(false);

            entity.ToTable("ItemTranslationLog");

            entity.HasIndex(e => new { e.ItemCode, e.LogDate }, "IX_ItemTranslationLog_ItemCode_LogDate").IsClustered();

            entity.Property(e => e.Id).HasColumnName("ID");
            entity.Property(e => e.ItemCode).HasMaxLength(30);
            entity.Property(e => e.LanguageCode)
                .HasMaxLength(3)
                .IsFixedLength();
            entity.Property(e => e.LogDate)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime");
            entity.Property(e => e.NewValue).HasMaxLength(255);
            entity.Property(e => e.OldValue).HasMaxLength(255);
            entity.Property(e => e.ResourceId).HasColumnName("ResourceID");
        });

        modelBuilder.Entity<ItemUnit>(entity =>
        {
            entity.HasKey(e => e.Id).IsClustered(false);

            entity.HasIndex(e => e.Code, "IX_ItemUnits_Code")
                .IsUnique()
                .IsClustered();

            entity.HasIndex(e => e.Unit, "IX_ItemUnits_Unit").IsUnique();

            entity.Property(e => e.Id).HasColumnName("ID");
            entity.Property(e => e.Active).HasColumnName("active");
            entity.Property(e => e.Code)
                .HasMaxLength(8)
                .IsFixedLength();
            entity.Property(e => e.Sysguid)
                .HasDefaultValueSql("(newid())")
                .HasColumnName("sysguid");
            entity.Property(e => e.Unit)
                .HasMaxLength(8)
                .IsFixedLength();
            entity.Property(e => e.UnitType)
                .HasMaxLength(1)
                .HasDefaultValue("O")
                .IsFixedLength();
        });

        modelBuilder.Entity<ItemViewColumn>(entity =>
        {
            entity.Property(e => e.Id)
                .ValueGeneratedNever()
                .HasColumnName("ID");
            entity.Property(e => e.Caption).HasMaxLength(60);
            entity.Property(e => e.CaptionTermId).HasColumnName("CaptionTermID");
            entity.Property(e => e.Columns).HasMaxLength(500);
            entity.Property(e => e.Description).HasMaxLength(60);
            entity.Property(e => e.DescriptionSuffix).HasMaxLength(60);
            entity.Property(e => e.DescriptionSuffixTermId).HasColumnName("DescriptionSuffixTermID");
            entity.Property(e => e.DescriptionTermId).HasColumnName("DescriptionTermID");
            entity.Property(e => e.Joins).HasMaxLength(60);
            entity.Property(e => e.UseInSearch).HasDefaultValue(true);
        });

        modelBuilder.Entity<KeySet>(entity =>
        {
            entity.Property(e => e.Id)
                .ValueGeneratedNever()
                .HasColumnName("ID");
        });

        modelBuilder.Entity<KeySets2>(entity =>
        {
            entity.ToTable("KeySets2");

            entity.Property(e => e.Id).HasColumnName("ID");
        });

        modelBuilder.Entity<Kplkop>(entity =>
        {
            entity.HasKey(e => e.Id).IsClustered(false);

            entity.ToTable("kplkop");

            entity.HasIndex(e => e.Kstplcode, "kplkop")
                .IsUnique()
                .IsClustered();

            entity.HasIndex(e => new { e.Reknr, e.Kstplcode }, "kplkp2").IsUnique();

            entity.HasIndex(e => new { e.Tegreknr, e.Kstplcode }, "kplkp3").IsUnique();

            entity.Property(e => e.Id).HasColumnName("ID");
            entity.Property(e => e.Kstplcode)
                .HasMaxLength(8)
                .IsFixedLength()
                .HasColumnName("kstplcode");
            entity.Property(e => e.Oms25)
                .HasMaxLength(25)
                .HasColumnName("oms25");
            entity.Property(e => e.Reknr)
                .HasMaxLength(9)
                .IsFixedLength()
                .HasColumnName("reknr");
            entity.Property(e => e.Syscreated)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("syscreated");
            entity.Property(e => e.Syscreator).HasColumnName("syscreator");
            entity.Property(e => e.Sysguid)
                .HasDefaultValueSql("(newid())")
                .HasColumnName("sysguid");
            entity.Property(e => e.Sysmodified)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("sysmodified");
            entity.Property(e => e.Sysmodifier).HasColumnName("sysmodifier");
            entity.Property(e => e.Tegreknr)
                .HasMaxLength(9)
                .IsFixedLength()
                .HasColumnName("tegreknr");
            entity.Property(e => e.Timestamp)
                .IsRowVersion()
                .IsConcurrencyToken()
                .HasColumnName("timestamp");
        });

        modelBuilder.Entity<Kplvrd>(entity =>
        {
            entity.HasKey(e => e.Id).IsClustered(false);

            entity.ToTable("kplvrd");

            entity.HasIndex(e => new { e.Targetkpl, e.Kstplcode }, "kplvr2").IsUnique();

            entity.HasIndex(e => new { e.Kstplcode, e.Targetkpl }, "kplvrd")
                .IsUnique()
                .IsClustered();

            entity.Property(e => e.Id).HasColumnName("ID");
            entity.Property(e => e.Eenheden).HasColumnName("eenheden");
            entity.Property(e => e.Kstplcode)
                .HasMaxLength(8)
                .IsFixedLength()
                .HasColumnName("kstplcode");
            entity.Property(e => e.Syscreated)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("syscreated");
            entity.Property(e => e.Syscreator).HasColumnName("syscreator");
            entity.Property(e => e.Sysguid)
                .HasDefaultValueSql("(newid())")
                .HasColumnName("sysguid");
            entity.Property(e => e.Sysmodified)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("sysmodified");
            entity.Property(e => e.Sysmodifier).HasColumnName("sysmodifier");
            entity.Property(e => e.Targetkpl)
                .HasMaxLength(8)
                .IsFixedLength()
                .HasColumnName("targetkpl");
            entity.Property(e => e.Timestamp)
                .IsRowVersion()
                .IsConcurrencyToken()
                .HasColumnName("timestamp");
        });

        modelBuilder.Entity<Ksdrek>(entity =>
        {
            entity.HasKey(e => e.Id).IsClustered(false);

            entity.ToTable("ksdrek");

            entity.HasIndex(e => new { e.Reknr, e.Kstdrcode }, "ksdrek")
                .IsUnique()
                .IsClustered();

            entity.HasIndex(e => new { e.Kstdrcode, e.Reknr }, "ksdrk2").IsUnique();

            entity.Property(e => e.Id).HasColumnName("ID");
            entity.Property(e => e.Kstdrcode)
                .HasMaxLength(8)
                .IsFixedLength()
                .HasColumnName("kstdrcode");
            entity.Property(e => e.Reknr)
                .HasMaxLength(9)
                .IsFixedLength()
                .HasColumnName("reknr");
            entity.Property(e => e.Syscreated)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("syscreated");
            entity.Property(e => e.Syscreator).HasColumnName("syscreator");
            entity.Property(e => e.Sysguid)
                .HasDefaultValueSql("(newid())")
                .HasColumnName("sysguid");
            entity.Property(e => e.Sysmodified)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("sysmodified");
            entity.Property(e => e.Sysmodifier).HasColumnName("sysmodifier");
            entity.Property(e => e.Timestamp)
                .IsRowVersion()
                .IsConcurrencyToken()
                .HasColumnName("timestamp");
        });

        modelBuilder.Entity<Ksprek>(entity =>
        {
            entity.HasKey(e => e.Id).IsClustered(false);

            entity.ToTable("ksprek");

            entity.HasIndex(e => new { e.Reknr, e.Kstplcode }, "ksprek")
                .IsUnique()
                .IsClustered();

            entity.HasIndex(e => new { e.Kstplcode, e.Reknr }, "ksprk2").IsUnique();

            entity.Property(e => e.Id).HasColumnName("ID");
            entity.Property(e => e.Kstplcode)
                .HasMaxLength(8)
                .IsFixedLength()
                .HasColumnName("kstplcode");
            entity.Property(e => e.Reknr)
                .HasMaxLength(9)
                .IsFixedLength()
                .HasColumnName("reknr");
            entity.Property(e => e.Syscreated)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("syscreated");
            entity.Property(e => e.Syscreator).HasColumnName("syscreator");
            entity.Property(e => e.Sysguid)
                .HasDefaultValueSql("(newid())")
                .HasColumnName("sysguid");
            entity.Property(e => e.Sysmodified)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("sysmodified");
            entity.Property(e => e.Sysmodifier).HasColumnName("sysmodifier");
            entity.Property(e => e.Timestamp)
                .IsRowVersion()
                .IsConcurrencyToken()
                .HasColumnName("timestamp");
            entity.Property(e => e.Units).HasColumnName("units");
        });

        modelBuilder.Entity<Kstdr>(entity =>
        {
            entity.HasKey(e => e.Id).IsClustered(false);

            entity.ToTable("kstdr");

            entity.HasIndex(e => new { e.Bedrnr, e.Kstdrcode, e.Id }, "kstbnr").IsUnique();

            entity.HasIndex(e => e.Kstdrcode, "kstdr")
                .IsUnique()
                .IsClustered();

            entity.Property(e => e.Id).HasColumnName("ID");
            entity.Property(e => e.Bedrnr)
                .HasMaxLength(3)
                .IsFixedLength()
                .HasColumnName("bedrnr");
            entity.Property(e => e.Kstdrcode)
                .HasMaxLength(8)
                .IsFixedLength()
                .HasColumnName("kstdrcode");
            entity.Property(e => e.Oms250)
                .HasMaxLength(25)
                .HasColumnName("oms25_0");
            entity.Property(e => e.Oms251)
                .HasMaxLength(25)
                .HasColumnName("oms25_1");
            entity.Property(e => e.Oms252)
                .HasMaxLength(25)
                .HasColumnName("oms25_2");
            entity.Property(e => e.Oms253)
                .HasMaxLength(25)
                .HasColumnName("oms25_3");
            entity.Property(e => e.Oms254)
                .HasMaxLength(25)
                .HasColumnName("oms25_4");
            entity.Property(e => e.Syscreated)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("syscreated");
            entity.Property(e => e.Syscreator).HasColumnName("syscreator");
            entity.Property(e => e.Sysguid)
                .HasDefaultValueSql("(newid())")
                .HasColumnName("sysguid");
            entity.Property(e => e.Sysmodified)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("sysmodified");
            entity.Property(e => e.Sysmodifier).HasColumnName("sysmodifier");
            entity.Property(e => e.Timestamp)
                .IsRowVersion()
                .IsConcurrencyToken()
                .HasColumnName("timestamp");
            entity.Property(e => e.UserField01)
                .HasMaxLength(255)
                .HasColumnName("UserField_01");
            entity.Property(e => e.UserField02)
                .HasMaxLength(255)
                .HasColumnName("UserField_02");
            entity.Property(e => e.UserField03)
                .HasMaxLength(255)
                .HasColumnName("UserField_03");
            entity.Property(e => e.UserField04)
                .HasMaxLength(255)
                .HasColumnName("UserField_04");
            entity.Property(e => e.UserField05)
                .HasMaxLength(255)
                .HasColumnName("UserField_05");
            entity.Property(e => e.UserNumber01).HasColumnName("UserNumber_01");
            entity.Property(e => e.UserNumber02).HasColumnName("UserNumber_02");
            entity.Property(e => e.UserNumber03).HasColumnName("UserNumber_03");
            entity.Property(e => e.UserNumber04).HasColumnName("UserNumber_04");
            entity.Property(e => e.UserNumber05).HasColumnName("UserNumber_05");
        });

        modelBuilder.Entity<Kstpl>(entity =>
        {
            entity.HasKey(e => e.Id).IsClustered(false);

            entity.ToTable("kstpl");

            entity.HasIndex(e => e.Kstplcode, "kstpl")
                .IsUnique()
                .IsClustered();

            entity.Property(e => e.Id).HasColumnName("ID");
            entity.Property(e => e.Bedrnr)
                .HasMaxLength(3)
                .IsFixedLength()
                .HasColumnName("bedrnr");
            entity.Property(e => e.CcMgr).HasColumnName("cc_mgr");
            entity.Property(e => e.Class01)
                .HasMaxLength(30)
                .HasDefaultValue("<none>")
                .HasColumnName("Class_01");
            entity.Property(e => e.Class02)
                .HasMaxLength(30)
                .HasDefaultValue("<none>")
                .HasColumnName("Class_02");
            entity.Property(e => e.Class03)
                .HasMaxLength(30)
                .HasDefaultValue("<none>")
                .HasColumnName("Class_03");
            entity.Property(e => e.Class04)
                .HasMaxLength(30)
                .HasDefaultValue("<none>")
                .HasColumnName("Class_04");
            entity.Property(e => e.Enabled).HasDefaultValue((byte)1);
            entity.Property(e => e.ExtDlnivo).HasColumnName("ext_dlnivo");
            entity.Property(e => e.ExtTarief).HasColumnName("ext_tarief");
            entity.Property(e => e.ExtTotvrd).HasColumnName("ext_totvrd");
            entity.Property(e => e.Kstplcode)
                .HasMaxLength(8)
                .IsFixedLength()
                .HasColumnName("kstplcode");
            entity.Property(e => e.Oms250)
                .HasMaxLength(50)
                .HasColumnName("oms25_0");
            entity.Property(e => e.Oms251)
                .HasMaxLength(50)
                .HasColumnName("oms25_1");
            entity.Property(e => e.Oms252)
                .HasMaxLength(50)
                .HasColumnName("oms25_2");
            entity.Property(e => e.Oms253)
                .HasMaxLength(50)
                .HasColumnName("oms25_3");
            entity.Property(e => e.Oms254)
                .HasMaxLength(50)
                .HasColumnName("oms25_4");
            entity.Property(e => e.Syscreated)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("syscreated");
            entity.Property(e => e.Syscreator).HasColumnName("syscreator");
            entity.Property(e => e.Sysguid)
                .HasDefaultValueSql("(newid())")
                .HasColumnName("sysguid");
            entity.Property(e => e.Sysmodified)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("sysmodified");
            entity.Property(e => e.Sysmodifier).HasColumnName("sysmodifier");
            entity.Property(e => e.Timestamp)
                .IsRowVersion()
                .IsConcurrencyToken()
                .HasColumnName("timestamp");
            entity.Property(e => e.UserField01)
                .HasMaxLength(255)
                .HasColumnName("UserField_01");
            entity.Property(e => e.UserField02)
                .HasMaxLength(255)
                .HasColumnName("UserField_02");
            entity.Property(e => e.UserField03)
                .HasMaxLength(255)
                .HasColumnName("UserField_03");
            entity.Property(e => e.UserField04)
                .HasMaxLength(255)
                .HasColumnName("UserField_04");
            entity.Property(e => e.UserField05)
                .HasMaxLength(255)
                .HasColumnName("UserField_05");
            entity.Property(e => e.UserNumber01).HasColumnName("UserNumber_01");
            entity.Property(e => e.UserNumber02).HasColumnName("UserNumber_02");
            entity.Property(e => e.UserNumber03).HasColumnName("UserNumber_03");
            entity.Property(e => e.UserNumber04).HasColumnName("UserNumber_04");
            entity.Property(e => e.UserNumber05).HasColumnName("UserNumber_05");
        });

        modelBuilder.Entity<Land>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("land");

            entity.HasIndex(e => e.Id, "land_Index").IsClustered();

            entity.Property(e => e.Active)
                .HasDefaultValue((byte)1)
                .HasColumnName("active");
            entity.Property(e => e.BtwLand)
                .HasMaxLength(2)
                .IsFixedLength()
                .HasColumnName("btw_land");
            entity.Property(e => e.Btwvrtnr)
                .HasMaxLength(2)
                .IsFixedLength()
                .HasColumnName("btwvrtnr");
            entity.Property(e => e.Class01)
                .HasMaxLength(30)
                .HasColumnName("class_01");
            entity.Property(e => e.Class02)
                .HasMaxLength(30)
                .HasColumnName("class_02");
            entity.Property(e => e.Class03)
                .HasMaxLength(30)
                .HasColumnName("class_03");
            entity.Property(e => e.Class04)
                .HasMaxLength(30)
                .HasColumnName("class_04");
            entity.Property(e => e.Id)
                .ValueGeneratedOnAdd()
                .HasColumnName("ID");
            entity.Property(e => e.IsoValcd)
                .HasMaxLength(3)
                .IsFixedLength()
                .HasColumnName("iso_valcd");
            entity.Property(e => e.LandCbs)
                .HasMaxLength(3)
                .IsFixedLength()
                .HasColumnName("land_cbs");
            entity.Property(e => e.LandIsonr)
                .HasMaxLength(3)
                .IsFixedLength()
                .HasColumnName("land_isonr");
            entity.Property(e => e.Landcode)
                .HasMaxLength(3)
                .IsFixedLength()
                .HasColumnName("landcode");
            entity.Property(e => e.LidEu).HasColumnName("lid_eu");
            entity.Property(e => e.Oms300)
                .HasMaxLength(30)
                .HasColumnName("oms30_0");
            entity.Property(e => e.Oms600)
                .HasMaxLength(60)
                .HasColumnName("oms60_0");
            entity.Property(e => e.Oms601)
                .HasMaxLength(60)
                .HasColumnName("oms60_1");
            entity.Property(e => e.Oms602)
                .HasMaxLength(60)
                .HasColumnName("oms60_2");
            entity.Property(e => e.Oms603)
                .HasMaxLength(60)
                .HasColumnName("oms60_3");
            entity.Property(e => e.Oms604)
                .HasMaxLength(60)
                .HasColumnName("oms60_4");
            entity.Property(e => e.Swiftvalcd)
                .HasMaxLength(3)
                .IsFixedLength()
                .HasColumnName("swiftvalcd");
            entity.Property(e => e.Syscreated)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("syscreated");
            entity.Property(e => e.Syscreator).HasColumnName("syscreator");
            entity.Property(e => e.Sysguid)
                .HasDefaultValueSql("(newid())")
                .HasColumnName("sysguid");
            entity.Property(e => e.Sysmodified)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("sysmodified");
            entity.Property(e => e.Sysmodifier).HasColumnName("sysmodifier");
            entity.Property(e => e.Timestamp)
                .IsRowVersion()
                .IsConcurrencyToken()
                .HasColumnName("timestamp");
        });

        modelBuilder.Entity<LandClass>(entity =>
        {
            entity.HasKey(e => new { e.ClassId, e.LandClassCode });

            entity.ToTable("landClasses");

            entity.HasIndex(e => e.Id, "ix_ID");

            entity.Property(e => e.ClassId).HasColumnName("ClassID");
            entity.Property(e => e.LandClassCode)
                .HasMaxLength(30)
                .HasColumnName("landClassCode");
            entity.Property(e => e.Description).HasMaxLength(60);
            entity.Property(e => e.Id)
                .HasDefaultValueSql("(newid())")
                .HasColumnName("ID");
        });

        modelBuilder.Entity<LandClassName>(entity =>
        {
            entity.HasKey(e => e.ClassId).HasName("PK_LandClassNames");

            entity.ToTable("landClassNames");

            entity.Property(e => e.ClassId)
                .ValueGeneratedNever()
                .HasColumnName("ClassID");
            entity.Property(e => e.Description).HasMaxLength(60);
            entity.Property(e => e.Timestamp)
                .IsRowVersion()
                .IsConcurrencyToken()
                .HasColumnName("timestamp");
        });

        modelBuilder.Entity<LastAction>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("LastAction");

            entity.HasIndex(e => new { e.CustomerId, e.ContactId }, "IX_LastAction")
                .IsUnique()
                .IsClustered();

            entity.Property(e => e.ContactId).HasColumnName("ContactID");
            entity.Property(e => e.Created)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime");
            entity.Property(e => e.CustomerId).HasColumnName("CustomerID");
        });

        modelBuilder.Entity<Laycrd>(entity =>
        {
            entity.HasKey(e => e.Id).IsClustered(false);

            entity.ToTable("laycrd");

            entity.HasIndex(e => new { e.Crdnr, e.Bedrnr }, "ix_crdnr_bedrnr");

            entity.HasIndex(e => new { e.FormType, e.Layoutnaam, e.Id }, "laycr2").IsUnique();

            entity.HasIndex(e => new { e.FormType, e.Bedrnr, e.Crdnr, e.Subcode, e.Categorie, e.IsoTaalcd, e.Volgnr2 }, "laycrd")
                .IsUnique()
                .IsClustered();

            entity.Property(e => e.Id).HasColumnName("ID");
            entity.Property(e => e.Bedrnr)
                .HasMaxLength(3)
                .IsFixedLength()
                .HasColumnName("bedrnr");
            entity.Property(e => e.Categorie)
                .HasMaxLength(2)
                .IsFixedLength()
                .HasColumnName("categorie");
            entity.Property(e => e.Crdnr)
                .HasMaxLength(6)
                .IsFixedLength()
                .HasColumnName("crdnr");
            entity.Property(e => e.FormType)
                .HasMaxLength(8)
                .IsFixedLength()
                .HasColumnName("form_type");
            entity.Property(e => e.IsoTaalcd)
                .HasMaxLength(3)
                .IsFixedLength()
                .HasColumnName("iso_taalcd");
            entity.Property(e => e.Layoutnaam)
                .HasMaxLength(8)
                .IsFixedLength()
                .HasColumnName("layoutnaam");
            entity.Property(e => e.Subcode)
                .HasMaxLength(3)
                .IsFixedLength()
                .HasColumnName("subcode");
            entity.Property(e => e.Syscreated)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("syscreated");
            entity.Property(e => e.Syscreator).HasColumnName("syscreator");
            entity.Property(e => e.Sysguid)
                .HasDefaultValueSql("(newid())")
                .HasColumnName("sysguid");
            entity.Property(e => e.Sysmodified)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("sysmodified");
            entity.Property(e => e.Sysmodifier).HasColumnName("sysmodifier");
            entity.Property(e => e.Timestamp)
                .IsRowVersion()
                .IsConcurrencyToken()
                .HasColumnName("timestamp");
            entity.Property(e => e.Volgnr2)
                .HasMaxLength(2)
                .IsFixedLength()
                .HasColumnName("volgnr2");
        });

        modelBuilder.Entity<Laydeb>(entity =>
        {
            entity.HasKey(e => e.Id).IsClustered(false);

            entity.ToTable("laydeb");

            entity.HasIndex(e => new { e.Debnr, e.Bedrnr }, "ix_debnr_bedrnr");

            entity.HasIndex(e => new { e.FormType, e.Layoutnaam, e.Id }, "laydb2").IsUnique();

            entity.HasIndex(e => new { e.FormType, e.Bedrnr, e.Debnr, e.Subcode, e.Categorie, e.IsoTaalcd, e.Volgnr2 }, "laydeb")
                .IsUnique()
                .IsClustered();

            entity.Property(e => e.Id).HasColumnName("ID");
            entity.Property(e => e.Bedrnr)
                .HasMaxLength(3)
                .IsFixedLength()
                .HasColumnName("bedrnr");
            entity.Property(e => e.Categorie)
                .HasMaxLength(2)
                .IsFixedLength()
                .HasColumnName("categorie");
            entity.Property(e => e.Debnr)
                .HasMaxLength(6)
                .IsFixedLength()
                .HasColumnName("debnr");
            entity.Property(e => e.FormType)
                .HasMaxLength(8)
                .IsFixedLength()
                .HasColumnName("form_type");
            entity.Property(e => e.IsoTaalcd)
                .HasMaxLength(3)
                .IsFixedLength()
                .HasColumnName("iso_taalcd");
            entity.Property(e => e.Layoutnaam)
                .HasMaxLength(8)
                .IsFixedLength()
                .HasColumnName("layoutnaam");
            entity.Property(e => e.Subcode)
                .HasMaxLength(3)
                .IsFixedLength()
                .HasColumnName("subcode");
            entity.Property(e => e.Syscreated)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("syscreated");
            entity.Property(e => e.Syscreator).HasColumnName("syscreator");
            entity.Property(e => e.Sysguid)
                .HasDefaultValueSql("(newid())")
                .HasColumnName("sysguid");
            entity.Property(e => e.Sysmodified)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("sysmodified");
            entity.Property(e => e.Sysmodifier).HasColumnName("sysmodifier");
            entity.Property(e => e.Timestamp)
                .IsRowVersion()
                .IsConcurrencyToken()
                .HasColumnName("timestamp");
            entity.Property(e => e.Volgnr2)
                .HasMaxLength(2)
                .IsFixedLength()
                .HasColumnName("volgnr2");
        });

        modelBuilder.Entity<Layout>(entity =>
        {
            entity.HasKey(e => e.Id).IsClustered(false);

            entity.ToTable("layouts");

            entity.HasIndex(e => new { e.Laytype, e.Name }, "layouts")
                .IsUnique()
                .IsClustered();

            entity.Property(e => e.Id).HasColumnName("ID");
            entity.Property(e => e.Descr39)
                .HasMaxLength(39)
                .HasDefaultValue("")
                .HasColumnName("descr39");
            entity.Property(e => e.Descr39Termid).HasColumnName("descr39_termid");
            entity.Property(e => e.Layout1).HasColumnName("layout");
            entity.Property(e => e.Laytype).HasColumnName("laytype");
            entity.Property(e => e.Name)
                .HasMaxLength(8)
                .HasColumnName("name");
            entity.Property(e => e.StdCountry)
                .HasMaxLength(3)
                .HasDefaultValue("")
                .IsFixedLength()
                .HasColumnName("std_country");
            entity.Property(e => e.StdLayout).HasColumnName("std_layout");
            entity.Property(e => e.Syscreated)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("syscreated");
            entity.Property(e => e.Syscreator).HasColumnName("syscreator");
            entity.Property(e => e.Sysguid)
                .HasDefaultValueSql("(newid())")
                .HasColumnName("sysguid");
            entity.Property(e => e.Sysmodified)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("sysmodified");
            entity.Property(e => e.Sysmodifier).HasColumnName("sysmodifier");
            entity.Property(e => e.TntpostLayout).HasColumnName("TNTPostLayout");
        });

        modelBuilder.Entity<Laytype>(entity =>
        {
            entity.HasKey(e => e.Id).IsClustered(false);

            entity.ToTable("laytype");

            entity.HasIndex(e => e.Laytype1, "laytype")
                .IsUnique()
                .IsClustered();

            entity.Property(e => e.Id).HasColumnName("ID");
            entity.Property(e => e.Laytype1).HasColumnName("laytype");
            entity.Property(e => e.Suffix)
                .HasMaxLength(3)
                .HasColumnName("suffix");
            entity.Property(e => e.Syscreated)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("syscreated");
            entity.Property(e => e.Syscreator).HasColumnName("syscreator");
            entity.Property(e => e.Sysguid)
                .HasDefaultValueSql("(newid())")
                .HasColumnName("sysguid");
            entity.Property(e => e.Sysmodified)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("sysmodified");
            entity.Property(e => e.Sysmodifier).HasColumnName("sysmodifier");
        });

        modelBuilder.Entity<LicenseUserLog>(entity =>
        {
            entity.HasKey(e => e.LogId).HasName("PK__LicenseU__7839F62D944C2A07");

            entity.ToTable("LicenseUserLog");

            entity.HasIndex(e => e.LogRoles, "IX_LicenseUserLog_logRoles");

            entity.HasIndex(e => e.LogUsr, "IX_LicenseUserLog_logUsr");

            entity.HasIndex(e => e.SnapshotId, "IX_LicenseUserLog_snapshotID");

            entity.Property(e => e.LogId).HasColumnName("logID");
            entity.Property(e => e.BatchNum).HasColumnName("batchNum");
            entity.Property(e => e.LogBlocked).HasColumnName("logBlocked");
            entity.Property(e => e.LogDivision)
                .HasMaxLength(3)
                .HasColumnName("logDivision");
            entity.Property(e => e.LogInactive)
                .HasColumnType("datetime")
                .HasColumnName("logInactive");
            entity.Property(e => e.LogRoles)
                .HasMaxLength(500)
                .HasColumnName("logRoles");
            entity.Property(e => e.LogStart)
                .HasColumnType("datetime")
                .HasColumnName("logStart");
            entity.Property(e => e.LogStatus)
                .HasMaxLength(1)
                .HasColumnName("logStatus");
            entity.Property(e => e.LogUsr)
                .HasMaxLength(200)
                .HasColumnName("logUsr");
            entity.Property(e => e.SnapshotId).HasColumnName("snapshotID");
            entity.Property(e => e.Syscreated)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("syscreated");
        });

        modelBuilder.Entity<LicenseUserLogEse>(entity =>
        {
            entity
                .HasNoKey()
                .ToView("LicenseUserLog_ESE");

            entity.Property(e => e.BatchNum).HasColumnName("batchNum");
            entity.Property(e => e.DbPath)
                .HasMaxLength(400)
                .HasColumnName("dbPath");
            entity.Property(e => e.LicNumber)
                .HasMaxLength(30)
                .HasColumnName("licNumber");
            entity.Property(e => e.LogBlocked).HasColumnName("logBlocked");
            entity.Property(e => e.LogDate)
                .HasColumnType("datetime")
                .HasColumnName("logDate");
            entity.Property(e => e.LogDivision)
                .HasMaxLength(3)
                .HasColumnName("logDivision");
            entity.Property(e => e.LogId).HasColumnName("logID");
            entity.Property(e => e.LogInactive)
                .HasColumnType("datetime")
                .HasColumnName("logInactive");
            entity.Property(e => e.LogRoles)
                .HasMaxLength(500)
                .HasColumnName("logRoles");
            entity.Property(e => e.LogStart)
                .HasColumnType("datetime")
                .HasColumnName("logStart");
            entity.Property(e => e.LogStatus)
                .HasMaxLength(1)
                .HasColumnName("logStatus");
            entity.Property(e => e.LogTransId)
                .HasMaxLength(30)
                .HasColumnName("logTransID");
            entity.Property(e => e.LogUsr)
                .HasMaxLength(200)
                .HasColumnName("logUsr");
            entity.Property(e => e.Logcreated)
                .HasColumnType("datetime")
                .HasColumnName("logcreated");
            entity.Property(e => e.SnapshotId).HasColumnName("snapshotID");
            entity.Property(e => e.Snapshotcreated)
                .HasColumnType("datetime")
                .HasColumnName("snapshotcreated");
        });

        modelBuilder.Entity<LicenseUserLogGlb>(entity =>
        {
            entity
                .HasNoKey()
                .ToView("LicenseUserLog_GLB");

            entity.Property(e => e.BatchNum).HasColumnName("batchNum");
            entity.Property(e => e.DbPath)
                .HasMaxLength(400)
                .HasColumnName("dbPath");
            entity.Property(e => e.LicNumber)
                .HasMaxLength(30)
                .HasColumnName("licNumber");
            entity.Property(e => e.LogBlocked).HasColumnName("logBlocked");
            entity.Property(e => e.LogDate)
                .HasColumnType("datetime")
                .HasColumnName("logDate");
            entity.Property(e => e.LogDivision)
                .HasMaxLength(3)
                .HasColumnName("logDivision");
            entity.Property(e => e.LogId).HasColumnName("logID");
            entity.Property(e => e.LogInactive)
                .HasColumnType("datetime")
                .HasColumnName("logInactive");
            entity.Property(e => e.LogRoles)
                .HasMaxLength(500)
                .HasColumnName("logRoles");
            entity.Property(e => e.LogStart)
                .HasColumnType("datetime")
                .HasColumnName("logStart");
            entity.Property(e => e.LogStatus)
                .HasMaxLength(1)
                .HasColumnName("logStatus");
            entity.Property(e => e.LogTransId)
                .HasMaxLength(30)
                .HasColumnName("logTransID");
            entity.Property(e => e.LogUsr)
                .HasMaxLength(200)
                .HasColumnName("logUsr");
            entity.Property(e => e.Logcreated)
                .HasColumnType("datetime")
                .HasColumnName("logcreated");
            entity.Property(e => e.SnapshotId).HasColumnName("snapshotID");
            entity.Property(e => e.Snapshotcreated)
                .HasColumnType("datetime")
                .HasColumnName("snapshotcreated");
        });

        modelBuilder.Entity<LicenseUserSnapshot>(entity =>
        {
            entity.HasKey(e => e.SnapshotId).HasName("PK__LicenseU__BDCD2E2F82629676");

            entity.ToTable("LicenseUserSnapshot");

            entity.HasIndex(e => e.LicNumber, "IX_LicenseUserSnapshot_licNumber");

            entity.HasIndex(e => e.LogTransId, "IX_LicenseUserSnapshot_logTransID").IsUnique();

            entity.Property(e => e.SnapshotId).HasColumnName("snapshotID");
            entity.Property(e => e.DbPath)
                .HasMaxLength(400)
                .HasColumnName("dbPath");
            entity.Property(e => e.LicNumber)
                .HasMaxLength(30)
                .HasColumnName("licNumber");
            entity.Property(e => e.LogBatchTotal)
                .HasDefaultValue((byte)1)
                .HasColumnName("logBatchTotal");
            entity.Property(e => e.LogDate)
                .HasColumnType("datetime")
                .HasColumnName("logDate");
            entity.Property(e => e.LogProcessTotal).HasColumnName("logProcessTotal");
            entity.Property(e => e.LogSource).HasColumnName("logSource");
            entity.Property(e => e.LogTransId)
                .HasMaxLength(30)
                .HasColumnName("logTransID");
            entity.Property(e => e.Syscreated)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("syscreated");
            entity.Property(e => e.Sysmodified)
                .HasColumnType("datetime")
                .HasColumnName("sysmodified");
        });

        modelBuilder.Entity<LicenseWscallAudit>(entity =>
        {
            entity.HasKey(e => e.AuditId);

            entity.ToTable("LicenseWSCallAudit");

            entity.Property(e => e.AuditId)
                .ValueGeneratedNever()
                .HasColumnName("AuditID");
            entity.Property(e => e.FromAccountId).HasColumnName("FromAccountID");
            entity.Property(e => e.FromLdata).HasColumnName("FromLData");
            entity.Property(e => e.LogDate)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime");
            entity.Property(e => e.LogId).HasColumnName("LogID");
            entity.Property(e => e.ToAccountId).HasColumnName("ToAccountID");
            entity.Property(e => e.ToLdata).HasColumnName("ToLData");
        });

        modelBuilder.Entity<LicenseWscallLog>(entity =>
        {
            entity.HasKey(e => e.LogId);

            entity.ToTable("LicenseWSCallLog");

            entity.Property(e => e.LogId).HasColumnName("LogID");
            entity.Property(e => e.ChamberOfCommerceNumber).HasMaxLength(20);
            entity.Property(e => e.HumresId).HasColumnName("HumresID");
            entity.Property(e => e.LicenseContractNumber).HasMaxLength(30);
            entity.Property(e => e.LogDate)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime");
            entity.Property(e => e.OperationName).HasMaxLength(100);
            entity.Property(e => e.ProductSource).HasMaxLength(10);
            entity.Property(e => e.Release).HasMaxLength(5);
            entity.Property(e => e.ServicePack).HasMaxLength(5);
            entity.Property(e => e.TransactionId)
                .HasMaxLength(50)
                .HasColumnName("TransactionID");
            entity.Property(e => e.WebServiceName).HasMaxLength(255);
            entity.Property(e => e.WebServiceResult).HasMaxLength(255);
        });

        modelBuilder.Entity<Magaz>(entity =>
        {
            entity.HasKey(e => e.Id).IsClustered(false);

            entity.ToTable("magaz");

            entity.HasIndex(e => e.Magcode, "magaz")
                .IsUnique()
                .IsClustered();

            entity.Property(e => e.Id).HasColumnName("ID");
            entity.Property(e => e.AdrAddressLine1)
                .HasMaxLength(100)
                .HasColumnName("adr_AddressLine1");
            entity.Property(e => e.AdrAddressLine2)
                .HasMaxLength(100)
                .HasColumnName("adr_AddressLine2");
            entity.Property(e => e.AdrAddressLine3)
                .HasMaxLength(100)
                .HasColumnName("adr_AddressLine3");
            entity.Property(e => e.AdrCity)
                .HasMaxLength(100)
                .HasColumnName("adr_City");
            entity.Property(e => e.AdrCntpResid).HasColumnName("adr_cntp_resid");
            entity.Property(e => e.AdrFax)
                .HasMaxLength(50)
                .HasColumnName("adr_Fax");
            entity.Property(e => e.AdrLandcode)
                .HasMaxLength(3)
                .IsFixedLength()
                .HasColumnName("adr_landcode");
            entity.Property(e => e.AdrPhone)
                .HasMaxLength(50)
                .HasColumnName("adr_Phone");
            entity.Property(e => e.AdrPostCode)
                .HasMaxLength(20)
                .HasColumnName("adr_PostCode");
            entity.Property(e => e.AdrStateCode)
                .HasMaxLength(3)
                .IsFixedLength()
                .HasColumnName("adr_StateCode");
            entity.Property(e => e.Blokkeer).HasColumnName("blokkeer");
            entity.Property(e => e.CompanyCode)
                .HasMaxLength(3)
                .IsFixedLength();
            entity.Property(e => e.IntRegio)
                .HasMaxLength(10)
                .IsFixedLength()
                .HasColumnName("int_regio");
            entity.Property(e => e.LandIso)
                .HasMaxLength(3)
                .IsFixedLength()
                .HasColumnName("land_iso");
            entity.Property(e => e.LocIntake)
                .HasMaxLength(10)
                .IsFixedLength()
                .HasColumnName("loc_intake");
            entity.Property(e => e.LocIssue)
                .HasMaxLength(10)
                .IsFixedLength()
                .HasColumnName("loc_issue");
            entity.Property(e => e.Magcode)
                .HasMaxLength(4)
                .IsFixedLength()
                .HasColumnName("magcode");
            entity.Property(e => e.Naam)
                .HasMaxLength(30)
                .HasColumnName("naam");
            entity.Property(e => e.Syscreated)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("syscreated");
            entity.Property(e => e.Syscreator).HasColumnName("syscreator");
            entity.Property(e => e.Sysguid)
                .HasDefaultValueSql("(newid())")
                .HasColumnName("sysguid");
            entity.Property(e => e.Sysmodified)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("sysmodified");
            entity.Property(e => e.Sysmodifier).HasColumnName("sysmodifier");
            entity.Property(e => e.Timestamp)
                .IsRowVersion()
                .IsConcurrencyToken()
                .HasColumnName("timestamp");
        });

        modelBuilder.Entity<MailMergePending>(entity =>
        {
            entity.HasKey(e => e.Id).IsClustered(false);

            entity.ToTable("MailMergePending");

            entity.HasIndex(e => e.Hid, "IX_MailMergePending_HID");

            entity.HasIndex(e => new { e.ReportType, e.Status }, "IX_MailMergePending_ReportTypeStatus");

            entity.HasIndex(e => e.Syscreator, "IX_MailMergePending_syscreator");

            entity.HasIndex(e => e.Id, "MailMergePending_Index").IsClustered();

            entity.Property(e => e.Id)
                .HasDefaultValueSql("(newid())")
                .HasColumnName("ID");
            entity.Property(e => e.AddressType)
                .HasMaxLength(3)
                .IsFixedLength();
            entity.Property(e => e.AttachmentName).HasMaxLength(50);
            entity.Property(e => e.DateProcessed).HasColumnType("datetime");
            entity.Property(e => e.DateStarted).HasColumnType("datetime");
            entity.Property(e => e.Email)
                .HasMaxLength(255)
                .HasColumnName("EMail");
            entity.Property(e => e.Hid)
                .ValueGeneratedOnAdd()
                .HasColumnName("HID");
            entity.Property(e => e.LogId).HasColumnName("LogID");
            entity.Property(e => e.ReferenceDate).HasColumnType("datetime");
            entity.Property(e => e.ReportName).HasMaxLength(30);
            entity.Property(e => e.ReportType).HasMaxLength(30);
            entity.Property(e => e.SenderMail).HasMaxLength(255);
            entity.Property(e => e.Sqlquery).HasColumnName("SQLQuery");
            entity.Property(e => e.Subject).HasMaxLength(255);
            entity.Property(e => e.Syscreated)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("syscreated");
            entity.Property(e => e.Syscreator).HasColumnName("syscreator");
        });

        modelBuilder.Entity<MailMessage>(entity =>
        {
            entity.HasIndex(e => new { e.DocumentId, e.Version }, "IX_DocumentVersion").IsUnique();

            entity.Property(e => e.Id)
                .HasDefaultValueSql("(newsequentialid())")
                .HasColumnName("ID");
            entity.Property(e => e.Cc).HasColumnName("CC");
            entity.Property(e => e.ConversationId).HasColumnName("ConversationID");
            entity.Property(e => e.DocumentId).HasColumnName("DocumentID");
            entity.Property(e => e.MailFrom).HasMaxLength(512);
            entity.Property(e => e.SentOn).HasColumnType("datetime");
            entity.Property(e => e.Subject).HasMaxLength(256);
            entity.Property(e => e.Version).HasMaxLength(20);
        });

        modelBuilder.Entity<Mapfil>(entity =>
        {
            entity.HasKey(e => e.Id).IsClustered(false);

            entity.ToTable("mapfil");

            entity.HasIndex(e => e.OldFile, "mapfil")
                .IsUnique()
                .IsClustered();

            entity.Property(e => e.Id).HasColumnName("ID");
            entity.Property(e => e.NewFile)
                .HasMaxLength(8)
                .IsFixedLength()
                .HasColumnName("new_file");
            entity.Property(e => e.OldFile)
                .HasMaxLength(8)
                .IsFixedLength()
                .HasColumnName("old_file");
            entity.Property(e => e.Syscreated)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("syscreated");
            entity.Property(e => e.Syscreator).HasColumnName("syscreator");
            entity.Property(e => e.Sysguid)
                .HasDefaultValueSql("(newid())")
                .HasColumnName("sysguid");
            entity.Property(e => e.Sysmodified)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("sysmodified");
            entity.Property(e => e.Sysmodifier).HasColumnName("sysmodifier");
            entity.Property(e => e.Timestamp)
                .IsRowVersion()
                .IsConcurrencyToken()
                .HasColumnName("timestamp");
        });

        modelBuilder.Entity<Mapfld>(entity =>
        {
            entity.HasKey(e => e.Id).IsClustered(false);

            entity.ToTable("mapfld");

            entity.HasIndex(e => new { e.NewFile, e.OldField }, "mapfld")
                .IsUnique()
                .IsClustered();

            entity.HasIndex(e => new { e.OldFile, e.OldField, e.Id }, "mapofl").IsUnique();

            entity.Property(e => e.Id).HasColumnName("ID");
            entity.Property(e => e.NewField)
                .HasMaxLength(45)
                .HasColumnName("new_field");
            entity.Property(e => e.NewFile)
                .HasMaxLength(8)
                .IsFixedLength()
                .HasColumnName("new_file");
            entity.Property(e => e.OldField)
                .HasMaxLength(45)
                .HasColumnName("old_field");
            entity.Property(e => e.OldFile)
                .HasMaxLength(8)
                .IsFixedLength()
                .HasColumnName("old_file");
            entity.Property(e => e.Syscreated)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("syscreated");
            entity.Property(e => e.Syscreator).HasColumnName("syscreator");
            entity.Property(e => e.Sysguid)
                .HasDefaultValueSql("(newid())")
                .HasColumnName("sysguid");
            entity.Property(e => e.Sysmodified)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("sysmodified");
            entity.Property(e => e.Sysmodifier).HasColumnName("sysmodifier");
            entity.Property(e => e.Timestamp)
                .IsRowVersion()
                .IsConcurrencyToken()
                .HasColumnName("timestamp");
        });

        modelBuilder.Entity<Mapfor>(entity =>
        {
            entity.HasKey(e => e.Id).IsClustered(false);

            entity.ToTable("mapfor");

            entity.HasIndex(e => new { e.Laytype, e.OldExpr }, "mapfor")
                .IsUnique()
                .IsClustered();

            entity.Property(e => e.Id).HasColumnName("ID");
            entity.Property(e => e.Laytype)
                .HasMaxLength(1)
                .IsFixedLength()
                .HasColumnName("laytype");
            entity.Property(e => e.NewExpr)
                .HasMaxLength(80)
                .HasColumnName("new_expr");
            entity.Property(e => e.OldExpr)
                .HasMaxLength(80)
                .HasColumnName("old_expr");
            entity.Property(e => e.Syscreated)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("syscreated");
            entity.Property(e => e.Syscreator).HasColumnName("syscreator");
            entity.Property(e => e.Sysguid)
                .HasDefaultValueSql("(newid())")
                .HasColumnName("sysguid");
            entity.Property(e => e.Sysmodified)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("sysmodified");
            entity.Property(e => e.Sysmodifier).HasColumnName("sysmodifier");
            entity.Property(e => e.Timestamp)
                .IsRowVersion()
                .IsConcurrencyToken()
                .HasColumnName("timestamp");
        });

        modelBuilder.Entity<Mapmsc>(entity =>
        {
            entity.HasKey(e => e.Id).IsClustered(false);

            entity.ToTable("mapmsc");

            entity.HasIndex(e => new { e.Laytype, e.Label }, "mapmsc")
                .IsUnique()
                .IsClustered();

            entity.Property(e => e.Id).HasColumnName("ID");
            entity.Property(e => e.Descr)
                .HasMaxLength(50)
                .HasColumnName("descr");
            entity.Property(e => e.Dimtype).HasColumnName("dimtype");
            entity.Property(e => e.Expr)
                .HasMaxLength(80)
                .HasColumnName("expr");
            entity.Property(e => e.Label)
                .HasMaxLength(15)
                .HasColumnName("label");
            entity.Property(e => e.Laytype)
                .HasMaxLength(1)
                .IsFixedLength()
                .HasColumnName("laytype");
            entity.Property(e => e.Syscreated)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("syscreated");
            entity.Property(e => e.Syscreator).HasColumnName("syscreator");
            entity.Property(e => e.Sysguid)
                .HasDefaultValueSql("(newid())")
                .HasColumnName("sysguid");
            entity.Property(e => e.Sysmodified)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("sysmodified");
            entity.Property(e => e.Sysmodifier).HasColumnName("sysmodifier");
            entity.Property(e => e.Timestamp)
                .IsRowVersion()
                .IsConcurrencyToken()
                .HasColumnName("timestamp");
        });

        modelBuilder.Entity<MasterResourceSchedule>(entity =>
        {
            entity.HasIndex(e => new { e.Resource, e.EntryDate }, "IX_MRSResourceEntryDate").IsUnique();

            entity.Property(e => e.Id)
                .HasDefaultValueSql("(newid())")
                .HasColumnName("ID");
            entity.Property(e => e.BreakEnd1)
                .HasColumnType("datetime")
                .HasColumnName("BreakEnd_1");
            entity.Property(e => e.BreakEnd2)
                .HasColumnType("datetime")
                .HasColumnName("BreakEnd_2");
            entity.Property(e => e.BreakEnd3)
                .HasColumnType("datetime")
                .HasColumnName("BreakEnd_3");
            entity.Property(e => e.BreakStart1)
                .HasColumnType("datetime")
                .HasColumnName("BreakStart_1");
            entity.Property(e => e.BreakStart2)
                .HasColumnType("datetime")
                .HasColumnName("BreakStart_2");
            entity.Property(e => e.BreakStart3)
                .HasColumnType("datetime")
                .HasColumnName("BreakStart_3");
            entity.Property(e => e.CompanyCode)
                .HasMaxLength(3)
                .IsFixedLength();
            entity.Property(e => e.CostCenter)
                .HasMaxLength(8)
                .IsFixedLength();
            entity.Property(e => e.Created)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime");
            entity.Property(e => e.DayType)
                .HasMaxLength(1)
                .IsFixedLength();
            entity.Property(e => e.EndTime).HasColumnType("datetime");
            entity.Property(e => e.EntryDate).HasColumnType("datetime");
            entity.Property(e => e.Glaccount)
                .HasMaxLength(9)
                .IsFixedLength()
                .HasColumnName("GLAccount");
            entity.Property(e => e.ItemCode).HasMaxLength(30);
            entity.Property(e => e.Modified)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime");
            entity.Property(e => e.ShiftId).HasColumnName("ShiftID");
            entity.Property(e => e.StartTime).HasColumnType("datetime");
        });

        modelBuilder.Entity<MatchingCompetence>(entity =>
        {
            entity.HasKey(e => e.Id).IsClustered(false);

            entity.HasIndex(e => new { e.CompetenceId, e.MatchProfileId }, "IX_MatchingCompetences")
                .IsUnique()
                .IsClustered();

            entity.Property(e => e.Id)
                .HasDefaultValueSql("(newid())")
                .HasColumnName("ID");
            entity.Property(e => e.Created)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime");
            entity.Property(e => e.Modified)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime");
        });

        modelBuilder.Entity<Myhrpayroll>(entity =>
        {
            entity
                .HasNoKey()
                .ToView("myhrpayroll");

            entity.Property(e => e.Amount).HasColumnName("amount");
            entity.Property(e => e.CarAcquisition)
                .HasColumnType("datetime")
                .HasColumnName("car_acquisition");
            entity.Property(e => e.CarModel)
                .HasMaxLength(30)
                .HasColumnName("car_model");
            entity.Property(e => e.CarYear).HasColumnName("car_year");
            entity.Property(e => e.Children).HasColumnName("children");
            entity.Property(e => e.Contract).HasColumnName("contract");
            entity.Property(e => e.Country)
                .HasMaxLength(3)
                .IsFixedLength()
                .HasColumnName("country");
            entity.Property(e => e.Description)
                .HasMaxLength(50)
                .HasColumnName("description");
            entity.Property(e => e.DocAttachmentId).HasColumnName("DocAttachmentID");
            entity.Property(e => e.Enddate)
                .HasColumnType("datetime")
                .HasColumnName("enddate");
            entity.Property(e => e.Id)
                .ValueGeneratedOnAdd()
                .HasColumnName("ID");
            entity.Property(e => e.JobTitle)
                .HasMaxLength(12)
                .HasColumnName("job_title");
            entity.Property(e => e.PaymentPeriod)
                .HasMaxLength(1)
                .IsFixedLength()
                .HasColumnName("payment_period");
            entity.Property(e => e.Payrollyear).HasColumnName("payrollyear");
            entity.Property(e => e.PercAmt)
                .HasMaxLength(1)
                .IsFixedLength()
                .HasColumnName("perc_amt");
            entity.Property(e => e.Percentage).HasColumnName("percentage");
            entity.Property(e => e.Period).HasColumnName("period");
            entity.Property(e => e.PreviousEmployer)
                .HasMaxLength(30)
                .HasColumnName("previous_employer");
            entity.Property(e => e.ResId).HasColumnName("res_id");
            entity.Property(e => e.Sliptext1)
                .HasMaxLength(70)
                .HasColumnName("sliptext1");
            entity.Property(e => e.Sliptext2)
                .HasMaxLength(70)
                .HasColumnName("sliptext2");
            entity.Property(e => e.Sliptext3)
                .HasMaxLength(70)
                .HasColumnName("sliptext3");
            entity.Property(e => e.SocsoScheme)
                .HasMaxLength(1)
                .IsFixedLength()
                .HasColumnName("socso_scheme");
            entity.Property(e => e.Startdate)
                .HasColumnType("datetime")
                .HasColumnName("startdate");
            entity.Property(e => e.StopTaxFrom)
                .HasColumnType("datetime")
                .HasColumnName("stop_tax_from");
            entity.Property(e => e.StopTaxTo)
                .HasColumnType("datetime")
                .HasColumnName("stop_tax_to");
            entity.Property(e => e.Syscreated)
                .HasColumnType("datetime")
                .HasColumnName("syscreated");
            entity.Property(e => e.Syscreator).HasColumnName("syscreator");
            entity.Property(e => e.Sysguid).HasColumnName("sysguid");
            entity.Property(e => e.Sysmodified)
                .HasColumnType("datetime")
                .HasColumnName("sysmodified");
            entity.Property(e => e.Sysmodifier).HasColumnName("sysmodifier");
            entity.Property(e => e.TaxBranch)
                .HasMaxLength(8)
                .IsFixedLength()
                .HasColumnName("tax_branch");
            entity.Property(e => e.TaxBranchSpouse)
                .HasMaxLength(8)
                .IsFixedLength()
                .HasColumnName("tax_branch_spouse");
            entity.Property(e => e.TaxCatg)
                .HasMaxLength(1)
                .IsFixedLength()
                .HasColumnName("tax_catg");
            entity.Property(e => e.Timestamp)
                .IsRowVersion()
                .IsConcurrencyToken()
                .HasColumnName("timestamp");
            entity.Property(e => e.Type)
                .HasMaxLength(1)
                .IsFixedLength()
                .HasColumnName("type");
        });

        modelBuilder.Entity<Nlhrpayroll>(entity =>
        {
            entity
                .HasNoKey()
                .ToView("nlhrpayroll");

            entity.Property(e => e.AbpDvAard)
                .HasMaxLength(1)
                .IsFixedLength()
                .HasColumnName("abp_dv_aard");
            entity.Property(e => e.AbpDvEnddate)
                .HasColumnType("datetime")
                .HasColumnName("abp_dv_enddate");
            entity.Property(e => e.AbpDvStartdate)
                .HasColumnType("datetime")
                .HasColumnName("abp_dv_startdate");
            entity.Property(e => e.AbpDvVolgnr).HasColumnName("abp_dv_volgnr");
            entity.Property(e => e.AbpDvWaarde)
                .HasMaxLength(1)
                .IsFixedLength()
                .HasColumnName("abp_dv_waarde");
            entity.Property(e => e.AbpPtfAfw).HasColumnName("abp_ptf_afw");
            entity.Property(e => e.AbuEnddate)
                .HasColumnType("datetime")
                .HasColumnName("abu_enddate");
            entity.Property(e => e.AbuStartdate)
                .HasColumnType("datetime")
                .HasColumnName("abu_startdate");
            entity.Property(e => e.AbuWeeksNotWorked).HasColumnName("abu_weeks_not_worked");
            entity.Property(e => e.AfwBterPf).HasColumnName("afw_bter_pf");
            entity.Property(e => e.AnnualWage).HasColumnName("annual_wage");
            entity.Property(e => e.BterUurloon).HasColumnName("bter_uurloon");
            entity.Property(e => e.CalcDaysWeek).HasColumnName("calc_days_week");
            entity.Property(e => e.CalcHoursWeek).HasColumnName("calc_hours_week");
            entity.Property(e => e.CalcPtf).HasColumnName("calc_ptf");
            entity.Property(e => e.CalcPtfMethod)
                .HasMaxLength(1)
                .IsFixedLength()
                .HasColumnName("calc_ptf_method");
            entity.Property(e => e.CalcSvdaysMethod)
                .HasMaxLength(1)
                .IsFixedLength()
                .HasColumnName("calc_svdays_method");
            entity.Property(e => e.CdAgh)
                .HasMaxLength(8)
                .IsFixedLength()
                .HasColumnName("cd_agh");
            entity.Property(e => e.CdCao).HasColumnName("cd_cao");
            entity.Property(e => e.CdContract)
                .HasMaxLength(8)
                .IsFixedLength()
                .HasColumnName("cd_contract");
            entity.Property(e => e.CdFaseFz)
                .HasMaxLength(8)
                .IsFixedLength()
                .HasColumnName("cd_fase_fz");
            entity.Property(e => e.CdInkVermindering)
                .HasMaxLength(1)
                .IsFixedLength()
                .HasColumnName("cd_ink_vermindering");
            entity.Property(e => e.CdRedengeenbijtelling)
                .HasMaxLength(1)
                .IsFixedLength()
                .HasColumnName("cd_redengeenbijtelling");
            entity.Property(e => e.CdZvw)
                .HasMaxLength(1)
                .IsFixedLength()
                .HasColumnName("cd_zvw");
            entity.Property(e => e.ComponentGroup)
                .HasMaxLength(10)
                .IsFixedLength()
                .HasColumnName("component_group");
            entity.Property(e => e.Contract).HasColumnName("contract");
            entity.Property(e => e.CorrArbVerh)
                .HasMaxLength(1)
                .IsFixedLength()
                .HasColumnName("corr_arb_verh");
            entity.Property(e => e.Country)
                .HasMaxLength(3)
                .IsFixedLength()
                .HasColumnName("country");
            entity.Property(e => e.CvzWoonlandfactor).HasColumnName("cvz_woonlandfactor");
            entity.Property(e => e.DaysPeriod).HasColumnName("days_period");
            entity.Property(e => e.DeclarationDate)
                .HasColumnType("datetime")
                .HasColumnName("declaration_date");
            entity.Property(e => e.DeclarationLastaction).HasColumnName("declaration_lastaction");
            entity.Property(e => e.DeclarationMade)
                .HasMaxLength(1)
                .IsFixedLength()
                .HasColumnName("declaration_made");
            entity.Property(e => e.DeclarationNumber)
                .HasMaxLength(15)
                .HasColumnName("declaration_number");
            entity.Property(e => e.DeclarationPeriod).HasColumnName("declaration_period");
            entity.Property(e => e.DeclarationReference)
                .HasMaxLength(30)
                .HasColumnName("declaration_reference");
            entity.Property(e => e.DeclarationSequence).HasColumnName("declaration_sequence");
            entity.Property(e => e.DeclarationType)
                .HasMaxLength(1)
                .IsFixedLength()
                .HasColumnName("declaration_type");
            entity.Property(e => e.Description)
                .HasMaxLength(50)
                .HasColumnName("description");
            entity.Property(e => e.DocAttachmentId).HasColumnName("DocAttachmentID");
            entity.Property(e => e.Enddate)
                .HasColumnType("datetime")
                .HasColumnName("enddate");
            entity.Property(e => e.Id)
                .ValueGeneratedOnAdd()
                .HasColumnName("ID");
            entity.Property(e => e.IvDevDate).HasColumnName("iv_dev_date");
            entity.Property(e => e.IvEnddate)
                .HasColumnType("datetime")
                .HasColumnName("iv_enddate");
            entity.Property(e => e.IvIndication).HasColumnName("iv_indication");
            entity.Property(e => e.IvNummer).HasColumnName("iv_nummer");
            entity.Property(e => e.IvStartdate)
                .HasColumnType("datetime")
                .HasColumnName("iv_startdate");
            entity.Property(e => e.JobTitle)
                .HasMaxLength(12)
                .HasColumnName("job_title");
            entity.Property(e => e.KortingLevensloop).HasColumnName("korting_levensloop");
            entity.Property(e => e.MsvCaoCode).HasColumnName("msv_cao_code");
            entity.Property(e => e.MsvChangeLdate)
                .HasColumnType("datetime")
                .HasColumnName("msv_change_ldate");
            entity.Property(e => e.MsvDeclarationType)
                .HasMaxLength(1)
                .IsFixedLength()
                .HasColumnName("msv_declaration_type");
            entity.Property(e => e.MsvHoursWeek).HasColumnName("msv_hours_week");
            entity.Property(e => e.MsvLabourAgreement).HasColumnName("msv_labour_agreement");
            entity.Property(e => e.MsvLabourCode)
                .HasMaxLength(1)
                .IsFixedLength()
                .HasColumnName("msv_labour_code");
            entity.Property(e => e.MsvLabourException)
                .HasMaxLength(8)
                .IsFixedLength()
                .HasColumnName("msv_labour_exception");
            entity.Property(e => e.MsvLabourRegular).HasColumnName("msv_labour_regular");
            entity.Property(e => e.MsvLoonsom).HasColumnName("msv_loonsom");
            entity.Property(e => e.MsvOwnRiskCode)
                .HasMaxLength(1)
                .IsFixedLength()
                .HasColumnName("msv_own_risk_code");
            entity.Property(e => e.MsvPartBps).HasColumnName("msv_part_bps");
            entity.Property(e => e.MsvPartObf).HasColumnName("msv_part_obf");
            entity.Property(e => e.MsvPartStein).HasColumnName("msv_part_stein");
            entity.Property(e => e.MsvPartVnps).HasColumnName("msv_part_vnps");
            entity.Property(e => e.MsvPremiumgrpCode)
                .HasMaxLength(1)
                .IsFixedLength()
                .HasColumnName("msv_premiumgrp_code");
            entity.Property(e => e.MsvPrint).HasColumnName("msv_print");
            entity.Property(e => e.MsvReductionWaCode)
                .HasMaxLength(1)
                .IsFixedLength()
                .HasColumnName("msv_reduction_wa_code");
            entity.Property(e => e.MsvResignCode)
                .HasMaxLength(1)
                .IsFixedLength()
                .HasColumnName("msv_resign_code");
            entity.Property(e => e.MsvWaoPercentage).HasColumnName("msv_wao_percentage");
            entity.Property(e => e.PaymentPeriod)
                .HasMaxLength(1)
                .IsFixedLength()
                .HasColumnName("payment_period");
            entity.Property(e => e.Period).HasColumnName("period");
            entity.Property(e => e.PloRisFonds).HasColumnName("plo_ris_fonds");
            entity.Property(e => e.ReferencePeriod).HasColumnName("reference_period");
            entity.Property(e => e.ReferenceYear).HasColumnName("reference_year");
            entity.Property(e => e.ResId).HasColumnName("res_id");
            entity.Property(e => e.Sector)
                .HasMaxLength(8)
                .IsFixedLength()
                .HasColumnName("sector");
            entity.Property(e => e.SlipNameMethod)
                .HasMaxLength(1)
                .IsFixedLength()
                .HasColumnName("slip_name_method");
            entity.Property(e => e.Sliptext1)
                .HasMaxLength(70)
                .HasColumnName("sliptext1");
            entity.Property(e => e.Sliptext2)
                .HasMaxLength(70)
                .HasColumnName("sliptext2");
            entity.Property(e => e.Sliptext3)
                .HasMaxLength(70)
                .HasColumnName("sliptext3");
            entity.Property(e => e.SocBterDays).HasColumnName("soc_bter_days");
            entity.Property(e => e.SocLeerling)
                .HasMaxLength(1)
                .IsFixedLength()
                .HasColumnName("soc_leerling");
            entity.Property(e => e.SocTypeLine)
                .HasMaxLength(1)
                .IsFixedLength()
                .HasColumnName("soc_type_line");
            entity.Property(e => e.SocUta).HasColumnName("soc_UTA");
            entity.Property(e => e.SocWaoType)
                .HasMaxLength(1)
                .IsFixedLength()
                .HasColumnName("soc_wao_type");
            entity.Property(e => e.SocWwType)
                .HasMaxLength(1)
                .IsFixedLength()
                .HasColumnName("soc_ww_type");
            entity.Property(e => e.SocZfwType)
                .HasMaxLength(1)
                .IsFixedLength()
                .HasColumnName("soc_zfw_type");
            entity.Property(e => e.SocZwType)
                .HasMaxLength(1)
                .IsFixedLength()
                .HasColumnName("soc_zw_type");
            entity.Property(e => e.Startdate)
                .HasColumnType("datetime")
                .HasColumnName("startdate");
            entity.Property(e => e.Subsector)
                .HasMaxLength(8)
                .IsFixedLength()
                .HasColumnName("subsector");
            entity.Property(e => e.Syscreated)
                .HasColumnType("datetime")
                .HasColumnName("syscreated");
            entity.Property(e => e.Syscreator).HasColumnName("syscreator");
            entity.Property(e => e.Sysguid).HasColumnName("sysguid");
            entity.Property(e => e.Sysmodified)
                .HasColumnType("datetime")
                .HasColumnName("sysmodified");
            entity.Property(e => e.Sysmodifier).HasColumnName("sysmodifier");
            entity.Property(e => e.TaxBeschikkingAmount).HasColumnName("tax_beschikking_amount");
            entity.Property(e => e.TaxExceptionType)
                .HasMaxLength(1)
                .IsFixedLength()
                .HasColumnName("tax_exception_type");
            entity.Property(e => e.TaxExtraAmount).HasColumnName("tax_extra_amount");
            entity.Property(e => e.TaxExtraType)
                .HasMaxLength(1)
                .IsFixedLength()
                .HasColumnName("tax_extra_type");
            entity.Property(e => e.TaxFranchise)
                .HasMaxLength(1)
                .IsFixedLength()
                .HasColumnName("tax_franchise");
            entity.Property(e => e.TaxIncomeCode).HasColumnName("tax_income_code");
            entity.Property(e => e.TaxLagelonenType)
                .HasMaxLength(1)
                .IsFixedLength()
                .HasColumnName("tax_lagelonen_type");
            entity.Property(e => e.TaxPayment).HasColumnName("tax_payment");
            entity.Property(e => e.TaxPercentageRule).HasColumnName("tax_percentage_rule");
            entity.Property(e => e.TaxRebateElderly).HasColumnName("tax_rebate_elderly");
            entity.Property(e => e.TaxRebateLdate)
                .HasColumnType("datetime")
                .HasColumnName("tax_rebate_ldate");
            entity.Property(e => e.TaxRebateType)
                .HasMaxLength(1)
                .IsFixedLength()
                .HasColumnName("tax_rebate_type");
            entity.Property(e => e.TaxRebateYoungDisab).HasColumnName("tax_rebate_young_disab");
            entity.Property(e => e.TaxReductionType)
                .HasMaxLength(1)
                .IsFixedLength()
                .HasColumnName("tax_reduction_type");
            entity.Property(e => e.TaxSpecialPercentage).HasColumnName("tax_special_percentage");
            entity.Property(e => e.TaxSpecialYearlywage).HasColumnName("tax_special_yearlywage");
            entity.Property(e => e.TaxTableColor)
                .HasMaxLength(1)
                .IsFixedLength()
                .HasColumnName("tax_table_color");
            entity.Property(e => e.TaxUseDaily)
                .HasMaxLength(1)
                .IsFixedLength()
                .HasColumnName("tax_use_daily");
            entity.Property(e => e.TaxVerminderingType)
                .HasMaxLength(1)
                .IsFixedLength()
                .HasColumnName("tax_vermindering_type");
            entity.Property(e => e.TaxVerminderingUren).HasColumnName("tax_vermindering_uren");
            entity.Property(e => e.TaxVerminderingVastbedrag).HasColumnName("tax_vermindering_vastbedrag");
            entity.Property(e => e.TaxVoordeelregel).HasColumnName("tax_voordeelregel");
            entity.Property(e => e.Timestamp)
                .IsRowVersion()
                .IsConcurrencyToken()
                .HasColumnName("timestamp");
            entity.Property(e => e.TsfDagenOpg).HasColumnName("tsf_dagen_opg");
            entity.Property(e => e.Type)
                .HasMaxLength(1)
                .IsFixedLength()
                .HasColumnName("type");
            entity.Property(e => e.YdecBAmount).HasColumnName("ydec_b_amount");
            entity.Property(e => e.YdecBpfCode).HasColumnName("ydec_bpf_code");
            entity.Property(e => e.YdecCompCar).HasColumnName("ydec_comp_car");
            entity.Property(e => e.YdecGovernment).HasColumnName("ydec_government");
            entity.Property(e => e.YdecPaymentAmt).HasColumnName("ydec_payment_amt");
            entity.Property(e => e.YdecPaymentDays).HasColumnName("ydec_payment_days");
            entity.Property(e => e.YdecPaymentWao).HasColumnName("ydec_payment_wao");
            entity.Property(e => e.YdecSpecialAmount1).HasColumnName("ydec_special_amount1");
            entity.Property(e => e.YdecSpecialAmount2).HasColumnName("ydec_special_amount2");
            entity.Property(e => e.YdecSpecialAmount3).HasColumnName("ydec_special_amount3");
            entity.Property(e => e.YdecSpecialCode1).HasColumnName("ydec_special_code1");
            entity.Property(e => e.YdecSpecialCode2).HasColumnName("ydec_special_code2");
            entity.Property(e => e.YdecSpecialCode3).HasColumnName("ydec_special_code3");
            entity.Property(e => e.YdecSpecialSvCode).HasColumnName("ydec_special_sv_code");
            entity.Property(e => e.YdecVrijstCode)
                .HasMaxLength(1)
                .IsFixedLength()
                .HasColumnName("ydec_vrijst_code");
            entity.Property(e => e.YdecVutCode).HasColumnName("ydec_vut_code");
            entity.Property(e => e.YdecYearHours).HasColumnName("ydec_year_hours");
        });

        modelBuilder.Entity<Nlsal>(entity =>
        {
            entity.HasKey(e => e.Id).IsClustered(false);

            entity.ToTable("NLSal");

            entity.HasIndex(e => new { e.Loonjaar, e.ResId }, "NLSal_LoonJaarResID")
                .IsUnique()
                .IsClustered();

            entity.HasIndex(e => e.ResId, "NLSal_ResID");

            entity.Property(e => e.Id).HasColumnName("ID");
            entity.Property(e => e.AantDagpr)
                .HasMaxLength(3)
                .IsFixedLength()
                .HasColumnName("aant_dagpr");
            entity.Property(e => e.AanvOudkrt)
                .HasDefaultValue((byte)0)
                .HasColumnName("aanv_oudkrt");
            entity.Property(e => e.AardDv)
                .HasMaxLength(1)
                .IsFixedLength()
                .HasColumnName("aard_dv");
            entity.Property(e => e.Artiest)
                .HasMaxLength(1)
                .IsFixedLength()
                .HasColumnName("artiest");
            entity.Property(e => e.AtvOpbtyp)
                .HasMaxLength(1)
                .IsFixedLength()
                .HasColumnName("atv_opbtyp");
            entity.Property(e => e.AtvP).HasColumnName("atv_p");
            entity.Property(e => e.AtvRchtdg).HasColumnName("atv_rchtdg");
            entity.Property(e => e.AtvUurdag)
                .HasMaxLength(1)
                .IsFixedLength()
                .HasColumnName("atv_uurdag");
            entity.Property(e => e.AutoJN).HasColumnName("auto_j_n");
            entity.Property(e => e.AwwType)
                .HasMaxLength(1)
                .IsFixedLength()
                .HasColumnName("aww_type");
            entity.Property(e => e.Bankac0)
                .HasMaxLength(34)
                .HasColumnName("bankac_0");
            entity.Property(e => e.Bankac1)
                .HasMaxLength(34)
                .HasColumnName("bankac_1");
            entity.Property(e => e.Bankacdesc0)
                .HasMaxLength(35)
                .HasColumnName("bankacdesc_0");
            entity.Property(e => e.Bankacdesc1)
                .HasMaxLength(35)
                .HasColumnName("bankacdesc_1");
            entity.Property(e => e.Bankactype0)
                .HasMaxLength(3)
                .IsFixedLength()
                .HasColumnName("bankactype_0");
            entity.Property(e => e.Bankactype1)
                .HasMaxLength(3)
                .IsFixedLength()
                .HasColumnName("bankactype_1");
            entity.Property(e => e.BdSpcAd1)
                .HasMaxLength(5)
                .IsFixedLength()
                .HasColumnName("bd_spc_ad1");
            entity.Property(e => e.BdSpcAd2)
                .HasMaxLength(5)
                .IsFixedLength()
                .HasColumnName("bd_spc_ad2");
            entity.Property(e => e.BdSpcAd3)
                .HasMaxLength(5)
                .IsFixedLength()
                .HasColumnName("bd_spc_ad3");
            entity.Property(e => e.BdrA)
                .HasMaxLength(5)
                .IsFixedLength()
                .HasColumnName("bdr_a");
            entity.Property(e => e.BdrAflos).HasColumnName("bdr_aflos");
            entity.Property(e => e.BdrB)
                .HasMaxLength(5)
                .IsFixedLength()
                .HasColumnName("bdr_b");
            entity.Property(e => e.BdrBesch).HasColumnName("bdr_besch");
            entity.Property(e => e.BdrExtlh).HasColumnName("bdr_extlh");
            entity.Property(e => e.BdrSpcAd1).HasColumnName("bdr_spc_ad1");
            entity.Property(e => e.BdrSpcAd2).HasColumnName("bdr_spc_ad2");
            entity.Property(e => e.BdrSpcAd3).HasColumnName("bdr_spc_ad3");
            entity.Property(e => e.BdrUitk)
                .HasMaxLength(5)
                .IsFixedLength()
                .HasColumnName("bdr_uitk");
            entity.Property(e => e.BerCumVip)
                .HasMaxLength(1)
                .IsFixedLength()
                .HasColumnName("ber_cum_vip");
            entity.Property(e => e.BerekCum).HasColumnName("berek_cum");
            entity.Property(e => e.BetPer)
                .HasMaxLength(1)
                .IsFixedLength()
                .HasColumnName("bet_per");
            entity.Property(e => e.BolType)
                .HasMaxLength(1)
                .IsFixedLength()
                .HasColumnName("bol_type");
            entity.Property(e => e.BolWnr)
                .HasDefaultValue(0.0)
                .HasColumnName("bol_wnr");
            entity.Property(e => e.Bpf)
                .HasMaxLength(2)
                .IsFixedLength()
                .HasColumnName("bpf");
            entity.Property(e => e.Brntloon)
                .HasMaxLength(1)
                .IsFixedLength()
                .HasColumnName("brntloon");
            entity.Property(e => e.BrutoJrln).HasColumnName("bruto_jrln");
            entity.Property(e => e.BvNummer)
                .HasMaxLength(6)
                .IsFixedLength()
                .HasColumnName("bv_nummer");
            entity.Property(e => e.CaoCode)
                .HasMaxLength(4)
                .IsFixedLength()
                .HasColumnName("cao_code");
            entity.Property(e => e.CdBesch)
                .HasMaxLength(1)
                .IsFixedLength()
                .HasColumnName("cd_besch");
            entity.Property(e => e.CdInkomen)
                .HasMaxLength(2)
                .IsFixedLength()
                .HasColumnName("cd_inkomen");
            entity.Property(e => e.CdOverl)
                .HasMaxLength(1)
                .IsFixedLength()
                .HasColumnName("cd_overl");
            entity.Property(e => e.CdSpcAd1)
                .HasMaxLength(2)
                .IsFixedLength()
                .HasColumnName("cd_spc_ad1");
            entity.Property(e => e.CdSpcAd2)
                .HasMaxLength(2)
                .IsFixedLength()
                .HasColumnName("cd_spc_ad2");
            entity.Property(e => e.CdSpcAd3)
                .HasMaxLength(2)
                .IsFixedLength()
                .HasColumnName("cd_spc_ad3");
            entity.Property(e => e.CdSpec)
                .HasMaxLength(2)
                .IsFixedLength()
                .HasColumnName("cd_spec");
            entity.Property(e => e.CdUitz)
                .HasMaxLength(1)
                .IsFixedLength()
                .HasColumnName("cd_uitz");
            entity.Property(e => e.DagenAanv)
                .HasMaxLength(3)
                .IsFixedLength()
                .HasColumnName("dagen_aanv");
            entity.Property(e => e.DagnPer).HasColumnName("dagn_per");
            entity.Property(e => e.DagnWeek).HasColumnName("dagn_week");
            entity.Property(e => e.DatTargr1)
                .HasColumnType("datetime")
                .HasColumnName("dat_targr1");
            entity.Property(e => e.DatTargr2)
                .HasColumnType("datetime")
                .HasColumnName("dat_targr2");
            entity.Property(e => e.DatTargr3)
                .HasColumnType("datetime")
                .HasColumnName("dat_targr3");
            entity.Property(e => e.DeclareTypeDesc)
                .HasMaxLength(1)
                .IsFixedLength();
            entity.Property(e => e.DlnmrBps).HasColumnName("dlnmr_bps");
            entity.Property(e => e.DlnmrObf).HasColumnName("dlnmr_obf");
            entity.Property(e => e.DlnmrStein).HasColumnName("dlnmr_stein");
            entity.Property(e => e.DlnmrVnps).HasColumnName("dlnmr_vnps");
            entity.Property(e => e.ExtrLhPb)
                .HasMaxLength(1)
                .IsFixedLength()
                .HasColumnName("extr_lh_pb");
            entity.Property(e => e.FisclnVor).HasColumnName("fiscln_vor");
            entity.Property(e => e.Grensarb).HasColumnName("grensarb");
            entity.Property(e => e.HerlOhTs)
                .HasMaxLength(1)
                .IsFixedLength()
                .HasColumnName("herl_oh_ts");
            entity.Property(e => e.HerlRegel)
                .HasMaxLength(1)
                .IsFixedLength()
                .HasColumnName("herl_regel");
            entity.Property(e => e.HisAflos).HasColumnName("his_aflos");
            entity.Property(e => e.Hoofdsom).HasColumnName("hoofdsom");
            entity.Property(e => e.Isp1)
                .HasMaxLength(2)
                .IsFixedLength()
                .HasColumnName("isp1");
            entity.Property(e => e.Isp2)
                .HasMaxLength(2)
                .IsFixedLength()
                .HasColumnName("isp2");
            entity.Property(e => e.Isp3)
                .HasMaxLength(2)
                .IsFixedLength()
                .HasColumnName("isp3");
            entity.Property(e => e.Isp4)
                .HasMaxLength(2)
                .IsFixedLength()
                .HasColumnName("isp4");
            entity.Property(e => e.JhdcapNj)
                .HasDefaultValue((byte)0)
                .HasColumnName("jhdcap_nj");
            entity.Property(e => e.KaderReg).HasColumnName("kader_reg");
            entity.Property(e => e.LeerlingNj).HasColumnName("leerling_nj");
            entity.Property(e => e.LhkrtCode0)
                .HasMaxLength(1)
                .IsFixedLength()
                .HasColumnName("lhkrt_code_0");
            entity.Property(e => e.LhkrtCode1)
                .HasMaxLength(1)
                .IsFixedLength()
                .HasColumnName("lhkrt_code_1");
            entity.Property(e => e.LhkrtCode2)
                .HasMaxLength(1)
                .IsFixedLength()
                .HasColumnName("lhkrt_code_2");
            entity.Property(e => e.LhkrtLdate0)
                .HasColumnType("datetime")
                .HasColumnName("lhkrt_ldate_0");
            entity.Property(e => e.LhkrtLdate1)
                .HasColumnType("datetime")
                .HasColumnName("lhkrt_ldate_1");
            entity.Property(e => e.LhkrtLdate2)
                .HasColumnType("datetime")
                .HasColumnName("lhkrt_ldate_2");
            entity.Property(e => e.LoonhJN).HasColumnName("loonh_j_n");
            entity.Property(e => e.Loonjaar)
                .HasMaxLength(4)
                .IsFixedLength()
                .HasColumnName("loonjaar");
            entity.Property(e => e.MinlNB)
                .HasMaxLength(1)
                .IsFixedLength()
                .HasColumnName("minl_n_b");
            entity.Property(e => e.Minloon).HasColumnName("minloon");
            entity.Property(e => e.NatCode)
                .HasMaxLength(4)
                .IsFixedLength()
                .HasColumnName("nat_code");
            entity.Property(e => e.NrSfb)
                .HasMaxLength(4)
                .IsFixedLength()
                .HasColumnName("nr_sfb");
            entity.Property(e => e.OhJrloon).HasColumnName("oh_jrloon");
            entity.Property(e => e.Orgnr1)
                .HasMaxLength(3)
                .IsFixedLength()
                .HasColumnName("orgnr1");
            entity.Property(e => e.Orgnr2)
                .HasMaxLength(3)
                .IsFixedLength()
                .HasColumnName("orgnr2");
            entity.Property(e => e.Orgnr3)
                .HasMaxLength(3)
                .IsFixedLength()
                .HasColumnName("orgnr3");
            entity.Property(e => e.Orgnr4)
                .HasMaxLength(3)
                .IsFixedLength()
                .HasColumnName("orgnr4");
            entity.Property(e => e.OverhJN)
                .HasDefaultValue((byte)1)
                .HasColumnName("overh_j_n");
            entity.Property(e => e.P13emnd).HasColumnName("p_13emnd");
            entity.Property(e => e.PLhBijz).HasColumnName("p_lh_bijz");
            entity.Property(e => e.POhBijz).HasColumnName("p_oh_bijz");
            entity.Property(e => e.PVakgeld).HasColumnName("p_vakgeld");
            entity.Property(e => e.PensType)
                .HasMaxLength(1)
                .IsFixedLength()
                .HasColumnName("pens_type");
            entity.Property(e => e.PensWgv).HasColumnName("pens_wgv");
            entity.Property(e => e.PensWnr).HasColumnName("pens_wnr");
            entity.Property(e => e.PerVast)
                .HasMaxLength(3)
                .IsFixedLength()
                .HasColumnName("per_vast");
            entity.Property(e => e.PercReg35).HasColumnName("perc_reg35");
            entity.Property(e => e.Pggmdeelnr)
                .HasMaxLength(6)
                .IsFixedLength()
                .HasColumnName("pggmdeelnr");
            entity.Property(e => e.PrGroep)
                .HasMaxLength(1)
                .IsFixedLength()
                .HasColumnName("pr_groep");
            entity.Property(e => e.PrechtZkv)
                .HasMaxLength(1)
                .IsFixedLength()
                .HasColumnName("precht_zkv");
            entity.Property(e => e.RchtVakdg).HasColumnName("rcht_vakdg");
            entity.Property(e => e.RedWg)
                .HasMaxLength(1)
                .IsFixedLength()
                .HasColumnName("red_wg");
            entity.Property(e => e.Reg35)
                .HasMaxLength(1)
                .IsFixedLength()
                .HasColumnName("reg_35");
            entity.Property(e => e.RegArbeid)
                .HasDefaultValue((byte)1)
                .HasColumnName("reg_arbeid");
            entity.Property(e => e.ResId).HasColumnName("res_id");
            entity.Property(e => e.RfEigenRis)
                .HasMaxLength(1)
                .IsFixedLength()
                .HasColumnName("rf_eigen_ris");
            entity.Property(e => e.RfOfWw)
                .HasMaxLength(1)
                .IsFixedLength()
                .HasColumnName("rf_of_ww");
            entity.Property(e => e.Salaris).HasColumnName("salaris");
            entity.Property(e => e.SlipTekst1)
                .HasMaxLength(70)
                .HasColumnName("slipTekst1");
            entity.Property(e => e.SlipTekst2)
                .HasMaxLength(70)
                .HasColumnName("slipTekst2");
            entity.Property(e => e.SlipTekst3)
                .HasMaxLength(70)
                .HasColumnName("slipTekst3");
            entity.Property(e => e.SocVerz)
                .HasDefaultValue((byte)1)
                .HasColumnName("soc_verz");
            entity.Property(e => e.SocfType)
                .HasMaxLength(1)
                .IsFixedLength()
                .HasColumnName("socf_type");
            entity.Property(e => e.SocfWgv).HasColumnName("socf_wgv");
            entity.Property(e => e.SocfWnr).HasColumnName("socf_wnr");
            entity.Property(e => e.Syscreated)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("syscreated");
            entity.Property(e => e.Syscreator).HasColumnName("syscreator");
            entity.Property(e => e.Sysguid)
                .HasDefaultValueSql("(newid())")
                .HasColumnName("sysguid");
            entity.Property(e => e.Sysmodified)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("sysmodified");
            entity.Property(e => e.Sysmodifier).HasColumnName("sysmodifier");
            entity.Property(e => e.Tabkleur)
                .HasMaxLength(1)
                .IsFixedLength()
                .HasColumnName("tabkleur");
            entity.Property(e => e.Targroep1)
                .HasMaxLength(1)
                .IsFixedLength()
                .HasColumnName("targroep1");
            entity.Property(e => e.Targroep2)
                .HasMaxLength(1)
                .IsFixedLength()
                .HasColumnName("targroep2");
            entity.Property(e => e.Targroep3)
                .HasMaxLength(1)
                .IsFixedLength()
                .HasColumnName("targroep3");
            entity.Property(e => e.Thuiswrk).HasColumnName("thuiswrk");
            entity.Property(e => e.Timestamp)
                .IsRowVersion()
                .IsConcurrencyToken()
                .HasColumnName("timestamp");
            entity.Property(e => e.TotAflos).HasColumnName("tot_aflos");
            entity.Property(e => e.TslCode)
                .HasMaxLength(2)
                .IsFixedLength()
                .HasColumnName("tsl_code");
            entity.Property(e => e.TvtAf).HasColumnName("tvt_af");
            entity.Property(e => e.TvtBegin).HasColumnName("tvt_begin");
            entity.Property(e => e.TvtBij).HasColumnName("tvt_bij");
            entity.Property(e => e.TvtJN)
                .HasDefaultValue((byte)1)
                .HasColumnName("tvt_j_n");
            entity.Property(e => e.TwrkLb).HasColumnName("twrk_lb");
            entity.Property(e => e.UrenDag).HasColumnName("uren_dag");
            entity.Property(e => e.UrenPweek).HasColumnName("uren_pweek");
            entity.Property(e => e.Uurloon).HasColumnName("uurloon");
            entity.Property(e => e.VakOpbtyp)
                .HasMaxLength(1)
                .IsFixedLength()
                .HasColumnName("vak_opbtyp");
            entity.Property(e => e.VakP).HasColumnName("vak_p");
            entity.Property(e => e.VakUurdag)
                .HasMaxLength(1)
                .IsFixedLength()
                .HasColumnName("vak_uurdag");
            entity.Property(e => e.Vakbon)
                .HasMaxLength(1)
                .IsFixedLength()
                .HasColumnName("vakbon");
            entity.Property(e => e.VermLhTyp)
                .HasMaxLength(1)
                .IsFixedLength()
                .HasColumnName("verm_lh_typ");
            entity.Property(e => e.VermLlTyp)
                .HasMaxLength(1)
                .IsFixedLength()
                .HasColumnName("verm_ll_typ");
            entity.Property(e => e.VerzAbp).HasColumnName("verz_abp");
            entity.Property(e => e.VolgnrCum)
                .HasMaxLength(1)
                .IsFixedLength()
                .HasColumnName("volgnr_cum");
            entity.Property(e => e.Voordeelrg).HasColumnName("voordeelrg");
            entity.Property(e => e.VpAardA)
                .HasMaxLength(1)
                .IsFixedLength()
                .HasColumnName("vp_aard_a");
            entity.Property(e => e.VpAardB)
                .HasMaxLength(1)
                .IsFixedLength()
                .HasColumnName("vp_aard_b");
            entity.Property(e => e.VpAfwPfg).HasColumnName("vp_afw_pfg");
            entity.Property(e => e.VpArbOvk)
                .HasDefaultValue((byte)1)
                .HasColumnName("vp_arb_ovk");
            entity.Property(e => e.VpArbRel)
                .HasMaxLength(1)
                .IsFixedLength()
                .HasColumnName("vp_arb_rel");
            entity.Property(e => e.VpArbTyp)
                .HasMaxLength(2)
                .IsFixedLength()
                .HasColumnName("vp_arb_typ");
            entity.Property(e => e.VpArbVnr)
                .HasMaxLength(2)
                .IsFixedLength()
                .HasColumnName("vp_arb_vnr");
            entity.Property(e => e.VpAvwNj).HasColumnName("vp_avw_nj");
            entity.Property(e => e.VpBdrPrc).HasColumnName("vp_bdr_prc");
            entity.Property(e => e.VpBrpCd)
                .HasMaxLength(3)
                .IsFixedLength()
                .HasColumnName("vp_brp_cd");
            entity.Property(e => e.VpBrpOms)
                .HasMaxLength(45)
                .HasColumnName("vp_brp_oms");
            entity.Property(e => e.VpCaoCd)
                .HasMaxLength(4)
                .IsFixedLength()
                .HasColumnName("vp_cao_cd");
            entity.Property(e => e.VpDgnLp)
                .HasMaxLength(1)
                .IsFixedLength()
                .HasColumnName("vp_dgn_lp");
            entity.Property(e => e.VpDispPf)
                .HasDefaultValue((byte)1)
                .HasColumnName("vp_disp_pf");
            entity.Property(e => e.VpMldTyp)
                .HasMaxLength(1)
                .IsFixedLength()
                .HasColumnName("vp_mld_typ");
            entity.Property(e => e.VpNwtoetr).HasColumnName("vp_nwtoetr");
            entity.Property(e => e.VpPensdJn)
                .HasMaxLength(1)
                .IsFixedLength()
                .HasColumnName("vp_pensd_jn");
            entity.Property(e => e.VpPensdP).HasColumnName("vp_pensd_p");
            entity.Property(e => e.VpPrnJn)
                .HasMaxLength(1)
                .IsFixedLength()
                .HasColumnName("vp_prn_jn");
            entity.Property(e => e.VpRdUitd)
                .HasMaxLength(1)
                .IsFixedLength()
                .HasColumnName("vp_rd_uitd");
            entity.Property(e => e.VpRfJn)
                .HasDefaultValue((byte)1)
                .HasColumnName("vp_rf_jn");
            entity.Property(e => e.VpSrtReg)
                .HasMaxLength(1)
                .IsFixedLength()
                .HasColumnName("vp_srt_reg");
            entity.Property(e => e.VpTypBdr)
                .HasMaxLength(1)
                .IsFixedLength()
                .HasColumnName("vp_typ_bdr");
            entity.Property(e => e.VpTypBp)
                .HasMaxLength(1)
                .IsFixedLength()
                .HasColumnName("vp_typ_bp");
            entity.Property(e => e.VpUrnWk)
                .HasMaxLength(4)
                .IsFixedLength()
                .HasColumnName("vp_urn_wk");
            entity.Property(e => e.VpUtaBrp)
                .HasDefaultValue((byte)1)
                .HasColumnName("vp_uta_brp");
            entity.Property(e => e.VpVfJn)
                .HasDefaultValue((byte)1)
                .HasColumnName("vp_vf_jn");
            entity.Property(e => e.VpVpuDisp)
                .HasMaxLength(1)
                .IsFixedLength()
                .HasColumnName("vp_vpu_disp");
            entity.Property(e => e.VpVrywJn)
                .HasDefaultValue((byte)1)
                .HasColumnName("vp_vryw_jn");
            entity.Property(e => e.VpWaoPrc)
                .HasMaxLength(2)
                .IsFixedLength()
                .HasColumnName("vp_wao_prc");
            entity.Property(e => e.VpWyzDat)
                .HasColumnType("datetime")
                .HasColumnName("vp_wyz_dat");
            entity.Property(e => e.VpZwGrp)
                .HasMaxLength(1)
                .IsFixedLength()
                .HasColumnName("vp_zw_grp");
            entity.Property(e => e.VschBdr).HasColumnName("vsch_bdr");
            entity.Property(e => e.VschOpgeb).HasColumnName("vsch_opgeb");
            entity.Property(e => e.VschStorn).HasColumnName("vsch_storn");
            entity.Property(e => e.VschUitb).HasColumnName("vsch_uitb");
            entity.Property(e => e.VutType)
                .HasMaxLength(1)
                .IsFixedLength()
                .HasColumnName("vut_type");
            entity.Property(e => e.VutWgv).HasColumnName("vut_wgv");
            entity.Property(e => e.VutWnr).HasColumnName("vut_wnr");
            entity.Property(e => e.WachtDgn)
                .HasMaxLength(3)
                .IsFixedLength()
                .HasColumnName("wacht_dgn");
            entity.Property(e => e.WaoType)
                .HasMaxLength(1)
                .IsFixedLength()
                .HasColumnName("wao_type");
            entity.Property(e => e.WgatType)
                .HasMaxLength(1)
                .IsFixedLength()
                .HasColumnName("wgat_type");
            entity.Property(e => e.WgatWgv).HasColumnName("wgat_wgv");
            entity.Property(e => e.WgatWnr).HasColumnName("wgat_wnr");
            entity.Property(e => e.Woonland)
                .HasMaxLength(4)
                .IsFixedLength()
                .HasColumnName("woonland");
            entity.Property(e => e.WwJN)
                .HasMaxLength(1)
                .IsFixedLength()
                .HasColumnName("ww_j_n");
            entity.Property(e => e.ZfwJN)
                .HasMaxLength(1)
                .IsFixedLength()
                .HasColumnName("zfw_j_n");
            entity.Property(e => e.ZfwN)
                .HasMaxLength(1)
                .IsFixedLength()
                .HasColumnName("zfw_n");
            entity.Property(e => e.ZiekgldP).HasColumnName("ziekgld_p");
            entity.Property(e => e.ZkPercBv).HasColumnName("zk_perc_bv");
            entity.Property(e => e.ZkPercEr).HasColumnName("zk_perc_er");
            entity.Property(e => e.ZwType)
                .HasMaxLength(1)
                .IsFixedLength()
                .HasColumnName("zw_type");
        });

        modelBuilder.Entity<NlsalHrFint>(entity =>
        {
            entity.HasKey(e => e.CompType).HasName("PK_NLSalHr");

            entity.ToTable("NLSalHrFint");

            entity.Property(e => e.CompType)
                .HasMaxLength(8)
                .IsFixedLength()
                .HasColumnName("comp_type");
            entity.Property(e => e.BdrOnb).HasColumnName("bdr_onb");
            entity.Property(e => e.DgtoeAtv)
                .HasDefaultValue(true)
                .HasColumnName("dgtoe_atv");
            entity.Property(e => e.DgtoeVak).HasColumnName("dgtoe_vak");
            entity.Property(e => e.DgtoeZiek).HasColumnName("dgtoe_ziek");
            entity.Property(e => e.Frch).HasColumnName("frch");
            entity.Property(e => e.Gbknr)
                .HasMaxLength(9)
                .IsFixedLength()
                .HasColumnName("gbknr");
            entity.Property(e => e.Id)
                .ValueGeneratedOnAdd()
                .HasColumnName("ID");
            entity.Property(e => e.Kol18B)
                .HasMaxLength(1)
                .IsFixedLength()
                .HasColumnName("kol_18_b");
            entity.Property(e => e.LbkTypen)
                .HasMaxLength(1)
                .IsFixedLength()
                .HasColumnName("lbk_typen");
            entity.Property(e => e.PensmeeJn)
                .HasDefaultValue(true)
                .HasColumnName("pensmee_jn");
            entity.Property(e => e.Res13eM)
                .HasDefaultValue(true)
                .HasColumnName("res_13e_m");
            entity.Property(e => e.ResVak)
                .HasDefaultValue(true)
                .HasColumnName("res_vak");
            entity.Property(e => e.ToeSrt)
                .HasMaxLength(1)
                .IsFixedLength()
                .HasColumnName("toe_srt");
            entity.Property(e => e.TypeSpln)
                .HasMaxLength(1)
                .IsFixedLength()
                .HasColumnName("type_spln");
            entity.Property(e => e.UseInTaxReduction).HasDefaultValue(false);
            entity.Property(e => e.VutmeeJn)
                .HasDefaultValue(true)
                .HasColumnName("vutmee_jn");
            entity.Property(e => e.WgatmeeJn)
                .HasDefaultValue(true)
                .HasColumnName("wgatmee_jn");
        });

        modelBuilder.Entity<NlsalSetting>(entity =>
        {
            entity.HasKey(e => e.Id).IsClustered(false);

            entity.ToTable("NLSalSettings");

            entity.HasIndex(e => e.Id, "NLSalSettings_Index").IsClustered();

            entity.Property(e => e.Id).HasColumnName("ID");
            entity.Property(e => e.AantDagpr).HasColumnName("aant_dagpr");
            entity.Property(e => e.AanvOudkrt).HasColumnName("aanv_oudkrt");
            entity.Property(e => e.AardDv).HasColumnName("aard_dv");
            entity.Property(e => e.Artiest).HasColumnName("artiest");
            entity.Property(e => e.AtvOpbtyp).HasColumnName("atv_opbtyp");
            entity.Property(e => e.AtvP).HasColumnName("atv_p");
            entity.Property(e => e.AtvRchtdg).HasColumnName("atv_rchtdg");
            entity.Property(e => e.AtvUurdag).HasColumnName("atv_uurdag");
            entity.Property(e => e.AutoJN).HasColumnName("auto_j_n");
            entity.Property(e => e.AwwType).HasColumnName("aww_type");
            entity.Property(e => e.Bankac0)
                .HasMaxLength(34)
                .HasColumnName("bankac_0");
            entity.Property(e => e.Bankac1)
                .HasMaxLength(34)
                .HasColumnName("bankac_1");
            entity.Property(e => e.Bankactype0)
                .HasMaxLength(3)
                .IsFixedLength()
                .HasColumnName("bankactype_0");
            entity.Property(e => e.Bankactype1)
                .HasMaxLength(3)
                .IsFixedLength()
                .HasColumnName("bankactype_1");
            entity.Property(e => e.BdSpcAd1).HasColumnName("bd_spc_ad1");
            entity.Property(e => e.BdSpcAd2).HasColumnName("bd_spc_ad2");
            entity.Property(e => e.BdSpcAd3).HasColumnName("bd_spc_ad3");
            entity.Property(e => e.BdrA).HasColumnName("bdr_a");
            entity.Property(e => e.BdrAflos).HasColumnName("bdr_aflos");
            entity.Property(e => e.BdrB).HasColumnName("bdr_b");
            entity.Property(e => e.BdrBesch).HasColumnName("bdr_besch");
            entity.Property(e => e.BdrExtlh).HasColumnName("bdr_extlh");
            entity.Property(e => e.BdrSpcAd1).HasColumnName("bdr_spc_ad1");
            entity.Property(e => e.BdrSpcAd2).HasColumnName("bdr_spc_ad2");
            entity.Property(e => e.BdrSpcAd3).HasColumnName("bdr_spc_ad3");
            entity.Property(e => e.BdrUitk).HasColumnName("bdr_uitk");
            entity.Property(e => e.Bedrnr)
                .HasMaxLength(3)
                .IsFixedLength()
                .HasColumnName("bedrnr");
            entity.Property(e => e.BerCumVip).HasColumnName("ber_cum_vip");
            entity.Property(e => e.BerekCum).HasColumnName("berek_cum");
            entity.Property(e => e.BetPer).HasColumnName("bet_per");
            entity.Property(e => e.BolType).HasColumnName("bol_type");
            entity.Property(e => e.BolWnr).HasColumnName("bol_wnr");
            entity.Property(e => e.Bpf).HasColumnName("bpf");
            entity.Property(e => e.Brntloon).HasColumnName("brntloon");
            entity.Property(e => e.BrutoJrln).HasColumnName("bruto_jrln");
            entity.Property(e => e.BvNummer).HasColumnName("bv_nummer");
            entity.Property(e => e.CaoCode).HasColumnName("cao_code");
            entity.Property(e => e.CdBesch).HasColumnName("cd_besch");
            entity.Property(e => e.CdInkomen).HasColumnName("cd_inkomen");
            entity.Property(e => e.CdOverl).HasColumnName("cd_overl");
            entity.Property(e => e.CdSpcAd1).HasColumnName("cd_spc_ad1");
            entity.Property(e => e.CdSpcAd2).HasColumnName("cd_spc_ad2");
            entity.Property(e => e.CdSpcAd3).HasColumnName("cd_spc_ad3");
            entity.Property(e => e.CdSpec).HasColumnName("cd_spec");
            entity.Property(e => e.CdUitz).HasColumnName("cd_uitz");
            entity.Property(e => e.DagenAanv).HasColumnName("dagen_aanv");
            entity.Property(e => e.DagnPer).HasColumnName("dagn_per");
            entity.Property(e => e.DagnWeek).HasColumnName("dagn_week");
            entity.Property(e => e.DatTargr1).HasColumnName("dat_targr1");
            entity.Property(e => e.DatTargr2).HasColumnName("dat_targr2");
            entity.Property(e => e.DatTargr3).HasColumnName("dat_targr3");
            entity.Property(e => e.DefAantDagpr)
                .HasMaxLength(3)
                .IsFixedLength()
                .HasColumnName("def_aant_dagpr");
            entity.Property(e => e.DefAanvOudkrt).HasColumnName("def_aanv_oudkrt");
            entity.Property(e => e.DefAardDv)
                .HasMaxLength(1)
                .IsFixedLength()
                .HasColumnName("def_aard_dv");
            entity.Property(e => e.DefArtiest)
                .HasMaxLength(1)
                .IsFixedLength()
                .HasColumnName("def_artiest");
            entity.Property(e => e.DefAtvOpbtyp)
                .HasMaxLength(1)
                .IsFixedLength()
                .HasColumnName("def_atv_opbtyp");
            entity.Property(e => e.DefAtvP).HasColumnName("def_atv_p");
            entity.Property(e => e.DefAtvRchtdg).HasColumnName("def_atv_rchtdg");
            entity.Property(e => e.DefAtvUurdag)
                .HasMaxLength(1)
                .IsFixedLength()
                .HasColumnName("def_atv_uurdag");
            entity.Property(e => e.DefAutoJN).HasColumnName("def_auto_j_n");
            entity.Property(e => e.DefAwwType)
                .HasMaxLength(1)
                .IsFixedLength()
                .HasColumnName("def_aww_type");
            entity.Property(e => e.DefBankac0)
                .HasMaxLength(34)
                .HasColumnName("def_bankac_0");
            entity.Property(e => e.DefBankac1)
                .HasMaxLength(34)
                .HasColumnName("def_bankac_1");
            entity.Property(e => e.DefBankactype0)
                .HasMaxLength(3)
                .IsFixedLength()
                .HasColumnName("def_bankactype_0");
            entity.Property(e => e.DefBankactype1)
                .HasMaxLength(3)
                .IsFixedLength()
                .HasColumnName("def_bankactype_1");
            entity.Property(e => e.DefBdSpcAd1)
                .HasMaxLength(5)
                .IsFixedLength()
                .HasColumnName("def_bd_spc_ad1");
            entity.Property(e => e.DefBdSpcAd2)
                .HasMaxLength(5)
                .IsFixedLength()
                .HasColumnName("def_bd_spc_ad2");
            entity.Property(e => e.DefBdSpcAd3)
                .HasMaxLength(5)
                .IsFixedLength()
                .HasColumnName("def_bd_spc_ad3");
            entity.Property(e => e.DefBdrA)
                .HasMaxLength(5)
                .IsFixedLength()
                .HasColumnName("def_bdr_a");
            entity.Property(e => e.DefBdrAflos).HasColumnName("def_bdr_aflos");
            entity.Property(e => e.DefBdrB)
                .HasMaxLength(5)
                .IsFixedLength()
                .HasColumnName("def_bdr_b");
            entity.Property(e => e.DefBdrBesch).HasColumnName("def_bdr_besch");
            entity.Property(e => e.DefBdrExtlh).HasColumnName("def_bdr_extlh");
            entity.Property(e => e.DefBdrSpcAd1).HasColumnName("def_bdr_spc_ad1");
            entity.Property(e => e.DefBdrSpcAd2).HasColumnName("def_bdr_spc_ad2");
            entity.Property(e => e.DefBdrSpcAd3).HasColumnName("def_bdr_spc_ad3");
            entity.Property(e => e.DefBdrUitk)
                .HasMaxLength(5)
                .IsFixedLength()
                .HasColumnName("def_bdr_uitk");
            entity.Property(e => e.DefBerCumVip)
                .HasMaxLength(1)
                .IsFixedLength()
                .HasColumnName("def_ber_cum_vip");
            entity.Property(e => e.DefBerekCum).HasColumnName("def_berek_cum");
            entity.Property(e => e.DefBetPer)
                .HasMaxLength(1)
                .IsFixedLength()
                .HasColumnName("def_bet_per");
            entity.Property(e => e.DefBolType)
                .HasMaxLength(1)
                .IsFixedLength()
                .HasColumnName("def_bol_type");
            entity.Property(e => e.DefBolWnr)
                .HasDefaultValue(0.0)
                .HasColumnName("def_bol_wnr");
            entity.Property(e => e.DefBpf)
                .HasMaxLength(2)
                .IsFixedLength()
                .HasColumnName("def_bpf");
            entity.Property(e => e.DefBrntloon)
                .HasMaxLength(1)
                .IsFixedLength()
                .HasColumnName("def_brntloon");
            entity.Property(e => e.DefBrutoJrln).HasColumnName("def_bruto_jrln");
            entity.Property(e => e.DefBvNummer)
                .HasMaxLength(6)
                .IsFixedLength()
                .HasColumnName("def_bv_nummer");
            entity.Property(e => e.DefCaoCode)
                .HasMaxLength(4)
                .IsFixedLength()
                .HasColumnName("def_cao_code");
            entity.Property(e => e.DefCdBesch)
                .HasMaxLength(1)
                .IsFixedLength()
                .HasColumnName("def_cd_besch");
            entity.Property(e => e.DefCdInkomen)
                .HasMaxLength(2)
                .IsFixedLength()
                .HasColumnName("def_cd_inkomen");
            entity.Property(e => e.DefCdOverl)
                .HasMaxLength(1)
                .IsFixedLength()
                .HasColumnName("def_cd_overl");
            entity.Property(e => e.DefCdSpcAd1)
                .HasMaxLength(2)
                .IsFixedLength()
                .HasColumnName("def_cd_spc_ad1");
            entity.Property(e => e.DefCdSpcAd2)
                .HasMaxLength(2)
                .IsFixedLength()
                .HasColumnName("def_cd_spc_ad2");
            entity.Property(e => e.DefCdSpcAd3)
                .HasMaxLength(2)
                .IsFixedLength()
                .HasColumnName("def_cd_spc_ad3");
            entity.Property(e => e.DefCdSpec)
                .HasMaxLength(2)
                .IsFixedLength()
                .HasColumnName("def_cd_spec");
            entity.Property(e => e.DefCdUitz)
                .HasMaxLength(1)
                .IsFixedLength()
                .HasColumnName("def_cd_uitz");
            entity.Property(e => e.DefDagenAanv)
                .HasMaxLength(3)
                .IsFixedLength()
                .HasColumnName("def_dagen_aanv");
            entity.Property(e => e.DefDagnPer).HasColumnName("def_dagn_per");
            entity.Property(e => e.DefDagnWeek).HasColumnName("def_dagn_week");
            entity.Property(e => e.DefDatTargr1).HasColumnName("def_dat_targr1");
            entity.Property(e => e.DefDatTargr2).HasColumnName("def_dat_targr2");
            entity.Property(e => e.DefDatTargr3).HasColumnName("def_dat_targr3");
            entity.Property(e => e.DefDeclareTypeDesc)
                .HasMaxLength(1)
                .IsFixedLength()
                .HasColumnName("def_DeclareTypeDesc");
            entity.Property(e => e.DefDlnmrBps).HasColumnName("def_dlnmr_bps");
            entity.Property(e => e.DefDlnmrObf).HasColumnName("def_dlnmr_obf");
            entity.Property(e => e.DefDlnmrStein).HasColumnName("def_dlnmr_stein");
            entity.Property(e => e.DefDlnmrVnps).HasColumnName("def_dlnmr_vnps");
            entity.Property(e => e.DefExtrLhPb)
                .HasMaxLength(1)
                .IsFixedLength()
                .HasColumnName("def_extr_lh_pb");
            entity.Property(e => e.DefFisclnVor).HasColumnName("def_fiscln_vor");
            entity.Property(e => e.DefGrensarb).HasColumnName("def_grensarb");
            entity.Property(e => e.DefHerlOhTs)
                .HasMaxLength(1)
                .IsFixedLength()
                .HasColumnName("def_herl_oh_ts");
            entity.Property(e => e.DefHerlRegel)
                .HasMaxLength(1)
                .IsFixedLength()
                .HasColumnName("def_herl_regel");
            entity.Property(e => e.DefHisAflos).HasColumnName("def_his_aflos");
            entity.Property(e => e.DefHoofdsom).HasColumnName("def_hoofdsom");
            entity.Property(e => e.DefIsp1)
                .HasMaxLength(2)
                .IsFixedLength()
                .HasColumnName("def_isp1");
            entity.Property(e => e.DefIsp2)
                .HasMaxLength(2)
                .IsFixedLength()
                .HasColumnName("def_isp2");
            entity.Property(e => e.DefIsp3)
                .HasMaxLength(2)
                .IsFixedLength()
                .HasColumnName("def_isp3");
            entity.Property(e => e.DefIsp4)
                .HasMaxLength(2)
                .IsFixedLength()
                .HasColumnName("def_isp4");
            entity.Property(e => e.DefJhdcapNj).HasColumnName("def_jhdcap_nj");
            entity.Property(e => e.DefKaderReg).HasColumnName("def_kader_reg");
            entity.Property(e => e.DefLeerlingNj).HasColumnName("def_leerling_nj");
            entity.Property(e => e.DefLhkrtCode0)
                .HasMaxLength(1)
                .IsFixedLength()
                .HasColumnName("def_lhkrt_code_0");
            entity.Property(e => e.DefLhkrtCode1)
                .HasMaxLength(1)
                .IsFixedLength()
                .HasColumnName("def_lhkrt_code_1");
            entity.Property(e => e.DefLhkrtCode2)
                .HasMaxLength(1)
                .IsFixedLength()
                .HasColumnName("def_lhkrt_code_2");
            entity.Property(e => e.DefLhkrtLdate0).HasColumnName("def_lhkrt_ldate_0");
            entity.Property(e => e.DefLhkrtLdate1).HasColumnName("def_lhkrt_ldate_1");
            entity.Property(e => e.DefLhkrtLdate2).HasColumnName("def_lhkrt_ldate_2");
            entity.Property(e => e.DefLoonhJN).HasColumnName("def_loonh_j_n");
            entity.Property(e => e.DefLoonjaar)
                .HasMaxLength(4)
                .IsFixedLength()
                .HasColumnName("def_loonjaar");
            entity.Property(e => e.DefMinlNB)
                .HasMaxLength(1)
                .IsFixedLength()
                .HasColumnName("def_minl_n_b");
            entity.Property(e => e.DefMinloon).HasColumnName("def_minloon");
            entity.Property(e => e.DefNatCode)
                .HasMaxLength(4)
                .IsFixedLength()
                .HasColumnName("def_nat_code");
            entity.Property(e => e.DefNrSfb)
                .HasMaxLength(4)
                .IsFixedLength()
                .HasColumnName("def_nr_sfb");
            entity.Property(e => e.DefOhJrloon).HasColumnName("def_oh_jrloon");
            entity.Property(e => e.DefOrgnr1)
                .HasMaxLength(3)
                .IsFixedLength()
                .HasColumnName("def_orgnr1");
            entity.Property(e => e.DefOrgnr2)
                .HasMaxLength(3)
                .IsFixedLength()
                .HasColumnName("def_orgnr2");
            entity.Property(e => e.DefOrgnr3)
                .HasMaxLength(3)
                .IsFixedLength()
                .HasColumnName("def_orgnr3");
            entity.Property(e => e.DefOrgnr4)
                .HasMaxLength(3)
                .IsFixedLength()
                .HasColumnName("def_orgnr4");
            entity.Property(e => e.DefOverhJN)
                .HasDefaultValue((byte)1)
                .HasColumnName("def_overh_j_n");
            entity.Property(e => e.DefP13emnd).HasColumnName("def_p_13emnd");
            entity.Property(e => e.DefPLhBijz).HasColumnName("def_p_lh_bijz");
            entity.Property(e => e.DefPOhBijz).HasColumnName("def_p_oh_bijz");
            entity.Property(e => e.DefPVakgeld).HasColumnName("def_p_vakgeld");
            entity.Property(e => e.DefPensType)
                .HasMaxLength(1)
                .IsFixedLength()
                .HasColumnName("def_pens_type");
            entity.Property(e => e.DefPensWgv).HasColumnName("def_pens_wgv");
            entity.Property(e => e.DefPensWnr).HasColumnName("def_pens_wnr");
            entity.Property(e => e.DefPerVast)
                .HasMaxLength(3)
                .IsFixedLength()
                .HasColumnName("def_per_vast");
            entity.Property(e => e.DefPercReg35).HasColumnName("def_perc_reg35");
            entity.Property(e => e.DefPggmdeelnr)
                .HasMaxLength(6)
                .IsFixedLength()
                .HasColumnName("def_pggmdeelnr");
            entity.Property(e => e.DefPrGroep)
                .HasMaxLength(1)
                .IsFixedLength()
                .HasColumnName("def_pr_groep");
            entity.Property(e => e.DefPrechtZkv)
                .HasMaxLength(1)
                .IsFixedLength()
                .HasColumnName("def_precht_zkv");
            entity.Property(e => e.DefRchtVakdg).HasColumnName("def_rcht_vakdg");
            entity.Property(e => e.DefRedWg)
                .HasMaxLength(1)
                .IsFixedLength()
                .HasColumnName("def_red_wg");
            entity.Property(e => e.DefReg35)
                .HasMaxLength(1)
                .IsFixedLength()
                .HasColumnName("def_reg_35");
            entity.Property(e => e.DefRegArbeid)
                .HasDefaultValue((byte)1)
                .HasColumnName("def_reg_arbeid");
            entity.Property(e => e.DefRfEigenRis)
                .HasMaxLength(1)
                .IsFixedLength()
                .HasColumnName("def_rf_eigen_ris");
            entity.Property(e => e.DefRfOfWw)
                .HasMaxLength(1)
                .IsFixedLength()
                .HasColumnName("def_rf_of_ww");
            entity.Property(e => e.DefSalaris).HasColumnName("def_salaris");
            entity.Property(e => e.DefSlipTekst1)
                .HasMaxLength(70)
                .HasColumnName("def_slipTekst1");
            entity.Property(e => e.DefSlipTekst2)
                .HasMaxLength(70)
                .HasColumnName("def_slipTekst2");
            entity.Property(e => e.DefSlipTekst3)
                .HasMaxLength(70)
                .HasColumnName("def_slipTekst3");
            entity.Property(e => e.DefSocVerz)
                .HasDefaultValue((byte)1)
                .HasColumnName("def_soc_verz");
            entity.Property(e => e.DefSocfType)
                .HasMaxLength(1)
                .IsFixedLength()
                .HasColumnName("def_socf_type");
            entity.Property(e => e.DefSocfWgv).HasColumnName("def_socf_wgv");
            entity.Property(e => e.DefSocfWnr).HasColumnName("def_socf_wnr");
            entity.Property(e => e.DefSvwdagenJaar).HasColumnName("def_SVWDagenJaar");
            entity.Property(e => e.DefSvwdagenPeriode).HasColumnName("def_SVWDagenPeriode");
            entity.Property(e => e.DefTabkleur)
                .HasMaxLength(1)
                .IsFixedLength()
                .HasColumnName("def_tabkleur");
            entity.Property(e => e.DefTargroep1)
                .HasMaxLength(1)
                .IsFixedLength()
                .HasColumnName("def_targroep1");
            entity.Property(e => e.DefTargroep2)
                .HasMaxLength(1)
                .IsFixedLength()
                .HasColumnName("def_targroep2");
            entity.Property(e => e.DefTargroep3)
                .HasMaxLength(1)
                .IsFixedLength()
                .HasColumnName("def_targroep3");
            entity.Property(e => e.DefThuiswrk).HasColumnName("def_thuiswrk");
            entity.Property(e => e.DefTotAflos).HasColumnName("def_tot_aflos");
            entity.Property(e => e.DefTslCode)
                .HasMaxLength(2)
                .IsFixedLength()
                .HasColumnName("def_tsl_code");
            entity.Property(e => e.DefTvtAf).HasColumnName("def_tvt_af");
            entity.Property(e => e.DefTvtBegin).HasColumnName("def_tvt_begin");
            entity.Property(e => e.DefTvtBij).HasColumnName("def_tvt_bij");
            entity.Property(e => e.DefTvtJN)
                .HasDefaultValue((byte)1)
                .HasColumnName("def_tvt_j_n");
            entity.Property(e => e.DefTwrkLb).HasColumnName("def_twrk_lb");
            entity.Property(e => e.DefUrenDag).HasColumnName("def_uren_dag");
            entity.Property(e => e.DefUrenPweek).HasColumnName("def_uren_pweek");
            entity.Property(e => e.DefUurloon).HasColumnName("def_uurloon");
            entity.Property(e => e.DefVakOpbtyp)
                .HasMaxLength(1)
                .IsFixedLength()
                .HasColumnName("def_vak_opbtyp");
            entity.Property(e => e.DefVakP).HasColumnName("def_vak_p");
            entity.Property(e => e.DefVakUurdag)
                .HasMaxLength(1)
                .IsFixedLength()
                .HasColumnName("def_vak_uurdag");
            entity.Property(e => e.DefVakbon)
                .HasMaxLength(1)
                .IsFixedLength()
                .HasColumnName("def_vakbon");
            entity.Property(e => e.DefVermLhTyp)
                .HasMaxLength(1)
                .IsFixedLength()
                .HasColumnName("def_verm_lh_typ");
            entity.Property(e => e.DefVermLlTyp)
                .HasMaxLength(1)
                .IsFixedLength()
                .HasColumnName("def_verm_ll_typ");
            entity.Property(e => e.DefVerzAbp).HasColumnName("def_verz_abp");
            entity.Property(e => e.DefVolgnrCum)
                .HasMaxLength(1)
                .IsFixedLength()
                .HasColumnName("def_volgnr_cum");
            entity.Property(e => e.DefVoordeelrg).HasColumnName("def_voordeelrg");
            entity.Property(e => e.DefVpAardA)
                .HasMaxLength(1)
                .IsFixedLength()
                .HasColumnName("def_vp_aard_a");
            entity.Property(e => e.DefVpAardB)
                .HasMaxLength(1)
                .IsFixedLength()
                .HasColumnName("def_vp_aard_b");
            entity.Property(e => e.DefVpAfwPfg).HasColumnName("def_vp_afw_pfg");
            entity.Property(e => e.DefVpArbOvk)
                .HasDefaultValue((byte)1)
                .HasColumnName("def_vp_arb_ovk");
            entity.Property(e => e.DefVpArbRel)
                .HasMaxLength(1)
                .IsFixedLength()
                .HasColumnName("def_vp_arb_rel");
            entity.Property(e => e.DefVpArbTyp)
                .HasMaxLength(2)
                .IsFixedLength()
                .HasColumnName("def_vp_arb_typ");
            entity.Property(e => e.DefVpArbVnr)
                .HasMaxLength(2)
                .IsFixedLength()
                .HasColumnName("def_vp_arb_vnr");
            entity.Property(e => e.DefVpAvwNj).HasColumnName("def_vp_avw_nj");
            entity.Property(e => e.DefVpBdrPrc).HasColumnName("def_vp_bdr_prc");
            entity.Property(e => e.DefVpBrpCd)
                .HasMaxLength(3)
                .IsFixedLength()
                .HasColumnName("def_vp_brp_cd");
            entity.Property(e => e.DefVpBrpOms)
                .HasMaxLength(45)
                .HasColumnName("def_vp_brp_oms");
            entity.Property(e => e.DefVpCaoCd)
                .HasMaxLength(4)
                .IsFixedLength()
                .HasColumnName("def_vp_cao_cd");
            entity.Property(e => e.DefVpDgnLp)
                .HasMaxLength(1)
                .IsFixedLength()
                .HasColumnName("def_vp_dgn_lp");
            entity.Property(e => e.DefVpDispPf)
                .HasDefaultValue((byte)1)
                .HasColumnName("def_vp_disp_pf");
            entity.Property(e => e.DefVpMldTyp)
                .HasMaxLength(1)
                .IsFixedLength()
                .HasColumnName("def_vp_mld_typ");
            entity.Property(e => e.DefVpNwtoetr).HasColumnName("def_vp_nwtoetr");
            entity.Property(e => e.DefVpPensdJn)
                .HasMaxLength(1)
                .IsFixedLength()
                .HasColumnName("def_vp_pensd_jn");
            entity.Property(e => e.DefVpPensdP).HasColumnName("def_vp_pensd_p");
            entity.Property(e => e.DefVpPrnJn)
                .HasMaxLength(1)
                .IsFixedLength()
                .HasColumnName("def_vp_prn_jn");
            entity.Property(e => e.DefVpRdUitd)
                .HasMaxLength(1)
                .IsFixedLength()
                .HasColumnName("def_vp_rd_uitd");
            entity.Property(e => e.DefVpRfJn)
                .HasDefaultValue((byte)1)
                .HasColumnName("def_vp_rf_jn");
            entity.Property(e => e.DefVpSrtReg)
                .HasMaxLength(1)
                .IsFixedLength()
                .HasColumnName("def_vp_srt_reg");
            entity.Property(e => e.DefVpTypBdr)
                .HasMaxLength(1)
                .IsFixedLength()
                .HasColumnName("def_vp_typ_bdr");
            entity.Property(e => e.DefVpTypBp)
                .HasMaxLength(1)
                .IsFixedLength()
                .HasColumnName("def_vp_typ_bp");
            entity.Property(e => e.DefVpUrnWk)
                .HasMaxLength(4)
                .IsFixedLength()
                .HasColumnName("def_vp_urn_wk");
            entity.Property(e => e.DefVpUtaBrp)
                .HasDefaultValue((byte)1)
                .HasColumnName("def_vp_uta_brp");
            entity.Property(e => e.DefVpVfJn)
                .HasDefaultValue((byte)1)
                .HasColumnName("def_vp_vf_jn");
            entity.Property(e => e.DefVpVpuDisp)
                .HasMaxLength(1)
                .IsFixedLength()
                .HasColumnName("def_vp_vpu_disp");
            entity.Property(e => e.DefVpVrywJn)
                .HasDefaultValue((byte)1)
                .HasColumnName("def_vp_vryw_jn");
            entity.Property(e => e.DefVpWaoPrc)
                .HasMaxLength(2)
                .IsFixedLength()
                .HasColumnName("def_vp_wao_prc");
            entity.Property(e => e.DefVpWyzDat).HasColumnName("def_vp_wyz_dat");
            entity.Property(e => e.DefVpZwGrp)
                .HasMaxLength(1)
                .IsFixedLength()
                .HasColumnName("def_vp_zw_grp");
            entity.Property(e => e.DefVschBdr).HasColumnName("def_vsch_bdr");
            entity.Property(e => e.DefVschOpgeb).HasColumnName("def_vsch_opgeb");
            entity.Property(e => e.DefVschStorn).HasColumnName("def_vsch_storn");
            entity.Property(e => e.DefVschUitb).HasColumnName("def_vsch_uitb");
            entity.Property(e => e.DefVutType)
                .HasMaxLength(1)
                .IsFixedLength()
                .HasColumnName("def_vut_type");
            entity.Property(e => e.DefVutWgv).HasColumnName("def_vut_wgv");
            entity.Property(e => e.DefVutWnr).HasColumnName("def_vut_wnr");
            entity.Property(e => e.DefWachtDgn)
                .HasMaxLength(3)
                .IsFixedLength()
                .HasColumnName("def_wacht_dgn");
            entity.Property(e => e.DefWaoType)
                .HasMaxLength(1)
                .IsFixedLength()
                .HasColumnName("def_wao_type");
            entity.Property(e => e.DefWgatType)
                .HasMaxLength(1)
                .IsFixedLength()
                .HasColumnName("def_wgat_type");
            entity.Property(e => e.DefWgatWgv).HasColumnName("def_wgat_wgv");
            entity.Property(e => e.DefWgatWnr).HasColumnName("def_wgat_wnr");
            entity.Property(e => e.DefWoonland)
                .HasMaxLength(4)
                .IsFixedLength()
                .HasColumnName("def_woonland");
            entity.Property(e => e.DefWwJN)
                .HasMaxLength(1)
                .IsFixedLength()
                .HasColumnName("def_ww_j_n");
            entity.Property(e => e.DefZfwJN)
                .HasMaxLength(1)
                .IsFixedLength()
                .HasColumnName("def_zfw_j_n");
            entity.Property(e => e.DefZfwN)
                .HasMaxLength(1)
                .IsFixedLength()
                .HasColumnName("def_zfw_n");
            entity.Property(e => e.DefZiekgldP).HasColumnName("def_ziekgld_p");
            entity.Property(e => e.DefZkPercBv).HasColumnName("def_zk_perc_bv");
            entity.Property(e => e.DefZkPercEr).HasColumnName("def_zk_perc_er");
            entity.Property(e => e.DefZwType)
                .HasMaxLength(1)
                .IsFixedLength()
                .HasColumnName("def_zw_type");
            entity.Property(e => e.DlnmrBps).HasColumnName("dlnmr_bps");
            entity.Property(e => e.DlnmrObf).HasColumnName("dlnmr_obf");
            entity.Property(e => e.DlnmrStein).HasColumnName("dlnmr_stein");
            entity.Property(e => e.DlnmrVnps).HasColumnName("dlnmr_vnps");
            entity.Property(e => e.DutchCompTypeDesc).HasDefaultValue(0);
            entity.Property(e => e.ExtrLhPb).HasColumnName("extr_lh_pb");
            entity.Property(e => e.FisclnVor).HasColumnName("fiscln_vor");
            entity.Property(e => e.Grensarb).HasColumnName("grensarb");
            entity.Property(e => e.HerlOhTs).HasColumnName("herl_oh_ts");
            entity.Property(e => e.HerlRegel).HasColumnName("herl_regel");
            entity.Property(e => e.HisAflos).HasColumnName("his_aflos");
            entity.Property(e => e.Hoofdsom).HasColumnName("hoofdsom");
            entity.Property(e => e.Isp1).HasColumnName("isp1");
            entity.Property(e => e.Isp2).HasColumnName("isp2");
            entity.Property(e => e.Isp3).HasColumnName("isp3");
            entity.Property(e => e.Isp4).HasColumnName("isp4");
            entity.Property(e => e.JhdcapNj).HasColumnName("jhdcap_nj");
            entity.Property(e => e.KaderReg).HasColumnName("kader_reg");
            entity.Property(e => e.LeerlingNj).HasColumnName("leerling_nj");
            entity.Property(e => e.LhkrtCode0).HasColumnName("lhkrt_code_0");
            entity.Property(e => e.LhkrtCode1).HasColumnName("lhkrt_code_1");
            entity.Property(e => e.LhkrtCode2).HasColumnName("lhkrt_code_2");
            entity.Property(e => e.LhkrtLdate0).HasColumnName("lhkrt_ldate_0");
            entity.Property(e => e.LhkrtLdate1).HasColumnName("lhkrt_ldate_1");
            entity.Property(e => e.LhkrtLdate2).HasColumnName("lhkrt_ldate_2");
            entity.Property(e => e.LoonhJN).HasColumnName("loonh_j_n");
            entity.Property(e => e.Loonjaar).HasColumnName("loonjaar");
            entity.Property(e => e.MinlNB).HasColumnName("minl_n_b");
            entity.Property(e => e.Minloon).HasColumnName("minloon");
            entity.Property(e => e.NatCode).HasColumnName("nat_code");
            entity.Property(e => e.NrSfb).HasColumnName("nr_sfb");
            entity.Property(e => e.OhJrloon).HasColumnName("oh_jrloon");
            entity.Property(e => e.Orgnr1).HasColumnName("orgnr1");
            entity.Property(e => e.Orgnr2).HasColumnName("orgnr2");
            entity.Property(e => e.Orgnr3).HasColumnName("orgnr3");
            entity.Property(e => e.Orgnr4).HasColumnName("orgnr4");
            entity.Property(e => e.OverhJN).HasColumnName("overh_j_n");
            entity.Property(e => e.P13emnd).HasColumnName("p_13emnd");
            entity.Property(e => e.PLhBijz).HasColumnName("p_lh_bijz");
            entity.Property(e => e.POhBijz).HasColumnName("p_oh_bijz");
            entity.Property(e => e.PVakgeld).HasColumnName("p_vakgeld");
            entity.Property(e => e.PensType).HasColumnName("pens_type");
            entity.Property(e => e.PensWgv).HasColumnName("pens_wgv");
            entity.Property(e => e.PensWnr).HasColumnName("pens_wnr");
            entity.Property(e => e.PerVast).HasColumnName("per_vast");
            entity.Property(e => e.PercReg35).HasColumnName("perc_reg35");
            entity.Property(e => e.Pggmdeelnr).HasColumnName("pggmdeelnr");
            entity.Property(e => e.PrGroep).HasColumnName("pr_groep");
            entity.Property(e => e.PrechtZkv).HasColumnName("precht_zkv");
            entity.Property(e => e.RchtVakdg).HasColumnName("rcht_vakdg");
            entity.Property(e => e.RedWg).HasColumnName("red_wg");
            entity.Property(e => e.Reg35).HasColumnName("reg_35");
            entity.Property(e => e.RegArbeid).HasColumnName("reg_arbeid");
            entity.Property(e => e.RfEigenRis).HasColumnName("rf_eigen_ris");
            entity.Property(e => e.RfOfWw).HasColumnName("rf_of_ww");
            entity.Property(e => e.Salaris).HasColumnName("salaris");
            entity.Property(e => e.SlipTekst1).HasColumnName("slipTekst1");
            entity.Property(e => e.SlipTekst2).HasColumnName("slipTekst2");
            entity.Property(e => e.SlipTekst3).HasColumnName("slipTekst3");
            entity.Property(e => e.SocVerz).HasColumnName("soc_verz");
            entity.Property(e => e.SocfType).HasColumnName("socf_type");
            entity.Property(e => e.SocfWgv).HasColumnName("socf_wgv");
            entity.Property(e => e.SocfWnr).HasColumnName("socf_wnr");
            entity.Property(e => e.SvwdagenJaar).HasColumnName("SVWDagenJaar");
            entity.Property(e => e.SvwdagenPeriode).HasColumnName("SVWDagenPeriode");
            entity.Property(e => e.Syscreated)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("syscreated");
            entity.Property(e => e.Syscreator)
                .HasDefaultValue(0)
                .HasColumnName("syscreator");
            entity.Property(e => e.Sysguid)
                .HasDefaultValueSql("(newid())")
                .HasColumnName("sysguid");
            entity.Property(e => e.Sysmodified)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("sysmodified");
            entity.Property(e => e.Sysmodifier)
                .HasDefaultValue(0)
                .HasColumnName("sysmodifier");
            entity.Property(e => e.Tabkleur).HasColumnName("tabkleur");
            entity.Property(e => e.Targroep1).HasColumnName("targroep1");
            entity.Property(e => e.Targroep2).HasColumnName("targroep2");
            entity.Property(e => e.Targroep3).HasColumnName("targroep3");
            entity.Property(e => e.Thuiswrk).HasColumnName("thuiswrk");
            entity.Property(e => e.Timestamp)
                .IsRowVersion()
                .IsConcurrencyToken()
                .HasColumnName("timestamp");
            entity.Property(e => e.TotAflos).HasColumnName("tot_aflos");
            entity.Property(e => e.TslCode).HasColumnName("tsl_code");
            entity.Property(e => e.TvtAf).HasColumnName("tvt_af");
            entity.Property(e => e.TvtBegin).HasColumnName("tvt_begin");
            entity.Property(e => e.TvtBij).HasColumnName("tvt_bij");
            entity.Property(e => e.TvtJN).HasColumnName("tvt_j_n");
            entity.Property(e => e.TwrkLb).HasColumnName("twrk_lb");
            entity.Property(e => e.UrenDag).HasColumnName("uren_dag");
            entity.Property(e => e.UrenPweek).HasColumnName("uren_pweek");
            entity.Property(e => e.Uurloon).HasColumnName("uurloon");
            entity.Property(e => e.VakOpbtyp).HasColumnName("vak_opbtyp");
            entity.Property(e => e.VakP).HasColumnName("vak_p");
            entity.Property(e => e.VakUurdag).HasColumnName("vak_uurdag");
            entity.Property(e => e.Vakbon).HasColumnName("vakbon");
            entity.Property(e => e.VermLhTyp).HasColumnName("verm_lh_typ");
            entity.Property(e => e.VermLlTyp).HasColumnName("verm_ll_typ");
            entity.Property(e => e.VerzAbp).HasColumnName("verz_abp");
            entity.Property(e => e.VolgnrCum).HasColumnName("volgnr_cum");
            entity.Property(e => e.Voordeelrg).HasColumnName("voordeelrg");
            entity.Property(e => e.VpAardA).HasColumnName("vp_aard_a");
            entity.Property(e => e.VpAardB).HasColumnName("vp_aard_b");
            entity.Property(e => e.VpAfwPfg).HasColumnName("vp_afw_pfg");
            entity.Property(e => e.VpArbOvk).HasColumnName("vp_arb_ovk");
            entity.Property(e => e.VpArbRel).HasColumnName("vp_arb_rel");
            entity.Property(e => e.VpArbTyp).HasColumnName("vp_arb_typ");
            entity.Property(e => e.VpArbVnr).HasColumnName("vp_arb_vnr");
            entity.Property(e => e.VpAvwNj).HasColumnName("vp_avw_nj");
            entity.Property(e => e.VpBdrPrc).HasColumnName("vp_bdr_prc");
            entity.Property(e => e.VpBrpCd).HasColumnName("vp_brp_cd");
            entity.Property(e => e.VpBrpOms).HasColumnName("vp_brp_oms");
            entity.Property(e => e.VpCaoCd).HasColumnName("vp_cao_cd");
            entity.Property(e => e.VpDgnLp).HasColumnName("vp_dgn_lp");
            entity.Property(e => e.VpDispPf).HasColumnName("vp_disp_pf");
            entity.Property(e => e.VpMldTyp).HasColumnName("vp_mld_typ");
            entity.Property(e => e.VpNwtoetr).HasColumnName("vp_nwtoetr");
            entity.Property(e => e.VpPensdJn).HasColumnName("vp_pensd_jn");
            entity.Property(e => e.VpPensdP).HasColumnName("vp_pensd_p");
            entity.Property(e => e.VpPrnJn).HasColumnName("vp_prn_jn");
            entity.Property(e => e.VpRdUitd).HasColumnName("vp_rd_uitd");
            entity.Property(e => e.VpRfJn).HasColumnName("vp_rf_jn");
            entity.Property(e => e.VpSrtReg).HasColumnName("vp_srt_reg");
            entity.Property(e => e.VpTypBdr).HasColumnName("vp_typ_bdr");
            entity.Property(e => e.VpTypBp).HasColumnName("vp_typ_bp");
            entity.Property(e => e.VpUrnWk).HasColumnName("vp_urn_wk");
            entity.Property(e => e.VpUtaBrp).HasColumnName("vp_uta_brp");
            entity.Property(e => e.VpVfJn).HasColumnName("vp_vf_jn");
            entity.Property(e => e.VpVpuDisp).HasColumnName("vp_vpu_disp");
            entity.Property(e => e.VpVrywJn).HasColumnName("vp_vryw_jn");
            entity.Property(e => e.VpWaoPrc).HasColumnName("vp_wao_prc");
            entity.Property(e => e.VpWyzDat).HasColumnName("vp_wyz_dat");
            entity.Property(e => e.VpZwGrp).HasColumnName("vp_zw_grp");
            entity.Property(e => e.VschBdr).HasColumnName("vsch_bdr");
            entity.Property(e => e.VschOpgeb).HasColumnName("vsch_opgeb");
            entity.Property(e => e.VschStorn).HasColumnName("vsch_storn");
            entity.Property(e => e.VschUitb).HasColumnName("vsch_uitb");
            entity.Property(e => e.VutType).HasColumnName("vut_type");
            entity.Property(e => e.VutWgv).HasColumnName("vut_wgv");
            entity.Property(e => e.VutWnr).HasColumnName("vut_wnr");
            entity.Property(e => e.WachtDgn).HasColumnName("wacht_dgn");
            entity.Property(e => e.WaoType).HasColumnName("wao_type");
            entity.Property(e => e.WgatType).HasColumnName("wgat_type");
            entity.Property(e => e.WgatWgv).HasColumnName("wgat_wgv");
            entity.Property(e => e.WgatWnr).HasColumnName("wgat_wnr");
            entity.Property(e => e.Woonland).HasColumnName("woonland");
            entity.Property(e => e.WwJN).HasColumnName("ww_j_n");
            entity.Property(e => e.ZfwJN).HasColumnName("zfw_j_n");
            entity.Property(e => e.ZfwN).HasColumnName("zfw_n");
            entity.Property(e => e.ZiekgldP).HasColumnName("ziekgld_p");
            entity.Property(e => e.ZkPercBv).HasColumnName("zk_perc_bv");
            entity.Property(e => e.ZkPercEr).HasColumnName("zk_perc_er");
            entity.Property(e => e.ZwType).HasColumnName("zw_type");
        });

        modelBuilder.Entity<NoiseWord>(entity =>
        {
            entity.HasKey(e => e.Word);

            entity.Property(e => e.Word).HasMaxLength(64);
            entity.Property(e => e.Language)
                .HasMaxLength(3)
                .IsFixedLength();
            entity.Property(e => e.Syscreated)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("syscreated");
            entity.Property(e => e.Syscreator).HasColumnName("syscreator");
            entity.Property(e => e.Sysmodified)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("sysmodified");
            entity.Property(e => e.Sysmodifier).HasColumnName("sysmodifier");
        });

        modelBuilder.Entity<Note>(entity =>
        {
            entity.HasKey(e => e.Id).IsClustered(false);

            entity.HasIndex(e => e.Id, "Notes_Index").IsClustered();

            entity.Property(e => e.Id).HasColumnName("ID");
            entity.Property(e => e.Guid).HasDefaultValueSql("(newid())");
            entity.Property(e => e.Note1).HasColumnName("note");
            entity.Property(e => e.Timestamp)
                .IsRowVersion()
                .IsConcurrencyToken()
                .HasColumnName("timestamp");
        });

        modelBuilder.Entity<NoteLinkTableField>(entity =>
        {
            entity.HasNoKey();

            entity.HasIndex(e => new { e.SourceTable, e.DiscussionColumn }, "NoteLinkTableFields_Index").IsClustered();

            entity.Property(e => e.DiscussionColumn).HasMaxLength(30);
            entity.Property(e => e.SourceTable).HasMaxLength(30);
        });

        modelBuilder.Entity<Number>(entity =>
        {
            entity.HasKey(e => new { e.CompanyCode, e.Type, e.Number1 });

            entity.Property(e => e.CompanyCode)
                .HasMaxLength(3)
                .IsFixedLength();
            entity.Property(e => e.Number1).HasColumnName("Number");
        });

        modelBuilder.Entity<OneTimePass>(entity =>
        {
            entity.HasKey(e => e.OtprequestId);

            entity.ToTable("OneTimePass");

            entity.Property(e => e.OtprequestId)
                .ValueGeneratedNever()
                .HasColumnName("OTPRequestId");
            entity.Property(e => e.Counter).HasMaxLength(255);
            entity.Property(e => e.Id).HasColumnName("ID");
            entity.Property(e => e.Otpvalue)
                .HasMaxLength(255)
                .HasColumnName("OTPValue");
            entity.Property(e => e.Syscreated)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("syscreated");
            entity.Property(e => e.Syscreator).HasColumnName("syscreator");
            entity.Property(e => e.Sysmodified)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("sysmodified");
            entity.Property(e => e.Sysmodifier).HasColumnName("sysmodifier");
            entity.Property(e => e.ValidityDate).HasMaxLength(255);
        });

        modelBuilder.Entity<OneTimePassRequest>(entity =>
        {
            entity.ToTable("OneTimePassRequest");

            entity.Property(e => e.Id).HasColumnName("ID");
            entity.Property(e => e.AccountId).HasColumnName("AccountID");
            entity.Property(e => e.AccountNumber).HasMaxLength(30);
            entity.Property(e => e.CustomerLocation).HasMaxLength(200);
            entity.Property(e => e.ExpirationDate).HasColumnType("datetime");
            entity.Property(e => e.IssueDate).HasColumnType("datetime");
            entity.Property(e => e.LicenseName).HasMaxLength(60);
            entity.Property(e => e.LicenseNumber).HasMaxLength(30);
            entity.Property(e => e.Otpexpiration)
                .HasColumnType("datetime")
                .HasColumnName("OTPExpiration");
            entity.Property(e => e.RequestId)
                .HasMaxLength(30)
                .HasColumnName("RequestID");
            entity.Property(e => e.SourceLicenseNumber).HasMaxLength(30);
            entity.Property(e => e.Syscreated)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("syscreated");
            entity.Property(e => e.Syscreator).HasColumnName("syscreator");
            entity.Property(e => e.Sysmodified)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("sysmodified");
            entity.Property(e => e.Sysmodifier).HasColumnName("sysmodifier");
        });

        modelBuilder.Entity<OnlineSession>(entity =>
        {
            entity.HasKey(e => e.Id).IsClustered(false);

            entity.HasIndex(e => e.HumresId, "IX_OnlineSessions_HumresID").IsClustered();

            entity.Property(e => e.Id)
                .HasDefaultValueSql("(newid())")
                .HasColumnName("ID");
            entity.Property(e => e.HumresId).HasColumnName("HumresID");
            entity.Property(e => e.SessionDateTime).HasDefaultValueSql("(getdate())");
            entity.Property(e => e.SessionId)
                .HasMaxLength(24)
                .IsFixedLength()
                .HasColumnName("SessionID");
        });

        modelBuilder.Entity<Operation>(entity =>
        {
            entity.HasKey(e => e.Id).IsClustered(false);

            entity.HasIndex(e => e.Operation1, "IX_Operations_Operation")
                .IsUnique()
                .IsClustered();

            entity.Property(e => e.Id).HasColumnName("ID");
            entity.Property(e => e.AssetCode).HasMaxLength(20);
            entity.Property(e => e.AssetGroup).HasMaxLength(20);
            entity.Property(e => e.CostCenter)
                .HasMaxLength(8)
                .IsFixedLength();
            entity.Property(e => e.Description).HasMaxLength(50);
            entity.Property(e => e.LaborHourOperating).HasMaxLength(30);
            entity.Property(e => e.LaborHourSetup).HasMaxLength(30);
            entity.Property(e => e.LayoutName).HasMaxLength(50);
            entity.Property(e => e.MachineHour).HasMaxLength(30);
            entity.Property(e => e.Operation1)
                .HasMaxLength(10)
                .HasColumnName("Operation");
            entity.Property(e => e.ResId).HasColumnName("res_id");
            entity.Property(e => e.Syscreated)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("syscreated");
            entity.Property(e => e.Syscreator).HasColumnName("syscreator");
            entity.Property(e => e.Sysguid)
                .HasDefaultValueSql("(newid())")
                .HasColumnName("sysguid");
            entity.Property(e => e.Sysmodified)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("sysmodified");
            entity.Property(e => e.Sysmodifier).HasColumnName("sysmodifier");
            entity.Property(e => e.Timestamp)
                .IsRowVersion()
                .IsConcurrencyToken()
                .HasColumnName("timestamp");
        });

        modelBuilder.Entity<OppPivotCurrency>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("OppPivotCurrency");

            entity.HasIndex(e => e.Id, "IX_OppPivotCurrency_ID").IsClustered();

            entity.HasIndex(e => e.SessionId, "IX_OppPivotCurrency_Session");

            entity.Property(e => e.Currency)
                .HasMaxLength(3)
                .IsFixedLength();
            entity.Property(e => e.Id)
                .ValueGeneratedOnAdd()
                .HasColumnName("ID");
            entity.Property(e => e.SessionId)
                .HasMaxLength(36)
                .IsUnicode(false)
                .HasDefaultValue("")
                .HasColumnName("session_id");
        });

        modelBuilder.Entity<Opportunity>(entity =>
        {
            entity.HasKey(e => e.Id).IsClustered(false);

            entity.HasIndex(e => new { e.Id, e.AccountId }, "ix_Account").IsUnique();

            entity.HasIndex(e => e.Code, "ix_Code")
                .IsUnique()
                .IsClustered();

            entity.HasIndex(e => new { e.SalesCycleId, e.DealStatus }, "ix_SalesCycle");

            entity.HasIndex(e => new { e.DealStatus, e.StageId }, "ix_Stage");

            entity.Property(e => e.Id).HasColumnName("ID");
            entity.Property(e => e.AccountId).HasColumnName("AccountID");
            entity.Property(e => e.Code).HasMaxLength(20);
            entity.Property(e => e.ContactId).HasColumnName("ContactID");
            entity.Property(e => e.CostCenter)
                .HasMaxLength(8)
                .IsFixedLength();
            entity.Property(e => e.Created)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime");
            entity.Property(e => e.Currency)
                .HasMaxLength(3)
                .IsFixedLength();
            entity.Property(e => e.DateField1).HasColumnType("datetime");
            entity.Property(e => e.DateField2).HasColumnType("datetime");
            entity.Property(e => e.DateField3).HasColumnType("datetime");
            entity.Property(e => e.DateField4).HasColumnType("datetime");
            entity.Property(e => e.DateField5).HasColumnType("datetime");
            entity.Property(e => e.DealLostDate).HasColumnType("datetime");
            entity.Property(e => e.DealStatus)
                .HasMaxLength(1)
                .HasDefaultValue("U")
                .IsFixedLength();
            entity.Property(e => e.DealWonDate).HasColumnType("datetime");
            entity.Property(e => e.Description).HasMaxLength(60);
            entity.Property(e => e.Division)
                .HasMaxLength(3)
                .IsFixedLength();
            entity.Property(e => e.ExpectedAmount).HasDefaultValue(0.0);
            entity.Property(e => e.ExpectedAmountFc)
                .HasDefaultValue(0.0)
                .HasColumnName("ExpectedAmountFC");
            entity.Property(e => e.FollowUpDate).HasColumnType("datetime");
            entity.Property(e => e.Modified)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime");
            entity.Property(e => e.PlannedAmount).HasDefaultValue(0.0);
            entity.Property(e => e.PlannedAmountFc)
                .HasDefaultValue(0.0)
                .HasColumnName("PlannedAmountFC");
            entity.Property(e => e.PlannedEndDate).HasColumnType("datetime");
            entity.Property(e => e.PlannedStartDate).HasColumnType("datetime");
            entity.Property(e => e.Probability).HasDefaultValue(0);
            entity.Property(e => e.ProjectNumber).HasMaxLength(20);
            entity.Property(e => e.RealizedAmount).HasDefaultValue(0.0);
            entity.Property(e => e.RealizedAmountFc)
                .HasDefaultValue(0.0)
                .HasColumnName("RealizedAmountFC");
            entity.Property(e => e.SalesCycleId).HasColumnName("SalesCycleID");
            entity.Property(e => e.SourceId).HasColumnName("SourceID");
            entity.Property(e => e.StageId).HasColumnName("StageID");
            entity.Property(e => e.TextField1).HasMaxLength(80);
            entity.Property(e => e.TextField10).HasMaxLength(80);
            entity.Property(e => e.TextField2).HasMaxLength(80);
            entity.Property(e => e.TextField3).HasMaxLength(80);
            entity.Property(e => e.TextField4).HasMaxLength(80);
            entity.Property(e => e.TextField5).HasMaxLength(80);
            entity.Property(e => e.TextField6).HasMaxLength(80);
            entity.Property(e => e.TextField7).HasMaxLength(80);
            entity.Property(e => e.TextField8).HasMaxLength(80);
            entity.Property(e => e.TextField9).HasMaxLength(80);
            entity.Property(e => e.YesNoField1).HasDefaultValue(false);
            entity.Property(e => e.YesNoField2).HasDefaultValue(false);
            entity.Property(e => e.YesNoField3).HasDefaultValue(false);
            entity.Property(e => e.YesNoField4).HasDefaultValue(false);
            entity.Property(e => e.YesNoField5).HasDefaultValue(false);
        });

        modelBuilder.Entity<OpportunityAccount>(entity =>
        {
            entity.HasKey(e => e.Id)
                .HasName("PK_OppAccounts")
                .IsClustered(false);

            entity.HasIndex(e => e.Id, "OpportunityAccounts_Index").IsClustered();

            entity.HasIndex(e => new { e.OpportunityId, e.AccountId, e.Type }, "ix_OpportunityIDAccountID").IsUnique();

            entity.Property(e => e.Id).HasColumnName("ID");
            entity.Property(e => e.AccountId).HasColumnName("AccountID");
            entity.Property(e => e.Created)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime");
            entity.Property(e => e.Modified)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime");
            entity.Property(e => e.OpportunityId).HasColumnName("OpportunityID");
            entity.Property(e => e.RoleId).HasColumnName("RoleID");
            entity.Property(e => e.Status)
                .HasMaxLength(1)
                .HasDefaultValue("A")
                .IsFixedLength();
            entity.Property(e => e.StrengthId).HasColumnName("StrengthID");
            entity.Property(e => e.Type)
                .HasMaxLength(1)
                .IsFixedLength();
            entity.Property(e => e.WeaknessId).HasColumnName("WeaknessID");
        });

        modelBuilder.Entity<OpportunityContact>(entity =>
        {
            entity.HasKey(e => e.Id)
                .HasName("PK_OppContacts")
                .IsClustered(false);

            entity.HasIndex(e => e.Id, "OpportunityContacts_Index").IsClustered();

            entity.HasIndex(e => new { e.OpportunityId, e.AccountId, e.ContactId, e.Type }, "ix_OpportunityContacts").IsUnique();

            entity.Property(e => e.Id).HasColumnName("ID");
            entity.Property(e => e.AccountId).HasColumnName("AccountID");
            entity.Property(e => e.ContactId).HasColumnName("ContactID");
            entity.Property(e => e.Created)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime");
            entity.Property(e => e.Modified)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime");
            entity.Property(e => e.OpportunityId).HasColumnName("OpportunityID");
            entity.Property(e => e.RoleId).HasColumnName("RoleID");
            entity.Property(e => e.Type)
                .HasMaxLength(1)
                .HasDefaultValue("A")
                .IsFixedLength();
        });

        modelBuilder.Entity<OpportunityHistory>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK_OppHistories");

            entity.Property(e => e.Id).HasColumnName("ID");
            entity.Property(e => e.Created)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime");
            entity.Property(e => e.DealStatus)
                .HasMaxLength(1)
                .HasDefaultValue("U")
                .IsFixedLength();
            entity.Property(e => e.ExpectedAmountFc).HasColumnName("ExpectedAmountFC");
            entity.Property(e => e.Modified)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime");
            entity.Property(e => e.OpportunityId).HasColumnName("OpportunityID");
            entity.Property(e => e.PlannedAmountFc).HasColumnName("PlannedAmountFC");
            entity.Property(e => e.StageId).HasColumnName("StageID");
        });

        modelBuilder.Entity<OpportunityItem>(entity =>
        {
            entity.HasKey(e => e.Id).IsClustered(false);

            entity.HasIndex(e => e.Id, "OpportunityItems_Index").IsClustered();

            entity.Property(e => e.Id).HasColumnName("ID");
            entity.Property(e => e.Created)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime");
            entity.Property(e => e.Currency)
                .HasMaxLength(3)
                .IsFixedLength();
            entity.Property(e => e.ItemCode).HasMaxLength(30);
            entity.Property(e => e.Modified)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime");
            entity.Property(e => e.OpportunityId).HasColumnName("OpportunityID");
            entity.Property(e => e.PriceFc).HasColumnName("PriceFC");
            entity.Property(e => e.Quantity).HasDefaultValue(1.0);
            entity.Property(e => e.Unit)
                .HasMaxLength(8)
                .IsFixedLength();
        });

        modelBuilder.Entity<OpportunityProject>(entity =>
        {
            entity.HasKey(e => e.Id)
                .HasName("PK_OppProjects")
                .IsClustered(false);

            entity.HasIndex(e => e.Id, "OpportunityProjects_Index").IsClustered();

            entity.HasIndex(e => new { e.OpportunityId, e.ProjectCode }, "ix_OpportunityProjects").IsUnique();

            entity.Property(e => e.Id).HasColumnName("ID");
            entity.Property(e => e.Created)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime");
            entity.Property(e => e.Modified)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime");
            entity.Property(e => e.OpportunityId).HasColumnName("OpportunityID");
            entity.Property(e => e.ProjectCode).HasMaxLength(20);
        });

        modelBuilder.Entity<OpportunityReason>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK_OppReasons");

            entity.Property(e => e.Id).HasColumnName("ID");
            entity.Property(e => e.Code)
                .HasMaxLength(3)
                .IsFixedLength();
            entity.Property(e => e.Created)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime");
            entity.Property(e => e.Description).HasMaxLength(25);
            entity.Property(e => e.Modified)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime");
            entity.Property(e => e.Type)
                .HasMaxLength(1)
                .IsFixedLength();
        });

        modelBuilder.Entity<OpportunityRole>(entity =>
        {
            entity.HasKey(e => e.Id)
                .HasName("PK_OppContactRoles")
                .IsClustered(false);

            entity.HasIndex(e => e.Id, "OpportunityRoles_Index").IsClustered();

            entity.Property(e => e.Id).HasColumnName("ID");
            entity.Property(e => e.Code)
                .HasMaxLength(3)
                .IsFixedLength();
            entity.Property(e => e.Created)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime");
            entity.Property(e => e.Description).HasMaxLength(25);
            entity.Property(e => e.Modified)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime");
            entity.Property(e => e.Type)
                .HasMaxLength(1)
                .IsFixedLength();
        });

        modelBuilder.Entity<OpportunitySource>(entity =>
        {
            entity.HasKey(e => e.Id)
                .HasName("PK_OppSources")
                .IsClustered(false);

            entity.HasIndex(e => e.Id, "OpportunitySources_Index").IsClustered();

            entity.Property(e => e.Id).HasColumnName("ID");
            entity.Property(e => e.Code)
                .HasMaxLength(3)
                .IsFixedLength();
            entity.Property(e => e.Created)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime");
            entity.Property(e => e.Description).HasMaxLength(25);
            entity.Property(e => e.Modified)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime");
        });

        modelBuilder.Entity<Ordlev>(entity =>
        {
            entity.HasKey(e => e.Id).IsClustered(false);

            entity.ToTable("ordlev");

            entity.HasIndex(e => e.Levwijze, "ordlev")
                .IsUnique()
                .IsClustered();

            entity.Property(e => e.Id).HasColumnName("ID");
            entity.Property(e => e.DirectShipping).HasColumnName("direct_shipping");
            entity.Property(e => e.Levwijze)
                .HasMaxLength(5)
                .IsFixedLength()
                .HasColumnName("levwijze");
            entity.Property(e => e.Oms400)
                .HasMaxLength(40)
                .HasColumnName("oms40_0");
            entity.Property(e => e.Oms401)
                .HasMaxLength(40)
                .HasColumnName("oms40_1");
            entity.Property(e => e.Oms402)
                .HasMaxLength(40)
                .HasColumnName("oms40_2");
            entity.Property(e => e.Oms403)
                .HasMaxLength(40)
                .HasColumnName("oms40_3");
            entity.Property(e => e.Oms404)
                .HasMaxLength(40)
                .HasColumnName("oms40_4");
            entity.Property(e => e.Shipping)
                .HasMaxLength(1)
                .IsFixedLength()
                .HasColumnName("shipping");
            entity.Property(e => e.Syscreated)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("syscreated");
            entity.Property(e => e.Syscreator).HasColumnName("syscreator");
            entity.Property(e => e.Sysguid)
                .HasDefaultValueSql("(newid())")
                .HasColumnName("sysguid");
            entity.Property(e => e.Sysmodified)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("sysmodified");
            entity.Property(e => e.Sysmodifier).HasColumnName("sysmodifier");
            entity.Property(e => e.Timestamp)
                .IsRowVersion()
                .IsConcurrencyToken()
                .HasColumnName("timestamp");
        });

        modelBuilder.Entity<Ordlog>(entity =>
        {
            entity.HasKey(e => e.Id).IsClustered(false);

            entity.ToTable("ordlog");

            entity.HasIndex(e => e.Mutvolgnr, "ordlog")
                .IsUnique()
                .IsClustered();

            entity.HasIndex(e => new { e.Xdate, e.Fileid, e.Mutvolgnr, e.Id }, "orldat").IsUnique();

            entity.HasIndex(e => new { e.Fileid, e.Mutvolgnr }, "orlfil").IsUnique();

            entity.HasIndex(e => new { e.Ordernr, e.Regel, e.Mutvolgnr }, "orlnum").IsUnique();

            entity.HasIndex(e => new { e.UserId, e.Mutvolgnr }, "orlusr").IsUnique();

            entity.Property(e => e.Id).HasColumnName("ID");
            entity.Property(e => e.Exe)
                .HasMaxLength(8)
                .IsFixedLength()
                .HasColumnName("exe");
            entity.Property(e => e.Fileid)
                .HasMaxLength(6)
                .IsFixedLength()
                .HasColumnName("fileid");
            entity.Property(e => e.LogTime).HasColumnName("log_time");
            entity.Property(e => e.Mutvolgnr)
                .HasMaxLength(10)
                .IsFixedLength()
                .HasColumnName("mutvolgnr");
            entity.Property(e => e.NewValue)
                .HasMaxLength(30)
                .HasColumnName("new_value");
            entity.Property(e => e.OldValue)
                .HasMaxLength(30)
                .HasColumnName("old_value");
            entity.Property(e => e.Ordernr)
                .HasMaxLength(8)
                .IsFixedLength()
                .HasColumnName("ordernr");
            entity.Property(e => e.Reason)
                .HasMaxLength(160)
                .HasColumnName("reason");
            entity.Property(e => e.Regel)
                .HasMaxLength(4)
                .IsFixedLength()
                .HasColumnName("regel");
            entity.Property(e => e.Syscreated)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("syscreated");
            entity.Property(e => e.Syscreator).HasColumnName("syscreator");
            entity.Property(e => e.Sysguid)
                .HasDefaultValueSql("(newid())")
                .HasColumnName("sysguid");
            entity.Property(e => e.Sysmodified)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("sysmodified");
            entity.Property(e => e.Sysmodifier).HasColumnName("sysmodifier");
            entity.Property(e => e.Timestamp)
                .IsRowVersion()
                .IsConcurrencyToken()
                .HasColumnName("timestamp");
            entity.Property(e => e.UserId)
                .HasMaxLength(8)
                .IsFixedLength()
                .HasColumnName("user_id");
            entity.Property(e => e.Varname)
                .HasMaxLength(10)
                .IsFixedLength()
                .HasColumnName("varname");
            entity.Property(e => e.Xdate)
                .HasColumnType("datetime")
                .HasColumnName("xdate");
        });

        modelBuilder.Entity<Ordsel>(entity =>
        {
            entity.HasKey(e => e.Id).IsClustered(false);

            entity.ToTable("ordsel");

            entity.HasIndex(e => e.Selcode, "ordsel")
                .IsUnique()
                .IsClustered();

            entity.Property(e => e.Id).HasColumnName("ID");
            entity.Property(e => e.Oms300)
                .HasMaxLength(30)
                .HasColumnName("oms30_0");
            entity.Property(e => e.Oms301)
                .HasMaxLength(30)
                .HasColumnName("oms30_1");
            entity.Property(e => e.Oms302)
                .HasMaxLength(30)
                .HasColumnName("oms30_2");
            entity.Property(e => e.Oms303)
                .HasMaxLength(30)
                .HasColumnName("oms30_3");
            entity.Property(e => e.Oms304)
                .HasMaxLength(30)
                .HasColumnName("oms30_4");
            entity.Property(e => e.Selcode)
                .HasMaxLength(2)
                .IsFixedLength()
                .HasColumnName("selcode");
            entity.Property(e => e.Syscreated)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("syscreated");
            entity.Property(e => e.Syscreator).HasColumnName("syscreator");
            entity.Property(e => e.Sysguid)
                .HasDefaultValueSql("(newid())")
                .HasColumnName("sysguid");
            entity.Property(e => e.Sysmodified)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("sysmodified");
            entity.Property(e => e.Sysmodifier).HasColumnName("sysmodifier");
            entity.Property(e => e.Timestamp)
                .IsRowVersion()
                .IsConcurrencyToken()
                .HasColumnName("timestamp");
        });

        modelBuilder.Entity<OrganizationStructure>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK_OrganizationStructureChart");

            entity.HasIndex(e => new { e.Division, e.Parent, e.Status, e.ParentStartYear, e.ParentStartPeriod, e.ParentEndYear, e.ParentEndPeriod }, "IX_OrgStruc_ParentDivision");

            entity.Property(e => e.Id).HasColumnName("ID");
            entity.Property(e => e.Created)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime");
            entity.Property(e => e.Division)
                .HasMaxLength(3)
                .IsFixedLength();
            entity.Property(e => e.Modified)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime");
            entity.Property(e => e.Parent)
                .HasMaxLength(3)
                .IsFixedLength();
            entity.Property(e => e.ParentEndPeriod)
                .HasMaxLength(3)
                .IsFixedLength();
            entity.Property(e => e.ParentStartPeriod)
                .HasMaxLength(3)
                .IsFixedLength();
            entity.Property(e => e.Status)
                .HasMaxLength(1)
                .HasDefaultValue("A")
                .IsFixedLength();
        });

        modelBuilder.Entity<Orhkrg>(entity =>
        {
            entity.HasKey(e => e.Id).IsClustered(false);

            entity.ToTable("orhkrg");

            entity.HasIndex(e => e.Crdnr, "ix_crdnr");

            entity.HasIndex(e => e.Einddebnr, "ix_einddebnr");

            entity.HasIndex(e => e.Fakcrdnr, "ix_fakcrdnr");

            entity.HasIndex(e => e.Fakdebnr, "ix_fakdebnr");

            entity.HasIndex(e => e.Magcode, "ix_magcode");

            entity.HasIndex(e => e.Verzdebnr, "ix_verzdebnr");

            entity.HasIndex(e => new { e.Bkjrcode, e.Periode, e.Ordernr, e.PakbonDat, e.Id }, "orhbkj").IsUnique();

            entity.HasIndex(e => new { e.PakbonDat, e.Debnr, e.Id }, "orhdat").IsUnique();

            entity.HasIndex(e => new { e.Debnr, e.PakbonDat, e.Ordernr, e.Id }, "orhdeb").IsUnique();

            entity.HasIndex(e => new { e.PakbonNr, e.PakbonDat }, "orhkrg")
                .IsUnique()
                .IsClustered();

            entity.HasIndex(e => new { e.Orddat, e.Ordernr, e.OrdSoort, e.Id }, "orhodt").IsUnique();

            entity.HasIndex(e => new { e.Ordernr, e.PakbonDat, e.Id }, "orhord").IsUnique();

            entity.HasIndex(e => new { e.OrdSoort, e.Debnr, e.PakbonDat, e.Ordernr, e.Id }, "orhsrd").IsUnique();

            entity.HasIndex(e => new { e.RepresentId, e.Debnr, e.PakbonDat, e.Id }, "orhver").IsUnique();

            entity.Property(e => e.Id).HasColumnName("ID");
            entity.Property(e => e.AflWeek)
                .HasMaxLength(2)
                .IsFixedLength()
                .HasColumnName("afl_week");
            entity.Property(e => e.Afldat)
                .HasColumnType("datetime")
                .HasColumnName("afldat");
            entity.Property(e => e.Archived)
                .HasDefaultValue((byte)1)
                .HasColumnName("archived");
            entity.Property(e => e.BdrDiscVal).HasColumnName("bdr_disc_val");
            entity.Property(e => e.BdrKbVal).HasColumnName("bdr_kb_val");
            entity.Property(e => e.BdrVal).HasColumnName("bdr_val");
            entity.Property(e => e.BdrVatOrdVal).HasColumnName("bdr_vat_ord_val");
            entity.Property(e => e.BdrVatShipVal).HasColumnName("bdr_vat_ship_val");
            entity.Property(e => e.Betcond)
                .HasMaxLength(2)
                .IsFixedLength()
                .HasColumnName("betcond");
            entity.Property(e => e.Bkjrcode).HasColumnName("bkjrcode");
            entity.Property(e => e.BrutoGew).HasColumnName("bruto_gew");
            entity.Property(e => e.Bstwijze)
                .HasMaxLength(3)
                .IsFixedLength()
                .HasColumnName("bstwijze");
            entity.Property(e => e.BtwCdOrd)
                .HasMaxLength(3)
                .IsFixedLength()
                .HasColumnName("btw_cd_ord");
            entity.Property(e => e.BtwCode)
                .HasMaxLength(3)
                .IsFixedLength()
                .HasColumnName("btw_code");
            entity.Property(e => e.CalcInclVat)
                .HasMaxLength(1)
                .IsFixedLength()
                .HasColumnName("calc_incl_vat");
            entity.Property(e => e.CalcMethPc)
                .HasMaxLength(1)
                .IsFixedLength()
                .HasColumnName("calc_meth_pc");
            entity.Property(e => e.Colli)
                .HasMaxLength(5)
                .IsFixedLength()
                .HasColumnName("colli");
            entity.Property(e => e.Crdnr)
                .HasMaxLength(6)
                .IsFixedLength()
                .HasColumnName("crdnr");
            entity.Property(e => e.Debnr)
                .HasMaxLength(6)
                .IsFixedLength()
                .HasColumnName("debnr");
            entity.Property(e => e.DelAddressLine1)
                .HasMaxLength(100)
                .HasColumnName("del_AddressLine1");
            entity.Property(e => e.DelAddressLine2)
                .HasMaxLength(100)
                .HasColumnName("del_AddressLine2");
            entity.Property(e => e.DelAddressLine3)
                .HasMaxLength(100)
                .HasColumnName("del_AddressLine3");
            entity.Property(e => e.DelCity)
                .HasMaxLength(100)
                .HasColumnName("del_City");
            entity.Property(e => e.DelCntJobDesc)
                .HasMaxLength(50)
                .HasColumnName("del_cnt_job_desc");
            entity.Property(e => e.DelContactperson)
                .HasMaxLength(100)
                .HasColumnName("del_contactperson");
            entity.Property(e => e.DelDebtorName)
                .HasMaxLength(50)
                .HasColumnName("del_debtor_name");
            entity.Property(e => e.DelFax)
                .HasMaxLength(50)
                .HasColumnName("del_Fax");
            entity.Property(e => e.DelInitials)
                .HasMaxLength(10)
                .HasColumnName("del_Initials");
            entity.Property(e => e.DelLandcode)
                .HasMaxLength(3)
                .IsFixedLength()
                .HasColumnName("del_landcode");
            entity.Property(e => e.DelPhone)
                .HasMaxLength(50)
                .HasColumnName("del_Phone");
            entity.Property(e => e.DelPostCode)
                .HasMaxLength(20)
                .HasColumnName("del_PostCode");
            entity.Property(e => e.DelPredcode)
                .HasMaxLength(4)
                .IsFixedLength()
                .HasColumnName("del_predcode");
            entity.Property(e => e.DelStateCode)
                .HasMaxLength(3)
                .IsFixedLength()
                .HasColumnName("del_StateCode");
            entity.Property(e => e.DocAttachmentId).HasColumnName("DocAttachmentID");
            entity.Property(e => e.Docnumber)
                .HasMaxLength(30)
                .HasColumnName("docnumber");
            entity.Property(e => e.DocumentId).HasColumnName("DocumentID");
            entity.Property(e => e.Einddebnr)
                .HasMaxLength(6)
                .IsFixedLength()
                .HasColumnName("einddebnr");
            entity.Property(e => e.EtikAfgdr).HasColumnName("etik_afgdr");
            entity.Property(e => e.ExArtcode)
                .HasMaxLength(2)
                .IsFixedLength()
                .HasColumnName("ex_artcode");
            entity.Property(e => e.ExternalNumber).HasMaxLength(30);
            entity.Property(e => e.Fakcrdnr)
                .HasMaxLength(6)
                .IsFixedLength()
                .HasColumnName("fakcrdnr");
            entity.Property(e => e.Fakdebnr)
                .HasMaxLength(6)
                .IsFixedLength()
                .HasColumnName("fakdebnr");
            entity.Property(e => e.InvAddressLine1)
                .HasMaxLength(100)
                .HasColumnName("inv_AddressLine1");
            entity.Property(e => e.InvAddressLine2)
                .HasMaxLength(100)
                .HasColumnName("inv_AddressLine2");
            entity.Property(e => e.InvAddressLine3)
                .HasMaxLength(100)
                .HasColumnName("inv_AddressLine3");
            entity.Property(e => e.InvCity)
                .HasMaxLength(100)
                .HasColumnName("inv_City");
            entity.Property(e => e.InvCntJobDesc)
                .HasMaxLength(50)
                .HasColumnName("inv_cnt_job_desc");
            entity.Property(e => e.InvContactperson)
                .HasMaxLength(100)
                .HasColumnName("inv_contactperson");
            entity.Property(e => e.InvDebtorName)
                .HasMaxLength(50)
                .HasColumnName("inv_debtor_name");
            entity.Property(e => e.InvFax)
                .HasMaxLength(50)
                .HasColumnName("inv_Fax");
            entity.Property(e => e.InvInVv).HasColumnName("inv_in_vv");
            entity.Property(e => e.InvInitials)
                .HasMaxLength(10)
                .HasColumnName("inv_Initials");
            entity.Property(e => e.InvLandcode)
                .HasMaxLength(3)
                .IsFixedLength()
                .HasColumnName("inv_landcode");
            entity.Property(e => e.InvPhone)
                .HasMaxLength(50)
                .HasColumnName("inv_Phone");
            entity.Property(e => e.InvPostCode)
                .HasMaxLength(20)
                .HasColumnName("inv_PostCode");
            entity.Property(e => e.InvPredcode)
                .HasMaxLength(4)
                .IsFixedLength()
                .HasColumnName("inv_predcode");
            entity.Property(e => e.InvStateCode)
                .HasMaxLength(3)
                .IsFixedLength()
                .HasColumnName("inv_StateCode");
            entity.Property(e => e.IsoTaalcd)
                .HasMaxLength(3)
                .IsFixedLength()
                .HasColumnName("iso_taalcd");
            entity.Property(e => e.KlantnLev)
                .HasMaxLength(10)
                .IsFixedLength()
                .HasColumnName("klantn_lev");
            entity.Property(e => e.Koers).HasColumnName("koers");
            entity.Property(e => e.Kstplcode)
                .HasMaxLength(8)
                .IsFixedLength()
                .HasColumnName("kstplcode");
            entity.Property(e => e.Levwijze)
                .HasMaxLength(5)
                .IsFixedLength()
                .HasColumnName("levwijze");
            entity.Property(e => e.Magcode)
                .HasMaxLength(4)
                .IsFixedLength()
                .HasColumnName("magcode");
            entity.Property(e => e.NettoGew).HasColumnName("netto_gew");
            entity.Property(e => e.OfferteNr)
                .HasMaxLength(8)
                .IsFixedLength()
                .HasColumnName("offerte_nr");
            entity.Property(e => e.OrdAddressLine1)
                .HasMaxLength(100)
                .HasColumnName("ord_AddressLine1");
            entity.Property(e => e.OrdAddressLine2)
                .HasMaxLength(100)
                .HasColumnName("ord_AddressLine2");
            entity.Property(e => e.OrdAddressLine3)
                .HasMaxLength(100)
                .HasColumnName("ord_AddressLine3");
            entity.Property(e => e.OrdCity)
                .HasMaxLength(100)
                .HasColumnName("ord_City");
            entity.Property(e => e.OrdCntJobDesc)
                .HasMaxLength(50)
                .HasColumnName("ord_cnt_job_desc");
            entity.Property(e => e.OrdContactperson)
                .HasMaxLength(100)
                .HasColumnName("ord_contactperson");
            entity.Property(e => e.OrdDebtorName)
                .HasMaxLength(50)
                .HasColumnName("ord_debtor_name");
            entity.Property(e => e.OrdFax)
                .HasMaxLength(50)
                .HasColumnName("ord_Fax");
            entity.Property(e => e.OrdInitials)
                .HasMaxLength(10)
                .HasColumnName("ord_Initials");
            entity.Property(e => e.OrdLandcode)
                .HasMaxLength(3)
                .IsFixedLength()
                .HasColumnName("ord_landcode");
            entity.Property(e => e.OrdPhone)
                .HasMaxLength(50)
                .HasColumnName("ord_Phone");
            entity.Property(e => e.OrdPostCode)
                .HasMaxLength(20)
                .HasColumnName("ord_PostCode");
            entity.Property(e => e.OrdPredcode)
                .HasMaxLength(4)
                .IsFixedLength()
                .HasColumnName("ord_predcode");
            entity.Property(e => e.OrdSoort)
                .HasMaxLength(1)
                .IsFixedLength()
                .HasColumnName("ord_soort");
            entity.Property(e => e.OrdStateCode)
                .HasMaxLength(3)
                .IsFixedLength()
                .HasColumnName("ord_StateCode");
            entity.Property(e => e.Orddat)
                .HasColumnType("datetime")
                .HasColumnName("orddat");
            entity.Property(e => e.OrderBdr).HasColumnName("order_bdr");
            entity.Property(e => e.OrderKort).HasColumnName("order_kort");
            entity.Property(e => e.Orderkost).HasColumnName("orderkost");
            entity.Property(e => e.Ordernr)
                .HasMaxLength(8)
                .IsFixedLength()
                .HasColumnName("ordernr");
            entity.Property(e => e.PakbonDat)
                .HasColumnType("datetime")
                .HasColumnName("pakbon_dat");
            entity.Property(e => e.PakbonNr)
                .HasMaxLength(8)
                .IsFixedLength()
                .HasColumnName("pakbon_nr");
            entity.Property(e => e.PakbonTim).HasColumnName("pakbon_tim");
            entity.Property(e => e.Periode)
                .HasMaxLength(3)
                .IsFixedLength()
                .HasColumnName("periode");
            entity.Property(e => e.ProdOrder)
                .HasMaxLength(12)
                .HasColumnName("prod_order");
            entity.Property(e => e.Projectnr)
                .HasMaxLength(20)
                .HasColumnName("projectnr");
            entity.Property(e => e.Refer)
                .HasMaxLength(20)
                .HasColumnName("refer");
            entity.Property(e => e.Refer1)
                .HasMaxLength(20)
                .HasColumnName("refer1");
            entity.Property(e => e.Refer2)
                .HasMaxLength(20)
                .HasColumnName("refer2");
            entity.Property(e => e.Refer3)
                .HasMaxLength(20)
                .HasColumnName("refer3");
            entity.Property(e => e.RepresentId).HasColumnName("represent_id");
            entity.Property(e => e.Routecode)
                .HasMaxLength(2)
                .IsFixedLength()
                .HasColumnName("routecode");
            entity.Property(e => e.Selcode)
                .HasMaxLength(2)
                .IsFixedLength()
                .HasColumnName("selcode");
            entity.Property(e => e.Syscreated)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("syscreated");
            entity.Property(e => e.Syscreator).HasColumnName("syscreator");
            entity.Property(e => e.Sysguid)
                .HasDefaultValueSql("(newid())")
                .HasColumnName("sysguid");
            entity.Property(e => e.Sysmodified)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("sysmodified");
            entity.Property(e => e.Sysmodifier).HasColumnName("sysmodifier");
            entity.Property(e => e.Timestamp)
                .IsRowVersion()
                .IsConcurrencyToken()
                .HasColumnName("timestamp");
            entity.Property(e => e.TypeProd)
                .HasMaxLength(1)
                .IsFixedLength()
                .HasColumnName("type_prod");
            entity.Property(e => e.UserId)
                .HasMaxLength(8)
                .IsFixedLength()
                .HasColumnName("user_id");
            entity.Property(e => e.Valcode)
                .HasMaxLength(3)
                .IsFixedLength()
                .HasColumnName("valcode");
            entity.Property(e => e.Verzdebnr)
                .HasMaxLength(6)
                .IsFixedLength()
                .HasColumnName("verzdebnr");
            entity.Property(e => e.Vrachtkost).HasColumnName("vrachtkost");
            entity.Property(e => e.VrzAdrcd)
                .HasMaxLength(6)
                .IsFixedLength()
                .HasColumnName("vrz_adrcd");
            entity.Property(e => e.VrzAdrnr)
                .HasMaxLength(10)
                .IsFixedLength()
                .HasColumnName("vrz_adrnr");
        });

        modelBuilder.Entity<Orhsrg>(entity =>
        {
            entity.HasKey(e => e.Id).IsClustered(false);

            entity.ToTable("orhsrg");

            entity.HasIndex(e => e.Magcode, "ix_magcode");

            entity.HasIndex(e => new { e.Artcode, e.PakbonDat, e.Ordernr, e.Regel, e.Id }, "orhart").IsUnique();

            entity.HasIndex(e => new { e.Cat1, e.PakbonNr, e.PakbonDat, e.Id }, "orhcat").IsUnique();

            entity.HasIndex(e => new { e.Ordernr, e.Regel, e.Id }, "orhonr").IsUnique();

            entity.HasIndex(e => new { e.PakbonNr, e.PakbonDat, e.Regel }, "orhsrg")
                .IsUnique()
                .IsClustered();

            entity.Property(e => e.Id).HasColumnName("ID");
            entity.Property(e => e.AantGelev).HasColumnName("aant_gelev");
            entity.Property(e => e.AantalSer).HasColumnName("aantal_ser");
            entity.Property(e => e.AflWeek)
                .HasMaxLength(2)
                .IsFixedLength()
                .HasColumnName("afl_week");
            entity.Property(e => e.Afldat)
                .HasColumnType("datetime")
                .HasColumnName("afldat");
            entity.Property(e => e.ArSoort)
                .HasMaxLength(1)
                .IsFixedLength()
                .HasColumnName("ar_soort");
            entity.Property(e => e.Artcode)
                .HasMaxLength(30)
                .HasColumnName("artcode");
            entity.Property(e => e.AvOntIn).HasColumnName("av_ont_in");
            entity.Property(e => e.BdrDEvVal).HasColumnName("bdr_d_ev_val");
            entity.Property(e => e.BdrEvEdVal).HasColumnName("bdr_ev_ed_val");
            entity.Property(e => e.BdrInvDVal).HasColumnName("bdr_inv_d_val");
            entity.Property(e => e.BdrVatVal).HasColumnName("bdr_vat_val");
            entity.Property(e => e.Breedte).HasColumnName("breedte");
            entity.Property(e => e.BtwCode)
                .HasMaxLength(3)
                .IsFixedLength()
                .HasColumnName("btw_code");
            entity.Property(e => e.Cat1)
                .HasMaxLength(2)
                .IsFixedLength()
                .HasColumnName("cat1");
            entity.Property(e => e.Cat2)
                .HasMaxLength(2)
                .IsFixedLength()
                .HasColumnName("cat2");
            entity.Property(e => e.Cat3)
                .HasMaxLength(2)
                .IsFixedLength()
                .HasColumnName("cat3");
            entity.Property(e => e.Dimensie)
                .HasMaxLength(3)
                .IsFixedLength()
                .HasColumnName("dimensie");
            entity.Property(e => e.Explsrtart)
                .HasMaxLength(1)
                .IsFixedLength()
                .HasColumnName("explsrtart");
            entity.Property(e => e.ExtraPr).HasColumnName("extra_pr");
            entity.Property(e => e.Hoogte).HasColumnName("hoogte");
            entity.Property(e => e.Instruction)
                .HasMaxLength(160)
                .HasColumnName("instruction");
            entity.Property(e => e.Koers).HasColumnName("koers");
            entity.Property(e => e.KortFlags)
                .HasMaxLength(1)
                .IsFixedLength()
                .HasColumnName("kort_flags");
            entity.Property(e => e.Korting).HasColumnName("korting");
            entity.Property(e => e.Kstdrcode)
                .HasMaxLength(8)
                .IsFixedLength()
                .HasColumnName("kstdrcode");
            entity.Property(e => e.Kstplcode)
                .HasMaxLength(8)
                .IsFixedLength()
                .HasColumnName("kstplcode");
            entity.Property(e => e.Kstsrt)
                .HasMaxLength(8)
                .IsFixedLength()
                .HasColumnName("kstsrt");
            entity.Property(e => e.Lengte).HasColumnName("lengte");
            entity.Property(e => e.Magcode)
                .HasMaxLength(4)
                .IsFixedLength()
                .HasColumnName("magcode");
            entity.Property(e => e.Oms45)
                .HasMaxLength(45)
                .HasColumnName("oms45");
            entity.Property(e => e.Ordernr)
                .HasMaxLength(8)
                .IsFixedLength()
                .HasColumnName("ordernr");
            entity.Property(e => e.PakbonDat)
                .HasColumnType("datetime")
                .HasColumnName("pakbon_dat");
            entity.Property(e => e.PakbonNr)
                .HasMaxLength(8)
                .IsFixedLength()
                .HasColumnName("pakbon_nr");
            entity.Property(e => e.PrAant).HasColumnName("pr_aant");
            entity.Property(e => e.PrBedr).HasColumnName("pr_bedr");
            entity.Property(e => e.PrKstpl)
                .HasMaxLength(8)
                .IsFixedLength()
                .HasColumnName("pr_kstpl");
            entity.Property(e => e.Prijs83).HasColumnName("prijs83");
            entity.Property(e => e.PrijsN).HasColumnName("prijs_n");
            entity.Property(e => e.Prijslijst)
                .HasMaxLength(15)
                .HasColumnName("prijslijst");
            entity.Property(e => e.ProdOrder)
                .HasMaxLength(12)
                .HasColumnName("prod_order");
            entity.Property(e => e.Project)
                .HasMaxLength(8)
                .IsFixedLength()
                .HasColumnName("project");
            entity.Property(e => e.Projectnr)
                .HasMaxLength(20)
                .HasColumnName("projectnr");
            entity.Property(e => e.Regel)
                .HasMaxLength(4)
                .IsFixedLength()
                .HasColumnName("regel");
            entity.Property(e => e.RegelHfda)
                .HasMaxLength(4)
                .IsFixedLength()
                .HasColumnName("regel_hfda");
            entity.Property(e => e.ResId).HasColumnName("res_id");
            entity.Property(e => e.SerieNum)
                .HasMaxLength(22)
                .HasColumnName("serie_num");
            entity.Property(e => e.Syscreated)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("syscreated");
            entity.Property(e => e.Syscreator).HasColumnName("syscreator");
            entity.Property(e => e.Sysguid)
                .HasDefaultValueSql("(newid())")
                .HasColumnName("sysguid");
            entity.Property(e => e.Sysmodified)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("sysmodified");
            entity.Property(e => e.Sysmodifier).HasColumnName("sysmodifier");
            entity.Property(e => e.Timestamp)
                .IsRowVersion()
                .IsConcurrencyToken()
                .HasColumnName("timestamp");
            entity.Property(e => e.Unit)
                .HasMaxLength(5)
                .IsFixedLength()
                .HasColumnName("unit");
            entity.Property(e => e.Unitcode)
                .HasMaxLength(8)
                .IsFixedLength()
                .HasColumnName("unitcode");
            entity.Property(e => e.Unitfactor)
                .HasDefaultValue(1.0)
                .HasColumnName("unitfactor");
            entity.Property(e => e.Vvp).HasColumnName("vvp");
        });

        modelBuilder.Entity<Orhstx>(entity =>
        {
            entity.HasKey(e => e.Id).IsClustered(false);

            entity.ToTable("orhstx");

            entity.HasIndex(e => new { e.PakbonNr, e.PakbonDat, e.Regel }, "orhstx")
                .IsUnique()
                .IsClustered();

            entity.Property(e => e.Id).HasColumnName("ID");
            entity.Property(e => e.Ordernr)
                .HasMaxLength(8)
                .IsFixedLength()
                .HasColumnName("ordernr");
            entity.Property(e => e.PakbonDat)
                .HasColumnType("datetime")
                .HasColumnName("pakbon_dat");
            entity.Property(e => e.PakbonNr)
                .HasMaxLength(8)
                .IsFixedLength()
                .HasColumnName("pakbon_nr");
            entity.Property(e => e.Regel)
                .HasMaxLength(4)
                .IsFixedLength()
                .HasColumnName("regel");
            entity.Property(e => e.Syscreated)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("syscreated");
            entity.Property(e => e.Syscreator).HasColumnName("syscreator");
            entity.Property(e => e.Sysguid)
                .HasDefaultValueSql("(newid())")
                .HasColumnName("sysguid");
            entity.Property(e => e.Sysmodified)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("sysmodified");
            entity.Property(e => e.Sysmodifier).HasColumnName("sysmodifier");
            entity.Property(e => e.Tekst)
                .HasMaxLength(160)
                .HasColumnName("tekst");
            entity.Property(e => e.Timestamp)
                .IsRowVersion()
                .IsConcurrencyToken()
                .HasColumnName("timestamp");
        });

        modelBuilder.Entity<Orkrg>(entity =>
        {
            entity.HasKey(e => e.Id).IsClustered(false);

            entity.ToTable("orkrg");

            entity.HasIndex(e => new { e.Crdnr, e.Ordernr }, "cror").IsUnique();

            entity.HasIndex(e => new { e.Debnr, e.Ordernr }, "dbor").IsUnique();

            entity.HasIndex(e => new { e.Fiattering, e.Debnr, e.Id }, "forkrg").IsUnique();

            entity.HasIndex(e => new { e.Projectnr, e.OrdSoort }, "ix_ProjectOrder");

            entity.HasIndex(e => new { e.OrdSoort, e.Afgehandld, e.Ordernr }, "ix_afgehandld").IsUnique();

            entity.HasIndex(e => e.Crdnr, "ix_crdnr");

            entity.HasIndex(e => e.Einddebnr, "ix_einddebnr");

            entity.HasIndex(e => e.Fakdebnr, "ix_fakdebnr");

            entity.HasIndex(e => e.Magcode, "ix_magcode");

            entity.HasIndex(e => e.Naldebnr, "ix_naldebnr");

            entity.HasIndex(e => e.Verzdebnr, "ix_verzdebnr");

            entity.HasIndex(e => new { e.FaktCode, e.Faknr, e.Id }, "krgfak").IsUnique();

            entity.HasIndex(e => new { e.FaktCode, e.Ordernr, e.Id }, "krgnr").IsUnique();

            entity.HasIndex(e => new { e.Orddat, e.Ordernr }, "odor").IsUnique();

            entity.HasIndex(e => new { e.CntrId, e.Id }, "orkeca").IsUnique();

            entity.HasIndex(e => e.Ordernr, "orkrg")
                .IsUnique()
                .IsClustered();

            entity.HasIndex(e => new { e.Orddat, e.Selcode, e.Ordernr }, "orksel").IsUnique();

            entity.HasIndex(e => new { e.Selcode, e.Ordernr }, "slord").IsUnique();

            entity.HasIndex(e => new { e.OrdSoort, e.Ordernr }, "sorkrg").IsUnique();

            entity.Property(e => e.Id).HasColumnName("ID");
            entity.Property(e => e.Afgehandld).HasColumnName("afgehandld");
            entity.Property(e => e.AflWeek)
                .HasMaxLength(2)
                .IsFixedLength()
                .HasColumnName("afl_week");
            entity.Property(e => e.Afldat)
                .HasColumnType("datetime")
                .HasColumnName("afldat");
            entity.Property(e => e.Approved).HasColumnType("datetime");
            entity.Property(e => e.BdrDiscVal).HasColumnName("bdr_disc_val");
            entity.Property(e => e.BdrEvVal).HasColumnName("bdr_ev_val");
            entity.Property(e => e.BdrKbVal).HasColumnName("bdr_kb_val");
            entity.Property(e => e.BdrVal).HasColumnName("bdr_val");
            entity.Property(e => e.BdrVatOrdVal).HasColumnName("bdr_vat_ord_val");
            entity.Property(e => e.BdrVatShipVal).HasColumnName("bdr_vat_ship_val");
            entity.Property(e => e.BdrVatVal).HasColumnName("bdr_vat_val");
            entity.Property(e => e.Betaald).HasColumnName("betaald");
            entity.Property(e => e.Betcond)
                .HasMaxLength(2)
                .IsFixedLength()
                .HasColumnName("betcond");
            entity.Property(e => e.BrutoGew).HasColumnName("bruto_gew");
            entity.Property(e => e.Bstwijze)
                .HasMaxLength(3)
                .IsFixedLength()
                .HasColumnName("bstwijze");
            entity.Property(e => e.BtwCdOrd)
                .HasMaxLength(3)
                .IsFixedLength()
                .HasColumnName("btw_cd_ord");
            entity.Property(e => e.BtwCode)
                .HasMaxLength(3)
                .IsFixedLength()
                .HasColumnName("btw_code");
            entity.Property(e => e.CalcInclVat)
                .HasMaxLength(1)
                .IsFixedLength()
                .HasColumnName("calc_incl_vat");
            entity.Property(e => e.CalcMethPc)
                .HasMaxLength(1)
                .IsFixedLength()
                .HasColumnName("calc_meth_pc");
            entity.Property(e => e.CntrId)
                .HasMaxLength(38)
                .HasColumnName("cntr_id");
            entity.Property(e => e.Colli)
                .HasMaxLength(5)
                .IsFixedLength()
                .HasColumnName("colli");
            entity.Property(e => e.Crdnr)
                .HasMaxLength(6)
                .IsFixedLength()
                .HasColumnName("crdnr");
            entity.Property(e => e.Debnr)
                .HasMaxLength(6)
                .IsFixedLength()
                .HasColumnName("debnr");
            entity.Property(e => e.DelAddressLine1)
                .HasMaxLength(100)
                .HasColumnName("del_AddressLine1");
            entity.Property(e => e.DelAddressLine2)
                .HasMaxLength(100)
                .HasColumnName("del_AddressLine2");
            entity.Property(e => e.DelAddressLine3)
                .HasMaxLength(100)
                .HasColumnName("del_AddressLine3");
            entity.Property(e => e.DelCity)
                .HasMaxLength(100)
                .HasColumnName("del_City");
            entity.Property(e => e.DelCntJobDesc)
                .HasMaxLength(50)
                .HasColumnName("del_cnt_job_desc");
            entity.Property(e => e.DelContactemail)
                .HasMaxLength(128)
                .HasColumnName("del_contactemail");
            entity.Property(e => e.DelContactperson)
                .HasMaxLength(100)
                .HasColumnName("del_contactperson");
            entity.Property(e => e.DelDebtorName)
                .HasMaxLength(50)
                .HasColumnName("del_debtor_name");
            entity.Property(e => e.DelFax)
                .HasMaxLength(50)
                .HasColumnName("del_Fax");
            entity.Property(e => e.DelInitials)
                .HasMaxLength(10)
                .HasColumnName("del_Initials");
            entity.Property(e => e.DelLandcode)
                .HasMaxLength(3)
                .IsFixedLength()
                .HasColumnName("del_landcode");
            entity.Property(e => e.DelPhone)
                .HasMaxLength(50)
                .HasColumnName("del_Phone");
            entity.Property(e => e.DelPostCode)
                .HasMaxLength(20)
                .HasColumnName("del_PostCode");
            entity.Property(e => e.DelPredcode)
                .HasMaxLength(4)
                .IsFixedLength()
                .HasColumnName("del_predcode");
            entity.Property(e => e.DelStateCode)
                .HasMaxLength(3)
                .IsFixedLength()
                .HasColumnName("del_StateCode");
            entity.Property(e => e.DocAttachmentId).HasColumnName("DocAttachmentID");
            entity.Property(e => e.Docnumber)
                .HasMaxLength(30)
                .HasColumnName("docnumber");
            entity.Property(e => e.DocumentId).HasColumnName("DocumentID");
            entity.Property(e => e.EcaType)
                .HasMaxLength(1)
                .IsFixedLength()
                .HasColumnName("eca_type");
            entity.Property(e => e.Ecaordernr)
                .HasMaxLength(10)
                .IsFixedLength()
                .HasColumnName("ecaordernr");
            entity.Property(e => e.Einddebnr)
                .HasMaxLength(6)
                .IsFixedLength()
                .HasColumnName("einddebnr");
            entity.Property(e => e.ExArtcode)
                .HasMaxLength(2)
                .IsFixedLength()
                .HasColumnName("ex_artcode");
            entity.Property(e => e.Fakcrdnr)
                .HasMaxLength(6)
                .IsFixedLength()
                .HasColumnName("fakcrdnr");
            entity.Property(e => e.Fakdebnr)
                .HasMaxLength(6)
                .IsFixedLength()
                .HasColumnName("fakdebnr");
            entity.Property(e => e.Faknr)
                .HasMaxLength(8)
                .IsFixedLength()
                .HasColumnName("faknr");
            entity.Property(e => e.FaktCode)
                .HasMaxLength(3)
                .IsFixedLength()
                .HasColumnName("fakt_code");
            entity.Property(e => e.Fiattering)
                .HasMaxLength(1)
                .IsFixedLength()
                .HasColumnName("fiattering");
            entity.Property(e => e.Freefield1)
                .HasMaxLength(75)
                .HasColumnName("freefield1");
            entity.Property(e => e.Freefield2)
                .HasMaxLength(75)
                .HasColumnName("freefield2");
            entity.Property(e => e.Freefield3)
                .HasMaxLength(75)
                .HasColumnName("freefield3");
            entity.Property(e => e.Freefield4).HasColumnName("freefield4");
            entity.Property(e => e.Freefield5).HasColumnName("freefield5");
            entity.Property(e => e.ImAta)
                .HasColumnType("datetime")
                .HasColumnName("ImATA");
            entity.Property(e => e.ImAtd)
                .HasColumnType("datetime")
                .HasColumnName("ImATD");
            entity.Property(e => e.ImEta)
                .HasColumnType("datetime")
                .HasColumnName("ImETA");
            entity.Property(e => e.Industrie)
                .HasMaxLength(1)
                .IsFixedLength()
                .HasColumnName("industrie");
            entity.Property(e => e.IntVrw)
                .HasMaxLength(2)
                .IsFixedLength()
                .HasColumnName("int_vrw");
            entity.Property(e => e.InvAddressLine1)
                .HasMaxLength(100)
                .HasColumnName("inv_AddressLine1");
            entity.Property(e => e.InvAddressLine2)
                .HasMaxLength(100)
                .HasColumnName("inv_AddressLine2");
            entity.Property(e => e.InvAddressLine3)
                .HasMaxLength(100)
                .HasColumnName("inv_AddressLine3");
            entity.Property(e => e.InvCity)
                .HasMaxLength(100)
                .HasColumnName("inv_City");
            entity.Property(e => e.InvCntJobDesc)
                .HasMaxLength(50)
                .HasColumnName("inv_cnt_job_desc");
            entity.Property(e => e.InvContactemail)
                .HasMaxLength(128)
                .HasColumnName("inv_contactemail");
            entity.Property(e => e.InvContactperson)
                .HasMaxLength(100)
                .HasColumnName("inv_contactperson");
            entity.Property(e => e.InvDebtorName)
                .HasMaxLength(50)
                .HasColumnName("inv_debtor_name");
            entity.Property(e => e.InvFax)
                .HasMaxLength(50)
                .HasColumnName("inv_Fax");
            entity.Property(e => e.InvInVv).HasColumnName("inv_in_vv");
            entity.Property(e => e.InvInitials)
                .HasMaxLength(10)
                .HasColumnName("inv_Initials");
            entity.Property(e => e.InvLandcode)
                .HasMaxLength(3)
                .IsFixedLength()
                .HasColumnName("inv_landcode");
            entity.Property(e => e.InvPhone)
                .HasMaxLength(50)
                .HasColumnName("inv_Phone");
            entity.Property(e => e.InvPostCode)
                .HasMaxLength(20)
                .HasColumnName("inv_PostCode");
            entity.Property(e => e.InvPredcode)
                .HasMaxLength(4)
                .IsFixedLength()
                .HasColumnName("inv_predcode");
            entity.Property(e => e.InvStateCode)
                .HasMaxLength(3)
                .IsFixedLength()
                .HasColumnName("inv_StateCode");
            entity.Property(e => e.InvoiceMethod)
                .HasMaxLength(1)
                .IsFixedLength()
                .HasColumnName("invoice_method");
            entity.Property(e => e.IsoTaalcd)
                .HasMaxLength(3)
                .IsFixedLength()
                .HasColumnName("iso_taalcd");
            entity.Property(e => e.IsoTaalcdF)
                .HasMaxLength(3)
                .IsFixedLength()
                .HasColumnName("iso_taalcd_f");
            entity.Property(e => e.KlantnLev)
                .HasMaxLength(10)
                .IsFixedLength()
                .HasColumnName("klantn_lev");
            entity.Property(e => e.Koers).HasColumnName("koers");
            entity.Property(e => e.Krgtext).HasColumnName("krgtext");
            entity.Property(e => e.Kstplcode)
                .HasMaxLength(8)
                .IsFixedLength()
                .HasColumnName("kstplcode");
            entity.Property(e => e.Levwijze)
                .HasMaxLength(5)
                .IsFixedLength()
                .HasColumnName("levwijze");
            entity.Property(e => e.Magcode)
                .HasMaxLength(4)
                .IsFixedLength()
                .HasColumnName("magcode");
            entity.Property(e => e.NalAdrcd)
                .HasMaxLength(6)
                .IsFixedLength()
                .HasColumnName("nal_adrcd");
            entity.Property(e => e.NalAdrnr)
                .HasMaxLength(10)
                .IsFixedLength()
                .HasColumnName("nal_adrnr");
            entity.Property(e => e.Naldebnr)
                .HasMaxLength(6)
                .IsFixedLength()
                .HasColumnName("naldebnr");
            entity.Property(e => e.NettoGew).HasColumnName("netto_gew");
            entity.Property(e => e.Nettoprijs).HasColumnName("nettoprijs");
            entity.Property(e => e.Notesunid)
                .HasMaxLength(38)
                .HasColumnName("notesunid");
            entity.Property(e => e.OfferteNr)
                .HasMaxLength(8)
                .IsFixedLength()
                .HasColumnName("offerte_nr");
            entity.Property(e => e.OrdAddressLine1)
                .HasMaxLength(100)
                .HasColumnName("ord_AddressLine1");
            entity.Property(e => e.OrdAddressLine2)
                .HasMaxLength(100)
                .HasColumnName("ord_AddressLine2");
            entity.Property(e => e.OrdAddressLine3)
                .HasMaxLength(100)
                .HasColumnName("ord_AddressLine3");
            entity.Property(e => e.OrdCity)
                .HasMaxLength(100)
                .HasColumnName("ord_City");
            entity.Property(e => e.OrdCntJobDesc)
                .HasMaxLength(50)
                .HasColumnName("ord_cnt_job_desc");
            entity.Property(e => e.OrdContactemail)
                .HasMaxLength(128)
                .HasColumnName("ord_contactemail");
            entity.Property(e => e.OrdContactperson)
                .HasMaxLength(100)
                .HasColumnName("ord_contactperson");
            entity.Property(e => e.OrdDebtorName)
                .HasMaxLength(50)
                .HasColumnName("ord_debtor_name");
            entity.Property(e => e.OrdFax)
                .HasMaxLength(50)
                .HasColumnName("ord_Fax");
            entity.Property(e => e.OrdInitials)
                .HasMaxLength(10)
                .HasColumnName("ord_Initials");
            entity.Property(e => e.OrdLandcode)
                .HasMaxLength(3)
                .IsFixedLength()
                .HasColumnName("ord_landcode");
            entity.Property(e => e.OrdPhone)
                .HasMaxLength(50)
                .HasColumnName("ord_Phone");
            entity.Property(e => e.OrdPostCode)
                .HasMaxLength(20)
                .HasColumnName("ord_PostCode");
            entity.Property(e => e.OrdPredcode)
                .HasMaxLength(4)
                .IsFixedLength()
                .HasColumnName("ord_predcode");
            entity.Property(e => e.OrdSoort)
                .HasMaxLength(1)
                .IsFixedLength()
                .HasColumnName("ord_soort");
            entity.Property(e => e.OrdStateCode)
                .HasMaxLength(3)
                .IsFixedLength()
                .HasColumnName("ord_StateCode");
            entity.Property(e => e.OrdbvAfdr).HasColumnName("ordbv_afdr");
            entity.Property(e => e.OrdbvAfgd).HasColumnName("ordbv_afgd");
            entity.Property(e => e.Orddat)
                .HasColumnType("datetime")
                .HasColumnName("orddat");
            entity.Property(e => e.OrderKort).HasColumnName("order_kort");
            entity.Property(e => e.Orderkost).HasColumnName("orderkost");
            entity.Property(e => e.Ordernr)
                .HasMaxLength(8)
                .IsFixedLength()
                .HasColumnName("ordernr");
            entity.Property(e => e.PakbonAfg).HasColumnName("pakbon_afg");
            entity.Property(e => e.PakbonDat)
                .HasColumnType("datetime")
                .HasColumnName("pakbon_dat");
            entity.Property(e => e.PakbonNr)
                .HasMaxLength(8)
                .IsFixedLength()
                .HasColumnName("pakbon_nr");
            entity.Property(e => e.PaklstAfg).HasColumnName("paklst_afg");
            entity.Property(e => e.Paymentmethod)
                .HasMaxLength(1)
                .IsFixedLength()
                .HasColumnName("paymentmethod");
            entity.Property(e => e.ProdOrder)
                .HasMaxLength(12)
                .HasColumnName("prod_order");
            entity.Property(e => e.Productline)
                .HasMaxLength(20)
                .HasColumnName("productline");
            entity.Property(e => e.Productrelease)
                .HasMaxLength(20)
                .HasColumnName("productrelease");
            entity.Property(e => e.Productversion)
                .HasMaxLength(20)
                .HasColumnName("productversion");
            entity.Property(e => e.Projectnr)
                .HasMaxLength(20)
                .HasColumnName("projectnr");
            entity.Property(e => e.Refer)
                .HasMaxLength(20)
                .HasColumnName("refer");
            entity.Property(e => e.Refer1)
                .HasMaxLength(20)
                .HasColumnName("refer1");
            entity.Property(e => e.Refer2)
                .HasMaxLength(20)
                .HasColumnName("refer2");
            entity.Property(e => e.Refer3)
                .HasMaxLength(20)
                .HasColumnName("refer3");
            entity.Property(e => e.RepresentId).HasColumnName("represent_id");
            entity.Property(e => e.RepresentId2).HasColumnName("represent_id2");
            entity.Property(e => e.RepresentIdeca).HasColumnName("represent_ideca");
            entity.Property(e => e.Resulttype)
                .HasMaxLength(1)
                .IsFixedLength()
                .HasColumnName("resulttype");
            entity.Property(e => e.Routecode)
                .HasMaxLength(2)
                .IsFixedLength()
                .HasColumnName("routecode");
            entity.Property(e => e.Selcode)
                .HasMaxLength(2)
                .IsFixedLength()
                .HasColumnName("selcode");
            entity.Property(e => e.ServiceCallId).HasColumnName("ServiceCall_ID");
            entity.Property(e => e.StatCode)
                .HasMaxLength(1)
                .IsFixedLength()
                .HasColumnName("stat_code");
            entity.Property(e => e.Status)
                .HasMaxLength(1)
                .IsFixedLength()
                .HasColumnName("status");
            entity.Property(e => e.Syscreated)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("syscreated");
            entity.Property(e => e.Syscreator).HasColumnName("syscreator");
            entity.Property(e => e.Sysguid)
                .HasDefaultValueSql("(newid())")
                .HasColumnName("sysguid");
            entity.Property(e => e.Sysmodified)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("sysmodified");
            entity.Property(e => e.Sysmodifier).HasColumnName("sysmodifier");
            entity.Property(e => e.Timestamp)
                .IsRowVersion()
                .IsConcurrencyToken()
                .HasColumnName("timestamp");
            entity.Property(e => e.TotBdr).HasColumnName("tot_bdr");
            entity.Property(e => e.TypeProd)
                .HasMaxLength(1)
                .IsFixedLength()
                .HasColumnName("type_prod");
            entity.Property(e => e.UserId)
                .HasMaxLength(8)
                .IsFixedLength()
                .HasColumnName("user_id");
            entity.Property(e => e.Valcode)
                .HasMaxLength(3)
                .IsFixedLength()
                .HasColumnName("valcode");
            entity.Property(e => e.Verzdebnr)
                .HasMaxLength(6)
                .IsFixedLength()
                .HasColumnName("verzdebnr");
            entity.Property(e => e.Vrachtkost).HasColumnName("vrachtkost");
            entity.Property(e => e.VrzAdrcd)
                .HasMaxLength(6)
                .IsFixedLength()
                .HasColumnName("vrz_adrcd");
            entity.Property(e => e.VrzAdrnr)
                .HasMaxLength(10)
                .IsFixedLength()
                .HasColumnName("vrz_adrnr");
        });

        modelBuilder.Entity<Orsrg>(entity =>
        {
            entity.HasKey(e => e.Id).IsClustered(false);

            entity.ToTable("orsrg");

            entity.HasIndex(e => e.BlanketPoline, "IX_orsrg_BlanketPoline");

            entity.HasIndex(e => e.ImportationId, "IX_orsrg_ImportationId");

            entity.HasIndex(e => e.OriginalPoline, "IX_orsrg_OriginalPoline");

            entity.HasIndex(e => e.Sysguid, "IX_orsrg_SysGuid").IsUnique();

            entity.HasIndex(e => new { e.Afldat, e.Ordernr, e.Regel }, "afor").IsUnique();

            entity.HasIndex(e => new { e.Artcode, e.Ordernr, e.Regel }, "artor").IsUnique();

            entity.HasIndex(e => e.Kstplcode, "ix_orsrg_kstplcode");

            entity.HasIndex(e => new { e.Projectnr, e.Ordernr }, "ix_projectnr");

            entity.HasIndex(e => new { e.Magcode, e.Artcode, e.Afldat, e.Ordernr, e.Regel }, "magart").IsUnique();

            entity.HasIndex(e => new { e.SerieNum, e.Artcode, e.Ordernr }, "orsord");

            entity.HasIndex(e => new { e.Ordernr, e.Regel }, "orsrg")
                .IsUnique()
                .IsClustered();

            entity.Property(e => e.Id).HasColumnName("ID");
            entity.Property(e => e.AantBack).HasColumnName("aant_back");
            entity.Property(e => e.AantFakt).HasColumnName("aant_fakt");
            entity.Property(e => e.AantGelev).HasColumnName("aant_gelev");
            entity.Property(e => e.AantalSer).HasColumnName("aantal_ser");
            entity.Property(e => e.Affiliates)
                .HasMaxLength(1)
                .IsFixedLength()
                .HasColumnName("affiliates");
            entity.Property(e => e.AflWeek)
                .HasMaxLength(2)
                .IsFixedLength()
                .HasColumnName("afl_week");
            entity.Property(e => e.Afldat)
                .HasColumnType("datetime")
                .HasColumnName("afldat");
            entity.Property(e => e.ArSoort)
                .HasMaxLength(1)
                .IsFixedLength()
                .HasColumnName("ar_soort");
            entity.Property(e => e.Artcode)
                .HasMaxLength(30)
                .HasColumnName("artcode");
            entity.Property(e => e.AvOntIn).HasColumnName("av_ont_in");
            entity.Property(e => e.BdrDEvVal).HasColumnName("bdr_d_ev_val");
            entity.Property(e => e.BdrEvEdVal).HasColumnName("bdr_ev_ed_val");
            entity.Property(e => e.BdrInvDVal).HasColumnName("bdr_inv_d_val");
            entity.Property(e => e.BdrVal).HasColumnName("bdr_val");
            entity.Property(e => e.BdrVatVal).HasColumnName("bdr_vat_val");
            entity.Property(e => e.Boecode)
                .HasMaxLength(2)
                .IsFixedLength()
                .HasColumnName("boecode");
            entity.Property(e => e.Breedte).HasColumnName("breedte");
            entity.Property(e => e.BtwCode)
                .HasMaxLength(3)
                .IsFixedLength()
                .HasColumnName("btw_code");
            entity.Property(e => e.Container).HasColumnName("container");
            entity.Property(e => e.ContractEndDate).HasColumnType("datetime");
            entity.Property(e => e.ContractStartDate).HasColumnType("datetime");
            entity.Property(e => e.Csacode)
                .HasMaxLength(1)
                .IsFixedLength()
                .HasColumnName("csacode");
            entity.Property(e => e.Dimensie)
                .HasMaxLength(3)
                .IsFixedLength()
                .HasColumnName("dimensie");
            entity.Property(e => e.Dummy10)
                .HasMaxLength(10)
                .IsFixedLength()
                .HasColumnName("dummy10");
            entity.Property(e => e.Dummy5)
                .HasMaxLength(5)
                .IsFixedLength()
                .HasColumnName("dummy5");
            entity.Property(e => e.EsrAantal).HasColumnName("esr_aantal");
            entity.Property(e => e.Explsrtart)
                .HasMaxLength(1)
                .IsFixedLength()
                .HasColumnName("explsrtart");
            entity.Property(e => e.ExtraPr).HasColumnName("extra_pr");
            entity.Property(e => e.GewichtBi).HasColumnName("gewicht_bi");
            entity.Property(e => e.Gip).HasColumnName("gip");
            entity.Property(e => e.Hoogte).HasColumnName("hoogte");
            entity.Property(e => e.ImportationId).HasColumnName("ImportationID");
            entity.Property(e => e.Industrie)
                .HasMaxLength(1)
                .IsFixedLength()
                .HasColumnName("industrie");
            entity.Property(e => e.Inkordernj).HasColumnName("inkordernj");
            entity.Property(e => e.Instruction)
                .HasMaxLength(160)
                .HasColumnName("instruction");
            entity.Property(e => e.IntRegio)
                .HasMaxLength(10)
                .IsFixedLength()
                .HasColumnName("int_regio");
            entity.Property(e => e.IntraLvcd)
                .HasMaxLength(10)
                .IsFixedLength()
                .HasColumnName("intra_lvcd");
            entity.Property(e => e.Koers).HasColumnName("koers");
            entity.Property(e => e.KortFlags)
                .HasMaxLength(1)
                .IsFixedLength()
                .HasColumnName("kort_flags");
            entity.Property(e => e.Korting).HasColumnName("korting");
            entity.Property(e => e.Kstdrcode)
                .HasMaxLength(8)
                .IsFixedLength()
                .HasColumnName("kstdrcode");
            entity.Property(e => e.Kstplcode)
                .HasMaxLength(8)
                .IsFixedLength()
                .HasColumnName("kstplcode");
            entity.Property(e => e.Kstsrt)
                .HasMaxLength(8)
                .IsFixedLength()
                .HasColumnName("kstsrt");
            entity.Property(e => e.LandIso)
                .HasMaxLength(3)
                .IsFixedLength()
                .HasColumnName("land_iso");
            entity.Property(e => e.Landabc)
                .HasMaxLength(3)
                .IsFixedLength()
                .HasColumnName("landabc");
            entity.Property(e => e.Landbest)
                .HasMaxLength(3)
                .IsFixedLength()
                .HasColumnName("landbest");
            entity.Property(e => e.Landherk)
                .HasMaxLength(3)
                .IsFixedLength()
                .HasColumnName("landherk");
            entity.Property(e => e.Landoorspr)
                .HasMaxLength(3)
                .IsFixedLength()
                .HasColumnName("landoorspr");
            entity.Property(e => e.Lengte).HasColumnName("lengte");
            entity.Property(e => e.Magcode)
                .HasMaxLength(4)
                .IsFixedLength()
                .HasColumnName("magcode");
            entity.Property(e => e.Maglok)
                .HasMaxLength(10)
                .IsFixedLength()
                .HasColumnName("maglok");
            entity.Property(e => e.Oms45)
                .HasMaxLength(45)
                .HasColumnName("oms45");
            entity.Property(e => e.Oms45F)
                .HasMaxLength(45)
                .HasColumnName("oms45_f");
            entity.Property(e => e.Ordernr)
                .HasMaxLength(8)
                .IsFixedLength()
                .HasColumnName("ordernr");
            entity.Property(e => e.Originalplanneddate).HasColumnType("datetime");
            entity.Property(e => e.PakbonAfg).HasColumnName("pakbon_afg");
            entity.Property(e => e.PakbonNr)
                .HasMaxLength(8)
                .IsFixedLength();
            entity.Property(e => e.PlannedDate).HasColumnType("datetime");
            entity.Property(e => e.PltsLl)
                .HasMaxLength(10)
                .IsFixedLength()
                .HasColumnName("plts_ll");
            entity.Property(e => e.PrBedr).HasColumnName("pr_bedr");
            entity.Property(e => e.PrKstpl)
                .HasMaxLength(8)
                .IsFixedLength()
                .HasColumnName("pr_kstpl");
            entity.Property(e => e.PrafReg)
                .HasMaxLength(1)
                .IsFixedLength()
                .HasColumnName("praf_reg");
            entity.Property(e => e.Prijs83).HasColumnName("prijs83");
            entity.Property(e => e.PrijsN).HasColumnName("prijs_n");
            entity.Property(e => e.Prijslijst)
                .HasMaxLength(15)
                .HasColumnName("prijslijst");
            entity.Property(e => e.ProdOrder)
                .HasMaxLength(12)
                .HasColumnName("prod_order");
            entity.Property(e => e.Project)
                .HasMaxLength(8)
                .IsFixedLength()
                .HasColumnName("project");
            entity.Property(e => e.Projectnr)
                .HasMaxLength(20)
                .HasColumnName("projectnr");
            entity.Property(e => e.ProjvrwC).HasColumnName("projvrw_c");
            entity.Property(e => e.Prshisnr)
                .HasMaxLength(8)
                .IsFixedLength()
                .HasColumnName("prshisnr");
            entity.Property(e => e.Purchaseordernr)
                .HasMaxLength(8)
                .IsFixedLength()
                .HasColumnName("purchaseordernr");
            entity.Property(e => e.QsrgLine)
                .HasMaxLength(15)
                .HasColumnName("qsrg_line");
            entity.Property(e => e.Reasoncode)
                .HasMaxLength(30)
                .HasColumnName("reasoncode");
            entity.Property(e => e.ReedsFakt).HasColumnName("reeds_fakt");
            entity.Property(e => e.Regel)
                .HasMaxLength(4)
                .IsFixedLength()
                .HasColumnName("regel");
            entity.Property(e => e.RegelHfda)
                .HasMaxLength(4)
                .IsFixedLength()
                .HasColumnName("regel_hfda");
            entity.Property(e => e.Requesteddate).HasColumnType("datetime");
            entity.Property(e => e.ResId).HasColumnName("res_id");
            entity.Property(e => e.SerieNum)
                .HasMaxLength(22)
                .HasColumnName("serie_num");
            entity.Property(e => e.StateenhI).HasColumnName("stateenh_i");
            entity.Property(e => e.Statistnr)
                .HasMaxLength(9)
                .IsFixedLength()
                .HasColumnName("statistnr");
            entity.Property(e => e.Stelsel)
                .HasMaxLength(10)
                .IsFixedLength()
                .HasColumnName("stelsel");
            entity.Property(e => e.Syscreated)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("syscreated");
            entity.Property(e => e.Syscreator).HasColumnName("syscreator");
            entity.Property(e => e.Sysguid)
                .HasDefaultValueSql("(newid())")
                .HasColumnName("sysguid");
            entity.Property(e => e.Sysmodified)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("sysmodified");
            entity.Property(e => e.Sysmodifier).HasColumnName("sysmodifier");
            entity.Property(e => e.Taric)
                .HasMaxLength(2)
                .IsFixedLength()
                .HasColumnName("taric");
            entity.Property(e => e.TaxCode2)
                .HasMaxLength(3)
                .IsFixedLength();
            entity.Property(e => e.TaxCode3)
                .HasMaxLength(3)
                .IsFixedLength();
            entity.Property(e => e.TaxCode4)
                .HasMaxLength(3)
                .IsFixedLength();
            entity.Property(e => e.TaxCode5)
                .HasMaxLength(3)
                .IsFixedLength();
            entity.Property(e => e.Timestamp)
                .IsRowVersion()
                .IsConcurrencyToken()
                .HasColumnName("timestamp");
            entity.Property(e => e.TransactA)
                .HasMaxLength(10)
                .IsFixedLength()
                .HasColumnName("transact_a");
            entity.Property(e => e.TransactB)
                .HasMaxLength(10)
                .IsFixedLength()
                .HasColumnName("transact_b");
            entity.Property(e => e.TrsshpmCd)
                .HasMaxLength(10)
                .IsFixedLength()
                .HasColumnName("trsshpm_cd");
            entity.Property(e => e.Uitgifte).HasColumnName("uitgifte");
            entity.Property(e => e.Unit)
                .HasMaxLength(5)
                .IsFixedLength()
                .HasColumnName("unit");
            entity.Property(e => e.Unitcode)
                .HasMaxLength(8)
                .IsFixedLength()
                .HasColumnName("unitcode");
            entity.Property(e => e.Unitfactor)
                .HasDefaultValue(1.0)
                .HasColumnName("unitfactor");
            entity.Property(e => e.Vervoer)
                .HasMaxLength(10)
                .IsFixedLength()
                .HasColumnName("vervoer");
            entity.Property(e => e.Vvp).HasColumnName("vvp");
        });

        modelBuilder.Entity<Orstx>(entity =>
        {
            entity.HasKey(e => e.Id).IsClustered(false);

            entity.ToTable("orstx");

            entity.HasIndex(e => e.LevCrdnr, "ix_lev_crdnr");

            entity.HasIndex(e => new { e.Ordernr, e.Regel }, "orstx")
                .IsUnique()
                .IsClustered();

            entity.Property(e => e.Id).HasColumnName("ID");
            entity.Property(e => e.LevCrdnr)
                .HasMaxLength(6)
                .IsFixedLength()
                .HasColumnName("lev_crdnr");
            entity.Property(e => e.Ordernr)
                .HasMaxLength(8)
                .IsFixedLength()
                .HasColumnName("ordernr");
            entity.Property(e => e.Regel)
                .HasMaxLength(4)
                .IsFixedLength()
                .HasColumnName("regel");
            entity.Property(e => e.Reknr)
                .HasMaxLength(9)
                .IsFixedLength()
                .HasColumnName("reknr");
            entity.Property(e => e.Syscreated)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("syscreated");
            entity.Property(e => e.Syscreator).HasColumnName("syscreator");
            entity.Property(e => e.Sysguid)
                .HasDefaultValueSql("(newid())")
                .HasColumnName("sysguid");
            entity.Property(e => e.Sysmodified)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("sysmodified");
            entity.Property(e => e.Sysmodifier).HasColumnName("sysmodifier");
            entity.Property(e => e.Tekst)
                .HasMaxLength(160)
                .HasColumnName("tekst");
            entity.Property(e => e.Timestamp)
                .IsRowVersion()
                .IsConcurrencyToken()
                .HasColumnName("timestamp");
        });

        modelBuilder.Entity<Orvkrg>(entity =>
        {
            entity.HasKey(e => e.Id).IsClustered(false);

            entity.ToTable("orvkrg");

            entity.HasIndex(e => e.Einddebnr, "ix_einddebnr");

            entity.HasIndex(e => e.Fakdebnr, "ix_fakdebnr");

            entity.HasIndex(e => e.Verzdebnr, "ix_verzdebnr");

            entity.HasIndex(e => new { e.Debnr, e.Ordernr }, "orvdeb").IsUnique();

            entity.HasIndex(e => e.Ordernr, "orvkrg")
                .IsUnique()
                .IsClustered();

            entity.Property(e => e.Id).HasColumnName("ID");
            entity.Property(e => e.AflWeek)
                .HasMaxLength(2)
                .IsFixedLength()
                .HasColumnName("afl_week");
            entity.Property(e => e.Afldat)
                .HasColumnType("datetime")
                .HasColumnName("afldat");
            entity.Property(e => e.Afsprcde)
                .HasMaxLength(3)
                .IsFixedLength()
                .HasColumnName("afsprcde");
            entity.Property(e => e.Betcond)
                .HasMaxLength(2)
                .IsFixedLength()
                .HasColumnName("betcond");
            entity.Property(e => e.BrutoGew).HasColumnName("bruto_gew");
            entity.Property(e => e.BtwCdOrd)
                .HasMaxLength(3)
                .IsFixedLength()
                .HasColumnName("btw_cd_ord");
            entity.Property(e => e.BtwCode)
                .HasMaxLength(3)
                .IsFixedLength()
                .HasColumnName("btw_code");
            entity.Property(e => e.Colli)
                .HasMaxLength(5)
                .IsFixedLength()
                .HasColumnName("colli");
            entity.Property(e => e.Debnr)
                .HasMaxLength(6)
                .IsFixedLength()
                .HasColumnName("debnr");
            entity.Property(e => e.DelAddressLine1)
                .HasMaxLength(100)
                .HasColumnName("del_AddressLine1");
            entity.Property(e => e.DelAddressLine2)
                .HasMaxLength(100)
                .HasColumnName("del_AddressLine2");
            entity.Property(e => e.DelAddressLine3)
                .HasMaxLength(100)
                .HasColumnName("del_AddressLine3");
            entity.Property(e => e.DelCity)
                .HasMaxLength(100)
                .HasColumnName("del_City");
            entity.Property(e => e.DelCntJobDesc)
                .HasMaxLength(50)
                .HasColumnName("del_cnt_job_desc");
            entity.Property(e => e.DelContactperson)
                .HasMaxLength(100)
                .HasColumnName("del_contactperson");
            entity.Property(e => e.DelDebtorName)
                .HasMaxLength(50)
                .HasColumnName("del_debtor_name");
            entity.Property(e => e.DelFax)
                .HasMaxLength(50)
                .HasColumnName("del_Fax");
            entity.Property(e => e.DelInitials)
                .HasMaxLength(10)
                .HasColumnName("del_Initials");
            entity.Property(e => e.DelLandcode)
                .HasMaxLength(3)
                .IsFixedLength()
                .HasColumnName("del_landcode");
            entity.Property(e => e.DelPhone)
                .HasMaxLength(50)
                .HasColumnName("del_Phone");
            entity.Property(e => e.DelPostCode)
                .HasMaxLength(20)
                .HasColumnName("del_PostCode");
            entity.Property(e => e.DelPredcode)
                .HasMaxLength(4)
                .IsFixedLength()
                .HasColumnName("del_predcode");
            entity.Property(e => e.DelStateCode)
                .HasMaxLength(3)
                .IsFixedLength()
                .HasColumnName("del_StateCode");
            entity.Property(e => e.Einddebnr)
                .HasMaxLength(6)
                .IsFixedLength()
                .HasColumnName("einddebnr");
            entity.Property(e => e.ExArtcode)
                .HasMaxLength(2)
                .IsFixedLength()
                .HasColumnName("ex_artcode");
            entity.Property(e => e.Fakdebnr)
                .HasMaxLength(6)
                .IsFixedLength()
                .HasColumnName("fakdebnr");
            entity.Property(e => e.FaktCode)
                .HasMaxLength(3)
                .IsFixedLength()
                .HasColumnName("fakt_code");
            entity.Property(e => e.Industrie)
                .HasMaxLength(1)
                .IsFixedLength()
                .HasColumnName("industrie");
            entity.Property(e => e.InvAddressLine1)
                .HasMaxLength(100)
                .HasColumnName("inv_AddressLine1");
            entity.Property(e => e.InvAddressLine2)
                .HasMaxLength(100)
                .HasColumnName("inv_AddressLine2");
            entity.Property(e => e.InvAddressLine3)
                .HasMaxLength(100)
                .HasColumnName("inv_AddressLine3");
            entity.Property(e => e.InvCity)
                .HasMaxLength(100)
                .HasColumnName("inv_City");
            entity.Property(e => e.InvCntJobDesc)
                .HasMaxLength(50)
                .HasColumnName("inv_cnt_job_desc");
            entity.Property(e => e.InvContactperson)
                .HasMaxLength(100)
                .HasColumnName("inv_contactperson");
            entity.Property(e => e.InvDebtorName)
                .HasMaxLength(50)
                .HasColumnName("inv_debtor_name");
            entity.Property(e => e.InvFax)
                .HasMaxLength(50)
                .HasColumnName("inv_Fax");
            entity.Property(e => e.InvInVv).HasColumnName("inv_in_vv");
            entity.Property(e => e.InvInitials)
                .HasMaxLength(10)
                .HasColumnName("inv_Initials");
            entity.Property(e => e.InvLandcode)
                .HasMaxLength(3)
                .IsFixedLength()
                .HasColumnName("inv_landcode");
            entity.Property(e => e.InvPhone)
                .HasMaxLength(50)
                .HasColumnName("inv_Phone");
            entity.Property(e => e.InvPostCode)
                .HasMaxLength(20)
                .HasColumnName("inv_PostCode");
            entity.Property(e => e.InvPredcode)
                .HasMaxLength(4)
                .IsFixedLength()
                .HasColumnName("inv_predcode");
            entity.Property(e => e.InvStateCode)
                .HasMaxLength(3)
                .IsFixedLength()
                .HasColumnName("inv_StateCode");
            entity.Property(e => e.IsoTaalcd)
                .HasMaxLength(3)
                .IsFixedLength()
                .HasColumnName("iso_taalcd");
            entity.Property(e => e.IsoTaalcdF)
                .HasMaxLength(3)
                .IsFixedLength()
                .HasColumnName("iso_taalcd_f");
            entity.Property(e => e.Koers).HasColumnName("koers");
            entity.Property(e => e.Kstplcode)
                .HasMaxLength(8)
                .IsFixedLength()
                .HasColumnName("kstplcode");
            entity.Property(e => e.Levwijze)
                .HasMaxLength(5)
                .IsFixedLength()
                .HasColumnName("levwijze");
            entity.Property(e => e.Magcode)
                .HasMaxLength(4)
                .IsFixedLength()
                .HasColumnName("magcode");
            entity.Property(e => e.NettoGew).HasColumnName("netto_gew");
            entity.Property(e => e.Nettoprijs).HasColumnName("nettoprijs");
            entity.Property(e => e.OrdAddressLine1)
                .HasMaxLength(100)
                .HasColumnName("ord_AddressLine1");
            entity.Property(e => e.OrdAddressLine2)
                .HasMaxLength(100)
                .HasColumnName("ord_AddressLine2");
            entity.Property(e => e.OrdAddressLine3)
                .HasMaxLength(100)
                .HasColumnName("ord_AddressLine3");
            entity.Property(e => e.OrdCity)
                .HasMaxLength(100)
                .HasColumnName("ord_City");
            entity.Property(e => e.OrdCntJobDesc)
                .HasMaxLength(50)
                .HasColumnName("ord_cnt_job_desc");
            entity.Property(e => e.OrdContactperson)
                .HasMaxLength(100)
                .HasColumnName("ord_contactperson");
            entity.Property(e => e.OrdDebtorName)
                .HasMaxLength(50)
                .HasColumnName("ord_debtor_name");
            entity.Property(e => e.OrdFax)
                .HasMaxLength(50)
                .HasColumnName("ord_Fax");
            entity.Property(e => e.OrdInitials)
                .HasMaxLength(10)
                .HasColumnName("ord_Initials");
            entity.Property(e => e.OrdLandcode)
                .HasMaxLength(3)
                .IsFixedLength()
                .HasColumnName("ord_landcode");
            entity.Property(e => e.OrdPhone)
                .HasMaxLength(50)
                .HasColumnName("ord_Phone");
            entity.Property(e => e.OrdPostCode)
                .HasMaxLength(20)
                .HasColumnName("ord_PostCode");
            entity.Property(e => e.OrdPredcode)
                .HasMaxLength(4)
                .IsFixedLength()
                .HasColumnName("ord_predcode");
            entity.Property(e => e.OrdSoort)
                .HasMaxLength(1)
                .IsFixedLength()
                .HasColumnName("ord_soort");
            entity.Property(e => e.OrdStateCode)
                .HasMaxLength(3)
                .IsFixedLength()
                .HasColumnName("ord_StateCode");
            entity.Property(e => e.Orddat)
                .HasColumnType("datetime")
                .HasColumnName("orddat");
            entity.Property(e => e.OrderKort).HasColumnName("order_kort");
            entity.Property(e => e.Orderkost).HasColumnName("orderkost");
            entity.Property(e => e.Ordernr)
                .HasMaxLength(8)
                .IsFixedLength()
                .HasColumnName("ordernr");
            entity.Property(e => e.PrafDebnr)
                .HasMaxLength(6)
                .IsFixedLength()
                .HasColumnName("praf_debnr");
            entity.Property(e => e.PrafEval)
                .HasMaxLength(1)
                .IsFixedLength()
                .HasColumnName("praf_eval");
            entity.Property(e => e.ProdOrder)
                .HasMaxLength(12)
                .HasColumnName("prod_order");
            entity.Property(e => e.Refer)
                .HasMaxLength(20)
                .HasColumnName("refer");
            entity.Property(e => e.Refer1)
                .HasMaxLength(20)
                .HasColumnName("refer1");
            entity.Property(e => e.Refer2)
                .HasMaxLength(20)
                .HasColumnName("refer2");
            entity.Property(e => e.Refer3)
                .HasMaxLength(20)
                .HasColumnName("refer3");
            entity.Property(e => e.RepresentId).HasColumnName("represent_id");
            entity.Property(e => e.Routecode)
                .HasMaxLength(2)
                .IsFixedLength()
                .HasColumnName("routecode");
            entity.Property(e => e.Selcode)
                .HasMaxLength(2)
                .IsFixedLength()
                .HasColumnName("selcode");
            entity.Property(e => e.StatCode)
                .HasMaxLength(1)
                .IsFixedLength()
                .HasColumnName("stat_code");
            entity.Property(e => e.Syscreated)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("syscreated");
            entity.Property(e => e.Syscreator).HasColumnName("syscreator");
            entity.Property(e => e.Sysguid)
                .HasDefaultValueSql("(newid())")
                .HasColumnName("sysguid");
            entity.Property(e => e.Sysmodified)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("sysmodified");
            entity.Property(e => e.Sysmodifier).HasColumnName("sysmodifier");
            entity.Property(e => e.Timestamp)
                .IsRowVersion()
                .IsConcurrencyToken()
                .HasColumnName("timestamp");
            entity.Property(e => e.TypeProd)
                .HasMaxLength(1)
                .IsFixedLength()
                .HasColumnName("type_prod");
            entity.Property(e => e.UserId)
                .HasMaxLength(8)
                .IsFixedLength()
                .HasColumnName("user_id");
            entity.Property(e => e.Valcode)
                .HasMaxLength(3)
                .IsFixedLength()
                .HasColumnName("valcode");
            entity.Property(e => e.Verzdebnr)
                .HasMaxLength(6)
                .IsFixedLength()
                .HasColumnName("verzdebnr");
            entity.Property(e => e.Vrachtkost).HasColumnName("vrachtkost");
            entity.Property(e => e.VrzAdrcd)
                .HasMaxLength(6)
                .IsFixedLength()
                .HasColumnName("vrz_adrcd");
            entity.Property(e => e.VrzAdrnr)
                .HasMaxLength(10)
                .IsFixedLength()
                .HasColumnName("vrz_adrnr");
        });

        modelBuilder.Entity<Orvsrg>(entity =>
        {
            entity.HasKey(e => e.Id).IsClustered(false);

            entity.ToTable("orvsrg");

            entity.HasIndex(e => new { e.Ordernr, e.Regel }, "orvsrg")
                .IsUnique()
                .IsClustered();

            entity.Property(e => e.Id).HasColumnName("ID");
            entity.Property(e => e.Affiliates)
                .HasMaxLength(1)
                .IsFixedLength()
                .HasColumnName("affiliates");
            entity.Property(e => e.AflWeek)
                .HasMaxLength(2)
                .IsFixedLength()
                .HasColumnName("afl_week");
            entity.Property(e => e.Afldat)
                .HasColumnType("datetime")
                .HasColumnName("afldat");
            entity.Property(e => e.ArSoort)
                .HasMaxLength(1)
                .IsFixedLength()
                .HasColumnName("ar_soort");
            entity.Property(e => e.Artcode)
                .HasMaxLength(30)
                .HasColumnName("artcode");
            entity.Property(e => e.Boecode)
                .HasMaxLength(2)
                .IsFixedLength()
                .HasColumnName("boecode");
            entity.Property(e => e.Breedte).HasColumnName("breedte");
            entity.Property(e => e.BtwCode)
                .HasMaxLength(3)
                .IsFixedLength()
                .HasColumnName("btw_code");
            entity.Property(e => e.Container).HasColumnName("container");
            entity.Property(e => e.Csacode)
                .HasMaxLength(1)
                .IsFixedLength()
                .HasColumnName("csacode");
            entity.Property(e => e.Dimensie)
                .HasMaxLength(3)
                .IsFixedLength()
                .HasColumnName("dimensie");
            entity.Property(e => e.EsrAantal).HasColumnName("esr_aantal");
            entity.Property(e => e.Explsrtart)
                .HasMaxLength(1)
                .IsFixedLength()
                .HasColumnName("explsrtart");
            entity.Property(e => e.ExtraPr).HasColumnName("extra_pr");
            entity.Property(e => e.GewichtBi).HasColumnName("gewicht_bi");
            entity.Property(e => e.GipTekst).HasColumnName("gip_tekst");
            entity.Property(e => e.Hoogte).HasColumnName("hoogte");
            entity.Property(e => e.Industrie)
                .HasMaxLength(1)
                .IsFixedLength()
                .HasColumnName("industrie");
            entity.Property(e => e.IntRegio)
                .HasMaxLength(10)
                .IsFixedLength()
                .HasColumnName("int_regio");
            entity.Property(e => e.IntraLvcd)
                .HasMaxLength(10)
                .IsFixedLength()
                .HasColumnName("intra_lvcd");
            entity.Property(e => e.Korting).HasColumnName("korting");
            entity.Property(e => e.Kstdrcode)
                .HasMaxLength(8)
                .IsFixedLength()
                .HasColumnName("kstdrcode");
            entity.Property(e => e.Kstplcode)
                .HasMaxLength(8)
                .IsFixedLength()
                .HasColumnName("kstplcode");
            entity.Property(e => e.Kstsrt)
                .HasMaxLength(8)
                .IsFixedLength()
                .HasColumnName("kstsrt");
            entity.Property(e => e.LandIso)
                .HasMaxLength(3)
                .IsFixedLength()
                .HasColumnName("land_iso");
            entity.Property(e => e.Landabc)
                .HasMaxLength(3)
                .IsFixedLength()
                .HasColumnName("landabc");
            entity.Property(e => e.Landbest)
                .HasMaxLength(3)
                .IsFixedLength()
                .HasColumnName("landbest");
            entity.Property(e => e.Landherk)
                .HasMaxLength(3)
                .IsFixedLength()
                .HasColumnName("landherk");
            entity.Property(e => e.Landoorspr)
                .HasMaxLength(3)
                .IsFixedLength()
                .HasColumnName("landoorspr");
            entity.Property(e => e.Lengte).HasColumnName("lengte");
            entity.Property(e => e.Magcode)
                .HasMaxLength(4)
                .IsFixedLength()
                .HasColumnName("magcode");
            entity.Property(e => e.Oms45)
                .HasMaxLength(45)
                .HasColumnName("oms45");
            entity.Property(e => e.Oms45F)
                .HasMaxLength(45)
                .HasColumnName("oms45_f");
            entity.Property(e => e.Ordernr)
                .HasMaxLength(8)
                .IsFixedLength()
                .HasColumnName("ordernr");
            entity.Property(e => e.PltsLl)
                .HasMaxLength(10)
                .IsFixedLength()
                .HasColumnName("plts_ll");
            entity.Property(e => e.PrAant).HasColumnName("pr_aant");
            entity.Property(e => e.PrBedr).HasColumnName("pr_bedr");
            entity.Property(e => e.PrKstpl)
                .HasMaxLength(8)
                .IsFixedLength()
                .HasColumnName("pr_kstpl");
            entity.Property(e => e.PrafReg)
                .HasMaxLength(1)
                .IsFixedLength()
                .HasColumnName("praf_reg");
            entity.Property(e => e.Prijs83).HasColumnName("prijs83");
            entity.Property(e => e.PrijsN).HasColumnName("prijs_n");
            entity.Property(e => e.Prijslijst)
                .HasMaxLength(15)
                .HasColumnName("prijslijst");
            entity.Property(e => e.ProdOrder)
                .HasMaxLength(12)
                .HasColumnName("prod_order");
            entity.Property(e => e.Project)
                .HasMaxLength(8)
                .IsFixedLength()
                .HasColumnName("project");
            entity.Property(e => e.Prshisnr)
                .HasMaxLength(8)
                .IsFixedLength()
                .HasColumnName("prshisnr");
            entity.Property(e => e.Regel)
                .HasMaxLength(4)
                .IsFixedLength()
                .HasColumnName("regel");
            entity.Property(e => e.StateenhI).HasColumnName("stateenh_i");
            entity.Property(e => e.Statistnr)
                .HasMaxLength(9)
                .IsFixedLength()
                .HasColumnName("statistnr");
            entity.Property(e => e.Stelsel)
                .HasMaxLength(10)
                .IsFixedLength()
                .HasColumnName("stelsel");
            entity.Property(e => e.Syscreated)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("syscreated");
            entity.Property(e => e.Syscreator).HasColumnName("syscreator");
            entity.Property(e => e.Sysguid)
                .HasDefaultValueSql("(newid())")
                .HasColumnName("sysguid");
            entity.Property(e => e.Sysmodified)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("sysmodified");
            entity.Property(e => e.Sysmodifier).HasColumnName("sysmodifier");
            entity.Property(e => e.Taric)
                .HasMaxLength(2)
                .IsFixedLength()
                .HasColumnName("taric");
            entity.Property(e => e.Timestamp)
                .IsRowVersion()
                .IsConcurrencyToken()
                .HasColumnName("timestamp");
            entity.Property(e => e.TransactA)
                .HasMaxLength(10)
                .IsFixedLength()
                .HasColumnName("transact_a");
            entity.Property(e => e.TransactB)
                .HasMaxLength(10)
                .IsFixedLength()
                .HasColumnName("transact_b");
            entity.Property(e => e.TrsshpmCd)
                .HasMaxLength(10)
                .IsFixedLength()
                .HasColumnName("trsshpm_cd");
            entity.Property(e => e.Vervoer)
                .HasMaxLength(10)
                .IsFixedLength()
                .HasColumnName("vervoer");
        });

        modelBuilder.Entity<Orvstx>(entity =>
        {
            entity.HasKey(e => e.Id).IsClustered(false);

            entity.ToTable("orvstx");

            entity.HasIndex(e => new { e.Ordernr, e.Regel }, "orvstx")
                .IsUnique()
                .IsClustered();

            entity.Property(e => e.Id).HasColumnName("ID");
            entity.Property(e => e.Ordernr)
                .HasMaxLength(8)
                .IsFixedLength()
                .HasColumnName("ordernr");
            entity.Property(e => e.Regel)
                .HasMaxLength(4)
                .IsFixedLength()
                .HasColumnName("regel");
            entity.Property(e => e.Reknr)
                .HasMaxLength(9)
                .IsFixedLength()
                .HasColumnName("reknr");
            entity.Property(e => e.Syscreated)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("syscreated");
            entity.Property(e => e.Syscreator).HasColumnName("syscreator");
            entity.Property(e => e.Sysguid)
                .HasDefaultValueSql("(newid())")
                .HasColumnName("sysguid");
            entity.Property(e => e.Sysmodified)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("sysmodified");
            entity.Property(e => e.Sysmodifier).HasColumnName("sysmodifier");
            entity.Property(e => e.Tekst)
                .HasMaxLength(160)
                .HasColumnName("tekst");
            entity.Property(e => e.Timestamp)
                .IsRowVersion()
                .IsConcurrencyToken()
                .HasColumnName("timestamp");
        });

        modelBuilder.Entity<OutstandingTerm>(entity =>
        {
            entity.HasKey(e => e.Id).IsClustered(false);

            entity.HasIndex(e => new { e.CompanyCode, e.DebtorNumber }, "IX_OutstandingTerms_DivisionDebtor").IsClustered();

            entity.Property(e => e.Id)
                .HasDefaultValueSql("(newid())")
                .HasColumnName("ID");
            entity.Property(e => e.AmountDc)
                .HasDefaultValue(0.0)
                .HasColumnName("AmountDC");
            entity.Property(e => e.AmountTc)
                .HasDefaultValue(0.0)
                .HasColumnName("AmountTC");
            entity.Property(e => e.Blocked).HasDefaultValue(false);
            entity.Property(e => e.Bttimestamp)
                .HasMaxLength(8)
                .IsFixedLength()
                .HasColumnName("BTtimestamp");
            entity.Property(e => e.CompanyCode)
                .HasMaxLength(3)
                .IsFixedLength();
            entity.Property(e => e.DebtorNumber)
                .HasMaxLength(6)
                .IsFixedLength();
            entity.Property(e => e.DueDate).HasColumnType("datetime");
            entity.Property(e => e.Gbtimestamp)
                .HasMaxLength(8)
                .IsFixedLength()
                .HasColumnName("GBtimestamp");
            entity.Property(e => e.InvoiceDate).HasColumnType("datetime");
            entity.Property(e => e.InvoiceNumber).HasMaxLength(30);
            entity.Property(e => e.LastReminderDate).HasColumnType("datetime");
            entity.Property(e => e.PaymentCondition)
                .HasMaxLength(2)
                .IsFixedLength();
            entity.Property(e => e.PaymentDate).HasColumnType("datetime");
            entity.Property(e => e.ReminderLayout).HasDefaultValue(0);
            entity.Property(e => e.StatementType)
                .HasMaxLength(1)
                .IsFixedLength();
            entity.Property(e => e.SupplierInvoiceNumber).HasMaxLength(40);
            entity.Property(e => e.Syscreated)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("syscreated");
            entity.Property(e => e.Syscreator).HasColumnName("syscreator");
            entity.Property(e => e.Sysguid).HasColumnName("sysguid");
            entity.Property(e => e.Tccode)
                .HasMaxLength(3)
                .IsFixedLength()
                .HasColumnName("TCCode");
            entity.Property(e => e.TermId).HasColumnName("TermID");
            entity.Property(e => e.TransactionType)
                .HasMaxLength(1)
                .IsFixedLength();
            entity.Property(e => e.Type)
                .HasMaxLength(1)
                .IsFixedLength();
        });

        modelBuilder.Entity<OutstandingTermLink>(entity =>
        {
            entity.HasKey(e => e.Id).IsClustered(false);

            entity.HasIndex(e => e.TermGuid, "IX_OutstandingTermLinks_TermGuid").IsClustered();

            entity.Property(e => e.Id)
                .HasDefaultValueSql("(newid())")
                .HasColumnName("ID");
            entity.Property(e => e.Bttimestamp)
                .HasMaxLength(8)
                .IsFixedLength()
                .HasColumnName("BTtimestamp");
            entity.Property(e => e.Gbtimestamp)
                .HasMaxLength(8)
                .IsFixedLength()
                .HasColumnName("GBtimestamp");
        });

        modelBuilder.Entity<PartnerActivation>(entity =>
        {
            entity.HasKey(e => e.ActivationId);

            entity.ToTable("PartnerActivation");

            entity.Property(e => e.ActivationId)
                .ValueGeneratedNever()
                .HasColumnName("activationID");
            entity.Property(e => e.ActDate)
                .HasColumnType("datetime")
                .HasColumnName("actDate");
            entity.Property(e => e.ActIsNew)
                .HasDefaultValue(true)
                .HasColumnName("actIsNew");
            entity.Property(e => e.ActKey)
                .HasMaxLength(50)
                .HasColumnName("actKey");
            entity.Property(e => e.ActStatus)
                .HasDefaultValue((short)10)
                .HasColumnName("actStatus");
            entity.Property(e => e.ActivationId2)
                .HasMaxLength(12)
                .IsFixedLength()
                .HasColumnName("activationID2");
            entity.Property(e => e.LogId).HasColumnName("logID");
            entity.Property(e => e.PrevActivationId).HasColumnName("prevActivationID");
            entity.Property(e => e.Syscreated)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("syscreated");
            entity.Property(e => e.Syscreator).HasColumnName("syscreator");
            entity.Property(e => e.Sysmodified)
                .HasColumnType("datetime")
                .HasColumnName("sysmodified");
            entity.Property(e => e.Sysmodifier).HasColumnName("sysmodifier");
            entity.Property(e => e.TotalLog).HasColumnName("totalLog");
            entity.Property(e => e.TotalRequest).HasColumnName("totalRequest");
        });

        modelBuilder.Entity<PartnerActivationLog>(entity =>
        {
            entity.HasKey(e => e.ActlogId);

            entity.ToTable("PartnerActivationLog");

            entity.Property(e => e.ActlogId)
                .ValueGeneratedNever()
                .HasColumnName("actlogID");
            entity.Property(e => e.ActlogCode)
                .HasDefaultValueSql("(NEXT VALUE FOR [SEQ_actlogCode])")
                .HasColumnName("actlogCode");
            entity.Property(e => e.ActrequestId).HasColumnName("actrequestID");
            entity.Property(e => e.AppliedLogId).HasColumnName("appliedLogID");
            entity.Property(e => e.NextActivationId).HasColumnName("nextActivationID");
            entity.Property(e => e.NextLogId).HasColumnName("nextLogID");
            entity.Property(e => e.Syscreated)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("syscreated");
            entity.Property(e => e.Syscreator).HasColumnName("syscreator");
        });

        modelBuilder.Entity<PartnerActivationRequest>(entity =>
        {
            entity.HasKey(e => e.ActrequestId);

            entity.ToTable("PartnerActivationRequest");

            entity.Property(e => e.ActrequestId)
                .ValueGeneratedNever()
                .HasColumnName("actrequestID");
            entity.Property(e => e.ActivationId).HasColumnName("activationID");
            entity.Property(e => e.ActrequestCode)
                .HasDefaultValueSql("(NEXT VALUE FOR [SEQ_actrequestCode])")
                .HasColumnName("actrequestCode");
            entity.Property(e => e.DbName)
                .HasMaxLength(100)
                .HasColumnName("dbName");
            entity.Property(e => e.DbServer)
                .HasMaxLength(300)
                .HasColumnName("dbServer");
            entity.Property(e => e.HumresId).HasColumnName("humresID");
            entity.Property(e => e.ReqStatus)
                .HasDefaultValue((short)10)
                .HasColumnName("reqStatus");
            entity.Property(e => e.RequestId).HasColumnName("requestID");
            entity.Property(e => e.Syscreated)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("syscreated");
            entity.Property(e => e.Syscreator).HasColumnName("syscreator");
            entity.Property(e => e.Sysmodified)
                .HasColumnType("datetime")
                .HasColumnName("sysmodified");
            entity.Property(e => e.Sysmodifier).HasColumnName("sysmodifier");
            entity.Property(e => e.TotalLog).HasColumnName("totalLog");
        });

        modelBuilder.Entity<PayrollPlusCategory>(entity =>
        {
            entity.HasKey(e => e.Code);

            entity.Property(e => e.Code).ValueGeneratedNever();
            entity.Property(e => e.Description).HasMaxLength(40);
            entity.Property(e => e.Id)
                .ValueGeneratedOnAdd()
                .HasColumnName("ID");
            entity.Property(e => e.Syscreated)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("syscreated");
            entity.Property(e => e.Syscreator).HasColumnName("syscreator");
            entity.Property(e => e.Sysmodified)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("sysmodified");
            entity.Property(e => e.Sysmodifier).HasColumnName("sysmodifier");
        });

        modelBuilder.Entity<PayrollPlusComponent>(entity =>
        {
            entity.HasKey(e => e.Code);

            entity.Property(e => e.Code).ValueGeneratedNever();
            entity.Property(e => e.Description).HasMaxLength(50);
            entity.Property(e => e.Id)
                .ValueGeneratedOnAdd()
                .HasColumnName("ID");
            entity.Property(e => e.Syscreated)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("syscreated");
            entity.Property(e => e.Syscreator).HasColumnName("syscreator");
            entity.Property(e => e.Sysmodified)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("sysmodified");
            entity.Property(e => e.Sysmodifier).HasColumnName("sysmodifier");
        });

        modelBuilder.Entity<PayrollPlusDepartment>(entity =>
        {
            entity.HasKey(e => e.DepartmentId);

            entity.Property(e => e.DepartmentId)
                .ValueGeneratedNever()
                .HasColumnName("DepartmentID");
            entity.Property(e => e.Description).HasMaxLength(40);
            entity.Property(e => e.Id)
                .ValueGeneratedOnAdd()
                .HasColumnName("ID");
            entity.Property(e => e.Syscreated)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("syscreated");
            entity.Property(e => e.Syscreator).HasColumnName("syscreator");
            entity.Property(e => e.Sysmodified)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("sysmodified");
            entity.Property(e => e.Sysmodifier).HasColumnName("sysmodifier");
        });

        modelBuilder.Entity<PayrollPlusEmployee>(entity =>
        {
            entity.HasIndex(e => new { e.ResourceId, e.StartDate }, "IX_PayrollPlusEmployees");

            entity.Property(e => e.Id).HasColumnName("ID");
            entity.Property(e => e.DepartmentId).HasColumnName("DepartmentID");
            entity.Property(e => e.EndDate).HasColumnType("datetime");
            entity.Property(e => e.FunctionId).HasColumnName("FunctionID");
            entity.Property(e => e.ResourceId).HasColumnName("ResourceID");
            entity.Property(e => e.StartDate)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime");
            entity.Property(e => e.Syscreated)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("syscreated");
            entity.Property(e => e.Syscreator).HasColumnName("syscreator");
            entity.Property(e => e.Sysmodified)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("sysmodified");
            entity.Property(e => e.Sysmodifier).HasColumnName("sysmodifier");
        });

        modelBuilder.Entity<PayrollPlusEmployerCost>(entity =>
        {
            entity.HasKey(e => e.Code);

            entity.Property(e => e.Code).ValueGeneratedNever();
            entity.Property(e => e.Description).HasMaxLength(50);
            entity.Property(e => e.Id)
                .ValueGeneratedOnAdd()
                .HasColumnName("ID");
            entity.Property(e => e.TermId).HasColumnName("TermID");
        });

        modelBuilder.Entity<PayrollPlusFunction>(entity =>
        {
            entity.HasKey(e => e.FunctionId);

            entity.Property(e => e.FunctionId)
                .ValueGeneratedNever()
                .HasColumnName("FunctionID");
            entity.Property(e => e.Description).HasMaxLength(40);
            entity.Property(e => e.Id)
                .ValueGeneratedOnAdd()
                .HasColumnName("ID");
            entity.Property(e => e.Syscreated)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("syscreated");
            entity.Property(e => e.Syscreator).HasColumnName("syscreator");
            entity.Property(e => e.Sysmodified)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("sysmodified");
            entity.Property(e => e.Sysmodifier).HasColumnName("sysmodifier");
        });

        modelBuilder.Entity<PayrollPlusWageResult>(entity =>
        {
            entity.HasIndex(e => new { e.ResourceId, e.WageYear, e.ComponentCode, e.PayrollNo }, "IX_PayrollPlusWageResults");

            entity.HasIndex(e => new { e.ClientNumber, e.RunYear, e.RunPeriod, e.RunSequence }, "IX_PayrollPlusWageResultsClientNumber");

            entity.Property(e => e.Id).HasColumnName("ID");
            entity.Property(e => e.DepartmentId).HasColumnName("DepartmentID");
            entity.Property(e => e.FunctionId).HasColumnName("FunctionID");
            entity.Property(e => e.ResourceId).HasColumnName("ResourceID");
            entity.Property(e => e.Syscreated)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("syscreated");
            entity.Property(e => e.Syscreator).HasColumnName("syscreator");
            entity.Property(e => e.Sysmodified)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("sysmodified");
            entity.Property(e => e.Sysmodifier).HasColumnName("sysmodifier");
        });

        modelBuilder.Entity<Perdat>(entity =>
        {
            entity.HasKey(e => e.Id).IsClustered(false);

            entity.ToTable("perdat");

            entity.HasIndex(e => e.Eddatum, "IX_perdat_EndDate");

            entity.HasIndex(e => new { e.CompanyCode, e.Bkjrcode, e.PerFin }, "IX_perdat_YearPeriod")
                .IsUnique()
                .IsClustered();

            entity.Property(e => e.Id).HasColumnName("ID");
            entity.Property(e => e.Bgdatum)
                .HasColumnType("datetime")
                .HasColumnName("bgdatum");
            entity.Property(e => e.Bkjrcode).HasColumnName("bkjrcode");
            entity.Property(e => e.CompanyCode)
                .HasMaxLength(3)
                .IsFixedLength();
            entity.Property(e => e.Eddatum)
                .HasColumnType("datetime")
                .HasColumnName("eddatum");
            entity.Property(e => e.GroupId).HasColumnName("GroupID");
            entity.Property(e => e.Nlcmwd).HasColumnName("NLCMWD");
            entity.Property(e => e.PerFin)
                .HasMaxLength(3)
                .IsFixedLength()
                .HasColumnName("per_fin");
            entity.Property(e => e.Syscreated)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("syscreated");
            entity.Property(e => e.Syscreator).HasColumnName("syscreator");
            entity.Property(e => e.Sysguid)
                .HasDefaultValueSql("(newid())")
                .HasColumnName("sysguid");
            entity.Property(e => e.Sysmodified)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("sysmodified");
            entity.Property(e => e.Sysmodifier).HasColumnName("sysmodifier");
            entity.Property(e => e.Timestamp)
                .IsRowVersion()
                .IsConcurrencyToken()
                .HasColumnName("timestamp");
        });

        modelBuilder.Entity<PeriodMap>(entity =>
        {
            entity.HasNoKey();

            entity.HasIndex(e => new { e.ParentGroupId, e.ParentId, e.SubGroupId, e.SubId }, "IX_PeriodMaps")
                .IsUnique()
                .IsClustered();

            entity.Property(e => e.Created)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime");
            entity.Property(e => e.Modified)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime");
            entity.Property(e => e.ParentGroupId).HasColumnName("ParentGroupID");
            entity.Property(e => e.ParentId).HasColumnName("ParentID");
            entity.Property(e => e.SubGroupId).HasColumnName("SubGroupID");
            entity.Property(e => e.SubId).HasColumnName("SubID");
        });

        modelBuilder.Entity<PeriodsHrmpivotAnalysis>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("PeriodsHRMPivotAnalysis");

            entity.HasIndex(e => e.Id, "IX_PeriodsHRMPivotAnalysis_ID").IsClustered();

            entity.HasIndex(e => new { e.Period, e.SessionId }, "IX_PeriodsHRMPivotAnalysis_PeriodSession");

            entity.Property(e => e.Description).HasMaxLength(60);
            entity.Property(e => e.EndDate).HasColumnType("datetime");
            entity.Property(e => e.Id)
                .ValueGeneratedOnAdd()
                .HasColumnName("ID");
            entity.Property(e => e.SessionId)
                .HasMaxLength(36)
                .IsUnicode(false)
                .HasDefaultValue("")
                .HasColumnName("session_id");
            entity.Property(e => e.StartDate).HasColumnType("datetime");
        });

        modelBuilder.Entity<Person>(entity =>
        {
            entity.HasIndex(e => e.LastName, "IX_Persons_LastName");

            entity.Property(e => e.Id)
                .HasDefaultValueSql("(newid())")
                .HasColumnName("ID");
            entity.Property(e => e.Affix).HasMaxLength(64);
            entity.Property(e => e.BirthAffix).HasMaxLength(64);
            entity.Property(e => e.BirthCity).HasMaxLength(100);
            entity.Property(e => e.BirthCountry)
                .HasMaxLength(3)
                .IsFixedLength();
            entity.Property(e => e.BirthDate).HasColumnType("datetime");
            entity.Property(e => e.BirthLastName).HasMaxLength(50);
            entity.Property(e => e.BirthMiddleName).HasMaxLength(30);
            entity.Property(e => e.BirthSuffix).HasMaxLength(64);
            entity.Property(e => e.FirstName).HasMaxLength(30);
            entity.Property(e => e.Gender)
                .HasMaxLength(1)
                .HasDefaultValue("U")
                .IsFixedLength();
            entity.Property(e => e.Initials).HasMaxLength(10);
            entity.Property(e => e.Language)
                .HasMaxLength(3)
                .IsFixedLength();
            entity.Property(e => e.LastName).HasMaxLength(50);
            entity.Property(e => e.LinkedIn).HasMaxLength(128);
            entity.Property(e => e.MiddleName).HasMaxLength(30);
            entity.Property(e => e.Msn)
                .HasMaxLength(128)
                .HasColumnName("MSN");
            entity.Property(e => e.Nationality)
                .HasMaxLength(3)
                .IsFixedLength();
            entity.Property(e => e.PictureFileName).HasMaxLength(128);
            entity.Property(e => e.Skype).HasMaxLength(128);
            entity.Property(e => e.SocialSecurityNumber).HasMaxLength(50);
            entity.Property(e => e.Suffix).HasMaxLength(64);
            entity.Property(e => e.Syscreated)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime");
            entity.Property(e => e.Sysguid).HasDefaultValueSql("(newid())");
            entity.Property(e => e.Sysmodified)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime");
            entity.Property(e => e.Timestamp)
                .IsRowVersion()
                .IsConcurrencyToken();
            entity.Property(e => e.Title)
                .HasMaxLength(4)
                .IsFixedLength();
            entity.Property(e => e.Twitter).HasMaxLength(128);
        });

        modelBuilder.Entity<PersonalDataClassification>(entity =>
        {
            entity.HasKey(e => e.Code).IsClustered(false);

            entity.ToTable("PersonalDataClassification");

            entity.HasIndex(e => e.Id, "IX_PersonalDataClassification_ID").IsClustered();

            entity.Property(e => e.Code).HasMaxLength(20);
            entity.Property(e => e.Category)
                .HasMaxLength(1)
                .IsFixedLength();
            entity.Property(e => e.Description).HasMaxLength(120);
            entity.Property(e => e.Event)
                .HasMaxLength(1)
                .IsFixedLength();
            entity.Property(e => e.Id)
                .ValueGeneratedOnAdd()
                .HasColumnName("ID");
            entity.Property(e => e.Status)
                .HasMaxLength(1)
                .IsFixedLength();
            entity.Property(e => e.Syscreated)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("syscreated");
            entity.Property(e => e.Syscreator).HasColumnName("syscreator");
            entity.Property(e => e.Sysmodified)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("sysmodified");
            entity.Property(e => e.Sysmodifier).HasColumnName("sysmodifier");
            entity.Property(e => e.TimeScale)
                .HasMaxLength(1)
                .IsFixedLength();
            entity.Property(e => e.Type)
                .HasMaxLength(1)
                .IsFixedLength();
        });

        modelBuilder.Entity<PersonalDataDocMgt>(entity =>
        {
            entity.ToTable("PersonalDataDocMgt");

            entity.HasIndex(e => new { e.ClassificationId, e.DocTypeId }, "IX_PersonalDataDocMgt_CD");

            entity.Property(e => e.Id).HasColumnName("ID");
            entity.Property(e => e.ClassificationId).HasColumnName("ClassificationID");
            entity.Property(e => e.DocTypeId).HasColumnName("DocTypeID");
            entity.Property(e => e.Syscreated)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("syscreated");
            entity.Property(e => e.Syscreator).HasColumnName("syscreator");
            entity.Property(e => e.Sysmodified)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("sysmodified");
            entity.Property(e => e.Sysmodifier).HasColumnName("sysmodifier");
        });

        modelBuilder.Entity<PersonalDataLogging>(entity =>
        {
            entity.ToTable("PersonalDataLogging");

            entity.HasIndex(e => new { e.BatchId, e.ClassificationId }, "IX_BatchID_ClassID");

            entity.Property(e => e.Id)
                .HasDefaultValueSql("(newid())")
                .HasColumnName("ID");
            entity.Property(e => e.AccountCode).HasMaxLength(20);
            entity.Property(e => e.BatchId).HasColumnName("BatchID");
            entity.Property(e => e.Category)
                .HasMaxLength(1)
                .IsFixedLength();
            entity.Property(e => e.ClassificationId).HasColumnName("ClassificationID");
            entity.Property(e => e.DateProcessed)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime");
            entity.Property(e => e.DateStarted)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime");
            entity.Property(e => e.PersonId).HasColumnName("PersonID");
        });

        modelBuilder.Entity<PersonalDataMgt>(entity =>
        {
            entity.ToTable("PersonalDataMgt");

            entity.HasIndex(e => new { e.ClassificationId, e.TableName, e.FieldName }, "IX_PersonalDataMgt_CF");

            entity.Property(e => e.Id).HasColumnName("ID");
            entity.Property(e => e.ClassificationId).HasColumnName("ClassificationID");
            entity.Property(e => e.FieldName).HasMaxLength(60);
            entity.Property(e => e.Syscreated)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("syscreated");
            entity.Property(e => e.Syscreator).HasColumnName("syscreator");
            entity.Property(e => e.Sysmodified)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("sysmodified");
            entity.Property(e => e.Sysmodifier).HasColumnName("sysmodifier");
            entity.Property(e => e.TableName).HasMaxLength(60);
        });

        modelBuilder.Entity<PersonalDataPersonMgt>(entity =>
        {
            entity.ToTable("PersonalDataPersonMgt");

            entity.HasIndex(e => new { e.ClassificationId, e.PersonGuid }, "IX_PersonalDataPersonMgt_CP");

            entity.Property(e => e.Id).HasColumnName("ID");
            entity.Property(e => e.ClassificationId).HasColumnName("ClassificationID");
            entity.Property(e => e.Syscreated)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("syscreated");
            entity.Property(e => e.Syscreator).HasColumnName("syscreator");
            entity.Property(e => e.Sysmodified)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("sysmodified");
            entity.Property(e => e.Sysmodifier).HasColumnName("sysmodifier");
        });

        modelBuilder.Entity<PersonalDataReqMgt>(entity =>
        {
            entity.ToTable("PersonalDataReqMgt");

            entity.HasIndex(e => new { e.ClassificationId, e.ReqTypeId }, "IX_PersonalDataReqMgt_CR");

            entity.Property(e => e.Id).HasColumnName("ID");
            entity.Property(e => e.ClassificationId).HasColumnName("ClassificationID");
            entity.Property(e => e.ReqTypeId).HasColumnName("ReqTypeID");
            entity.Property(e => e.Syscreated)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("syscreated");
            entity.Property(e => e.Syscreator).HasColumnName("syscreator");
            entity.Property(e => e.Sysmodified)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("sysmodified");
            entity.Property(e => e.Sysmodifier).HasColumnName("sysmodifier");
        });

        modelBuilder.Entity<PersonalItem>(entity =>
        {
            entity.HasIndex(e => new { e.ResourceId, e.ItemCode }, "IX_PersonalItems").IsUnique();

            entity.Property(e => e.Id)
                .HasDefaultValueSql("(newsequentialid())")
                .HasColumnName("ID");
            entity.Property(e => e.ItemCode).HasMaxLength(30);
            entity.Property(e => e.ResourceId).HasColumnName("ResourceID");
            entity.Property(e => e.Syscreated)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("syscreated");
            entity.Property(e => e.Syscreator).HasColumnName("syscreator");
            entity.Property(e => e.Sysmodified)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("sysmodified");
            entity.Property(e => e.Sysmodifier).HasColumnName("sysmodifier");
        });

        modelBuilder.Entity<Poll>(entity =>
        {
            entity.ToTable("Poll");

            entity.Property(e => e.Id)
                .ValueGeneratedNever()
                .HasColumnName("ID");
            entity.Property(e => e.MaxRangeLabel).HasMaxLength(90);
            entity.Property(e => e.MinRangeLabel).HasMaxLength(90);
            entity.Property(e => e.Question).HasMaxLength(100);
            entity.Property(e => e.ResultDisplayType).HasDefaultValue(1);
            entity.Property(e => e.Syscreated).HasColumnName("syscreated");
            entity.Property(e => e.Syscreator).HasColumnName("syscreator");
            entity.Property(e => e.Sysmodified).HasColumnName("sysmodified");
            entity.Property(e => e.Sysmodifier).HasColumnName("sysmodifier");
        });

        modelBuilder.Entity<PollAnswer>(entity =>
        {
            entity.ToTable("PollAnswer");

            entity.HasIndex(e => e.PollId, "IX_PollAnswer_PollID");

            entity.Property(e => e.Id)
                .ValueGeneratedNever()
                .HasColumnName("ID");
            entity.Property(e => e.Answer).HasMaxLength(90);
            entity.Property(e => e.PollId).HasColumnName("PollID");
            entity.Property(e => e.Syscreated)
                .HasColumnType("datetime")
                .HasColumnName("syscreated");
            entity.Property(e => e.Syscreator).HasColumnName("syscreator");
            entity.Property(e => e.Sysmodified)
                .HasColumnType("datetime")
                .HasColumnName("sysmodified");
            entity.Property(e => e.Sysmodifier).HasColumnName("sysmodifier");
        });

        modelBuilder.Entity<PollVote>(entity =>
        {
            entity.ToTable("PollVote");

            entity.HasIndex(e => e.AnswerId, "IX_PollVote_AnswerID");

            entity.HasIndex(e => e.PollId, "IX_PollVote_PollID");

            entity.HasIndex(e => e.ResourceId, "IX_PollVote_ResourceID");

            entity.Property(e => e.Id)
                .ValueGeneratedNever()
                .HasColumnName("ID");
            entity.Property(e => e.AnswerId).HasColumnName("AnswerID");
            entity.Property(e => e.PollId).HasColumnName("PollID");
            entity.Property(e => e.ResourceId).HasColumnName("ResourceID");
            entity.Property(e => e.Syscreated)
                .HasColumnType("datetime")
                .HasColumnName("syscreated");
            entity.Property(e => e.Syscreator).HasColumnName("syscreator");
            entity.Property(e => e.Sysmodified)
                .HasColumnType("datetime")
                .HasColumnName("sysmodified");
            entity.Property(e => e.Sysmodifier).HasColumnName("sysmodifier");
        });

        modelBuilder.Entity<Portal>(entity =>
        {
            entity.Property(e => e.Id)
                .HasDefaultValueSql("(newid())")
                .HasColumnName("ID");
            entity.Property(e => e.Description).HasMaxLength(60);
            entity.Property(e => e.EndDate).HasColumnType("datetime");
            entity.Property(e => e.Language)
                .HasMaxLength(10)
                .IsFixedLength();
            entity.Property(e => e.Priority).HasDefaultValue(1);
            entity.Property(e => e.StartDate).HasColumnType("datetime");
            entity.Property(e => e.StyleSheet).HasMaxLength(60);
            entity.Property(e => e.Syscreated)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("syscreated");
            entity.Property(e => e.Syscreator).HasColumnName("syscreator");
            entity.Property(e => e.Sysmodified)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("sysmodified");
            entity.Property(e => e.Sysmodifier).HasColumnName("sysmodifier");
            entity.Property(e => e.Title).HasMaxLength(60);
        });

        modelBuilder.Entity<PortalFrame>(entity =>
        {
            entity.HasIndex(e => e.Portal, "IX_PortalFrames_1");

            entity.Property(e => e.Id)
                .HasDefaultValueSql("(newid())")
                .HasColumnName("ID");
            entity.Property(e => e.Name).HasMaxLength(60);
            entity.Property(e => e.NewsLayout)
                .HasMaxLength(10)
                .IsFixedLength();
            entity.Property(e => e.Position).HasDefaultValue(1);
            entity.Property(e => e.Syscreated)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("syscreated");
            entity.Property(e => e.Syscreator).HasColumnName("syscreator");
            entity.Property(e => e.Sysmodified)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("sysmodified");
            entity.Property(e => e.Sysmodifier).HasColumnName("sysmodifier");
            entity.Property(e => e.Url)
                .HasMaxLength(255)
                .HasColumnName("URL");
        });

        modelBuilder.Entity<PortalUsage>(entity =>
        {
            entity.ToTable("PortalUsage");

            entity.HasIndex(e => e.Portal, "IX_PortalUsage_1");

            entity.HasIndex(e => e.NewsLayout, "IX_PortalUsage_2");

            entity.Property(e => e.Id)
                .HasDefaultValueSql("(newid())")
                .HasColumnName("ID");
            entity.Property(e => e.Classification)
                .HasMaxLength(3)
                .IsFixedLength();
            entity.Property(e => e.Costcenter)
                .HasMaxLength(8)
                .IsFixedLength();
            entity.Property(e => e.CostcenterGroup).HasMaxLength(30);
            entity.Property(e => e.Division)
                .HasMaxLength(3)
                .IsFixedLength();
            entity.Property(e => e.DivisionGroup).HasMaxLength(30);
            entity.Property(e => e.JobActivity)
                .HasMaxLength(10)
                .IsFixedLength();
            entity.Property(e => e.JobGroup)
                .HasMaxLength(10)
                .IsFixedLength();
            entity.Property(e => e.Language)
                .HasMaxLength(10)
                .IsFixedLength();
            entity.Property(e => e.NewsLayout)
                .HasMaxLength(10)
                .IsFixedLength();
            entity.Property(e => e.Sector)
                .HasMaxLength(10)
                .IsFixedLength();
            entity.Property(e => e.Syscreated)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("syscreated");
            entity.Property(e => e.Syscreator).HasColumnName("syscreator");
            entity.Property(e => e.Sysmodified)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("sysmodified");
            entity.Property(e => e.Sysmodifier).HasColumnName("sysmodifier");
        });

        modelBuilder.Entity<Pospreset>(entity =>
        {
            entity.HasKey(e => e.Id).IsClustered(false);

            entity.ToTable("pospreset");

            entity.HasIndex(e => new { e.Type, e.Code, e.Line }, "pospreset")
                .IsUnique()
                .IsClustered();

            entity.HasIndex(e => e.Sysguid, "pospresetGUID").IsUnique();

            entity.Property(e => e.Id).HasColumnName("ID");
            entity.Property(e => e.Account).HasColumnName("account");
            entity.Property(e => e.BankAccount).HasMaxLength(34);
            entity.Property(e => e.CashCount)
                .HasMaxLength(1)
                .HasDefaultValue("N")
                .IsFixedLength();
            entity.Property(e => e.Code)
                .HasMaxLength(8)
                .IsFixedLength()
                .HasColumnName("code");
            entity.Property(e => e.Coin)
                .HasMaxLength(8)
                .IsFixedLength();
            entity.Property(e => e.Fixedval)
                .HasMaxLength(255)
                .HasColumnName("fixedval");
            entity.Property(e => e.Layout)
                .HasMaxLength(8)
                .IsFixedLength();
            entity.Property(e => e.LedgerAccount)
                .HasMaxLength(9)
                .IsFixedLength();
            entity.Property(e => e.LimitType)
                .HasMaxLength(1)
                .HasDefaultValue("N")
                .IsFixedLength();
            entity.Property(e => e.Line)
                .HasMaxLength(6)
                .IsFixedLength()
                .HasColumnName("line");
            entity.Property(e => e.Oms300)
                .HasMaxLength(30)
                .HasColumnName("oms30_0");
            entity.Property(e => e.Oms301)
                .HasMaxLength(30)
                .HasColumnName("oms30_1");
            entity.Property(e => e.Oms302)
                .HasMaxLength(30)
                .HasColumnName("oms30_2");
            entity.Property(e => e.Oms303)
                .HasMaxLength(30)
                .HasColumnName("oms30_3");
            entity.Property(e => e.Oms304)
                .HasMaxLength(30)
                .HasColumnName("oms30_4");
            entity.Property(e => e.PaymentType)
                .HasMaxLength(1)
                .HasDefaultValue("P")
                .IsFixedLength();
            entity.Property(e => e.Posfunction).HasColumnName("posfunction");
            entity.Property(e => e.RoleId).HasColumnName("RoleID");
            entity.Property(e => e.Shift).HasColumnName("shift");
            entity.Property(e => e.Shiftkeys).HasColumnName("shiftkeys");
            entity.Property(e => e.Syscreated)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("syscreated");
            entity.Property(e => e.Syscreator).HasColumnName("syscreator");
            entity.Property(e => e.Sysguid)
                .HasDefaultValueSql("(newid())")
                .HasColumnName("sysguid");
            entity.Property(e => e.Sysmodified)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("sysmodified");
            entity.Property(e => e.Sysmodifier).HasColumnName("sysmodifier");
            entity.Property(e => e.Type)
                .HasMaxLength(1)
                .IsFixedLength();
            entity.Property(e => e.Valcode)
                .HasMaxLength(3)
                .IsFixedLength()
                .HasColumnName("valcode");
            entity.Property(e => e.Vbkey).HasColumnName("vbkey");
        });

        modelBuilder.Entity<Prafd>(entity =>
        {
            entity.HasKey(e => e.Id)
                .HasName("PK__prafd__3214EC264CED2793")
                .IsClustered(false);

            entity.ToTable("prafd");

            entity.HasIndex(e => e.PrafdCode, "prafd")
                .IsUnique()
                .IsClustered();

            entity.Property(e => e.Id).HasColumnName("ID");
            entity.Property(e => e.Kstplcode)
                .HasMaxLength(8)
                .IsFixedLength()
                .HasColumnName("kstplcode");
            entity.Property(e => e.Oms300)
                .HasMaxLength(30)
                .HasColumnName("oms30_0");
            entity.Property(e => e.Oms301)
                .HasMaxLength(30)
                .HasColumnName("oms30_1");
            entity.Property(e => e.Oms302)
                .HasMaxLength(30)
                .HasColumnName("oms30_2");
            entity.Property(e => e.Oms303)
                .HasMaxLength(30)
                .HasColumnName("oms30_3");
            entity.Property(e => e.Oms304)
                .HasMaxLength(30)
                .HasColumnName("oms30_4");
            entity.Property(e => e.PerfFact).HasColumnName("perf_fact");
            entity.Property(e => e.PrafdCode)
                .HasMaxLength(8)
                .IsFixedLength()
                .HasColumnName("prafd_code");
            entity.Property(e => e.Syscreated)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("syscreated");
            entity.Property(e => e.Syscreator).HasColumnName("syscreator");
            entity.Property(e => e.Sysguid)
                .HasDefaultValueSql("(newid())")
                .HasColumnName("sysguid");
            entity.Property(e => e.Sysmodified)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("sysmodified");
            entity.Property(e => e.Sysmodifier).HasColumnName("sysmodifier");
            entity.Property(e => e.Timestamp)
                .IsRowVersion()
                .IsConcurrencyToken()
                .HasColumnName("timestamp");
        });

        modelBuilder.Entity<Pred>(entity =>
        {
            entity.HasKey(e => e.Id).IsClustered(false);

            entity.ToTable("pred");

            entity.HasIndex(e => new { e.Language, e.Defaulttitle, e.Predcode }, "ix_LanguageDefaultTitle");

            entity.HasIndex(e => e.Predcode, "pred")
                .IsUnique()
                .IsClustered();

            entity.Property(e => e.Id).HasColumnName("ID");
            entity.Property(e => e.AanOms)
                .HasMaxLength(60)
                .HasColumnName("aan_oms");
            entity.Property(e => e.Aanhef)
                .HasMaxLength(60)
                .HasColumnName("aanhef");
            entity.Property(e => e.Abbreviation)
                .HasMaxLength(8)
                .IsFixedLength()
                .HasColumnName("abbreviation");
            entity.Property(e => e.Defaulttitle).HasColumnName("defaulttitle");
            entity.Property(e => e.Gender)
                .HasMaxLength(1)
                .IsFixedLength()
                .HasColumnName("gender");
            entity.Property(e => e.Language)
                .HasMaxLength(3)
                .IsFixedLength()
                .HasColumnName("language");
            entity.Property(e => e.Predcode)
                .HasMaxLength(4)
                .IsFixedLength()
                .HasColumnName("predcode");
            entity.Property(e => e.Syscreated)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("syscreated");
            entity.Property(e => e.Syscreator).HasColumnName("syscreator");
            entity.Property(e => e.Sysguid)
                .HasDefaultValueSql("(newid())")
                .HasColumnName("sysguid");
            entity.Property(e => e.Sysmodified)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("sysmodified");
            entity.Property(e => e.Sysmodifier).HasColumnName("sysmodifier");
            entity.Property(e => e.Timestamp)
                .IsRowVersion()
                .IsConcurrencyToken()
                .HasColumnName("timestamp");
        });

        modelBuilder.Entity<PrfreeField>(entity =>
        {
            entity.ToTable("PRFreeFields");

            entity.Property(e => e.Id)
                .HasDefaultValueSql("(newid())")
                .HasColumnName("ID");
            entity.Property(e => e.DateField1).HasMaxLength(30);
            entity.Property(e => e.DateField2).HasMaxLength(30);
            entity.Property(e => e.DateField3).HasMaxLength(30);
            entity.Property(e => e.DateField4).HasMaxLength(30);
            entity.Property(e => e.DateField5).HasMaxLength(30);
            entity.Property(e => e.Division)
                .HasMaxLength(3)
                .IsFixedLength();
            entity.Property(e => e.NumberField1).HasMaxLength(30);
            entity.Property(e => e.NumberField2).HasMaxLength(30);
            entity.Property(e => e.NumberField3).HasMaxLength(30);
            entity.Property(e => e.NumberField4).HasMaxLength(30);
            entity.Property(e => e.NumberField5).HasMaxLength(30);
            entity.Property(e => e.TableName).HasMaxLength(30);
            entity.Property(e => e.TextField1).HasMaxLength(30);
            entity.Property(e => e.TextField2).HasMaxLength(30);
            entity.Property(e => e.TextField3).HasMaxLength(30);
            entity.Property(e => e.TextField4).HasMaxLength(30);
            entity.Property(e => e.TextField5).HasMaxLength(30);
            entity.Property(e => e.YesNoField1).HasMaxLength(30);
            entity.Property(e => e.YesNoField2).HasMaxLength(30);
            entity.Property(e => e.YesNoField3).HasMaxLength(30);
            entity.Property(e => e.YesNoField4).HasMaxLength(30);
            entity.Property(e => e.YesNoField5).HasMaxLength(30);
        });

        modelBuilder.Entity<Prmember>(entity =>
        {
            entity.HasKey(e => e.Idmember).IsClustered(false);

            entity.ToTable("PRMember");

            entity.HasIndex(e => e.ResId, "PRMembersHPRPerformanceIndex");

            entity.HasIndex(e => new { e.ProjectNr, e.ResId, e.CmpWwn }, "PRMembersIdx1")
                .IsUnique()
                .IsClustered();

            entity.HasIndex(e => new { e.ProjectNr, e.ResId, e.FromDate, e.UntilDate }, "PRMembersIdx2");

            entity.Property(e => e.Idmember)
                .HasDefaultValueSql("(newid())")
                .HasColumnName("IDMember");
            entity.Property(e => e.CmpWwn).HasColumnName("cmp_wwn");
            entity.Property(e => e.FromDate).HasColumnType("datetime");
            entity.Property(e => e.ProjectNr).HasMaxLength(20);
            entity.Property(e => e.ResId).HasColumnName("res_id");
            entity.Property(e => e.UntilDate).HasColumnType("datetime");
        });

        modelBuilder.Entity<ProductionTimeEntry>(entity =>
        {
            entity.HasIndex(e => new { e.Project, e.Step, e.EndTime }, "IX_ProductionTimeEntries_ProjectStepEndTime");

            entity.HasIndex(e => e.TransactionKey, "IX_ProductionTimeEntries_TransactionKey");

            entity.Property(e => e.Id).HasColumnName("ID");
            entity.Property(e => e.Condition)
                .HasMaxLength(1)
                .IsFixedLength();
            entity.Property(e => e.Created)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime");
            entity.Property(e => e.Division)
                .HasMaxLength(3)
                .IsFixedLength();
            entity.Property(e => e.EndTime).HasColumnType("datetime");
            entity.Property(e => e.ItemCode).HasMaxLength(30);
            entity.Property(e => e.ItemType)
                .HasMaxLength(1)
                .IsFixedLength();
            entity.Property(e => e.LogText).HasMaxLength(2000);
            entity.Property(e => e.Machine).HasMaxLength(20);
            entity.Property(e => e.Modified)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime");
            entity.Property(e => e.Operation).HasMaxLength(10);
            entity.Property(e => e.Project).HasMaxLength(20);
            entity.Property(e => e.StartTime)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime");
            entity.Property(e => e.Status).HasDefaultValue((byte)0);
            entity.Property(e => e.Sysguid).HasDefaultValueSql("(newid())");
            entity.Property(e => e.Timestamp)
                .IsRowVersion()
                .IsConcurrencyToken();
        });

        modelBuilder.Entity<ProductivityReport>(entity =>
        {
            entity.HasIndex(e => e.TransactionDate, "IX_ProductivityRpts_Date");

            entity.HasIndex(e => new { e.Division, e.TransactionDate }, "IX_ProductivityRpts_JobActivity");

            entity.HasIndex(e => new { e.Project, e.TransactionDate }, "IX_ProductivityRpts_ProjectDate");

            entity.Property(e => e.Id).HasColumnName("ID");
            entity.Property(e => e.Activity).HasMaxLength(30);
            entity.Property(e => e.ActualCostsInQty).HasColumnName("ActualCostsInQTY");
            entity.Property(e => e.BudgetCostsInQty).HasColumnName("BudgetCostsInQTY");
            entity.Property(e => e.Costcenter)
                .HasMaxLength(10)
                .IsFixedLength();
            entity.Property(e => e.Division)
                .HasMaxLength(3)
                .IsFixedLength();
            entity.Property(e => e.Project).HasMaxLength(20);
            entity.Property(e => e.RequestHid)
                .HasMaxLength(75)
                .HasColumnName("RequestHID");
            entity.Property(e => e.TransactionDate).HasColumnType("datetime");
        });

        modelBuilder.Entity<ProjectAccount>(entity =>
        {
            entity.HasKey(e => new { e.Account, e.Project });

            entity.Property(e => e.Project).HasMaxLength(20);
        });

        modelBuilder.Entity<ProjectBudgetLine>(entity =>
        {
            entity.HasIndex(e => e.ProjectNumber, "IX_ProjectBudgetLines");

            entity.Property(e => e.Id).HasColumnName("ID");
            entity.Property(e => e.AmountFc).HasColumnName("AmountFC");
            entity.Property(e => e.CostAmountFc).HasColumnName("CostAmountFC");
            entity.Property(e => e.CostCurrency)
                .HasMaxLength(3)
                .IsFixedLength();
            entity.Property(e => e.Currency)
                .HasMaxLength(3)
                .IsFixedLength();
            entity.Property(e => e.Description).HasMaxLength(255);
            entity.Property(e => e.EndDate).HasColumnType("datetime");
            entity.Property(e => e.IsPurchased).HasDefaultValue(false);
            entity.Property(e => e.Itemcode).HasMaxLength(30);
            entity.Property(e => e.ProjectNumber).HasMaxLength(20);
            entity.Property(e => e.StartDate).HasColumnType("datetime");
            entity.Property(e => e.Syscreated)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("syscreated");
            entity.Property(e => e.Syscreator).HasColumnName("syscreator");
            entity.Property(e => e.Sysguid)
                .HasDefaultValueSql("(newid())")
                .HasColumnName("sysguid");
            entity.Property(e => e.Sysmodified)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("sysmodified");
            entity.Property(e => e.Sysmodifier).HasColumnName("sysmodifier");
            entity.Property(e => e.Type)
                .HasMaxLength(1)
                .IsFixedLength();
        });

        modelBuilder.Entity<ProjectDeliverable>(entity =>
        {
            entity.HasKey(e => e.Id).IsClustered(false);

            entity.HasIndex(e => e.DeliverableCode, "IX_ProjectDeliverables").IsClustered();

            entity.HasIndex(e => new { e.ProjectNumber, e.IsMain }, "ProjectDeliverables_IsMain");

            entity.HasIndex(e => e.ParentDeliverable, "ProjectDeliverables_ParentDeliverable");

            entity.Property(e => e.Id)
                .ValueGeneratedNever()
                .HasColumnName("ID");
            entity.Property(e => e.DeliverableCode).HasMaxLength(30);
            entity.Property(e => e.Description).HasMaxLength(60);
            entity.Property(e => e.EndDate).HasColumnType("datetime");
            entity.Property(e => e.ItemCode).HasMaxLength(30);
            entity.Property(e => e.ParentDeliverable).HasMaxLength(30);
            entity.Property(e => e.ParentDeliverableProjectNumber).HasMaxLength(20);
            entity.Property(e => e.ProjectNumber).HasMaxLength(20);
            entity.Property(e => e.StartDate).HasColumnType("datetime");
            entity.Property(e => e.Syscreated)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("syscreated");
            entity.Property(e => e.Syscreator).HasColumnName("syscreator");
            entity.Property(e => e.Sysmodified)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("sysmodified");
            entity.Property(e => e.Sysmodifier).HasColumnName("sysmodifier");
        });

        modelBuilder.Entity<ProjectDeliverableVersion>(entity =>
        {
            entity.HasKey(e => e.VersionId);

            entity.HasIndex(e => e.ProjectNumber, "IX_ProjectDeliverableVersions_ProjectNumber");

            entity.HasIndex(e => e.VersionNumber, "IX_ProjectDeliverableVersions_VersionNumber");

            entity.HasIndex(e => new { e.SnapshotProject, e.VersionNumber, e.ParentDeliverable }, "IX_ProjectVersionNumber");

            entity.Property(e => e.VersionId)
                .ValueGeneratedNever()
                .HasColumnName("VersionID");
            entity.Property(e => e.DeliverableCode).HasMaxLength(30);
            entity.Property(e => e.Description).HasMaxLength(60);
            entity.Property(e => e.EndDate).HasColumnType("datetime");
            entity.Property(e => e.ItemCode).HasMaxLength(30);
            entity.Property(e => e.ParentDeliverable).HasMaxLength(30);
            entity.Property(e => e.ParentDelvProjectNr).HasMaxLength(20);
            entity.Property(e => e.ProjectNumber).HasMaxLength(20);
            entity.Property(e => e.SnapshotProject).HasMaxLength(20);
            entity.Property(e => e.StartDate).HasColumnType("datetime");
            entity.Property(e => e.Syscreated)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("syscreated");
            entity.Property(e => e.Syscreator).HasColumnName("syscreator");
            entity.Property(e => e.Sysmodified)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("sysmodified");
            entity.Property(e => e.Sysmodifier).HasColumnName("sysmodifier");
            entity.Property(e => e.VersionCreatedDate).HasColumnType("datetime");
            entity.Property(e => e.VersionDescription).HasMaxLength(255);
            entity.Property(e => e.Wbscost).HasColumnName("WBSCost");
            entity.Property(e => e.WbscostCurrency)
                .HasMaxLength(3)
                .IsFixedLength()
                .HasColumnName("WBSCostCurrency");
            entity.Property(e => e.Wbsrevenue).HasColumnName("WBSRevenue");
            entity.Property(e => e.WbsrevenueCurrency)
                .HasMaxLength(3)
                .IsFixedLength()
                .HasColumnName("WBSRevenueCurrency");
        });

        modelBuilder.Entity<ProjectItem>(entity =>
        {
            entity.HasIndex(e => new { e.ProjectNumber, e.ItemCode }, "IX_ProjectItems").IsUnique();

            entity.Property(e => e.Id)
                .HasDefaultValueSql("(newsequentialid())")
                .HasColumnName("ID");
            entity.Property(e => e.ItemCode).HasMaxLength(30);
            entity.Property(e => e.ProjectNumber).HasMaxLength(20);
            entity.Property(e => e.Syscreated)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("syscreated");
            entity.Property(e => e.Syscreator).HasColumnName("syscreator");
            entity.Property(e => e.Sysmodified)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("sysmodified");
            entity.Property(e => e.Sysmodifier).HasColumnName("sysmodifier");
        });

        modelBuilder.Entity<ProjectItemRate>(entity =>
        {
            entity.HasIndex(e => e.BudgetLine, "IX_BudgetLine");

            entity.HasIndex(e => e.Wbsline, "IX_WBSLine");

            entity.Property(e => e.Id)
                .ValueGeneratedNever()
                .HasColumnName("ID");
            entity.Property(e => e.CostCurrency)
                .HasMaxLength(3)
                .IsFixedLength();
            entity.Property(e => e.CostEndDate).HasColumnType("datetime");
            entity.Property(e => e.CostFc).HasColumnName("CostFC");
            entity.Property(e => e.CostRateId).HasColumnName("CostRateID");
            entity.Property(e => e.CostStartDate).HasColumnType("datetime");
            entity.Property(e => e.SalesPriceCurrency)
                .HasMaxLength(3)
                .IsFixedLength();
            entity.Property(e => e.SalesPriceEndDate).HasColumnType("datetime");
            entity.Property(e => e.SalesPriceFc).HasColumnName("SalesPriceFC");
            entity.Property(e => e.SalesPriceRateId).HasColumnName("SalesPriceRateID");
            entity.Property(e => e.SalesPriceStartDate).HasColumnType("datetime");
            entity.Property(e => e.Syscreated)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("syscreated");
            entity.Property(e => e.Syscreator).HasColumnName("syscreator");
            entity.Property(e => e.Sysmodified)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("sysmodified");
            entity.Property(e => e.Sysmodifier).HasColumnName("sysmodifier");
            entity.Property(e => e.Wbsline).HasColumnName("WBSLine");
        });

        modelBuilder.Entity<Prproject>(entity =>
        {
            entity.HasKey(e => e.Id).IsClustered(false);

            entity.ToTable("PRProject");

            entity.HasIndex(e => e.ProjectNr, "PRProject")
                .IsUnique()
                .IsClustered();

            entity.HasIndex(e => new { e.ProjectNr, e.Division }, "PRProjectIdx1").IsUnique();

            entity.HasIndex(e => new { e.ProjectNr, e.Idcustomer }, "PRProjectIdx2").IsUnique();

            entity.HasIndex(e => new { e.ProjectNr, e.ParentProject }, "PRProjectIdx3").IsUnique();

            entity.HasIndex(e => new { e.ProjectNr, e.Description }, "PRProjectIdx4").IsUnique();

            entity.HasIndex(e => e.Idcustomer, "PRProject_IDCustomer");

            entity.HasIndex(e => new { e.Status, e.Type }, "ProjectNRHPRPerformanceIndex");

            entity.Property(e => e.Id).HasColumnName("ID");
            entity.Property(e => e.BillingCurrency)
                .HasMaxLength(3)
                .IsFixedLength();
            entity.Property(e => e.Compression)
                .HasMaxLength(1)
                .IsFixedLength();
            entity.Property(e => e.CostCenter)
                .HasMaxLength(8)
                .IsFixedLength();
            entity.Property(e => e.Costunit)
                .HasMaxLength(8)
                .IsFixedLength();
            entity.Property(e => e.DateField1).HasColumnType("datetime");
            entity.Property(e => e.DateField2).HasColumnType("datetime");
            entity.Property(e => e.DateField3).HasColumnType("datetime");
            entity.Property(e => e.DateField4).HasColumnType("datetime");
            entity.Property(e => e.DateField5).HasColumnType("datetime");
            entity.Property(e => e.Description)
                .HasMaxLength(60)
                .UseCollation("SQL_Latin1_General_CP1_CI_AI");
            entity.Property(e => e.Description01).HasMaxLength(20);
            entity.Property(e => e.Description02).HasMaxLength(20);
            entity.Property(e => e.Description03).HasMaxLength(20);
            entity.Property(e => e.Division)
                .HasMaxLength(3)
                .IsFixedLength();
            entity.Property(e => e.Dlconfirmation).HasColumnName("DLConfirmation");
            entity.Property(e => e.Dlevaluation).HasColumnName("DLEvaluation");
            entity.Property(e => e.Dlproposal).HasColumnName("DLProposal");
            entity.Property(e => e.EstCost).HasDefaultValue(0.0);
            entity.Property(e => e.EstCostCcy)
                .HasMaxLength(3)
                .IsFixedLength();
            entity.Property(e => e.EstRev).HasDefaultValue(0.0);
            entity.Property(e => e.EstRevCcy)
                .HasMaxLength(3)
                .IsFixedLength();
            entity.Property(e => e.HourBilling).HasMaxLength(30);
            entity.Property(e => e.HourlyRateBasis)
                .HasMaxLength(1)
                .IsFixedLength();
            entity.Property(e => e.HourlyRateBasisExt)
                .HasMaxLength(1)
                .IsFixedLength();
            entity.Property(e => e.Idcustomer).HasColumnName("IDCustomer");
            entity.Property(e => e.IddeliveryContact).HasColumnName("IDDeliveryContact");
            entity.Property(e => e.IdinvoiceAccount).HasColumnName("IDInvoiceAccount");
            entity.Property(e => e.IdinvoiceContact).HasColumnName("IDInvoiceContact");
            entity.Property(e => e.IditemNumbers).HasColumnName("IDItemNumbers");
            entity.Property(e => e.IdjobActivity).HasColumnName("IDJobActivity");
            entity.Property(e => e.Idjobgroup).HasColumnName("IDJobgroup");
            entity.Property(e => e.IdorderAccount).HasColumnName("IDOrderAccount");
            entity.Property(e => e.IdorderContact).HasColumnName("IDOrderContact");
            entity.Property(e => e.Idreseller).HasColumnName("IDReseller");
            entity.Property(e => e.ImageFilename).HasMaxLength(128);
            entity.Property(e => e.InitialEndDate).HasColumnType("datetime");
            entity.Property(e => e.InitialStartDate).HasColumnType("datetime");
            entity.Property(e => e.InvoiceTo).HasDefaultValue((byte)1);
            entity.Property(e => e.ItemCode).HasMaxLength(30);
            entity.Property(e => e.Labour)
                .HasMaxLength(1)
                .IsFixedLength();
            entity.Property(e => e.Machine)
                .HasMaxLength(1)
                .IsFixedLength();
            entity.Property(e => e.Magcode)
                .HasMaxLength(4)
                .IsFixedLength()
                .HasColumnName("magcode");
            entity.Property(e => e.Material)
                .HasMaxLength(1)
                .IsFixedLength();
            entity.Property(e => e.MaterialLine)
                .HasMaxLength(4)
                .IsFixedLength();
            entity.Property(e => e.Memo).UseCollation("SQL_Latin1_General_CP1_CI_AI");
            entity.Property(e => e.ParentProject).HasMaxLength(20);
            entity.Property(e => e.ProjectNr).HasMaxLength(20);
            entity.Property(e => e.ProposalDescription).HasMaxLength(20);
            entity.Property(e => e.ReferenceNumber).HasMaxLength(30);
            entity.Property(e => e.Release).HasMaxLength(30);
            entity.Property(e => e.SerialNumber).HasMaxLength(30);
            entity.Property(e => e.Status)
                .HasMaxLength(1)
                .IsFixedLength();
            entity.Property(e => e.Syscreated)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("syscreated");
            entity.Property(e => e.Syscreator).HasColumnName("syscreator");
            entity.Property(e => e.Sysguid)
                .HasDefaultValueSql("(newid())")
                .HasColumnName("sysguid");
            entity.Property(e => e.Sysmodified)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("sysmodified");
            entity.Property(e => e.Sysmodifier).HasColumnName("sysmodifier");
            entity.Property(e => e.TextField1)
                .HasMaxLength(80)
                .UseCollation("SQL_Latin1_General_CP1_CI_AI");
            entity.Property(e => e.TextField2)
                .HasMaxLength(80)
                .UseCollation("SQL_Latin1_General_CP1_CI_AI");
            entity.Property(e => e.TextField3)
                .HasMaxLength(80)
                .UseCollation("SQL_Latin1_General_CP1_CI_AI");
            entity.Property(e => e.TextField4)
                .HasMaxLength(80)
                .UseCollation("SQL_Latin1_General_CP1_CI_AI");
            entity.Property(e => e.TextField5)
                .HasMaxLength(80)
                .UseCollation("SQL_Latin1_General_CP1_CI_AI");
            entity.Property(e => e.Timestamp)
                .IsRowVersion()
                .IsConcurrencyToken()
                .HasColumnName("timestamp");
            entity.Property(e => e.Type)
                .HasMaxLength(1)
                .IsFixedLength();
            entity.Property(e => e.UseDeliverablesWbs).HasColumnName("UseDeliverablesWBS");
            entity.Property(e => e.UseNewPlanning).HasDefaultValue(true);
            entity.Property(e => e.WipAccount)
                .HasMaxLength(9)
                .IsFixedLength()
                .HasColumnName("WIP_Account");
            entity.Property(e => e.WipMethod)
                .HasMaxLength(1)
                .IsFixedLength()
                .HasColumnName("WIP_Method");
            entity.Property(e => e.WipRevenue)
                .HasMaxLength(9)
                .IsFixedLength()
                .HasColumnName("WIP_Revenue");
        });

        modelBuilder.Entity<PublicHoliday>(entity =>
        {
            entity.HasKey(e => e.Id).IsClustered(false);

            entity.HasIndex(e => new { e.Country, e.Date }, "Date").IsClustered();

            entity.HasIndex(e => new { e.Division, e.Date }, "Division");

            entity.HasIndex(e => new { e.Date, e.Country, e.Description, e.Division, e.MainLoc }, "IX_PublicHolidays_DateCountryMainloc");

            entity.Property(e => e.Id)
                .ValueGeneratedNever()
                .HasColumnName("ID");
            entity.Property(e => e.Country)
                .HasMaxLength(3)
                .IsFixedLength();
            entity.Property(e => e.Date).HasColumnType("datetime");
            entity.Property(e => e.Description).HasMaxLength(60);
            entity.Property(e => e.Division)
                .HasMaxLength(3)
                .IsFixedLength();
            entity.Property(e => e.MainLoc)
                .HasMaxLength(10)
                .IsFixedLength();
            entity.Property(e => e.Syscreated)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("syscreated");
            entity.Property(e => e.Syscreator).HasColumnName("syscreator");
            entity.Property(e => e.Sysmodified)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("sysmodified");
            entity.Property(e => e.Sysmodifier).HasColumnName("sysmodifier");
        });

        modelBuilder.Entity<Pwfunc>(entity =>
        {
            entity.HasKey(e => e.Id).IsClustered(false);

            entity.ToTable("pwfunc");

            entity.HasIndex(e => new { e.Exename, e.Param, e.FncId }, "pwfun2").IsUnique();

            entity.HasIndex(e => new { e.Slic, e.Sparam, e.FncId }, "pwfun3").IsUnique();

            entity.HasIndex(e => e.FncId, "pwfunc")
                .IsUnique()
                .IsClustered();

            entity.Property(e => e.Id).HasColumnName("ID");
            entity.Property(e => e.AppType)
                .HasMaxLength(1)
                .IsFixedLength()
                .HasColumnName("app_type");
            entity.Property(e => e.Descr30)
                .HasMaxLength(30)
                .HasColumnName("descr30");
            entity.Property(e => e.Descr64)
                .HasMaxLength(64)
                .HasColumnName("descr64");
            entity.Property(e => e.Exename)
                .HasMaxLength(32)
                .HasColumnName("exename");
            entity.Property(e => e.FncId)
                .HasMaxLength(20)
                .HasColumnName("fnc_id");
            entity.Property(e => e.Helpcontext)
                .HasMaxLength(128)
                .HasColumnName("helpcontext");
            entity.Property(e => e.Icon).HasColumnName("icon");
            entity.Property(e => e.Mpackage0).HasColumnName("mpackage_0");
            entity.Property(e => e.Mpackage1).HasColumnName("mpackage_1");
            entity.Property(e => e.Mpackage2).HasColumnName("mpackage_2");
            entity.Property(e => e.Mpackage3).HasColumnName("mpackage_3");
            entity.Property(e => e.Mpackage4).HasColumnName("mpackage_4");
            entity.Property(e => e.Mpackage5).HasColumnName("mpackage_5");
            entity.Property(e => e.Mpackage6).HasColumnName("mpackage_6");
            entity.Property(e => e.Mpackage7).HasColumnName("mpackage_7");
            entity.Property(e => e.OptionExp).HasColumnName("option_exp");
            entity.Property(e => e.Origin)
                .HasMaxLength(12)
                .HasColumnName("origin");
            entity.Property(e => e.Param)
                .HasMaxLength(32)
                .HasColumnName("param");
            entity.Property(e => e.Pwreg)
                .HasDefaultValue((byte)1)
                .HasColumnName("pwreg");
            entity.Property(e => e.Rtype)
                .HasMaxLength(1)
                .IsFixedLength()
                .HasColumnName("rtype");
            entity.Property(e => e.Settings)
                .HasMaxLength(100)
                .HasColumnName("settings");
            entity.Property(e => e.Slic)
                .HasMaxLength(32)
                .HasColumnName("slic");
            entity.Property(e => e.Sparam)
                .HasMaxLength(32)
                .HasColumnName("sparam");
            entity.Property(e => e.Syscreated)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("syscreated");
            entity.Property(e => e.Syscreator).HasColumnName("syscreator");
            entity.Property(e => e.Sysguid)
                .HasDefaultValueSql("(newid())")
                .HasColumnName("sysguid");
            entity.Property(e => e.Sysmodified)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("sysmodified");
            entity.Property(e => e.Sysmodifier).HasColumnName("sysmodifier");
            entity.Property(e => e.TermId).HasColumnName("term_id");
            entity.Property(e => e.Timestamp)
                .IsRowVersion()
                .IsConcurrencyToken()
                .HasColumnName("timestamp");
        });

        modelBuilder.Entity<Pwmagaz>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("pwmagaz");

            entity.HasIndex(e => new { e.ResId, e.Magcode }, "pwmagaz")
                .IsUnique()
                .IsClustered();

            entity.Property(e => e.Id)
                .ValueGeneratedOnAdd()
                .HasColumnName("ID");
            entity.Property(e => e.Magcode)
                .HasMaxLength(4)
                .IsFixedLength()
                .HasColumnName("magcode");
            entity.Property(e => e.ResId).HasColumnName("res_id");
        });

        modelBuilder.Entity<Pwrole>(entity =>
        {
            entity.HasKey(e => e.RoleId);

            entity.ToTable("pwrole");

            entity.HasIndex(e => e.RbId, "IXRbID");

            entity.HasIndex(e => new { e.RoleName, e.RoleId }, "pwonme").IsUnique();

            entity.Property(e => e.RoleId).HasColumnName("role_id");
            entity.Property(e => e.Descr64)
                .HasMaxLength(64)
                .HasColumnName("descr64");
            entity.Property(e => e.JobGroup)
                .HasMaxLength(10)
                .IsFixedLength()
                .HasColumnName("job_group");
            entity.Property(e => e.RbId).HasColumnName("rb_id");
            entity.Property(e => e.RoleName)
                .HasMaxLength(20)
                .HasColumnName("role_name");
            entity.Property(e => e.Syscreated)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("syscreated");
            entity.Property(e => e.Syscreator).HasColumnName("syscreator");
            entity.Property(e => e.Sysguid)
                .HasDefaultValueSql("(newid())")
                .HasColumnName("sysguid");
            entity.Property(e => e.Sysmodified)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("sysmodified");
            entity.Property(e => e.Sysmodifier).HasColumnName("sysmodifier");
            entity.Property(e => e.Timestamp)
                .IsRowVersion()
                .IsConcurrencyToken()
                .HasColumnName("timestamp");
            entity.Property(e => e.Visible)
                .HasDefaultValue((byte)1)
                .HasColumnName("visible");
        });

        modelBuilder.Entity<Pwrprm>(entity =>
        {
            entity.HasKey(e => e.Id).IsClustered(false);

            entity.ToTable("pwrprm");

            entity.HasIndex(e => new { e.FncId, e.RoleId }, "pwrpr2").IsUnique();

            entity.HasIndex(e => new { e.RoleId, e.FncId }, "pwrprm")
                .IsUnique()
                .IsClustered();

            entity.Property(e => e.Id).HasColumnName("ID");
            entity.Property(e => e.FncId)
                .HasMaxLength(20)
                .HasColumnName("fnc_id");
            entity.Property(e => e.RightId).HasColumnName("right_id");
            entity.Property(e => e.RoleId).HasColumnName("role_id");
            entity.Property(e => e.Syscreated)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("syscreated");
            entity.Property(e => e.Syscreator).HasColumnName("syscreator");
            entity.Property(e => e.Sysguid)
                .HasDefaultValueSql("(newid())")
                .HasColumnName("sysguid");
            entity.Property(e => e.Sysmodified)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("sysmodified");
            entity.Property(e => e.Sysmodifier).HasColumnName("sysmodifier");
            entity.Property(e => e.Timestamp)
                .IsRowVersion()
                .IsConcurrencyToken()
                .HasColumnName("timestamp");
        });

        modelBuilder.Entity<Pwruc>(entity =>
        {
            entity.HasKey(e => e.Id).IsClustered(false);

            entity.ToTable("pwruc");

            entity.HasIndex(e => new { e.ResId, e.RoleId }, "pwruc")
                .IsUnique()
                .IsClustered();

            entity.HasIndex(e => new { e.RoleId, e.ResId }, "pwruc2").IsUnique();

            entity.Property(e => e.Id).HasColumnName("ID");
            entity.Property(e => e.ResId).HasColumnName("res_id");
            entity.Property(e => e.RoleId).HasColumnName("role_id");
            entity.Property(e => e.Rolelevel).HasColumnName("rolelevel");
            entity.Property(e => e.Syscreated)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("syscreated");
            entity.Property(e => e.Syscreator).HasColumnName("syscreator");
            entity.Property(e => e.Sysguid)
                .HasDefaultValueSql("(newid())")
                .HasColumnName("sysguid");
            entity.Property(e => e.Sysmodified)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("sysmodified");
            entity.Property(e => e.Sysmodifier).HasColumnName("sysmodifier");
            entity.Property(e => e.Timestamp)
                .IsRowVersion()
                .IsConcurrencyToken()
                .HasColumnName("timestamp");
        });

        modelBuilder.Entity<QiinvoiceHeader>(entity =>
        {
            entity
                .HasNoKey()
                .ToView("QIinvoiceHeaders");

            entity.Property(e => e.AflWeek)
                .HasMaxLength(2)
                .IsFixedLength()
                .HasColumnName("afl_week");
            entity.Property(e => e.Afldat)
                .HasColumnType("datetime")
                .HasColumnName("afldat");
            entity.Property(e => e.BdrDEvVal).HasColumnName("bdr_d_ev_val");
            entity.Property(e => e.BdrDiscVal).HasColumnName("bdr_disc_val");
            entity.Property(e => e.BdrEvEdVal).HasColumnName("bdr_ev_ed_val");
            entity.Property(e => e.BdrEvVal).HasColumnName("bdr_ev_val");
            entity.Property(e => e.BdrKb2Val).HasColumnName("bdr_kb2_val");
            entity.Property(e => e.BdrKbVal).HasColumnName("bdr_kb_val");
            entity.Property(e => e.BdrVal).HasColumnName("bdr_val");
            entity.Property(e => e.BdrVatVal).HasColumnName("bdr_vat_val");
            entity.Property(e => e.Betcond)
                .HasMaxLength(2)
                .IsFixedLength()
                .HasColumnName("betcond");
            entity.Property(e => e.BrutoGew).HasColumnName("bruto_gew");
            entity.Property(e => e.BtwCdOrd)
                .HasMaxLength(3)
                .IsFixedLength()
                .HasColumnName("btw_cd_ord");
            entity.Property(e => e.BtwCode)
                .HasMaxLength(3)
                .IsFixedLength()
                .HasColumnName("btw_code");
            entity.Property(e => e.Colli)
                .HasMaxLength(5)
                .IsFixedLength()
                .HasColumnName("colli");
            entity.Property(e => e.CrdDgbknr)
                .HasMaxLength(3)
                .IsFixedLength()
                .HasColumnName("crd_dgbknr");
            entity.Property(e => e.CrdFaktnr)
                .HasMaxLength(8)
                .IsFixedLength()
                .HasColumnName("crd_faktnr");
            entity.Property(e => e.Dagbknr)
                .HasMaxLength(3)
                .IsFixedLength()
                .HasColumnName("dagbknr");
            entity.Property(e => e.Debnr)
                .HasMaxLength(6)
                .IsFixedLength()
                .HasColumnName("debnr");
            entity.Property(e => e.Docnumber)
                .HasMaxLength(30)
                .HasColumnName("docnumber");
            entity.Property(e => e.Einddebnr)
                .HasMaxLength(6)
                .IsFixedLength()
                .HasColumnName("einddebnr");
            entity.Property(e => e.ExArtcode)
                .HasMaxLength(2)
                .IsFixedLength()
                .HasColumnName("ex_artcode");
            entity.Property(e => e.FakSoort)
                .HasMaxLength(1)
                .IsFixedLength()
                .HasColumnName("fak_soort");
            entity.Property(e => e.Fakdat)
                .HasColumnType("datetime")
                .HasColumnName("fakdat");
            entity.Property(e => e.Fakdebnr)
                .HasMaxLength(6)
                .IsFixedLength()
                .HasColumnName("fakdebnr");
            entity.Property(e => e.Faknr)
                .HasMaxLength(8)
                .IsFixedLength()
                .HasColumnName("faknr");
            entity.Property(e => e.FaktCode)
                .HasMaxLength(3)
                .IsFixedLength()
                .HasColumnName("fakt_code");
            entity.Property(e => e.FaktKort).HasColumnName("fakt_kort");
            entity.Property(e => e.Fiattering).HasColumnName("fiattering");
            entity.Property(e => e.Id).HasColumnName("ID");
            entity.Property(e => e.InvInVv).HasColumnName("inv_in_vv");
            entity.Property(e => e.Koers).HasColumnName("koers");
            entity.Property(e => e.Kstplcode)
                .HasMaxLength(8)
                .IsFixedLength()
                .HasColumnName("kstplcode");
            entity.Property(e => e.Levwijze)
                .HasMaxLength(5)
                .IsFixedLength()
                .HasColumnName("levwijze");
            entity.Property(e => e.Magcode)
                .HasMaxLength(4)
                .IsFixedLength()
                .HasColumnName("magcode");
            entity.Property(e => e.NettoGew).HasColumnName("netto_gew");
            entity.Property(e => e.Nettoprijs).HasColumnName("nettoprijs");
            entity.Property(e => e.OfferteNr)
                .HasMaxLength(8)
                .IsFixedLength()
                .HasColumnName("offerte_nr");
            entity.Property(e => e.Orddat)
                .HasColumnType("datetime")
                .HasColumnName("orddat");
            entity.Property(e => e.Orddeb)
                .HasMaxLength(6)
                .IsFixedLength()
                .HasColumnName("orddeb");
            entity.Property(e => e.Orderkost).HasColumnName("orderkost");
            entity.Property(e => e.Ordernr)
                .HasMaxLength(8)
                .IsFixedLength()
                .HasColumnName("ordernr");
            entity.Property(e => e.Orig)
                .HasMaxLength(1)
                .HasColumnName("orig");
            entity.Property(e => e.PakbonDat)
                .HasColumnType("datetime")
                .HasColumnName("pakbon_dat");
            entity.Property(e => e.PakbonNr)
                .HasMaxLength(8)
                .IsFixedLength()
                .HasColumnName("pakbon_nr");
            entity.Property(e => e.ProdOrder)
                .HasMaxLength(12)
                .HasColumnName("prod_order");
            entity.Property(e => e.Refer)
                .HasMaxLength(20)
                .HasColumnName("refer");
            entity.Property(e => e.Refer1)
                .HasMaxLength(20)
                .HasColumnName("refer1");
            entity.Property(e => e.Refer2)
                .HasMaxLength(20)
                .HasColumnName("refer2");
            entity.Property(e => e.RepresentId).HasColumnName("represent_id");
            entity.Property(e => e.Routecode)
                .HasMaxLength(2)
                .IsFixedLength()
                .HasColumnName("routecode");
            entity.Property(e => e.Selcode)
                .HasMaxLength(2)
                .IsFixedLength()
                .HasColumnName("selcode");
            entity.Property(e => e.StatCode)
                .HasMaxLength(1)
                .IsFixedLength()
                .HasColumnName("stat_code");
            entity.Property(e => e.Status)
                .HasMaxLength(1)
                .IsFixedLength()
                .HasColumnName("status");
            entity.Property(e => e.Syscreated)
                .HasColumnType("datetime")
                .HasColumnName("syscreated");
            entity.Property(e => e.Syscreator).HasColumnName("syscreator");
            entity.Property(e => e.Sysmodified)
                .HasColumnType("datetime")
                .HasColumnName("sysmodified");
            entity.Property(e => e.Sysmodifier).HasColumnName("sysmodifier");
            entity.Property(e => e.TotBdr).HasColumnName("tot_bdr");
            entity.Property(e => e.TypeProd)
                .HasMaxLength(1)
                .IsFixedLength()
                .HasColumnName("type_prod");
            entity.Property(e => e.UserId)
                .HasMaxLength(8)
                .IsFixedLength()
                .HasColumnName("user_id");
            entity.Property(e => e.Valcode)
                .HasMaxLength(3)
                .IsFixedLength()
                .HasColumnName("valcode");
            entity.Property(e => e.Verzdebnr)
                .HasMaxLength(6)
                .IsFixedLength()
                .HasColumnName("verzdebnr");
            entity.Property(e => e.Volgnr5)
                .HasMaxLength(5)
                .IsFixedLength()
                .HasColumnName("volgnr5");
            entity.Property(e => e.Vrachtkost).HasColumnName("vrachtkost");
            entity.Property(e => e.VrzAdrcd)
                .HasMaxLength(6)
                .IsFixedLength()
                .HasColumnName("vrz_adrcd");
            entity.Property(e => e.VrzAdrnr)
                .HasMaxLength(10)
                .IsFixedLength()
                .HasColumnName("vrz_adrnr");
        });

        modelBuilder.Entity<QiinvoiceLine>(entity =>
        {
            entity
                .HasNoKey()
                .ToView("QIinvoiceLines");

            entity.Property(e => e.Affiliates)
                .HasMaxLength(1)
                .IsFixedLength()
                .HasColumnName("affiliates");
            entity.Property(e => e.AflWeek)
                .HasMaxLength(2)
                .IsFixedLength()
                .HasColumnName("afl_week");
            entity.Property(e => e.Afldat)
                .HasColumnType("datetime")
                .HasColumnName("afldat");
            entity.Property(e => e.ArSoort)
                .HasMaxLength(1)
                .IsFixedLength()
                .HasColumnName("ar_soort");
            entity.Property(e => e.Artcode)
                .HasMaxLength(30)
                .HasColumnName("artcode");
            entity.Property(e => e.BdrDEvVal).HasColumnName("bdr_d_ev_val");
            entity.Property(e => e.BdrEvEdVal).HasColumnName("bdr_ev_ed_val");
            entity.Property(e => e.BdrInvDVal).HasColumnName("bdr_inv_d_val");
            entity.Property(e => e.BdrVal).HasColumnName("bdr_val");
            entity.Property(e => e.BdrVatVal).HasColumnName("bdr_vat_val");
            entity.Property(e => e.Boecode)
                .HasMaxLength(2)
                .IsFixedLength()
                .HasColumnName("boecode");
            entity.Property(e => e.Breedte).HasColumnName("breedte");
            entity.Property(e => e.BtwCode)
                .HasMaxLength(3)
                .IsFixedLength()
                .HasColumnName("btw_code");
            entity.Property(e => e.Container).HasColumnName("container");
            entity.Property(e => e.Contractnr)
                .HasMaxLength(8)
                .IsFixedLength()
                .HasColumnName("contractnr");
            entity.Property(e => e.Correction).HasColumnName("correction");
            entity.Property(e => e.Csacode)
                .HasMaxLength(1)
                .IsFixedLength()
                .HasColumnName("csacode");
            entity.Property(e => e.Dagbknr)
                .HasMaxLength(3)
                .IsFixedLength()
                .HasColumnName("dagbknr");
            entity.Property(e => e.Dimensie)
                .HasMaxLength(3)
                .IsFixedLength()
                .HasColumnName("dimensie");
            entity.Property(e => e.EindDatC)
                .HasColumnType("datetime")
                .HasColumnName("eind_dat_c");
            entity.Property(e => e.EsrAantal).HasColumnName("esr_aantal");
            entity.Property(e => e.Explsrtart)
                .HasMaxLength(1)
                .IsFixedLength()
                .HasColumnName("explsrtart");
            entity.Property(e => e.ExtraPr).HasColumnName("extra_pr");
            entity.Property(e => e.Fakdat)
                .HasColumnType("datetime")
                .HasColumnName("fakdat");
            entity.Property(e => e.Faknr)
                .HasMaxLength(8)
                .IsFixedLength()
                .HasColumnName("faknr");
            entity.Property(e => e.FaktCode)
                .HasMaxLength(3)
                .IsFixedLength()
                .HasColumnName("fakt_code");
            entity.Property(e => e.GewichtBi).HasColumnName("gewicht_bi");
            entity.Property(e => e.Gip).HasColumnName("gip");
            entity.Property(e => e.Hoogte).HasColumnName("hoogte");
            entity.Property(e => e.Id).HasColumnName("ID");
            entity.Property(e => e.IntRegio)
                .HasMaxLength(10)
                .IsFixedLength()
                .HasColumnName("int_regio");
            entity.Property(e => e.IntraLvcd)
                .HasMaxLength(10)
                .IsFixedLength()
                .HasColumnName("intra_lvcd");
            entity.Property(e => e.KortFlags)
                .HasMaxLength(1)
                .IsFixedLength()
                .HasColumnName("kort_flags");
            entity.Property(e => e.Korting).HasColumnName("korting");
            entity.Property(e => e.Kstdrcode)
                .HasMaxLength(8)
                .IsFixedLength()
                .HasColumnName("kstdrcode");
            entity.Property(e => e.Kstplcode)
                .HasMaxLength(8)
                .IsFixedLength()
                .HasColumnName("kstplcode");
            entity.Property(e => e.Kstsrt)
                .HasMaxLength(8)
                .IsFixedLength()
                .HasColumnName("kstsrt");
            entity.Property(e => e.LandIso)
                .HasMaxLength(3)
                .IsFixedLength()
                .HasColumnName("land_iso");
            entity.Property(e => e.Landabc)
                .HasMaxLength(3)
                .IsFixedLength()
                .HasColumnName("landabc");
            entity.Property(e => e.Landbest)
                .HasMaxLength(3)
                .IsFixedLength()
                .HasColumnName("landbest");
            entity.Property(e => e.Landherk)
                .HasMaxLength(3)
                .IsFixedLength()
                .HasColumnName("landherk");
            entity.Property(e => e.Landoorspr)
                .HasMaxLength(3)
                .IsFixedLength()
                .HasColumnName("landoorspr");
            entity.Property(e => e.Lengte).HasColumnName("lengte");
            entity.Property(e => e.Magcode)
                .HasMaxLength(4)
                .IsFixedLength()
                .HasColumnName("magcode");
            entity.Property(e => e.Maglok)
                .HasMaxLength(10)
                .IsFixedLength()
                .HasColumnName("maglok");
            entity.Property(e => e.Oms160)
                .HasMaxLength(160)
                .HasColumnName("oms160");
            entity.Property(e => e.Oms45)
                .HasMaxLength(45)
                .HasColumnName("oms45");
            entity.Property(e => e.Ordernr)
                .HasMaxLength(8)
                .IsFixedLength()
                .HasColumnName("ordernr");
            entity.Property(e => e.Ordreg).HasColumnName("ordreg");
            entity.Property(e => e.Orig)
                .HasMaxLength(1)
                .HasColumnName("orig");
            entity.Property(e => e.PakbonDat)
                .HasColumnType("datetime")
                .HasColumnName("pakbon_dat");
            entity.Property(e => e.PakbonNr)
                .HasMaxLength(8)
                .IsFixedLength()
                .HasColumnName("pakbon_nr");
            entity.Property(e => e.PercCon).HasColumnName("perc_con");
            entity.Property(e => e.PercGar).HasColumnName("perc_gar");
            entity.Property(e => e.PltsLl)
                .HasMaxLength(10)
                .IsFixedLength()
                .HasColumnName("plts_ll");
            entity.Property(e => e.PrBedr).HasColumnName("pr_bedr");
            entity.Property(e => e.PrKstpl)
                .HasMaxLength(8)
                .IsFixedLength()
                .HasColumnName("pr_kstpl");
            entity.Property(e => e.Prijs83).HasColumnName("prijs83");
            entity.Property(e => e.PrijsN).HasColumnName("prijs_n");
            entity.Property(e => e.Prijslijst)
                .HasMaxLength(15)
                .HasColumnName("prijslijst");
            entity.Property(e => e.ProdOrder)
                .HasMaxLength(12)
                .HasColumnName("prod_order");
            entity.Property(e => e.Project)
                .HasMaxLength(8)
                .IsFixedLength()
                .HasColumnName("project");
            entity.Property(e => e.ProjvrwC).HasColumnName("projvrw_c");
            entity.Property(e => e.Prshisnr)
                .HasMaxLength(8)
                .IsFixedLength()
                .HasColumnName("prshisnr");
            entity.Property(e => e.Regel)
                .HasMaxLength(4)
                .IsFixedLength()
                .HasColumnName("regel");
            entity.Property(e => e.RegelHfda)
                .HasMaxLength(4)
                .IsFixedLength()
                .HasColumnName("regel_hfda");
            entity.Property(e => e.Reknr)
                .HasMaxLength(9)
                .IsFixedLength()
                .HasColumnName("reknr");
            entity.Property(e => e.Request).HasColumnName("request");
            entity.Property(e => e.SerieNum)
                .HasMaxLength(22)
                .HasColumnName("serie_num");
            entity.Property(e => e.ServOrder)
                .HasMaxLength(8)
                .IsFixedLength()
                .HasColumnName("serv_order");
            entity.Property(e => e.StateenhI).HasColumnName("stateenh_i");
            entity.Property(e => e.Statistnr)
                .HasMaxLength(9)
                .IsFixedLength()
                .HasColumnName("statistnr");
            entity.Property(e => e.Status)
                .HasMaxLength(1)
                .IsFixedLength()
                .HasColumnName("status");
            entity.Property(e => e.Stelsel)
                .HasMaxLength(10)
                .IsFixedLength()
                .HasColumnName("stelsel");
            entity.Property(e => e.Taric)
                .HasMaxLength(2)
                .IsFixedLength()
                .HasColumnName("taric");
            entity.Property(e => e.TransactA)
                .HasMaxLength(10)
                .IsFixedLength()
                .HasColumnName("transact_a");
            entity.Property(e => e.TransactB)
                .HasMaxLength(10)
                .IsFixedLength()
                .HasColumnName("transact_b");
            entity.Property(e => e.TrsshpmCd)
                .HasMaxLength(10)
                .IsFixedLength()
                .HasColumnName("trsshpm_cd");
            entity.Property(e => e.Vervoer)
                .HasMaxLength(10)
                .IsFixedLength()
                .HasColumnName("vervoer");
            entity.Property(e => e.Volgnr5)
                .HasMaxLength(5)
                .IsFixedLength()
                .HasColumnName("volgnr5");
            entity.Property(e => e.VolgnrMut)
                .HasMaxLength(10)
                .IsFixedLength()
                .HasColumnName("volgnr_mut");
            entity.Property(e => e.Vvp).HasColumnName("vvp");
        });

        modelBuilder.Entity<QuotationHeader>(entity =>
        {
            entity.HasKey(e => e.Id).IsClustered(false);

            entity.HasIndex(e => new { e.Id, e.AccountId }, "IX_QuotationHeaders_Account").IsUnique();

            entity.HasIndex(e => e.QuotationNo, "IX_QuotationHeaders_QuotationNo")
                .IsUnique()
                .IsClustered();

            entity.Property(e => e.Id).HasColumnName("ID");
            entity.Property(e => e.AccountId).HasColumnName("AccountID");
            entity.Property(e => e.ContactId).HasColumnName("ContactID");
            entity.Property(e => e.Created)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime");
            entity.Property(e => e.CurrencyCode)
                .HasMaxLength(3)
                .IsFixedLength();
            entity.Property(e => e.DivisionCode)
                .HasMaxLength(3)
                .IsFixedLength();
            entity.Property(e => e.ExpiryDate).HasColumnType("datetime");
            entity.Property(e => e.Modified)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime");
            entity.Property(e => e.OpportunityId).HasColumnName("OpportunityID");
            entity.Property(e => e.PaymentConditionCode)
                .HasMaxLength(2)
                .IsFixedLength();
            entity.Property(e => e.ProjectCode).HasMaxLength(20);
            entity.Property(e => e.QuotationNo).HasMaxLength(20);
            entity.Property(e => e.SalesOrderNumber)
                .HasMaxLength(8)
                .IsFixedLength();
            entity.Property(e => e.Status)
                .HasMaxLength(1)
                .HasDefaultValue("O")
                .IsFixedLength();
            entity.Property(e => e.TemplateId).HasColumnName("TemplateID");
            entity.Property(e => e.Timestamp)
                .IsRowVersion()
                .IsConcurrencyToken()
                .HasColumnName("timestamp");
            entity.Property(e => e.YourReference).HasMaxLength(30);
        });

        modelBuilder.Entity<QuotationLine>(entity =>
        {
            entity.HasKey(e => e.Id).IsClustered(false);

            entity.HasIndex(e => new { e.Id, e.ItemCode }, "IX_QuotationLines_Item")
                .IsUnique()
                .IsClustered();

            entity.HasIndex(e => new { e.Id, e.QuotationId }, "IX_QuotationLines_QuotationID").IsUnique();

            entity.Property(e => e.Id).HasColumnName("ID");
            entity.Property(e => e.AmountDc).HasColumnName("AmountDC");
            entity.Property(e => e.AmountFc).HasColumnName("AmountFC");
            entity.Property(e => e.Created)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime");
            entity.Property(e => e.ItemCode).HasMaxLength(30);
            entity.Property(e => e.Modified)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime");
            entity.Property(e => e.PriceList).HasMaxLength(15);
            entity.Property(e => e.QuotationId).HasColumnName("QuotationID");
            entity.Property(e => e.Timestamp)
                .IsRowVersion()
                .IsConcurrencyToken()
                .HasColumnName("timestamp");
            entity.Property(e => e.Unit)
                .HasMaxLength(8)
                .IsFixedLength();
        });

        modelBuilder.Entity<Rate>(entity =>
        {
            entity.HasKey(e => e.Id).IsClustered(false);

            entity.ToTable("rates");

            entity.HasIndex(e => new { e.DateL, e.SourceCurrency, e.TargetCurrency }, "ratdat").IsUnique();

            entity.HasIndex(e => new { e.SourceCurrency, e.TargetCurrency, e.DateL }, "rates")
                .IsUnique()
                .IsClustered();

            entity.HasIndex(e => new { e.TargetCurrency, e.SourceCurrency, e.DateL }, "rattrg").IsUnique();

            entity.Property(e => e.Id).HasColumnName("ID");
            entity.Property(e => e.DateL)
                .HasColumnType("datetime")
                .HasColumnName("date_l");
            entity.Property(e => e.RateBuy).HasColumnName("rate_buy");
            entity.Property(e => e.RateExchange).HasColumnName("rate_exchange");
            entity.Property(e => e.RateOfficial).HasColumnName("rate_official");
            entity.Property(e => e.RateSell).HasColumnName("rate_sell");
            entity.Property(e => e.SourceCurrency)
                .HasMaxLength(3)
                .IsFixedLength()
                .HasColumnName("source_currency");
            entity.Property(e => e.Syscreated)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("syscreated");
            entity.Property(e => e.Syscreator).HasColumnName("syscreator");
            entity.Property(e => e.Sysguid)
                .HasDefaultValueSql("(newid())")
                .HasColumnName("sysguid");
            entity.Property(e => e.Sysmodified)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("sysmodified");
            entity.Property(e => e.Sysmodifier).HasColumnName("sysmodifier");
            entity.Property(e => e.TargetCurrency)
                .HasMaxLength(3)
                .IsFixedLength()
                .HasColumnName("target_currency");
            entity.Property(e => e.Timestamp)
                .IsRowVersion()
                .IsConcurrencyToken()
                .HasColumnName("timestamp");
        });

        modelBuilder.Entity<RatingAmount>(entity =>
        {
            entity.HasKey(e => e.Id).IsClustered(false);

            entity.HasIndex(e => new { e.Rating, e.Type, e.AmountEnd }, "RatingAmountsEnd");

            entity.HasIndex(e => new { e.Rating, e.Type, e.AmountStart }, "RatingAmountsStart");

            entity.HasIndex(e => new { e.Rating, e.Type }, "RatingType")
                .IsUnique()
                .IsClustered();

            entity.Property(e => e.Id).HasDefaultValueSql("(newid())");
            entity.Property(e => e.Currency)
                .HasMaxLength(3)
                .IsFixedLength();
            entity.Property(e => e.Syscreated)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("syscreated");
            entity.Property(e => e.Syscreator).HasColumnName("syscreator");
            entity.Property(e => e.Sysmodified)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("sysmodified");
            entity.Property(e => e.Sysmodifier).HasColumnName("sysmodifier");
            entity.Property(e => e.Type)
                .HasMaxLength(1)
                .IsFixedLength();
        });

        modelBuilder.Entity<RatioDefinition>(entity =>
        {
            entity.HasKey(e => e.RatioCode);

            entity.Property(e => e.RatioCode).HasMaxLength(30);
            entity.Property(e => e.Description).HasMaxLength(60);
            entity.Property(e => e.Enabled).HasDefaultValue(true);
            entity.Property(e => e.RatioFirst).HasMaxLength(30);
            entity.Property(e => e.RatioSecond).HasMaxLength(30);
            entity.Property(e => e.RatioSql)
                .HasMaxLength(2000)
                .HasColumnName("RatioSQL");
            entity.Property(e => e.RatioSqlcc)
                .HasMaxLength(2000)
                .HasColumnName("RatioSQLCC");
            entity.Property(e => e.Timestamp)
                .IsRowVersion()
                .IsConcurrencyToken()
                .HasColumnName("timestamp");
        });

        modelBuilder.Entity<RatioFilterAccount>(entity =>
        {
            entity.HasKey(e => new { e.RatioCode, e.AccountCode });

            entity.Property(e => e.RatioCode).HasMaxLength(30);
            entity.Property(e => e.AccountCode).HasMaxLength(30);
            entity.Property(e => e.Timestamp)
                .IsRowVersion()
                .IsConcurrencyToken()
                .HasColumnName("timestamp");
        });

        modelBuilder.Entity<Recipe>(entity =>
        {
            entity.HasKey(e => e.Id).IsClustered(false);

            entity.ToTable("recipe");

            entity.HasIndex(e => e.Itemreq, "emrcrq");

            entity.HasIndex(e => e.Version, "emrcvr");

            entity.HasIndex(e => new { e.MainVersion, e.Itemprod, e.Sequenceno }, "ix_MainVersion");

            entity.HasIndex(e => e.Debtor, "ix_debtor");

            entity.HasIndex(e => e.Supplier, "ix_supplier");

            entity.HasIndex(e => new { e.Itemprod, e.Version, e.Sequenceno }, "recipe")
                .IsUnique()
                .IsClustered();

            entity.Property(e => e.Id).HasColumnName("ID");
            entity.Property(e => e.Activity)
                .HasMaxLength(6)
                .IsFixedLength()
                .HasColumnName("activity");
            entity.Property(e => e.Activityno)
                .HasMaxLength(4)
                .IsFixedLength()
                .HasColumnName("activityno");
            entity.Property(e => e.Assetcode)
                .HasMaxLength(20)
                .HasColumnName("assetcode");
            entity.Property(e => e.Assetgroup)
                .HasMaxLength(20)
                .HasColumnName("assetgroup");
            entity.Property(e => e.Backflush).HasColumnName("backflush");
            entity.Property(e => e.CalCostpr).HasColumnName("cal_costpr");
            entity.Property(e => e.Companycode)
                .HasMaxLength(3)
                .IsFixedLength()
                .HasColumnName("companycode");
            entity.Property(e => e.CostPrice).HasColumnName("cost_price");
            entity.Property(e => e.Costcenter)
                .HasMaxLength(8)
                .IsFixedLength()
                .HasColumnName("costcenter");
            entity.Property(e => e.Debtor)
                .HasMaxLength(6)
                .IsFixedLength()
                .HasColumnName("debtor");
            entity.Property(e => e.DescrTxt).HasColumnName("descr_txt");
            entity.Property(e => e.Description)
                .HasMaxLength(30)
                .HasColumnName("description");
            entity.Property(e => e.Docguid).HasColumnName("docguid");
            entity.Property(e => e.DocumentId).HasColumnName("DocumentID");
            entity.Property(e => e.Drawingno)
                .HasMaxLength(25)
                .HasColumnName("drawingno");
            entity.Property(e => e.EffDate)
                .HasColumnType("datetime")
                .HasColumnName("eff_date");
            entity.Property(e => e.ExpDate)
                .HasColumnType("datetime")
                .HasColumnName("exp_date");
            entity.Property(e => e.Freefield1).HasColumnName("freefield1");
            entity.Property(e => e.Freefield10)
                .HasMaxLength(75)
                .HasColumnName("freefield10");
            entity.Property(e => e.Freefield11)
                .HasColumnType("datetime")
                .HasColumnName("freefield11");
            entity.Property(e => e.Freefield12)
                .HasColumnType("datetime")
                .HasColumnName("freefield12");
            entity.Property(e => e.Freefield13).HasColumnName("freefield13");
            entity.Property(e => e.Freefield14).HasColumnName("freefield14");
            entity.Property(e => e.Freefield15).HasColumnName("freefield15");
            entity.Property(e => e.Freefield16).HasColumnName("freefield16");
            entity.Property(e => e.Freefield17).HasColumnName("freefield17");
            entity.Property(e => e.Freefield18).HasColumnName("freefield18");
            entity.Property(e => e.Freefield19).HasColumnName("freefield19");
            entity.Property(e => e.Freefield2).HasColumnName("freefield2");
            entity.Property(e => e.Freefield20).HasColumnName("freefield20");
            entity.Property(e => e.Freefield3).HasColumnName("freefield3");
            entity.Property(e => e.Freefield4)
                .HasMaxLength(75)
                .HasColumnName("freefield4");
            entity.Property(e => e.Freefield5)
                .HasMaxLength(75)
                .HasColumnName("freefield5");
            entity.Property(e => e.Freefield6)
                .HasMaxLength(75)
                .HasColumnName("freefield6");
            entity.Property(e => e.Freefield7)
                .HasMaxLength(75)
                .HasColumnName("freefield7");
            entity.Property(e => e.Freefield8)
                .HasMaxLength(75)
                .HasColumnName("freefield8");
            entity.Property(e => e.Freefield9)
                .HasMaxLength(75)
                .HasColumnName("freefield9");
            entity.Property(e => e.GenLedger)
                .HasMaxLength(9)
                .IsFixedLength()
                .HasColumnName("gen_ledger");
            entity.Property(e => e.Height).HasColumnName("height");
            entity.Property(e => e.Itemprod)
                .HasMaxLength(30)
                .HasColumnName("itemprod");
            entity.Property(e => e.Itemreq)
                .HasMaxLength(30)
                .HasColumnName("itemreq");
            entity.Property(e => e.Length).HasColumnName("length");
            entity.Property(e => e.LineType)
                .HasMaxLength(1)
                .IsFixedLength()
                .HasColumnName("line_type");
            entity.Property(e => e.ManCostpr).HasColumnName("man_costpr");
            entity.Property(e => e.NotesId).HasColumnName("NotesID");
            entity.Property(e => e.Operation).HasMaxLength(10);
            entity.Property(e => e.PosNo)
                .HasMaxLength(20)
                .HasColumnName("pos_no");
            entity.Property(e => e.Quantity).HasColumnName("quantity");
            entity.Property(e => e.ResId).HasColumnName("res_id");
            entity.Property(e => e.Routing).HasMaxLength(10);
            entity.Property(e => e.Salesprice).HasColumnName("salesprice");
            entity.Property(e => e.Sequenceno).HasColumnName("sequenceno");
            entity.Property(e => e.Supplier)
                .HasMaxLength(6)
                .IsFixedLength()
                .HasColumnName("supplier");
            entity.Property(e => e.Syscreated)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("syscreated");
            entity.Property(e => e.Syscreator).HasColumnName("syscreator");
            entity.Property(e => e.Sysguid)
                .HasDefaultValueSql("(newid())")
                .HasColumnName("sysguid");
            entity.Property(e => e.Sysmodified)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("sysmodified");
            entity.Property(e => e.Sysmodifier).HasColumnName("sysmodifier");
            entity.Property(e => e.Timestamp)
                .IsRowVersion()
                .IsConcurrencyToken()
                .HasColumnName("timestamp");
            entity.Property(e => e.Unit)
                .HasMaxLength(8)
                .IsFixedLength();
            entity.Property(e => e.UsageMeth)
                .HasMaxLength(1)
                .IsFixedLength()
                .HasColumnName("usage_meth");
            entity.Property(e => e.VarQuantity).HasColumnName("var_quantity");
            entity.Property(e => e.Variant)
                .HasMaxLength(1)
                .IsFixedLength()
                .HasColumnName("variant");
            entity.Property(e => e.Version)
                .HasMaxLength(8)
                .IsFixedLength()
                .HasColumnName("version");
            entity.Property(e => e.Warehouse)
                .HasMaxLength(4)
                .IsFixedLength()
                .HasColumnName("warehouse");
            entity.Property(e => e.Width).HasColumnName("width");
        });

        modelBuilder.Entity<Report>(entity =>
        {
            entity.HasIndex(e => e.Hid, "IX_Reports_1");

            entity.HasIndex(e => new { e.Category, e.Hid }, "IX_Reports_2");

            entity.Property(e => e.Id)
                .ValueGeneratedNever()
                .HasColumnName("ID");
            entity.Property(e => e.BireportId).HasColumnName("BIReportID");
            entity.Property(e => e.ContentName).HasMaxLength(128);
            entity.Property(e => e.Description).HasMaxLength(255);
            entity.Property(e => e.Hid)
                .ValueGeneratedOnAdd()
                .HasColumnName("HID");
            entity.Property(e => e.Name).HasMaxLength(60);
            entity.Property(e => e.Syscreated)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("syscreated");
            entity.Property(e => e.Syscreator).HasColumnName("syscreator");
            entity.Property(e => e.Sysmodified)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("sysmodified");
            entity.Property(e => e.Sysmodifier).HasColumnName("sysmodifier");

            entity.HasOne(d => d.CategoryNavigation).WithMany(p => p.Reports)
                .HasForeignKey(d => d.Category)
                .HasConstraintName("FK_Reports_Category");
        });

        modelBuilder.Entity<ReportCategory>(entity =>
        {
            entity.Property(e => e.Id)
                .ValueGeneratedNever()
                .HasColumnName("ID");
            entity.Property(e => e.Description).HasMaxLength(60);
            entity.Property(e => e.Syscreated)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("syscreated");
            entity.Property(e => e.Syscreator).HasColumnName("syscreator");
            entity.Property(e => e.Sysmodified)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("sysmodified");
            entity.Property(e => e.Sysmodifier).HasColumnName("sysmodifier");

            entity.HasOne(d => d.ParentNavigation).WithMany(p => p.InverseParentNavigation)
                .HasForeignKey(d => d.Parent)
                .HasConstraintName("FK_ReportCategories_Parent");

            entity.HasOne(d => d.ProductNavigation).WithMany(p => p.ReportCategories)
                .HasForeignKey(d => d.Product)
                .HasConstraintName("FK_ReportCategories_Product");
        });

        modelBuilder.Entity<ReportParameter>(entity =>
        {
            entity.Property(e => e.Id)
                .HasDefaultValueSql("(newid())")
                .HasColumnName("ID");
            entity.Property(e => e.DefaultValue).HasMaxLength(60);
            entity.Property(e => e.Description).HasMaxLength(60);
            entity.Property(e => e.DescriptionTermId).HasColumnName("DescriptionTermID");
            entity.Property(e => e.Name).HasMaxLength(60);
            entity.Property(e => e.Visible).HasDefaultValue((byte)1);
        });

        modelBuilder.Entity<ReportSecurity>(entity =>
        {
            entity.ToTable("ReportSecurity");

            entity.Property(e => e.Id)
                .ValueGeneratedNever()
                .HasColumnName("ID");
            entity.Property(e => e.EndDate).HasColumnType("datetime");
            entity.Property(e => e.Project).HasMaxLength(20);
            entity.Property(e => e.StartDate).HasColumnType("datetime");
            entity.Property(e => e.Syscreated)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("syscreated");
            entity.Property(e => e.Syscreator).HasColumnName("syscreator");
            entity.Property(e => e.Sysmodified)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("sysmodified");
            entity.Property(e => e.Sysmodifier).HasColumnName("sysmodifier");

            entity.HasOne(d => d.ProjectNavigation).WithMany(p => p.ReportSecurities)
                .HasPrincipalKey(p => p.ProjectNr)
                .HasForeignKey(d => d.Project)
                .HasConstraintName("FK_ReportSecurity_Project");

            entity.HasOne(d => d.ReportNavigation).WithMany(p => p.ReportSecurities)
                .HasForeignKey(d => d.Report)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_ReportSecurity_Report");
        });

        modelBuilder.Entity<RequestAction>(entity =>
        {
            entity.Property(e => e.Id)
                .ValueGeneratedNever()
                .HasColumnName("ID");
            entity.Property(e => e.Description).HasMaxLength(60);
            entity.Property(e => e.DescriptionTermId).HasColumnName("DescriptionTermID");
        });

        modelBuilder.Entity<RequestField>(entity =>
        {
            entity.Property(e => e.Id)
                .ValueGeneratedNever()
                .HasColumnName("ID");
            entity.Property(e => e.Columns).HasDefaultValue(2);
            entity.Property(e => e.DefaultDate).HasColumnType("datetime");
            entity.Property(e => e.DefaultString).HasMaxLength(100);
            entity.Property(e => e.EditApproved).HasColumnName("Edit_Approved");
            entity.Property(e => e.EditOpen)
                .HasDefaultValue(true)
                .HasColumnName("Edit_Open");
            entity.Property(e => e.EditProcessed).HasColumnName("Edit_Processed");
            entity.Property(e => e.EditRealized).HasColumnName("Edit_Realized");
            entity.Property(e => e.Front).HasDefaultValue(true);
            entity.Property(e => e.MandatoryApproved).HasColumnName("Mandatory_Approved");
            entity.Property(e => e.MandatoryOpen).HasColumnName("Mandatory_Open");
            entity.Property(e => e.MandatoryProcessed).HasColumnName("Mandatory_Processed");
            entity.Property(e => e.MandatoryRealized).HasColumnName("Mandatory_Realized");
            entity.Property(e => e.Name).HasMaxLength(100);
            entity.Property(e => e.NameSuffix).HasMaxLength(30);
            entity.Property(e => e.Property).HasMaxLength(40);
            entity.Property(e => e.TermId).HasColumnName("TermID");
            entity.Property(e => e.TermIdsuffix).HasColumnName("TermIDSuffix");
            entity.Property(e => e.UseField).HasDefaultValue(true);
            entity.Property(e => e.VisibleApproved)
                .HasDefaultValue(true)
                .HasColumnName("Visible_Approved");
            entity.Property(e => e.VisibleNew)
                .HasDefaultValue(true)
                .HasColumnName("Visible_New");
            entity.Property(e => e.VisibleOpen)
                .HasDefaultValue(true)
                .HasColumnName("Visible_Open");
            entity.Property(e => e.VisibleProcessed)
                .HasDefaultValue(true)
                .HasColumnName("Visible_Processed");
            entity.Property(e => e.VisibleRealized)
                .HasDefaultValue(true)
                .HasColumnName("Visible_Realized");
        });

        modelBuilder.Entity<RequestFieldLabel>(entity =>
        {
            entity.HasIndex(e => new { e.RequestType, e.FieldIdguid }, "IX_RequestFieldLabels_Requests");

            entity.HasIndex(e => e.TermId, "IX_RequestFieldLabels_Terms");

            entity.Property(e => e.Id).HasColumnName("ID");
            entity.Property(e => e.FieldId).HasColumnName("FieldID");
            entity.Property(e => e.FieldIdguid).HasColumnName("FieldIDGUID");
            entity.Property(e => e.TermId).HasColumnName("TermID");
            entity.Property(e => e.Xmlvalue)
                .HasColumnType("xml")
                .HasColumnName("XMLValue");
        });

        modelBuilder.Entity<RequestFieldOption>(entity =>
        {
            entity.HasIndex(e => new { e.RequestType, e.Position }, "RequestType_Position");

            entity.Property(e => e.Id)
                .HasDefaultValueSql("(newid())")
                .HasColumnName("ID");
            entity.Property(e => e.Calculate).HasDefaultValue(true);
            entity.Property(e => e.CalculateOption1).HasColumnName("CalculateOption_1");
            entity.Property(e => e.CalculateOption2).HasColumnName("CalculateOption_2");
            entity.Property(e => e.CalculateOption3).HasColumnName("CalculateOption_3");
            entity.Property(e => e.Caption).HasMaxLength(100);
            entity.Property(e => e.CaptionTermId).HasColumnName("CaptionTermID");
            entity.Property(e => e.Columns).HasDefaultValue(2);
            entity.Property(e => e.DefaultDate).HasColumnType("datetime");
            entity.Property(e => e.DefaultString).HasMaxLength(512);
            entity.Property(e => e.EditApproved).HasColumnName("Edit_Approved");
            entity.Property(e => e.EditOpen)
                .HasDefaultValue(true)
                .HasColumnName("Edit_Open");
            entity.Property(e => e.EditOption1).HasColumnName("EditOption_1");
            entity.Property(e => e.EditOption2).HasColumnName("EditOption_2");
            entity.Property(e => e.EditOption3).HasColumnName("EditOption_3");
            entity.Property(e => e.EditProcessed).HasColumnName("Edit_Processed");
            entity.Property(e => e.EditRealized).HasColumnName("Edit_Realized");
            entity.Property(e => e.FieldId).HasColumnName("FieldID");
            entity.Property(e => e.Front).HasDefaultValue(true);
            entity.Property(e => e.MandatoryApproved).HasColumnName("Mandatory_Approved");
            entity.Property(e => e.MandatoryOpen).HasColumnName("Mandatory_Open");
            entity.Property(e => e.MandatoryProcessed).HasColumnName("Mandatory_Processed");
            entity.Property(e => e.MandatoryRealized).HasColumnName("Mandatory_Realized");
            entity.Property(e => e.SectionHeight).HasDefaultValue(0);
            entity.Property(e => e.SectionType).HasDefaultValue((byte)0);
            entity.Property(e => e.Selection).HasMaxLength(1000);
            entity.Property(e => e.SelectionOption1).HasColumnName("SelectionOption_1");
            entity.Property(e => e.SelectionOption2).HasColumnName("SelectionOption_2");
            entity.Property(e => e.SelectionOption3).HasColumnName("SelectionOption_3");
            entity.Property(e => e.SelectionOption4).HasColumnName("SelectionOption_4");
            entity.Property(e => e.SelectionOption5).HasColumnName("SelectionOption_5");
            entity.Property(e => e.SelectionValues).HasMaxLength(1000);
            entity.Property(e => e.VisibleApproved)
                .HasDefaultValue(true)
                .HasColumnName("Visible_Approved");
            entity.Property(e => e.VisibleNew)
                .HasDefaultValue(true)
                .HasColumnName("Visible_New");
            entity.Property(e => e.VisibleOpen)
                .HasDefaultValue(true)
                .HasColumnName("Visible_Open");
            entity.Property(e => e.VisibleProcessed)
                .HasDefaultValue(true)
                .HasColumnName("Visible_Processed");
            entity.Property(e => e.VisibleRealized)
                .HasDefaultValue(true)
                .HasColumnName("Visible_Realized");
            entity.Property(e => e.VisibleRejected).HasDefaultValue(true);
            entity.Property(e => e.WorkflowOption1).HasColumnName("WorkflowOption_1");
            entity.Property(e => e.WorkflowOption2).HasColumnName("WorkflowOption_2");
            entity.Property(e => e.WorkflowOption3).HasColumnName("WorkflowOption_3");
        });

        modelBuilder.Entity<RequestItem>(entity =>
        {
            entity.HasKey(e => e.Id).IsClustered(false);

            entity.HasIndex(e => new { e.ItemCode, e.Type, e.RequestType }, "IX_RequestItems_ItemRequest").IsClustered();

            entity.HasIndex(e => new { e.RequestType, e.Type, e.ItemCode }, "IX_RequestItems_RequestItem");

            entity.Property(e => e.Id)
                .ValueGeneratedNever()
                .HasColumnName("ID");
            entity.Property(e => e.ItemCode).HasMaxLength(30);
        });

        modelBuilder.Entity<RequestItemRate>(entity =>
        {
            entity.HasIndex(e => e.RequestId, "IX_RequestItemRates");

            entity.Property(e => e.Id)
                .HasDefaultValueSql("(newsequentialid())")
                .HasColumnName("ID");
            entity.Property(e => e.CostCurrency)
                .HasMaxLength(3)
                .IsFixedLength();
            entity.Property(e => e.CostEndDate).HasColumnType("datetime");
            entity.Property(e => e.CostFc).HasColumnName("CostFC");
            entity.Property(e => e.CostRateId).HasColumnName("CostRateID");
            entity.Property(e => e.CostStartDate).HasColumnType("datetime");
            entity.Property(e => e.RequestId).HasColumnName("RequestID");
            entity.Property(e => e.SalesPriceCurrency)
                .HasMaxLength(3)
                .IsFixedLength();
            entity.Property(e => e.SalesPriceEndDate).HasColumnType("datetime");
            entity.Property(e => e.SalesPriceFc).HasColumnName("SalesPriceFC");
            entity.Property(e => e.SalesPriceRateId).HasColumnName("SalesPriceRateID");
            entity.Property(e => e.SalesPriceStartDate).HasColumnType("datetime");
            entity.Property(e => e.Syscreated)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("syscreated");
            entity.Property(e => e.Syscreator).HasColumnName("syscreator");
            entity.Property(e => e.Sysguid)
                .HasDefaultValueSql("(newid())")
                .HasColumnName("sysguid");
            entity.Property(e => e.Sysmodified)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("sysmodified");
            entity.Property(e => e.Sysmodifier).HasColumnName("sysmodifier");
        });

        modelBuilder.Entity<RequestNotification>(entity =>
        {
            entity.HasKey(e => e.Id).IsClustered(false);

            entity.HasIndex(e => new { e.RequestId, e.ResourceId }, "RequestNotifications")
                .IsUnique()
                .IsClustered();

            entity.Property(e => e.Id).HasColumnName("ID");
            entity.Property(e => e.Created)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime");
            entity.Property(e => e.RequestId).HasColumnName("RequestID");
            entity.Property(e => e.ResourceId).HasColumnName("ResourceID");
        });

        modelBuilder.Entity<RequestPaymentType>(entity =>
        {
            entity.Property(e => e.Id)
                .ValueGeneratedNever()
                .HasColumnName("ID");
            entity.Property(e => e.Description).HasMaxLength(60);
            entity.Property(e => e.TermId).HasColumnName("TermID");
        });

        modelBuilder.Entity<RequestPriority>(entity =>
        {
            entity.Property(e => e.Id)
                .ValueGeneratedNever()
                .HasColumnName("ID");
            entity.Property(e => e.Description).HasMaxLength(60);
            entity.Property(e => e.DescriptionTermId).HasColumnName("DescriptionTermID");
        });

        modelBuilder.Entity<RequestStatHistory>(entity =>
        {
            entity.HasKey(e => e.Id).IsClustered(false);

            entity.ToTable("RequestStatHistory");

            entity.HasIndex(e => e.StatDate, "StatDate").IsClustered();

            entity.Property(e => e.Id).HasColumnName("ID");
            entity.Property(e => e.StatDate)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime");
        });

        modelBuilder.Entity<RequestStatus>(entity =>
        {
            entity.ToTable("RequestStatus");

            entity.Property(e => e.Id)
                .ValueGeneratedNever()
                .HasColumnName("ID");
            entity.Property(e => e.Description).HasMaxLength(60);
            entity.Property(e => e.OrderId).HasColumnName("OrderID");
            entity.Property(e => e.TermId).HasColumnName("TermID");
        });

        modelBuilder.Entity<RequestTask>(entity =>
        {
            entity.HasKey(e => e.Id).IsClustered(false);

            entity.HasIndex(e => new { e.EmpId, e.MainType }, "EmpID_MainType").IsClustered();

            entity.HasIndex(e => new { e.EmpId, e.Type }, "EmpID_Type");

            entity.HasIndex(e => e.RequestId, "RequestID");

            entity.Property(e => e.Id)
                .HasDefaultValueSql("(newid())")
                .HasColumnName("ID");
            entity.Property(e => e.Created)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime");
            entity.Property(e => e.DueDate).HasColumnType("datetime");
            entity.Property(e => e.EmpId).HasColumnName("EmpID");
            entity.Property(e => e.RequestId).HasColumnName("RequestID");
            entity.Property(e => e.RoleId).HasColumnName("RoleID");
            entity.Property(e => e.StartDate)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime");
        });

        modelBuilder.Entity<RequestTypeAction>(entity =>
        {
            entity.HasKey(e => new { e.AbsenceTypesId, e.ActionId }).HasName("PX_RequestTypeActions");

            entity.Property(e => e.AbsenceTypesId).HasColumnName("AbsenceTypesID");
            entity.Property(e => e.ActionId).HasColumnName("ActionID");
            entity.Property(e => e.Description).HasMaxLength(60);
            entity.Property(e => e.DescriptionTermId).HasColumnName("DescriptionTermID");
        });

        modelBuilder.Entity<RequestTypeStatus>(entity =>
        {
            entity.HasKey(e => new { e.AbsenceTypesId, e.StatusId }).HasName("PX_RequestTypeStatus");

            entity.ToTable("RequestTypeStatus");

            entity.Property(e => e.AbsenceTypesId).HasColumnName("AbsenceTypesID");
            entity.Property(e => e.StatusId).HasColumnName("StatusID");
            entity.Property(e => e.Description).HasMaxLength(60);
            entity.Property(e => e.DescriptionTermId).HasColumnName("DescriptionTermID");
            entity.Property(e => e.OrderId).HasColumnName("OrderID");
        });

        modelBuilder.Entity<RequestViewColumn>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK_ViewColumns");

            entity.Property(e => e.Id)
                .ValueGeneratedNever()
                .HasColumnName("ID");
            entity.Property(e => e.Caption).HasMaxLength(60);
            entity.Property(e => e.CaptionTermId).HasColumnName("CaptionTermID");
            entity.Property(e => e.Columns).HasMaxLength(500);
            entity.Property(e => e.Description).HasMaxLength(60);
            entity.Property(e => e.DescriptionSuffix).HasMaxLength(60);
            entity.Property(e => e.DescriptionSuffixTermId).HasColumnName("DescriptionSuffixTermID");
            entity.Property(e => e.DescriptionTermId).HasColumnName("DescriptionTermID");
            entity.Property(e => e.Joins).HasMaxLength(60);
        });

        modelBuilder.Entity<ResellerNews>(entity =>
        {
            entity.HasKey(e => e.Id)
                .HasName("PK_ResellerNews_ID")
                .IsClustered(false);

            entity.HasIndex(e => e.Id, "ResellerNews_Index").IsClustered();

            entity.Property(e => e.Id)
                .HasDefaultValueSql("(newid())")
                .HasColumnName("ID");
            entity.Property(e => e.BdlayoutId)
                .HasMaxLength(10)
                .IsFixedLength()
                .HasColumnName("BDLayoutID");
        });

        modelBuilder.Entity<ResourceStatus>(entity =>
        {
            entity.HasKey(e => e.Status);

            entity.ToTable("ResourceStatus");

            entity.Property(e => e.Status)
                .HasMaxLength(1)
                .IsFixedLength();
            entity.Property(e => e.Description).HasMaxLength(60);
            entity.Property(e => e.TermId).HasColumnName("TermID");
        });

        modelBuilder.Entity<ResourceType>(entity =>
        {
            entity.HasKey(e => e.Type);

            entity.Property(e => e.Type)
                .HasMaxLength(1)
                .IsFixedLength();
            entity.Property(e => e.Description).HasMaxLength(60);
            entity.Property(e => e.TermId).HasColumnName("TermID");
        });

        modelBuilder.Entity<Routing>(entity =>
        {
            entity.HasKey(e => e.Id).IsClustered(false);

            entity.HasIndex(e => new { e.Routing1, e.Step }, "IX_Routings_Routing")
                .IsUnique()
                .IsClustered();

            entity.Property(e => e.Id).HasColumnName("ID");
            entity.Property(e => e.Blocked).HasDefaultValue((byte)0);
            entity.Property(e => e.Description).HasMaxLength(30);
            entity.Property(e => e.Operation).HasMaxLength(10);
            entity.Property(e => e.Routing1)
                .HasMaxLength(10)
                .HasColumnName("Routing");
            entity.Property(e => e.Step).HasDefaultValue(10);
            entity.Property(e => e.Syscreated)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("syscreated");
            entity.Property(e => e.Syscreator).HasColumnName("syscreator");
            entity.Property(e => e.Sysguid)
                .HasDefaultValueSql("(newid())")
                .HasColumnName("sysguid");
            entity.Property(e => e.Sysmodified)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("sysmodified");
            entity.Property(e => e.Sysmodifier).HasColumnName("sysmodifier");
            entity.Property(e => e.Throughput).HasDefaultValue(1.0);
            entity.Property(e => e.Timestamp)
                .IsRowVersion()
                .IsConcurrencyToken()
                .HasColumnName("timestamp");
            entity.Property(e => e.Workcenter).HasMaxLength(10);
        });

        modelBuilder.Entity<SalesCycleDefinition>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK_SalesCycle");

            entity.Property(e => e.Id).HasColumnName("ID");
            entity.Property(e => e.Active).HasDefaultValue(true);
            entity.Property(e => e.Created)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime");
            entity.Property(e => e.Description).HasMaxLength(60);
            entity.Property(e => e.Modified)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime");
        });

        modelBuilder.Entity<SalesCycleDefinitionStage>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK_SalesCycleStages");

            entity.HasIndex(e => new { e.SalesCycleId, e.Stage }, "ix_Stage").IsUnique();

            entity.Property(e => e.Id).HasColumnName("ID");
            entity.Property(e => e.Created)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime");
            entity.Property(e => e.Description).HasMaxLength(30);
            entity.Property(e => e.Modified)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime");
            entity.Property(e => e.SalesCycleId).HasColumnName("SalesCycleID");
        });

        modelBuilder.Entity<ScgroupsOrderSetting>(entity =>
        {
            entity.HasKey(e => e.Person).IsClustered(false);

            entity.ToTable("SCGroupsOrderSettings");

            entity.Property(e => e.Person).ValueGeneratedNever();
        });

        modelBuilder.Entity<ScpcustomPage>(entity =>
        {
            entity.HasKey(e => e.Id).IsClustered(false);

            entity.ToTable("SCPCustomPages");

            entity.HasIndex(e => e.IsAuthenticated, "IX_SCPCustomPages_IsAuthenticated");

            entity.HasIndex(e => e.Name, "IX_SCPCustomPages_Name");

            entity.HasIndex(e => e.PortalId, "IX_SCPCustomPages_PortalID").IsClustered();

            entity.Property(e => e.Id)
                .ValueGeneratedNever()
                .HasColumnName("ID");
            entity.Property(e => e.Description).HasMaxLength(80);
            entity.Property(e => e.Name).HasMaxLength(150);
            entity.Property(e => e.PortalId).HasColumnName("PortalID");
            entity.Property(e => e.Syscreated)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("syscreated");
            entity.Property(e => e.Syscreator).HasColumnName("syscreator");
            entity.Property(e => e.Sysmodified)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("sysmodified");
            entity.Property(e => e.Sysmodifier).HasColumnName("sysmodifier");
        });

        modelBuilder.Entity<ScpfavoriteItem>(entity =>
        {
            entity.HasKey(e => e.Id).IsClustered(false);

            entity.ToTable("SCPFavoriteItems");

            entity.HasIndex(e => e.ContactPersonId, "IX_SCPFavoriteItems_ContactPersonID").IsClustered();

            entity.HasIndex(e => e.ItemCode, "IX_SCPFavoriteItems_ItemCode");

            entity.HasIndex(e => e.PortalId, "IX_SCPFavoriteItems_PortalID");

            entity.Property(e => e.Id)
                .ValueGeneratedNever()
                .HasColumnName("ID");
            entity.Property(e => e.ContactPersonId).HasColumnName("ContactPersonID");
            entity.Property(e => e.ItemCode).HasMaxLength(30);
            entity.Property(e => e.PortalId).HasColumnName("PortalID");

            entity.HasOne(d => d.ContactPerson).WithMany(p => p.ScpfavoriteItems)
                .HasPrincipalKey(p => p.CntId)
                .HasForeignKey(d => d.ContactPersonId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_SCPFavoriteItems_cicntp");
        });

        modelBuilder.Entity<ScpgeneralSetting>(entity =>
        {
            entity.HasKey(e => e.Id).IsClustered(false);

            entity.ToTable("SCPGeneralSettings");

            entity.HasIndex(e => e.IsAuthenticated, "IX_SCPGeneralSettings_IsAuthenticated");

            entity.HasIndex(e => e.PortalId, "IX_SCPGeneralSettings_PortalID").IsClustered();

            entity.HasIndex(e => e.Type, "IX_SCPGeneralSettings_Type");

            entity.Property(e => e.Id)
                .ValueGeneratedNever()
                .HasColumnName("ID");
            entity.Property(e => e.PortalId).HasColumnName("PortalID");
            entity.Property(e => e.Type).HasMaxLength(150);
        });

        modelBuilder.Entity<ScpitemCategoriesLink>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK_SCPItemCategoryLink");

            entity.ToTable("SCPItemCategoriesLink");

            entity.HasIndex(e => new { e.ItemCategoryCode, e.ItemCode }, "IX_SCPItemCategoriesLink_CategoryCode_ItemCode_Unique").IsUnique();

            entity.HasIndex(e => e.ItemCategoryCode, "IX_SCPItemCategoriesLink_ItemCategoryCode");

            entity.Property(e => e.Id)
                .ValueGeneratedNever()
                .HasColumnName("ID");
            entity.Property(e => e.DateFrom).HasColumnType("datetime");
            entity.Property(e => e.DateTo).HasColumnType("datetime");
            entity.Property(e => e.ItemCategoryCode).HasMaxLength(30);
            entity.Property(e => e.ItemCode).HasMaxLength(30);
        });

        modelBuilder.Entity<ScpitemCategory>(entity =>
        {
            entity.ToTable("SCPItemCategories");

            entity.HasIndex(e => e.Code, "IX_SCPItemCategories_Code");

            entity.HasIndex(e => new { e.Code, e.ParentCode, e.PortalId }, "IX_SCPItemCategories_CodeParentCodePortalID_Unique").IsUnique();

            entity.HasIndex(e => e.ParentCode, "IX_SCPItemCategories_ParentCode");

            entity.HasIndex(e => new { e.ParentCode, e.PortalId }, "IX_SCPItemCategories_ParentCodePortalID_Unique");

            entity.HasIndex(e => new { e.Code, e.ParentCode, e.PortalId }, "UQ_CodeParentCodePortalID").IsUnique();

            entity.Property(e => e.Id)
                .ValueGeneratedNever()
                .HasColumnName("ID");
            entity.Property(e => e.Code).HasMaxLength(30);
            entity.Property(e => e.ParentCode).HasMaxLength(30);
            entity.Property(e => e.PortalId).HasColumnName("PortalID");
        });

        modelBuilder.Entity<ScpitemsPerSession>(entity =>
        {
            entity.ToTable("SCPItemsPerSession");

            entity.HasIndex(e => new { e.PortalId, e.SessionId }, "UQ_PortalID_SessionID").IsUnique();

            entity.Property(e => e.Id).HasColumnName("ID");
            entity.Property(e => e.PortalId).HasColumnName("PortalID");
            entity.Property(e => e.SessionId).HasColumnName("SessionID");
            entity.Property(e => e.SysCreated)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime");
        });

        modelBuilder.Entity<ScplogSalesOrderHeader>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("SCPLogSalesOrderHeader");

            entity.HasIndex(e => e.Id, "IX_ID").IsClustered();

            entity.Property(e => e.ContactPersonId).HasColumnName("ContactPersonID");
            entity.Property(e => e.DeliveryDate).HasColumnType("datetime");
            entity.Property(e => e.DeliveryDebtor)
                .HasMaxLength(6)
                .IsFixedLength();
            entity.Property(e => e.DeliveryDebtorAddress1).HasMaxLength(100);
            entity.Property(e => e.DeliveryDebtorAddress2).HasMaxLength(100);
            entity.Property(e => e.DeliveryDebtorAddress3).HasMaxLength(100);
            entity.Property(e => e.DeliveryDebtorCity).HasMaxLength(100);
            entity.Property(e => e.DeliveryDebtorContactEmail).HasMaxLength(100);
            entity.Property(e => e.DeliveryDebtorContactPerson).HasMaxLength(100);
            entity.Property(e => e.DeliveryDebtorCountryCode)
                .HasMaxLength(3)
                .IsFixedLength();
            entity.Property(e => e.DeliveryDebtorCounty).HasMaxLength(100);
            entity.Property(e => e.DeliveryDebtorFax).HasMaxLength(50);
            entity.Property(e => e.DeliveryDebtorName).HasMaxLength(100);
            entity.Property(e => e.DeliveryDebtorPhone).HasMaxLength(50);
            entity.Property(e => e.DeliveryDebtorPostCode).HasMaxLength(20);
            entity.Property(e => e.DeliveryDebtorStateCode)
                .HasMaxLength(3)
                .IsFixedLength();
            entity.Property(e => e.Description1).HasMaxLength(100);
            entity.Property(e => e.Description2).HasMaxLength(100);
            entity.Property(e => e.Description3).HasMaxLength(100);
            entity.Property(e => e.Freefield1).HasMaxLength(100);
            entity.Property(e => e.Freefield2).HasMaxLength(100);
            entity.Property(e => e.Freefield3).HasMaxLength(100);
            entity.Property(e => e.Id).HasColumnName("ID");
            entity.Property(e => e.OrderDebtor)
                .HasMaxLength(6)
                .IsFixedLength();
            entity.Property(e => e.PortalId).HasColumnName("PortalID");
            entity.Property(e => e.Reference).HasMaxLength(500);
            entity.Property(e => e.SalesOrderNumber)
                .HasMaxLength(8)
                .IsFixedLength();
            entity.Property(e => e.SelectionCode)
                .HasMaxLength(2)
                .IsFixedLength();
            entity.Property(e => e.ShippingVia)
                .HasMaxLength(5)
                .IsFixedLength();
            entity.Property(e => e.Timestamp)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime");
            entity.Property(e => e.TransactionKey).HasColumnName("TRANSACTION_KEY");
            entity.Property(e => e.Warehouse).HasMaxLength(200);
            entity.Property(e => e.YourReference).HasMaxLength(30);
        });

        modelBuilder.Entity<ScplogSalesOrderLine>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("SCPLogSalesOrderLine");

            entity.HasIndex(e => e.Id, "SCPLogSalesOrderLine_Index").IsClustered();

            entity.Property(e => e.ContactPersonId).HasColumnName("ContactPersonID");
            entity.Property(e => e.DiscountPercentage).HasDefaultValue(0.0);
            entity.Property(e => e.Id).HasColumnName("ID");
            entity.Property(e => e.ItemCode).HasMaxLength(30);
            entity.Property(e => e.PortalId).HasColumnName("PortalID");
            entity.Property(e => e.SalesOrderHeaderId).HasColumnName("SalesOrderHeaderID");
            entity.Property(e => e.SalesOrderNumber)
                .HasMaxLength(8)
                .IsFixedLength();
            entity.Property(e => e.Timestamp)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime");
            entity.Property(e => e.TransactionKey).HasColumnName("TRANSACTION_KEY");
        });

        modelBuilder.Entity<ScppageSetting>(entity =>
        {
            entity.HasKey(e => e.Id).IsClustered(false);

            entity.ToTable("SCPPageSettings");

            entity.HasIndex(e => e.IsAuthenticated, "IX_SCPPageSettings_IsAuthenticated");

            entity.HasIndex(e => e.PortalId, "IX_SCPPageSettings_PortalID").IsClustered();

            entity.HasIndex(e => e.Type, "IX_SCPPageSettings_Type");

            entity.Property(e => e.Id)
                .ValueGeneratedNever()
                .HasColumnName("ID");
            entity.Property(e => e.PortalId).HasColumnName("PortalID");
            entity.Property(e => e.Type).HasMaxLength(150);
        });

        modelBuilder.Entity<Scpportal>(entity =>
        {
            entity.ToTable("SCPPortals");

            entity.HasIndex(e => e.VirtualDirectory, "IX_SCPPortals_VirtualDirectory");

            entity.HasIndex(e => e.Name, "SCPPortals_Name_Unique").IsUnique();

            entity.Property(e => e.Id)
                .ValueGeneratedNever()
                .HasColumnName("ID");
            entity.Property(e => e.Division)
                .HasMaxLength(3)
                .IsFixedLength();
            entity.Property(e => e.GlobeDatabase).HasMaxLength(128);
            entity.Property(e => e.GlobeServer).HasMaxLength(100);
            entity.Property(e => e.GlobeServiceHostName)
                .HasMaxLength(150)
                .HasDefaultValue("localhost");
            entity.Property(e => e.GlobeServiceHostPortNumber).HasDefaultValue(8010);
            entity.Property(e => e.InstallationFolder).HasMaxLength(100);
            entity.Property(e => e.Name).HasMaxLength(100);
            entity.Property(e => e.VirtualDirectory).HasMaxLength(100);
        });

        modelBuilder.Entity<ScpportalsEditRight>(entity =>
        {
            entity.ToTable("SCPPortalsEditRights");

            entity.HasIndex(e => e.ContactPersonId, "IX_SCPPortalsEditRights_ContactPersonID");

            entity.HasIndex(e => new { e.PortalId, e.ContactPersonId }, "SCPPortalsEditRights_PortalID_ContactPersonID").IsUnique();

            entity.Property(e => e.Id)
                .ValueGeneratedNever()
                .HasColumnName("ID");
            entity.Property(e => e.ContactPersonId).HasColumnName("ContactPersonID");
            entity.Property(e => e.PortalId).HasColumnName("PortalID");

            entity.HasOne(d => d.ContactPerson).WithMany(p => p.ScpportalsEditRights)
                .HasPrincipalKey(p => p.CntId)
                .HasForeignKey(d => d.ContactPersonId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_SCPPortalsEditRights_cicntp");
        });

        modelBuilder.Entity<ScpshippingLink>(entity =>
        {
            entity.ToTable("SCPShippingLink");

            entity.Property(e => e.Id)
                .ValueGeneratedNever()
                .HasColumnName("ID");
            entity.Property(e => e.Carrier).HasMaxLength(100);
            entity.Property(e => e.DeliveryMethod).HasMaxLength(100);
            entity.Property(e => e.PortalId).HasColumnName("PortalID");
            entity.Property(e => e.ServiceLevelOther).HasMaxLength(100);
            entity.Property(e => e.ServiceLevelTime).HasMaxLength(100);
            entity.Property(e => e.Syscreated)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("syscreated");
            entity.Property(e => e.Syscreator).HasColumnName("syscreator");
            entity.Property(e => e.Sysmodified)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("sysmodified");
            entity.Property(e => e.Sysmodifier).HasColumnName("sysmodifier");
        });

        modelBuilder.Entity<ScpshoppingCart>(entity =>
        {
            entity.HasKey(e => new { e.Code, e.ContactPersonId });

            entity.ToTable("SCPShoppingCarts");

            entity.HasIndex(e => e.Code, "IX_SCPShoppingCarts_Code");

            entity.HasIndex(e => e.ContactPersonId, "IX_SCPShoppingCarts_ContactPersonID");

            entity.HasIndex(e => e.PortalId, "IX_SCPShoppingCarts_PortalID");

            entity.Property(e => e.Code)
                .ValueGeneratedOnAdd()
                .HasColumnName("code");
            entity.Property(e => e.ContactPersonId).HasColumnName("ContactPersonID");
            entity.Property(e => e.Cart).HasColumnName("cart");
            entity.Property(e => e.PortalId).HasColumnName("PortalID");
            entity.Property(e => e.Syscreated)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("syscreated");
            entity.Property(e => e.Syscreator).HasColumnName("syscreator");
            entity.Property(e => e.Sysmodified)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("sysmodified");
            entity.Property(e => e.Sysmodifier).HasColumnName("sysmodifier");

            entity.HasOne(d => d.ContactPerson).WithMany(p => p.ScpshoppingCarts)
                .HasPrincipalKey(p => p.CntId)
                .HasForeignKey(d => d.ContactPersonId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_SCPShoppingCarts_cicntp");
        });

        modelBuilder.Entity<Scptranslation>(entity =>
        {
            entity.HasKey(e => e.Id).IsClustered(false);

            entity.ToTable("SCPTranslations");

            entity.HasIndex(e => e.Code, "IX_SCPTranslations_Code");

            entity.HasIndex(e => e.Entity, "IX_SCPTranslations_Entity");

            entity.HasIndex(e => e.Language, "IX_SCPTranslations_Language").IsClustered();

            entity.Property(e => e.Id)
                .ValueGeneratedNever()
                .HasColumnName("ID");
            entity.Property(e => e.Code).HasMaxLength(30);
            entity.Property(e => e.Entity).HasMaxLength(20);
            entity.Property(e => e.Language)
                .HasMaxLength(3)
                .IsFixedLength();
            entity.Property(e => e.Syscreated)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("syscreated");
            entity.Property(e => e.Syscreator).HasColumnName("syscreator");
            entity.Property(e => e.Sysmodified)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("sysmodified");
            entity.Property(e => e.Sysmodifier).HasColumnName("sysmodifier");
        });

        modelBuilder.Entity<Scpuser>(entity =>
        {
            entity.HasKey(e => e.ContactPersonId);

            entity.ToTable("SCPUsers");

            entity.HasIndex(e => e.Username, "SCPUsers_Username_Unique").IsUnique();

            entity.Property(e => e.ContactPersonId)
                .ValueGeneratedNever()
                .HasColumnName("ContactPersonID");
            entity.Property(e => e.Username).HasMaxLength(50);
        });

        modelBuilder.Entity<ScpwidgetSetting>(entity =>
        {
            entity.HasKey(e => e.Id).IsClustered(false);

            entity.ToTable("SCPWidgetSettings");

            entity.HasIndex(e => e.IsAuthenticated, "IX_SCPWidgetSettings_IsAuthenticated");

            entity.HasIndex(e => e.Page, "IX_SCPWidgetSettings_Page");

            entity.HasIndex(e => e.PortalId, "IX_SCPWidgetSettings_PortalID").IsClustered();

            entity.HasIndex(e => e.Type, "IX_SCPWidgetSettings_Type");

            entity.Property(e => e.Id)
                .ValueGeneratedNever()
                .HasColumnName("ID");
            entity.Property(e => e.Alignment).HasMaxLength(50);
            entity.Property(e => e.Page).HasMaxLength(250);
            entity.Property(e => e.PortalId).HasColumnName("PortalID");
            entity.Property(e => e.Type).HasMaxLength(150);
            entity.Property(e => e.Zone).HasMaxLength(250);
        });

        modelBuilder.Entity<SearchHistory>(entity =>
        {
            entity.HasIndex(e => new { e.ResourceId, e.Entity }, "IX_SearchHistories_ResourceEntity");

            entity.Property(e => e.Id)
                .ValueGeneratedNever()
                .HasColumnName("ID");
            entity.Property(e => e.Entity).HasMaxLength(30);
            entity.Property(e => e.LastSearched)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime");
            entity.Property(e => e.ResourceId).HasColumnName("ResourceID");
            entity.Property(e => e.SearchValue).HasMaxLength(255);
        });

        modelBuilder.Entity<SearchTemplate>(entity =>
        {
            entity.HasKey(e => e.Id).IsClustered(false);

            entity.HasIndex(e => new { e.SearchCode, e.Resource }, "IX_SearchTemplates_1").IsClustered();

            entity.HasIndex(e => new { e.SalesCycleId, e.Id }, "IX_SearchTemplates_SalesCycleId");

            entity.Property(e => e.Id)
                .ValueGeneratedNever()
                .HasColumnName("ID");
            entity.Property(e => e.Description).HasMaxLength(60);
            entity.Property(e => e.SalesCycleId).HasColumnName("SalesCycleID");
            entity.Property(e => e.SearchCode)
                .HasMaxLength(8)
                .IsFixedLength();
            entity.Property(e => e.Syscreated)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("syscreated");
            entity.Property(e => e.Syscreator).HasColumnName("syscreator");
        });

        modelBuilder.Entity<SearchTemplateField>(entity =>
        {
            entity.HasKey(e => e.Id).IsClustered(false);

            entity.HasIndex(e => e.Template, "IX_SearchTemplateFields_1").IsClustered();

            entity.Property(e => e.Id)
                .HasDefaultValueSql("(newid())")
                .HasColumnName("ID");
            entity.Property(e => e.Field).HasMaxLength(40);
            entity.Property(e => e.Value).HasMaxLength(255);
        });

        modelBuilder.Entity<SessionContext>(entity =>
        {
            entity.ToTable("SessionContext");

            entity.Property(e => e.Id)
                .ValueGeneratedNever()
                .HasColumnName("ID");
            entity.Property(e => e.EntityName).HasMaxLength(255);
            entity.Property(e => e.LastAccessedDate)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime");
            entity.Property(e => e.LastKeyRetrieved).HasMaxLength(255);
        });

        modelBuilder.Entity<SessionContext2>(entity =>
        {
            entity.ToTable("SessionContext2");

            entity.Property(e => e.Id)
                .ValueGeneratedNever()
                .HasColumnName("ID");
            entity.Property(e => e.EntityName).HasMaxLength(255);
            entity.Property(e => e.LastAccessedDate)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime");
            entity.Property(e => e.LastKeyRetrieved).HasMaxLength(255);
        });

        modelBuilder.Entity<SessionContext3>(entity =>
        {
            entity.ToTable("SessionContext3");

            entity.Property(e => e.Id)
                .ValueGeneratedNever()
                .HasColumnName("ID");
            entity.Property(e => e.EntityName).HasMaxLength(255);
            entity.Property(e => e.LastAccessedDate)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime");
            entity.Property(e => e.LastKeyRetrieved).HasMaxLength(255);
        });

        modelBuilder.Entity<Setting>(entity =>
        {
            entity.HasKey(e => new { e.SettingGroup, e.SettingName });

            entity.HasIndex(e => new { e.Profile, e.SettingGroup }, "Profile");

            entity.Property(e => e.SettingGroup).HasMaxLength(30);
            entity.Property(e => e.SettingName).HasMaxLength(30);
            entity.Property(e => e.BinaryValue).HasMaxLength(255);
            entity.Property(e => e.Category).HasMaxLength(30);
            entity.Property(e => e.DateValue).HasColumnType("datetime");
            entity.Property(e => e.Description).HasMaxLength(60);
            entity.Property(e => e.Profile)
                .HasMaxLength(10)
                .IsFixedLength();
            entity.Property(e => e.StringValue).HasMaxLength(255);
            entity.Property(e => e.TermId).HasColumnName("TermID");
        });

        modelBuilder.Entity<ShareCapital>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK_ShareCapital");

            entity.HasIndex(e => new { e.Division, e.ShareType }, "IX_ShareCapital");

            entity.Property(e => e.Id).HasColumnName("ID");
            entity.Property(e => e.Created)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime");
            entity.Property(e => e.Date).HasColumnType("datetime");
            entity.Property(e => e.Description).HasMaxLength(50);
            entity.Property(e => e.Division)
                .HasMaxLength(3)
                .IsFixedLength();
            entity.Property(e => e.Modified)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime");
            entity.Property(e => e.ShareType)
                .HasMaxLength(1)
                .IsFixedLength();
            entity.Property(e => e.TransactionType)
                .HasMaxLength(1)
                .IsFixedLength();
        });

        modelBuilder.Entity<ShareMovement>(entity =>
        {
            entity.HasIndex(e => e.ShareRegisterId, "IX_ShareMovements");

            entity.Property(e => e.Id).HasColumnName("ID");
            entity.Property(e => e.Created)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime");
            entity.Property(e => e.Modified)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime");
            entity.Property(e => e.Period)
                .HasMaxLength(3)
                .IsFixedLength();
            entity.Property(e => e.ShareRegisterId).HasColumnName("ShareRegisterID");
            entity.Property(e => e.TransactionDate).HasColumnType("datetime");
            entity.Property(e => e.TransactionType)
                .HasMaxLength(1)
                .IsFixedLength();
        });

        modelBuilder.Entity<ShareRegister>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK_ShareRegister");

            entity.HasIndex(e => new { e.Parent, e.Division, e.ShareType }, "IX_ShareRegister");

            entity.Property(e => e.Id).HasColumnName("ID");
            entity.Property(e => e.Created)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime");
            entity.Property(e => e.Division)
                .HasMaxLength(3)
                .IsFixedLength();
            entity.Property(e => e.Modified)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime");
            entity.Property(e => e.Parent)
                .HasMaxLength(3)
                .IsFixedLength();
            entity.Property(e => e.ShareType)
                .HasMaxLength(1)
                .IsFixedLength();
        });

        modelBuilder.Entity<ShippingDay>(entity =>
        {
            entity.HasKey(e => e.Id).IsClustered(false);

            entity.HasIndex(e => e.AddressId, "ShippingDays")
                .IsUnique()
                .IsClustered();

            entity.Property(e => e.Id).HasColumnName("ID");
            entity.Property(e => e.AddressId).HasColumnName("AddressID");
            entity.Property(e => e.Levwijze)
                .HasMaxLength(5)
                .IsFixedLength()
                .HasColumnName("levwijze");
            entity.Property(e => e.Magcode)
                .HasMaxLength(4)
                .IsFixedLength()
                .HasColumnName("magcode");
            entity.Property(e => e.Syscreated)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("syscreated");
            entity.Property(e => e.Syscreator).HasColumnName("syscreator");
            entity.Property(e => e.Sysguid)
                .HasDefaultValueSql("(newid())")
                .HasColumnName("sysguid");
            entity.Property(e => e.Sysmodified)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("sysmodified");
            entity.Property(e => e.Sysmodifier).HasColumnName("sysmodifier");
        });

        modelBuilder.Entity<Slrconfig>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("SLRConfig");

            entity.Property(e => e.Crdnr)
                .HasMaxLength(6)
                .IsFixedLength()
                .HasColumnName("crdnr");
            entity.Property(e => e.Name)
                .HasMaxLength(10)
                .IsFixedLength();
            entity.Property(e => e.Reknr)
                .HasMaxLength(9)
                .IsFixedLength()
                .HasColumnName("reknr");
            entity.Property(e => e.ValDate)
                .HasColumnType("datetime")
                .HasColumnName("valDate");
            entity.Property(e => e.ValDecimal).HasColumnType("decimal(18, 2)");
            entity.Property(e => e.ValDecimal4).HasColumnType("decimal(18, 4)");
            entity.Property(e => e.ValString).HasMaxLength(50);
        });

        modelBuilder.Entity<SmsactivityType>(entity =>
        {
            entity.ToTable("SMSActivityTypes");

            entity.HasIndex(e => e.Code, "IX_SMSActivityTypes");

            entity.Property(e => e.Id)
                .ValueGeneratedNever()
                .HasColumnName("ID");
            entity.Property(e => e.Bedrnr).HasMaxLength(3);
            entity.Property(e => e.Code).HasMaxLength(8);
            entity.Property(e => e.Description).HasMaxLength(50);
            entity.Property(e => e.Syscreated)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("syscreated");
            entity.Property(e => e.Syscreator).HasColumnName("syscreator");
            entity.Property(e => e.Sysmodified)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("sysmodified");
            entity.Property(e => e.Sysmodifier).HasColumnName("sysmodifier");
        });

        modelBuilder.Entity<SmsactivityTypeLine>(entity =>
        {
            entity.HasKey(e => e.Id).IsClustered(false);

            entity.ToTable("SMSActivityTypeLines");

            entity.HasIndex(e => e.SmsactivityTypes, "IX_SMSActivityTypes");

            entity.HasIndex(e => e.Id, "SMSActivityTypeLines_Index").IsClustered();

            entity.Property(e => e.Id)
                .ValueGeneratedNever()
                .HasColumnName("ID");
            entity.Property(e => e.SmsactivityTypes).HasColumnName("SMSActivityTypes");
            entity.Property(e => e.Syscreated)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("syscreated");
            entity.Property(e => e.Syscreator).HasColumnName("syscreator");
            entity.Property(e => e.Sysmodified)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("sysmodified");
            entity.Property(e => e.Sysmodifier).HasColumnName("sysmodifier");
        });

        modelBuilder.Entity<SmsagreementSet>(entity =>
        {
            entity.HasKey(e => e.Id).IsClustered(false);

            entity.ToTable("SMSAgreementSets");

            entity.HasIndex(e => e.Code, "IX_Code")
                .IsUnique()
                .IsClustered();

            entity.Property(e => e.Id)
                .ValueGeneratedNever()
                .HasColumnName("ID");
            entity.Property(e => e.Bedrnr).HasMaxLength(3);
            entity.Property(e => e.Code).HasMaxLength(20);
            entity.Property(e => e.CostCenterCode)
                .HasMaxLength(8)
                .IsFixedLength();
            entity.Property(e => e.CostUnitCode)
                .HasMaxLength(8)
                .IsFixedLength();
            entity.Property(e => e.Description).HasMaxLength(50);
            entity.Property(e => e.EndDate).HasColumnType("datetime");
            entity.Property(e => e.IndexationStatus)
                .HasMaxLength(1)
                .HasDefaultValue("N")
                .IsFixedLength();
            entity.Property(e => e.InvoiceFrequency)
                .HasMaxLength(1)
                .IsFixedLength();
            entity.Property(e => e.ProlongationType)
                .HasMaxLength(1)
                .IsFixedLength();
            entity.Property(e => e.StartDate).HasColumnType("datetime");
            entity.Property(e => e.Syscreated)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("syscreated");
            entity.Property(e => e.Syscreator).HasColumnName("syscreator");
            entity.Property(e => e.Sysmodified)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("sysmodified");
            entity.Property(e => e.Sysmodifier).HasColumnName("sysmodifier");
            entity.Property(e => e.Vatcode).HasColumnName("VATCode");
        });

        modelBuilder.Entity<SmsagreementSetLine>(entity =>
        {
            entity.ToTable("SMSAgreementSetLines");

            entity.HasIndex(e => e.AgreementSet, "IX_AgreementSet");

            entity.HasIndex(e => e.Item, "IX_Item");

            entity.Property(e => e.Id)
                .ValueGeneratedNever()
                .HasColumnName("ID");
            entity.Property(e => e.AddPartHourType)
                .HasMaxLength(1)
                .IsFixedLength();
            entity.Property(e => e.AgreementType)
                .HasMaxLength(1)
                .IsFixedLength();
            entity.Property(e => e.CostCenterCode)
                .HasMaxLength(8)
                .IsFixedLength();
            entity.Property(e => e.CostUnitCode)
                .HasMaxLength(8)
                .IsFixedLength();
            entity.Property(e => e.Description).HasMaxLength(60);
            entity.Property(e => e.EgpriceList)
                .HasMaxLength(30)
                .HasColumnName("EGPriceList");
            entity.Property(e => e.EndDate).HasColumnType("datetime");
            entity.Property(e => e.IndexationStatus)
                .HasMaxLength(1)
                .HasDefaultValue("N")
                .IsFixedLength();
            entity.Property(e => e.InvoiceDate).HasColumnType("datetime");
            entity.Property(e => e.InvoiceFrequency)
                .HasMaxLength(1)
                .IsFixedLength();
            entity.Property(e => e.PartsHoursSelection)
                .HasMaxLength(1)
                .IsFixedLength();
            entity.Property(e => e.Pmcontract)
                .HasMaxLength(1)
                .IsFixedLength()
                .HasColumnName("PMContract");
            entity.Property(e => e.Pmduration).HasColumnName("PMDuration");
            entity.Property(e => e.PmstartNextRequest)
                .HasMaxLength(1)
                .IsFixedLength()
                .HasColumnName("PMStartNextRequest");
            entity.Property(e => e.PmstartTime)
                .HasColumnType("datetime")
                .HasColumnName("PMStartTime");
            entity.Property(e => e.Pmtime).HasColumnName("PMTime");
            entity.Property(e => e.PmtimeInterval).HasColumnName("PMTimeInterval");
            entity.Property(e => e.PmtimeUnits)
                .HasMaxLength(1)
                .IsFixedLength()
                .HasColumnName("PMTimeUnits");
            entity.Property(e => e.Pmtype).HasColumnName("PMType");
            entity.Property(e => e.Pmusage).HasColumnName("PMUsage");
            entity.Property(e => e.PmusageInterval).HasColumnName("PMUsageInterval");
            entity.Property(e => e.PrepaidType)
                .HasMaxLength(1)
                .IsFixedLength();
            entity.Property(e => e.ProlongationType)
                .HasMaxLength(1)
                .IsFixedLength();
            entity.Property(e => e.ResponseTimeId).HasColumnName("ResponseTimeID");
            entity.Property(e => e.ResponseTimeUnit)
                .HasMaxLength(1)
                .IsFixedLength();
            entity.Property(e => e.ShortDescription).HasMaxLength(30);
            entity.Property(e => e.StartDate).HasColumnType("datetime");
            entity.Property(e => e.Syscreated)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("syscreated");
            entity.Property(e => e.Syscreator).HasColumnName("syscreator");
            entity.Property(e => e.Sysmodified)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("sysmodified");
            entity.Property(e => e.Sysmodifier).HasColumnName("sysmodifier");
            entity.Property(e => e.Vatcode).HasColumnName("VATCode");
        });

        modelBuilder.Entity<SmsconfigAgreementRegistry>(entity =>
        {
            entity.ToTable("SMSConfigAgreementRegistry");

            entity.Property(e => e.Id)
                .ValueGeneratedNever()
                .HasColumnName("ID");
            entity.Property(e => e.Syscreated)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("syscreated");
            entity.Property(e => e.Syscreator).HasColumnName("syscreator");
            entity.Property(e => e.Sysmodified)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("sysmodified");
            entity.Property(e => e.Sysmodifier).HasColumnName("sysmodifier");
        });

        modelBuilder.Entity<Smsconfiguration>(entity =>
        {
            entity.ToTable("SMSConfigurations");

            entity.HasIndex(e => e.Item, "IX_Item");

            entity.HasIndex(e => new { e.ConfigurationHeaderId, e.Active }, "IX_SMSConfigurationHeaderID");

            entity.Property(e => e.Id)
                .ValueGeneratedNever()
                .HasColumnName("ID");
            entity.Property(e => e.ConfigurationHeaderId).HasColumnName("ConfigurationHeaderID");
            entity.Property(e => e.EndAction)
                .HasMaxLength(1)
                .IsFixedLength();
            entity.Property(e => e.EndDate).HasColumnType("datetime");
            entity.Property(e => e.StartDate).HasColumnType("datetime");
            entity.Property(e => e.StartOrigin).HasMaxLength(30);
            entity.Property(e => e.StartType)
                .HasMaxLength(1)
                .IsFixedLength();
            entity.Property(e => e.Syscreated)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("syscreated");
            entity.Property(e => e.Syscreator).HasColumnName("syscreator");
            entity.Property(e => e.Sysmodified)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("sysmodified");
            entity.Property(e => e.Sysmodifier).HasColumnName("sysmodifier");
        });

        modelBuilder.Entity<SmsconfigurationChildrenView>(entity =>
        {
            entity
                .HasNoKey()
                .ToView("SMSConfigurationChildrenView");

            entity.Property(e => e.Id).HasColumnName("ID");
            entity.Property(e => e.MainParentId).HasColumnName("MainParentID");
        });

        modelBuilder.Entity<SmsconfigurationHeader>(entity =>
        {
            entity.ToTable("SMSConfigurationHeader");

            entity.HasIndex(e => e.Account, "IX_Account");

            entity.HasIndex(e => e.ConfigurationCode, "IX_SMSConfigurationHeader");

            entity.Property(e => e.Id)
                .ValueGeneratedNever()
                .HasColumnName("ID");
            entity.Property(e => e.Bedrnr).HasMaxLength(3);
            entity.Property(e => e.ConfigurationCode).HasMaxLength(30);
            entity.Property(e => e.DateField1).HasColumnType("datetime");
            entity.Property(e => e.DateField2).HasColumnType("datetime");
            entity.Property(e => e.DateField3).HasColumnType("datetime");
            entity.Property(e => e.DateField4).HasColumnType("datetime");
            entity.Property(e => e.DateField5).HasColumnType("datetime");
            entity.Property(e => e.Description).HasMaxLength(80);
            entity.Property(e => e.Location).HasMaxLength(80);
            entity.Property(e => e.Project).HasMaxLength(20);
            entity.Property(e => e.Syscreated)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("syscreated");
            entity.Property(e => e.Syscreator).HasColumnName("syscreator");
            entity.Property(e => e.Sysmodified)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("sysmodified");
            entity.Property(e => e.Sysmodifier).HasColumnName("sysmodifier");
            entity.Property(e => e.TextField1).HasMaxLength(80);
            entity.Property(e => e.TextField2).HasMaxLength(80);
            entity.Property(e => e.TextField3).HasMaxLength(80);
            entity.Property(e => e.TextField4).HasMaxLength(80);
            entity.Property(e => e.TextField5).HasMaxLength(80);
        });

        modelBuilder.Entity<Smscontract>(entity =>
        {
            entity.HasKey(e => e.Id).IsClustered(false);

            entity.ToTable("SMSContracts");

            entity.HasIndex(e => e.Number, "IX_SMSContracts").IsClustered();

            entity.HasIndex(e => e.Account, "IX_SMSContracts_Account");

            entity.Property(e => e.Id)
                .ValueGeneratedNever()
                .HasColumnName("ID");
            entity.Property(e => e.Currency)
                .HasMaxLength(3)
                .IsFixedLength();
            entity.Property(e => e.DateField1).HasColumnType("datetime");
            entity.Property(e => e.DateField10).HasColumnType("datetime");
            entity.Property(e => e.DateField2).HasColumnType("datetime");
            entity.Property(e => e.DateField3).HasColumnType("datetime");
            entity.Property(e => e.DateField4).HasColumnType("datetime");
            entity.Property(e => e.DateField5).HasColumnType("datetime");
            entity.Property(e => e.DateField6).HasColumnType("datetime");
            entity.Property(e => e.DateField7).HasColumnType("datetime");
            entity.Property(e => e.DateField8).HasColumnType("datetime");
            entity.Property(e => e.DateField9).HasColumnType("datetime");
            entity.Property(e => e.DivisionCode)
                .HasMaxLength(3)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.EndDateDefault).HasColumnType("datetime");
            entity.Property(e => e.IndexationStatus)
                .HasMaxLength(1)
                .HasDefaultValue("N")
                .IsFixedLength();
            entity.Property(e => e.InvoiceComments).HasMaxLength(160);
            entity.Property(e => e.InvoiceFrequencyDefault)
                .HasMaxLength(1)
                .IsFixedLength();
            entity.Property(e => e.InvoiceLineGrouping)
                .HasMaxLength(1)
                .IsFixedLength();
            entity.Property(e => e.InvoiceLineSorting)
                .HasMaxLength(1)
                .IsUnicode(false)
                .HasDefaultValueSql("((0))")
                .IsFixedLength();
            entity.Property(e => e.InvoicingStatus)
                .HasMaxLength(1)
                .IsFixedLength();
            entity.Property(e => e.LastIndexedDate).HasColumnType("datetime");
            entity.Property(e => e.LastProlongedDate).HasColumnType("datetime");
            entity.Property(e => e.LockDate).HasColumnType("datetime");
            entity.Property(e => e.LockType)
                .HasMaxLength(1)
                .HasDefaultValue("N")
                .IsFixedLength();
            entity.Property(e => e.Number).HasMaxLength(50);
            entity.Property(e => e.PaymentCondition)
                .HasMaxLength(5)
                .IsFixedLength();
            entity.Property(e => e.ProjectNr).HasMaxLength(20);
            entity.Property(e => e.ReferenceNumber).HasMaxLength(40);
            entity.Property(e => e.SelectionCode)
                .HasMaxLength(2)
                .IsFixedLength();
            entity.Property(e => e.SopminvoiceAccount1).HasColumnName("SOPMInvoiceAccount1");
            entity.Property(e => e.SopminvoiceAccount2).HasColumnName("SOPMInvoiceAccount2");
            entity.Property(e => e.SopminvoiceAccount3).HasColumnName("SOPMInvoiceAccount3");
            entity.Property(e => e.SopminvoiceAccount4).HasColumnName("SOPMInvoiceAccount4");
            entity.Property(e => e.SopminvoiceAccount5).HasColumnName("SOPMInvoiceAccount5");
            entity.Property(e => e.StartDateDefault).HasColumnType("datetime");
            entity.Property(e => e.Status)
                .HasMaxLength(1)
                .IsFixedLength();
            entity.Property(e => e.Syscreated)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("syscreated");
            entity.Property(e => e.Syscreator).HasColumnName("syscreator");
            entity.Property(e => e.Sysmodified)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("sysmodified");
            entity.Property(e => e.Sysmodifier).HasColumnName("sysmodifier");
            entity.Property(e => e.TextField1).HasMaxLength(80);
            entity.Property(e => e.TextField10).HasMaxLength(80);
            entity.Property(e => e.TextField2).HasMaxLength(80);
            entity.Property(e => e.TextField3).HasMaxLength(80);
            entity.Property(e => e.TextField4).HasMaxLength(80);
            entity.Property(e => e.TextField5).HasMaxLength(80);
            entity.Property(e => e.TextField6).HasMaxLength(80);
            entity.Property(e => e.TextField7).HasMaxLength(80);
            entity.Property(e => e.TextField8).HasMaxLength(80);
            entity.Property(e => e.TextField9).HasMaxLength(80);
            entity.Property(e => e.TransactionId).HasColumnName("TransactionID");
            entity.Property(e => e.TransactionStatus)
                .HasMaxLength(4)
                .IsFixedLength();
            entity.Property(e => e.VatcodeDefault).HasColumnName("VATCodeDefault");
        });

        modelBuilder.Entity<SmscontractAgreement>(entity =>
        {
            entity.ToTable("SMSContractAgreements");

            entity.HasIndex(e => new { e.ContractHeader, e.ResponseTimeUnit }, "IX_ContractHeader");

            entity.HasIndex(e => e.Parent, "IX_Parent");

            entity.Property(e => e.Id)
                .ValueGeneratedNever()
                .HasColumnName("ID");
            entity.Property(e => e.AddPartHourType)
                .HasMaxLength(1)
                .IsFixedLength();
            entity.Property(e => e.CostCenterCode)
                .HasMaxLength(8)
                .IsFixedLength();
            entity.Property(e => e.CostUnitCode)
                .HasMaxLength(8)
                .IsFixedLength();
            entity.Property(e => e.DateField1).HasColumnType("datetime");
            entity.Property(e => e.DateField10).HasColumnType("datetime");
            entity.Property(e => e.DateField2).HasColumnType("datetime");
            entity.Property(e => e.DateField3).HasColumnType("datetime");
            entity.Property(e => e.DateField4).HasColumnType("datetime");
            entity.Property(e => e.DateField5).HasColumnType("datetime");
            entity.Property(e => e.DateField6).HasColumnType("datetime");
            entity.Property(e => e.DateField7).HasColumnType("datetime");
            entity.Property(e => e.DateField8).HasColumnType("datetime");
            entity.Property(e => e.DateField9).HasColumnType("datetime");
            entity.Property(e => e.Description).HasMaxLength(60);
            entity.Property(e => e.EgpriceList)
                .HasMaxLength(30)
                .HasColumnName("EGPriceList");
            entity.Property(e => e.EndDate).HasColumnType("datetime");
            entity.Property(e => e.GeneratedUntilDate).HasColumnType("datetime");
            entity.Property(e => e.IndexationStatus)
                .HasMaxLength(1)
                .HasDefaultValue("N")
                .IsFixedLength();
            entity.Property(e => e.InvoiceDate).HasColumnType("datetime");
            entity.Property(e => e.InvoicedUntilDate).HasColumnType("datetime");
            entity.Property(e => e.LastIndexedDate)
                .HasDefaultValueSql("(NULL)")
                .HasColumnType("datetime");
            entity.Property(e => e.OldGeneratedUntilDate).HasColumnType("datetime");
            entity.Property(e => e.OldInvoicedUntilDate).HasColumnType("datetime");
            entity.Property(e => e.PartsHoursSelection)
                .HasMaxLength(1)
                .IsFixedLength();
            entity.Property(e => e.Pmcontract)
                .HasMaxLength(1)
                .IsFixedLength()
                .HasColumnName("PMContract");
            entity.Property(e => e.Pmduration).HasColumnName("PMDuration");
            entity.Property(e => e.PmstartNextRequest)
                .HasMaxLength(1)
                .IsFixedLength()
                .HasColumnName("PMStartNextRequest");
            entity.Property(e => e.PmstartTime)
                .HasColumnType("datetime")
                .HasColumnName("PMStartTime");
            entity.Property(e => e.Pmtime).HasColumnName("PMTime");
            entity.Property(e => e.PmtimeInterval).HasColumnName("PMTimeInterval");
            entity.Property(e => e.PmtimeUnits)
                .HasMaxLength(1)
                .IsFixedLength()
                .HasColumnName("PMTimeUnits");
            entity.Property(e => e.Pmtype).HasColumnName("PMType");
            entity.Property(e => e.Pmusage).HasColumnName("PMUsage");
            entity.Property(e => e.PmusageInterval).HasColumnName("PMUsageInterval");
            entity.Property(e => e.PrepaidType)
                .HasMaxLength(1)
                .IsFixedLength();
            entity.Property(e => e.ProlongationType)
                .HasMaxLength(1)
                .IsFixedLength();
            entity.Property(e => e.ResponseTimeId).HasColumnName("ResponseTimeID");
            entity.Property(e => e.ResponseTimeUnit)
                .HasMaxLength(1)
                .IsFixedLength();
            entity.Property(e => e.ShortDescription).HasMaxLength(30);
            entity.Property(e => e.StartDate).HasColumnType("datetime");
            entity.Property(e => e.Syscreated)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("syscreated");
            entity.Property(e => e.Syscreator).HasColumnName("syscreator");
            entity.Property(e => e.Sysmodified)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("sysmodified");
            entity.Property(e => e.Sysmodifier).HasColumnName("sysmodifier");
            entity.Property(e => e.TextField1).HasMaxLength(80);
            entity.Property(e => e.TextField10).HasMaxLength(80);
            entity.Property(e => e.TextField2).HasMaxLength(80);
            entity.Property(e => e.TextField3).HasMaxLength(80);
            entity.Property(e => e.TextField4).HasMaxLength(80);
            entity.Property(e => e.TextField5).HasMaxLength(80);
            entity.Property(e => e.TextField6).HasMaxLength(80);
            entity.Property(e => e.TextField7).HasMaxLength(80);
            entity.Property(e => e.TextField8).HasMaxLength(80);
            entity.Property(e => e.TextField9).HasMaxLength(80);
            entity.Property(e => e.Type)
                .HasMaxLength(1)
                .IsFixedLength();
            entity.Property(e => e.Vatcode).HasColumnName("VATCode");
        });

        modelBuilder.Entity<SmscontractItem>(entity =>
        {
            entity.ToTable("SMSContractItems");

            entity.HasIndex(e => new { e.ContractHeader, e.LineNumber }, "IX_ContractHeader");

            entity.Property(e => e.Id)
                .ValueGeneratedNever()
                .HasColumnName("ID");
            entity.Property(e => e.EndDate).HasColumnType("datetime");
            entity.Property(e => e.InvoicedUntilDate).HasColumnType("datetime");
            entity.Property(e => e.OldInvoicedUntilDate).HasColumnType("datetime");
            entity.Property(e => e.ProlongationType)
                .HasMaxLength(1)
                .IsFixedLength();
            entity.Property(e => e.StartDate).HasColumnType("datetime");
            entity.Property(e => e.Syscreated)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("syscreated");
            entity.Property(e => e.Syscreator).HasColumnName("syscreator");
            entity.Property(e => e.Sysmodified)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("sysmodified");
            entity.Property(e => e.Sysmodifier).HasColumnName("sysmodifier");
            entity.Property(e => e.Vatcode).HasColumnName("VATCode");
        });

        modelBuilder.Entity<SmscontractLink>(entity =>
        {
            entity.ToTable("SMSContractLinks");

            entity.HasIndex(e => new { e.ContractItem, e.Configuration }, "IX_SMSContractLinks");

            entity.Property(e => e.Id)
                .ValueGeneratedNever()
                .HasColumnName("ID");
            entity.Property(e => e.InvoicedUntil).HasColumnType("datetime");
            entity.Property(e => e.OldInvoicedUntil).HasColumnType("datetime");
            entity.Property(e => e.Syscreated)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("syscreated");
            entity.Property(e => e.Syscreator).HasColumnName("syscreator");
            entity.Property(e => e.Sysmodified)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("sysmodified");
            entity.Property(e => e.Sysmodifier).HasColumnName("sysmodifier");
        });

        modelBuilder.Entity<SmscontractRate>(entity =>
        {
            entity.ToTable("SMSContractRates");

            entity.HasIndex(e => e.Agreement, "IX_Agreement");

            entity.Property(e => e.Id)
                .ValueGeneratedNever()
                .HasColumnName("ID");
            entity.Property(e => e.DefaultContractRateId).HasColumnName("DefaultContractRateID");
            entity.Property(e => e.DefaultFrequency)
                .HasMaxLength(1)
                .IsFixedLength();
            entity.Property(e => e.InvoiceFrequency)
                .HasMaxLength(1)
                .IsFixedLength();
            entity.Property(e => e.Syscreated)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("syscreated");
            entity.Property(e => e.Syscreator).HasColumnName("syscreator");
            entity.Property(e => e.Sysmodified)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("sysmodified");
            entity.Property(e => e.Sysmodifier).HasColumnName("sysmodifier");
        });

        modelBuilder.Entity<SmscontractTemplate>(entity =>
        {
            entity.HasKey(e => e.Id).IsClustered(false);

            entity.ToTable("SMSContractTemplates");

            entity.HasIndex(e => e.Code, "IX_SMSContractTemplates").IsClustered();

            entity.Property(e => e.Id)
                .ValueGeneratedNever()
                .HasColumnName("ID");
            entity.Property(e => e.Bedrnr).HasMaxLength(3);
            entity.Property(e => e.Code).HasMaxLength(20);
            entity.Property(e => e.ContactKeyOrigin)
                .HasMaxLength(1)
                .IsFixedLength();
            entity.Property(e => e.ContactOrigin)
                .HasMaxLength(1)
                .IsFixedLength();
            entity.Property(e => e.CostCenterOrigin)
                .HasMaxLength(1)
                .IsFixedLength();
            entity.Property(e => e.Currency)
                .HasMaxLength(3)
                .IsFixedLength();
            entity.Property(e => e.CurrencyOrigin)
                .HasMaxLength(1)
                .IsFixedLength();
            entity.Property(e => e.Description).HasMaxLength(50);
            entity.Property(e => e.DivisionCode)
                .HasMaxLength(3)
                .IsFixedLength();
            entity.Property(e => e.DivisionOrigin)
                .HasMaxLength(1)
                .IsFixedLength();
            entity.Property(e => e.EndDate).HasColumnType("datetime");
            entity.Property(e => e.EndDateOrigin)
                .HasMaxLength(1)
                .IsFixedLength();
            entity.Property(e => e.IndexationStatus)
                .HasMaxLength(1)
                .HasDefaultValue("N")
                .IsFixedLength();
            entity.Property(e => e.InvoiceAccountOrigin)
                .HasMaxLength(1)
                .IsFixedLength();
            entity.Property(e => e.InvoiceFrequency)
                .HasMaxLength(1)
                .IsFixedLength();
            entity.Property(e => e.InvoiceLineGrouping)
                .HasMaxLength(1)
                .IsFixedLength();
            entity.Property(e => e.InvoiceLineSorting)
                .HasMaxLength(1)
                .IsUnicode(false)
                .HasDefaultValueSql("((0))")
                .IsFixedLength();
            entity.Property(e => e.InvoicingStatus)
                .HasMaxLength(1)
                .IsFixedLength();
            entity.Property(e => e.ProjectNr).HasMaxLength(20);
            entity.Property(e => e.ProjectOrigin)
                .HasMaxLength(1)
                .IsFixedLength();
            entity.Property(e => e.SelectionCode)
                .HasMaxLength(2)
                .IsFixedLength();
            entity.Property(e => e.ServiceInvoiceAccount1Origin)
                .HasMaxLength(1)
                .IsFixedLength();
            entity.Property(e => e.ServiceInvoiceAccount2Origin)
                .HasMaxLength(1)
                .IsFixedLength();
            entity.Property(e => e.ServiceInvoiceAccount3Origin)
                .HasMaxLength(1)
                .IsFixedLength();
            entity.Property(e => e.ServiceInvoiceAccount4Origin)
                .HasMaxLength(1)
                .IsFixedLength();
            entity.Property(e => e.ServiceInvoiceAccount5Origin)
                .HasMaxLength(1)
                .IsFixedLength();
            entity.Property(e => e.StartDate).HasColumnType("datetime");
            entity.Property(e => e.StartDateOrigin)
                .HasMaxLength(1)
                .IsFixedLength();
            entity.Property(e => e.Syscreated)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("syscreated");
            entity.Property(e => e.Syscreator).HasColumnName("syscreator");
            entity.Property(e => e.Sysmodified)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("sysmodified");
            entity.Property(e => e.Sysmodifier).HasColumnName("sysmodifier");
            entity.Property(e => e.Vatcode).HasColumnName("VATCode");
        });

        modelBuilder.Entity<SmscontractTemplateAgrSet>(entity =>
        {
            entity.ToTable("SMSContractTemplateAgrSets");

            entity.HasIndex(e => new { e.ContractTemplate, e.LineOrder }, "IX_Template_Line");

            entity.Property(e => e.Id)
                .ValueGeneratedNever()
                .HasColumnName("ID");
            entity.Property(e => e.AgrSetLineId).HasColumnName("AgrSetLineID");
            entity.Property(e => e.Syscreated)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("syscreated");
            entity.Property(e => e.Syscreator).HasColumnName("syscreator");
            entity.Property(e => e.Sysmodified)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("sysmodified");
            entity.Property(e => e.Sysmodifier).HasColumnName("sysmodifier");
        });

        modelBuilder.Entity<SmscontractType>(entity =>
        {
            entity.HasKey(e => e.Id).IsClustered(false);

            entity.ToTable("SMSContractTypes");

            entity.HasIndex(e => e.Type, "IX_SMSContractTypes")
                .IsUnique()
                .IsClustered();

            entity.Property(e => e.Id)
                .ValueGeneratedNever()
                .HasColumnName("ID");
            entity.Property(e => e.Bedrnr).HasMaxLength(3);
            entity.Property(e => e.Description).HasMaxLength(50);
            entity.Property(e => e.Syscreated)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("syscreated");
            entity.Property(e => e.Syscreator).HasColumnName("syscreator");
            entity.Property(e => e.Sysmodified)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("sysmodified");
            entity.Property(e => e.Sysmodifier).HasColumnName("sysmodifier");
            entity.Property(e => e.Type).HasMaxLength(20);
        });

        modelBuilder.Entity<SmscostExportView>(entity =>
        {
            entity
                .HasNoKey()
                .ToView("SMSCostExportView");

            entity.Property(e => e.AccountCode).HasMaxLength(20);
            entity.Property(e => e.CostAccountItem).HasMaxLength(9);
            entity.Property(e => e.CostAccountServiceItem).HasMaxLength(9);
            entity.Property(e => e.Costcenter)
                .HasMaxLength(8)
                .IsFixedLength();
            entity.Property(e => e.Costunit)
                .HasMaxLength(8)
                .IsFixedLength();
            entity.Property(e => e.Currency).HasMaxLength(255);
            entity.Property(e => e.DebtorCode).HasMaxLength(20);
            entity.Property(e => e.DebtorNumber)
                .HasMaxLength(6)
                .IsFixedLength();
            entity.Property(e => e.Description).HasMaxLength(255);
            entity.Property(e => e.Division)
                .HasMaxLength(3)
                .IsFixedLength();
            entity.Property(e => e.EndDate).HasColumnType("datetime");
            entity.Property(e => e.Item).HasMaxLength(30);
            entity.Property(e => e.Itemtype)
                .HasMaxLength(1)
                .IsFixedLength();
            entity.Property(e => e.Project).HasMaxLength(20);
            entity.Property(e => e.Reference).HasMaxLength(40);
            entity.Property(e => e.SerialNumber).HasMaxLength(30);
            entity.Property(e => e.ServiceItem).HasMaxLength(30);
            entity.Property(e => e.ServiceSerialNumber).HasMaxLength(30);
            entity.Property(e => e.StartDate).HasColumnType("datetime");
            entity.Property(e => e.StockAccountItem).HasMaxLength(9);
            entity.Property(e => e.StockAccountServiceItem).HasMaxLength(9);
            entity.Property(e => e.Warehouse)
                .HasMaxLength(4)
                .IsFixedLength();
        });

        modelBuilder.Entity<SmscreatedDocument>(entity =>
        {
            entity.ToTable("SMSCreatedDocuments");

            entity.Property(e => e.Id)
                .ValueGeneratedNever()
                .HasColumnName("ID");
            entity.Property(e => e.Syscreated)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("syscreated");
            entity.Property(e => e.Syscreator).HasColumnName("syscreator");
        });

        modelBuilder.Entity<SmsdefaultContractRatesHeader>(entity =>
        {
            entity.ToTable("SMSDefaultContractRatesHeader");

            entity.Property(e => e.Id)
                .ValueGeneratedNever()
                .HasColumnName("ID");
            entity.Property(e => e.AgreementType)
                .HasMaxLength(1)
                .IsFixedLength();
            entity.Property(e => e.Currency)
                .HasMaxLength(3)
                .IsFixedLength();
            entity.Property(e => e.EndDate).HasColumnType("datetime");
            entity.Property(e => e.ItemCode).HasMaxLength(30);
            entity.Property(e => e.Pmtype).HasColumnName("PMType");
            entity.Property(e => e.StartDate).HasColumnType("datetime");
            entity.Property(e => e.Syscreated)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("syscreated");
            entity.Property(e => e.Syscreator).HasColumnName("syscreator");
            entity.Property(e => e.Sysmodified)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("sysmodified");
            entity.Property(e => e.Sysmodifier).HasColumnName("sysmodifier");
        });

        modelBuilder.Entity<SmsdefaultContractRatesLine>(entity =>
        {
            entity.ToTable("SMSDefaultContractRatesLines");

            entity.Property(e => e.Id)
                .ValueGeneratedNever()
                .HasColumnName("ID");
            entity.Property(e => e.Frequency)
                .HasMaxLength(1)
                .IsFixedLength();
        });

        modelBuilder.Entity<SmsdpcompressedPlanningHeadersView>(entity =>
        {
            entity
                .HasNoKey()
                .ToView("SMSDPCompressedPlanningHeadersView");

            entity.Property(e => e.AbsenceId).HasColumnName("AbsenceID");
            entity.Property(e => e.Assistant)
                .HasMaxLength(100)
                .UseCollation("SQL_Latin1_General_CP1_CI_AI");
            entity.Property(e => e.CostCenter).HasMaxLength(30);
            entity.Property(e => e.CostUnit).HasMaxLength(30);
            entity.Property(e => e.Division).HasMaxLength(30);
            entity.Property(e => e.Email).HasMaxLength(100);
            entity.Property(e => e.EndDate).HasColumnType("datetime");
            entity.Property(e => e.Fax).HasMaxLength(30);
            entity.Property(e => e.FirstName)
                .HasMaxLength(100)
                .UseCollation("SQL_Latin1_General_CP1_CI_AI");
            entity.Property(e => e.FullName)
                .HasMaxLength(100)
                .UseCollation("SQL_Latin1_General_CP1_CI_AI");
            entity.Property(e => e.Group).HasMaxLength(60);
            entity.Property(e => e.HeaderEndDate).HasColumnType("datetime");
            entity.Property(e => e.Initials)
                .HasMaxLength(10)
                .UseCollation("SQL_Latin1_General_CP1_CI_AI");
            entity.Property(e => e.JobActivity).HasMaxLength(100);
            entity.Property(e => e.JobGroup).HasMaxLength(100);
            entity.Property(e => e.JobTitle).HasMaxLength(30);
            entity.Property(e => e.LastName)
                .HasMaxLength(100)
                .UseCollation("SQL_Latin1_General_CP1_CI_AI");
            entity.Property(e => e.Manager)
                .HasMaxLength(100)
                .UseCollation("SQL_Latin1_General_CP1_CI_AI");
            entity.Property(e => e.MiddleName)
                .HasMaxLength(50)
                .UseCollation("SQL_Latin1_General_CP1_CI_AI");
            entity.Property(e => e.MobileExtension).HasMaxLength(20);
            entity.Property(e => e.MobilePhone).HasMaxLength(50);
            entity.Property(e => e.Phone).HasMaxLength(50);
            entity.Property(e => e.PhoneExtension).HasMaxLength(10);
            entity.Property(e => e.ResourceId).HasColumnName("ResourceID");
            entity.Property(e => e.Title).HasMaxLength(30);
            entity.Property(e => e.UserName).HasMaxLength(50);
        });

        modelBuilder.Entity<SmsdpcompressedPlanningLinesView>(entity =>
        {
            entity
                .HasNoKey()
                .ToView("SMSDPCompressedPlanningLinesView");

            entity.Property(e => e.AbsenceId).HasColumnName("AbsenceID");
            entity.Property(e => e.ActivityType).HasMaxLength(22);
            entity.Property(e => e.ContactFirstName)
                .HasMaxLength(50)
                .UseCollation("SQL_Latin1_General_CP1_CI_AI");
            entity.Property(e => e.ContactFullName)
                .HasMaxLength(100)
                .UseCollation("SQL_Latin1_General_CP1_CI_AI");
            entity.Property(e => e.ContactInitials)
                .HasMaxLength(20)
                .UseCollation("SQL_Latin1_General_CP1_CI_AI");
            entity.Property(e => e.ContactLastName)
                .HasMaxLength(100)
                .UseCollation("SQL_Latin1_General_CP1_CI_AI");
            entity.Property(e => e.ContactMiddleName)
                .HasMaxLength(50)
                .UseCollation("SQL_Latin1_General_CP1_CI_AI");
            entity.Property(e => e.ContactTitle).HasMaxLength(10);
            entity.Property(e => e.ContractContact).HasMaxLength(38);
            entity.Property(e => e.ContractContactFirstName)
                .HasMaxLength(50)
                .UseCollation("SQL_Latin1_General_CP1_CI_AI");
            entity.Property(e => e.ContractContactFullName)
                .HasMaxLength(100)
                .UseCollation("SQL_Latin1_General_CP1_CI_AI");
            entity.Property(e => e.ContractContactInitials)
                .HasMaxLength(20)
                .UseCollation("SQL_Latin1_General_CP1_CI_AI");
            entity.Property(e => e.ContractContactKey).HasMaxLength(38);
            entity.Property(e => e.ContractContactKeyFirstName)
                .HasMaxLength(50)
                .UseCollation("SQL_Latin1_General_CP1_CI_AI");
            entity.Property(e => e.ContractContactKeyFullName)
                .HasMaxLength(100)
                .UseCollation("SQL_Latin1_General_CP1_CI_AI");
            entity.Property(e => e.ContractContactKeyInitials)
                .HasMaxLength(20)
                .UseCollation("SQL_Latin1_General_CP1_CI_AI");
            entity.Property(e => e.ContractContactKeyLastName)
                .HasMaxLength(100)
                .UseCollation("SQL_Latin1_General_CP1_CI_AI");
            entity.Property(e => e.ContractContactKeyMiddleName)
                .HasMaxLength(50)
                .UseCollation("SQL_Latin1_General_CP1_CI_AI");
            entity.Property(e => e.ContractContactKeyTitle).HasMaxLength(10);
            entity.Property(e => e.ContractContactLastName)
                .HasMaxLength(100)
                .UseCollation("SQL_Latin1_General_CP1_CI_AI");
            entity.Property(e => e.ContractContactMiddleName)
                .HasMaxLength(50)
                .UseCollation("SQL_Latin1_General_CP1_CI_AI");
            entity.Property(e => e.ContractContactTitle).HasMaxLength(10);
            entity.Property(e => e.ContractCostCenter).HasMaxLength(38);
            entity.Property(e => e.ContractCostUnit).HasMaxLength(38);
            entity.Property(e => e.ContractNumber).HasMaxLength(50);
            entity.Property(e => e.ContractProject).HasMaxLength(38);
            entity.Property(e => e.ContractServiceAddress1)
                .HasMaxLength(100)
                .UseCollation("SQL_Latin1_General_CP1_CI_AI");
            entity.Property(e => e.ContractServiceAddress2)
                .HasMaxLength(100)
                .UseCollation("SQL_Latin1_General_CP1_CI_AI");
            entity.Property(e => e.ContractServiceAddress3)
                .HasMaxLength(100)
                .UseCollation("SQL_Latin1_General_CP1_CI_AI");
            entity.Property(e => e.ContractServiceAddressCity)
                .HasMaxLength(100)
                .UseCollation("SQL_Latin1_General_CP1_CI_AI");
            entity.Property(e => e.ContractServiceAddressCountry).HasMaxLength(10);
            entity.Property(e => e.ContractServiceAddressCounty)
                .HasMaxLength(100)
                .UseCollation("SQL_Latin1_General_CP1_CI_AI");
            entity.Property(e => e.ContractServiceAddressFax).HasMaxLength(50);
            entity.Property(e => e.ContractServiceAddressPhone).HasMaxLength(50);
            entity.Property(e => e.ContractServiceAddressPostCode)
                .HasMaxLength(20)
                .UseCollation("SQL_Latin1_General_CP1_CI_AI");
            entity.Property(e => e.ContractServiceAddressRemarks).UseCollation("SQL_Latin1_General_CP1_CI_AI");
            entity.Property(e => e.ContractServiceAddressState).HasMaxLength(10);
            entity.Property(e => e.ContractVatcode).HasColumnName("ContractVATCode");
            entity.Property(e => e.CustomerAddress1)
                .HasMaxLength(100)
                .UseCollation("SQL_Latin1_General_CP1_CI_AI");
            entity.Property(e => e.CustomerAddress2)
                .HasMaxLength(100)
                .UseCollation("SQL_Latin1_General_CP1_CI_AI");
            entity.Property(e => e.CustomerAddress3)
                .HasMaxLength(100)
                .UseCollation("SQL_Latin1_General_CP1_CI_AI");
            entity.Property(e => e.CustomerCity)
                .HasMaxLength(100)
                .UseCollation("SQL_Latin1_General_CP1_CI_AI");
            entity.Property(e => e.CustomerCode).HasMaxLength(20);
            entity.Property(e => e.CustomerCountry).HasMaxLength(10);
            entity.Property(e => e.CustomerCounty)
                .HasMaxLength(100)
                .UseCollation("SQL_Latin1_General_CP1_CI_AI");
            entity.Property(e => e.CustomerEmail).HasMaxLength(130);
            entity.Property(e => e.CustomerFax).HasMaxLength(30);
            entity.Property(e => e.CustomerName)
                .HasMaxLength(50)
                .UseCollation("SQL_Latin1_General_CP1_CI_AI");
            entity.Property(e => e.CustomerParent).HasMaxLength(38);
            entity.Property(e => e.CustomerPhone).HasMaxLength(30);
            entity.Property(e => e.CustomerPostCode)
                .HasMaxLength(20)
                .UseCollation("SQL_Latin1_General_CP1_CI_AI");
            entity.Property(e => e.CustomerReseller).HasMaxLength(38);
            entity.Property(e => e.CustomerState).HasMaxLength(10);
            entity.Property(e => e.Date).HasColumnType("datetime");
            entity.Property(e => e.HeaderStartDate).HasColumnType("datetime");
            entity.Property(e => e.JobHeaderId)
                .HasMaxLength(38)
                .HasColumnName("JobHeaderID");
            entity.Property(e => e.PartItemCode).HasMaxLength(30);
            entity.Property(e => e.PartItemDescription)
                .HasMaxLength(60)
                .UseCollation("SQL_Latin1_General_CP1_CI_AI");
            entity.Property(e => e.PartSerialNumber).HasMaxLength(30);
            entity.Property(e => e.PartSndescription)
                .HasMaxLength(60)
                .HasColumnName("PartSNDescription");
            entity.Property(e => e.ProblemCode).HasMaxLength(8);
            entity.Property(e => e.ProblemDescription).HasMaxLength(50);
            entity.Property(e => e.RequestDescription).HasMaxLength(255);
            entity.Property(e => e.RequestNumber).HasMaxLength(14);
            entity.Property(e => e.ResourceId).HasColumnName("ResourceID");
            entity.Property(e => e.ServiceItemCode).HasMaxLength(30);
            entity.Property(e => e.ServiceItemDescription)
                .HasMaxLength(60)
                .UseCollation("SQL_Latin1_General_CP1_CI_AI");
            entity.Property(e => e.ServiceSerialNumber).HasMaxLength(30);
            entity.Property(e => e.ServiceSndescription)
                .HasMaxLength(60)
                .HasColumnName("ServiceSNDescription");
            entity.Property(e => e.SolutionCode).HasMaxLength(8);
            entity.Property(e => e.SolutionDescription).HasMaxLength(50);
        });

        modelBuilder.Entity<SmsdpdetailedPlanningHeadersView>(entity =>
        {
            entity
                .HasNoKey()
                .ToView("SMSDPDetailedPlanningHeadersView");

            entity.Property(e => e.AbsenceId).HasColumnName("AbsenceID");
            entity.Property(e => e.Assistant)
                .HasMaxLength(100)
                .UseCollation("SQL_Latin1_General_CP1_CI_AI");
            entity.Property(e => e.CostCenter).HasMaxLength(30);
            entity.Property(e => e.CostUnit).HasMaxLength(30);
            entity.Property(e => e.Division).HasMaxLength(30);
            entity.Property(e => e.Email).HasMaxLength(100);
            entity.Property(e => e.EndDate).HasColumnType("datetime");
            entity.Property(e => e.Fax).HasMaxLength(30);
            entity.Property(e => e.FirstName)
                .HasMaxLength(100)
                .UseCollation("SQL_Latin1_General_CP1_CI_AI");
            entity.Property(e => e.FullName)
                .HasMaxLength(100)
                .UseCollation("SQL_Latin1_General_CP1_CI_AI");
            entity.Property(e => e.Group).HasMaxLength(60);
            entity.Property(e => e.HeaderEndDate).HasColumnType("datetime");
            entity.Property(e => e.Initials)
                .HasMaxLength(10)
                .UseCollation("SQL_Latin1_General_CP1_CI_AI");
            entity.Property(e => e.JobActivity).HasMaxLength(100);
            entity.Property(e => e.JobGroup).HasMaxLength(100);
            entity.Property(e => e.JobTitle).HasMaxLength(30);
            entity.Property(e => e.LastName)
                .HasMaxLength(100)
                .UseCollation("SQL_Latin1_General_CP1_CI_AI");
            entity.Property(e => e.Manager)
                .HasMaxLength(100)
                .UseCollation("SQL_Latin1_General_CP1_CI_AI");
            entity.Property(e => e.MiddleName)
                .HasMaxLength(50)
                .UseCollation("SQL_Latin1_General_CP1_CI_AI");
            entity.Property(e => e.MobileExtension).HasMaxLength(20);
            entity.Property(e => e.MobilePhone).HasMaxLength(50);
            entity.Property(e => e.Phone).HasMaxLength(50);
            entity.Property(e => e.PhoneExtension).HasMaxLength(10);
            entity.Property(e => e.ResourceId).HasColumnName("ResourceID");
            entity.Property(e => e.Title).HasMaxLength(30);
            entity.Property(e => e.UserName).HasMaxLength(50);
        });

        modelBuilder.Entity<SmsdpdetailedPlanningLinesView>(entity =>
        {
            entity
                .HasNoKey()
                .ToView("SMSDPDetailedPlanningLinesView");

            entity.Property(e => e.AbsenceId).HasColumnName("AbsenceID");
            entity.Property(e => e.ActivityType).HasMaxLength(22);
            entity.Property(e => e.Amount).HasColumnType("numeric(10, 2)");
            entity.Property(e => e.ContactFirstName)
                .HasMaxLength(50)
                .UseCollation("SQL_Latin1_General_CP1_CI_AI");
            entity.Property(e => e.ContactFullName)
                .HasMaxLength(100)
                .UseCollation("SQL_Latin1_General_CP1_CI_AI");
            entity.Property(e => e.ContactInitials)
                .HasMaxLength(20)
                .UseCollation("SQL_Latin1_General_CP1_CI_AI");
            entity.Property(e => e.ContactLastName)
                .HasMaxLength(100)
                .UseCollation("SQL_Latin1_General_CP1_CI_AI");
            entity.Property(e => e.ContactMiddleName)
                .HasMaxLength(50)
                .UseCollation("SQL_Latin1_General_CP1_CI_AI");
            entity.Property(e => e.ContactTitle).HasMaxLength(10);
            entity.Property(e => e.ContractContact).HasMaxLength(38);
            entity.Property(e => e.ContractContactFirstName)
                .HasMaxLength(50)
                .UseCollation("SQL_Latin1_General_CP1_CI_AI");
            entity.Property(e => e.ContractContactFullName)
                .HasMaxLength(100)
                .UseCollation("SQL_Latin1_General_CP1_CI_AI");
            entity.Property(e => e.ContractContactInitials)
                .HasMaxLength(20)
                .UseCollation("SQL_Latin1_General_CP1_CI_AI");
            entity.Property(e => e.ContractContactKey).HasMaxLength(38);
            entity.Property(e => e.ContractContactKeyFirstName)
                .HasMaxLength(50)
                .UseCollation("SQL_Latin1_General_CP1_CI_AI");
            entity.Property(e => e.ContractContactKeyFullName)
                .HasMaxLength(100)
                .UseCollation("SQL_Latin1_General_CP1_CI_AI");
            entity.Property(e => e.ContractContactKeyInitials)
                .HasMaxLength(20)
                .UseCollation("SQL_Latin1_General_CP1_CI_AI");
            entity.Property(e => e.ContractContactKeyLastName)
                .HasMaxLength(100)
                .UseCollation("SQL_Latin1_General_CP1_CI_AI");
            entity.Property(e => e.ContractContactKeyMiddleName)
                .HasMaxLength(50)
                .UseCollation("SQL_Latin1_General_CP1_CI_AI");
            entity.Property(e => e.ContractContactKeyTitle).HasMaxLength(10);
            entity.Property(e => e.ContractContactLastName)
                .HasMaxLength(100)
                .UseCollation("SQL_Latin1_General_CP1_CI_AI");
            entity.Property(e => e.ContractContactMiddleName)
                .HasMaxLength(50)
                .UseCollation("SQL_Latin1_General_CP1_CI_AI");
            entity.Property(e => e.ContractContactTitle).HasMaxLength(10);
            entity.Property(e => e.ContractCostCenter).HasMaxLength(38);
            entity.Property(e => e.ContractCostUnit).HasMaxLength(38);
            entity.Property(e => e.ContractNumber).HasMaxLength(50);
            entity.Property(e => e.ContractProject).HasMaxLength(38);
            entity.Property(e => e.ContractServiceAddress1)
                .HasMaxLength(100)
                .UseCollation("SQL_Latin1_General_CP1_CI_AI");
            entity.Property(e => e.ContractServiceAddress2)
                .HasMaxLength(100)
                .UseCollation("SQL_Latin1_General_CP1_CI_AI");
            entity.Property(e => e.ContractServiceAddress3)
                .HasMaxLength(100)
                .UseCollation("SQL_Latin1_General_CP1_CI_AI");
            entity.Property(e => e.ContractServiceAddressCity)
                .HasMaxLength(100)
                .UseCollation("SQL_Latin1_General_CP1_CI_AI");
            entity.Property(e => e.ContractServiceAddressCountry).HasMaxLength(10);
            entity.Property(e => e.ContractServiceAddressCounty)
                .HasMaxLength(100)
                .UseCollation("SQL_Latin1_General_CP1_CI_AI");
            entity.Property(e => e.ContractServiceAddressFax).HasMaxLength(50);
            entity.Property(e => e.ContractServiceAddressPhone).HasMaxLength(50);
            entity.Property(e => e.ContractServiceAddressPostCode)
                .HasMaxLength(20)
                .UseCollation("SQL_Latin1_General_CP1_CI_AI");
            entity.Property(e => e.ContractServiceAddressRemarks).UseCollation("SQL_Latin1_General_CP1_CI_AI");
            entity.Property(e => e.ContractServiceAddressState).HasMaxLength(10);
            entity.Property(e => e.ContractVatcode).HasColumnName("ContractVATCode");
            entity.Property(e => e.CostPrice).HasColumnType("numeric(10, 2)");
            entity.Property(e => e.CustomerAddress1)
                .HasMaxLength(100)
                .UseCollation("SQL_Latin1_General_CP1_CI_AI");
            entity.Property(e => e.CustomerAddress2)
                .HasMaxLength(100)
                .UseCollation("SQL_Latin1_General_CP1_CI_AI");
            entity.Property(e => e.CustomerAddress3)
                .HasMaxLength(100)
                .UseCollation("SQL_Latin1_General_CP1_CI_AI");
            entity.Property(e => e.CustomerCity)
                .HasMaxLength(100)
                .UseCollation("SQL_Latin1_General_CP1_CI_AI");
            entity.Property(e => e.CustomerCode).HasMaxLength(20);
            entity.Property(e => e.CustomerCountry).HasMaxLength(10);
            entity.Property(e => e.CustomerCounty)
                .HasMaxLength(100)
                .UseCollation("SQL_Latin1_General_CP1_CI_AI");
            entity.Property(e => e.CustomerEmail).HasMaxLength(130);
            entity.Property(e => e.CustomerFax).HasMaxLength(30);
            entity.Property(e => e.CustomerName)
                .HasMaxLength(50)
                .UseCollation("SQL_Latin1_General_CP1_CI_AI");
            entity.Property(e => e.CustomerParent).HasMaxLength(38);
            entity.Property(e => e.CustomerPhone).HasMaxLength(30);
            entity.Property(e => e.CustomerPostCode)
                .HasMaxLength(20)
                .UseCollation("SQL_Latin1_General_CP1_CI_AI");
            entity.Property(e => e.CustomerReseller).HasMaxLength(38);
            entity.Property(e => e.CustomerState).HasMaxLength(10);
            entity.Property(e => e.Discount)
                .HasColumnType("numeric(10, 2)")
                .HasColumnName("Discount%");
            entity.Property(e => e.EndDate).HasColumnType("datetime");
            entity.Property(e => e.EndTime).HasColumnType("datetime");
            entity.Property(e => e.HeaderStartDate).HasColumnType("datetime");
            entity.Property(e => e.InvAccountCode)
                .HasMaxLength(20)
                .HasColumnName("Inv_AccountCode");
            entity.Property(e => e.InvAccountName)
                .HasMaxLength(50)
                .UseCollation("SQL_Latin1_General_CP1_CI_AI")
                .HasColumnName("Inv_AccountName");
            entity.Property(e => e.ItemCode).HasMaxLength(30);
            entity.Property(e => e.ItemDescription)
                .HasMaxLength(60)
                .UseCollation("SQL_Latin1_General_CP1_CI_AI");
            entity.Property(e => e.JobDetailId)
                .HasMaxLength(38)
                .HasColumnName("JobDetailID");
            entity.Property(e => e.JobHeaderId)
                .HasMaxLength(38)
                .HasColumnName("JobHeaderID");
            entity.Property(e => e.NetPrice).HasColumnType("numeric(10, 2)");
            entity.Property(e => e.PartItemCode).HasMaxLength(30);
            entity.Property(e => e.PartItemDescription)
                .HasMaxLength(60)
                .UseCollation("SQL_Latin1_General_CP1_CI_AI");
            entity.Property(e => e.PartSerialNumber).HasMaxLength(30);
            entity.Property(e => e.PartSndescription)
                .HasMaxLength(60)
                .HasColumnName("PartSNDescription");
            entity.Property(e => e.ProblemCode).HasMaxLength(8);
            entity.Property(e => e.ProblemDescription).HasMaxLength(50);
            entity.Property(e => e.RequestDescription).HasMaxLength(255);
            entity.Property(e => e.RequestNumber).HasMaxLength(14);
            entity.Property(e => e.ResourceId).HasColumnName("ResourceID");
            entity.Property(e => e.SerialNumber).HasMaxLength(30);
            entity.Property(e => e.SerialNumberDescription).HasMaxLength(60);
            entity.Property(e => e.ServiceItemCode).HasMaxLength(30);
            entity.Property(e => e.ServiceItemDescription)
                .HasMaxLength(60)
                .UseCollation("SQL_Latin1_General_CP1_CI_AI");
            entity.Property(e => e.ServiceSerialNumber).HasMaxLength(30);
            entity.Property(e => e.ServiceSndescription)
                .HasMaxLength(60)
                .HasColumnName("ServiceSNDescription");
            entity.Property(e => e.SolutionCode).HasMaxLength(8);
            entity.Property(e => e.SolutionDescription).HasMaxLength(50);
            entity.Property(e => e.StartDate).HasColumnType("datetime");
            entity.Property(e => e.StartTime).HasColumnType("datetime");
            entity.Property(e => e.Type).HasMaxLength(11);
            entity.Property(e => e.UnitPrice).HasColumnType("numeric(10, 2)");
            entity.Property(e => e.WarehouseCode).HasMaxLength(20);
            entity.Property(e => e.WarehouseName).HasMaxLength(50);
        });

        modelBuilder.Entity<SmsdpserviceContractHeadersView>(entity =>
        {
            entity
                .HasNoKey()
                .ToView("SMSDPServiceContractHeadersView");

            entity.Property(e => e.Address1)
                .HasMaxLength(100)
                .UseCollation("SQL_Latin1_General_CP1_CI_AI");
            entity.Property(e => e.Address2)
                .HasMaxLength(100)
                .UseCollation("SQL_Latin1_General_CP1_CI_AI");
            entity.Property(e => e.Address3)
                .HasMaxLength(100)
                .UseCollation("SQL_Latin1_General_CP1_CI_AI");
            entity.Property(e => e.ChamberOfCommerce).HasMaxLength(20);
            entity.Property(e => e.City)
                .HasMaxLength(100)
                .UseCollation("SQL_Latin1_General_CP1_CI_AI");
            entity.Property(e => e.ContactFirstName)
                .HasMaxLength(50)
                .UseCollation("SQL_Latin1_General_CP1_CI_AI");
            entity.Property(e => e.ContactFullName)
                .HasMaxLength(100)
                .UseCollation("SQL_Latin1_General_CP1_CI_AI");
            entity.Property(e => e.ContactInitials)
                .HasMaxLength(20)
                .UseCollation("SQL_Latin1_General_CP1_CI_AI");
            entity.Property(e => e.ContactKeyFirstName)
                .HasMaxLength(50)
                .UseCollation("SQL_Latin1_General_CP1_CI_AI");
            entity.Property(e => e.ContactKeyFullName)
                .HasMaxLength(100)
                .UseCollation("SQL_Latin1_General_CP1_CI_AI");
            entity.Property(e => e.ContactKeyInitials)
                .HasMaxLength(20)
                .UseCollation("SQL_Latin1_General_CP1_CI_AI");
            entity.Property(e => e.ContactKeyLastName)
                .HasMaxLength(100)
                .UseCollation("SQL_Latin1_General_CP1_CI_AI");
            entity.Property(e => e.ContactKeyMiddleName)
                .HasMaxLength(50)
                .UseCollation("SQL_Latin1_General_CP1_CI_AI");
            entity.Property(e => e.ContactKeyTitle).HasMaxLength(10);
            entity.Property(e => e.ContactLastName)
                .HasMaxLength(100)
                .UseCollation("SQL_Latin1_General_CP1_CI_AI");
            entity.Property(e => e.ContactMiddleName)
                .HasMaxLength(50)
                .UseCollation("SQL_Latin1_General_CP1_CI_AI");
            entity.Property(e => e.ContactTitle).HasMaxLength(10);
            entity.Property(e => e.ContractNumber).HasMaxLength(50);
            entity.Property(e => e.ContractType).HasMaxLength(20);
            entity.Property(e => e.ContractTypeDescription).HasMaxLength(50);
            entity.Property(e => e.CostCenter).HasMaxLength(8);
            entity.Property(e => e.CostCenterDescription).HasMaxLength(50);
            entity.Property(e => e.CostUnit).HasMaxLength(8);
            entity.Property(e => e.CostUnitDescription).HasMaxLength(25);
            entity.Property(e => e.County)
                .HasMaxLength(100)
                .UseCollation("SQL_Latin1_General_CP1_CI_AI");
            entity.Property(e => e.Created).HasColumnType("datetime");
            entity.Property(e => e.Currency)
                .HasMaxLength(3)
                .IsFixedLength();
            entity.Property(e => e.CustomerCode).HasMaxLength(20);
            entity.Property(e => e.CustomerName)
                .HasMaxLength(50)
                .UseCollation("SQL_Latin1_General_CP1_CI_AI");
            entity.Property(e => e.DunsNumber).HasMaxLength(9);
            entity.Property(e => e.Email).HasMaxLength(130);
            entity.Property(e => e.Fax).HasMaxLength(30);
            entity.Property(e => e.Id).HasColumnName("ID");
            entity.Property(e => e.InvAccountCode)
                .HasMaxLength(20)
                .HasColumnName("Inv_AccountCode");
            entity.Property(e => e.InvAccountName)
                .HasMaxLength(50)
                .UseCollation("SQL_Latin1_General_CP1_CI_AI")
                .HasColumnName("Inv_AccountName");
            entity.Property(e => e.InvAddress1)
                .HasMaxLength(100)
                .UseCollation("SQL_Latin1_General_CP1_CI_AI")
                .HasColumnName("Inv_Address1");
            entity.Property(e => e.InvAddress2)
                .HasMaxLength(100)
                .UseCollation("SQL_Latin1_General_CP1_CI_AI")
                .HasColumnName("Inv_Address2");
            entity.Property(e => e.InvAddress3)
                .HasMaxLength(100)
                .UseCollation("SQL_Latin1_General_CP1_CI_AI")
                .HasColumnName("Inv_Address3");
            entity.Property(e => e.InvChamberOfCommerce)
                .HasMaxLength(20)
                .HasColumnName("Inv_ChamberOfCommerce");
            entity.Property(e => e.InvCity)
                .HasMaxLength(100)
                .UseCollation("SQL_Latin1_General_CP1_CI_AI")
                .HasColumnName("Inv_City");
            entity.Property(e => e.InvCounty)
                .HasMaxLength(100)
                .UseCollation("SQL_Latin1_General_CP1_CI_AI")
                .HasColumnName("Inv_County");
            entity.Property(e => e.InvDunsNumber)
                .HasMaxLength(9)
                .HasColumnName("Inv_DunsNumber");
            entity.Property(e => e.InvEmail)
                .HasMaxLength(130)
                .HasColumnName("Inv_Email");
            entity.Property(e => e.InvFax)
                .HasMaxLength(30)
                .HasColumnName("Inv_Fax");
            entity.Property(e => e.InvParent)
                .HasMaxLength(38)
                .HasColumnName("Inv_Parent");
            entity.Property(e => e.InvPhone)
                .HasMaxLength(30)
                .HasColumnName("Inv_Phone");
            entity.Property(e => e.InvPhoneQueue)
                .HasMaxLength(15)
                .HasColumnName("Inv_PhoneQueue");
            entity.Property(e => e.InvPostCode)
                .HasMaxLength(20)
                .UseCollation("SQL_Latin1_General_CP1_CI_AI")
                .HasColumnName("Inv_PostCode");
            entity.Property(e => e.InvReseller)
                .HasMaxLength(38)
                .HasColumnName("Inv_Reseller");
            entity.Property(e => e.InvState)
                .HasMaxLength(10)
                .HasColumnName("Inv_State");
            entity.Property(e => e.Parent).HasMaxLength(38);
            entity.Property(e => e.Phone).HasMaxLength(30);
            entity.Property(e => e.PhoneQueue).HasMaxLength(15);
            entity.Property(e => e.PostCode)
                .HasMaxLength(20)
                .UseCollation("SQL_Latin1_General_CP1_CI_AI");
            entity.Property(e => e.Project).HasMaxLength(20);
            entity.Property(e => e.ProjectDescription)
                .HasMaxLength(60)
                .UseCollation("SQL_Latin1_General_CP1_CI_AI");
            entity.Property(e => e.Reseller).HasMaxLength(38);
            entity.Property(e => e.ServInvAccountCode1)
                .HasMaxLength(20)
                .HasColumnName("Serv_Inv_AccountCode1");
            entity.Property(e => e.ServInvAccountCode2)
                .HasMaxLength(20)
                .HasColumnName("Serv_Inv_AccountCode2");
            entity.Property(e => e.ServInvAccountCode3)
                .HasMaxLength(20)
                .HasColumnName("Serv_Inv_AccountCode3");
            entity.Property(e => e.ServInvAccountCode4)
                .HasMaxLength(20)
                .HasColumnName("Serv_Inv_AccountCode4");
            entity.Property(e => e.ServInvAccountCode5)
                .HasMaxLength(20)
                .HasColumnName("Serv_Inv_AccountCode5");
            entity.Property(e => e.ServInvAccountName1)
                .HasMaxLength(50)
                .UseCollation("SQL_Latin1_General_CP1_CI_AI")
                .HasColumnName("Serv_Inv_AccountName1");
            entity.Property(e => e.ServInvAccountName2)
                .HasMaxLength(50)
                .UseCollation("SQL_Latin1_General_CP1_CI_AI")
                .HasColumnName("Serv_Inv_AccountName2");
            entity.Property(e => e.ServInvAccountName3)
                .HasMaxLength(50)
                .UseCollation("SQL_Latin1_General_CP1_CI_AI")
                .HasColumnName("Serv_Inv_AccountName3");
            entity.Property(e => e.ServInvAccountName4)
                .HasMaxLength(50)
                .UseCollation("SQL_Latin1_General_CP1_CI_AI")
                .HasColumnName("Serv_Inv_AccountName4");
            entity.Property(e => e.ServInvAccountName5)
                .HasMaxLength(50)
                .UseCollation("SQL_Latin1_General_CP1_CI_AI")
                .HasColumnName("Serv_Inv_AccountName5");
            entity.Property(e => e.ServiceAddress1)
                .HasMaxLength(100)
                .UseCollation("SQL_Latin1_General_CP1_CI_AI");
            entity.Property(e => e.ServiceAddress2)
                .HasMaxLength(100)
                .UseCollation("SQL_Latin1_General_CP1_CI_AI");
            entity.Property(e => e.ServiceAddress3)
                .HasMaxLength(100)
                .UseCollation("SQL_Latin1_General_CP1_CI_AI");
            entity.Property(e => e.ServiceAddressCity)
                .HasMaxLength(100)
                .UseCollation("SQL_Latin1_General_CP1_CI_AI");
            entity.Property(e => e.ServiceAddressCounty)
                .HasMaxLength(100)
                .UseCollation("SQL_Latin1_General_CP1_CI_AI");
            entity.Property(e => e.ServiceAddressFax).HasMaxLength(50);
            entity.Property(e => e.ServiceAddressPhone).HasMaxLength(50);
            entity.Property(e => e.ServiceAddressPostCode)
                .HasMaxLength(20)
                .UseCollation("SQL_Latin1_General_CP1_CI_AI");
            entity.Property(e => e.ServiceAddressRemarks).UseCollation("SQL_Latin1_General_CP1_CI_AI");
            entity.Property(e => e.ServiceAddressState)
                .HasMaxLength(3)
                .IsFixedLength();
            entity.Property(e => e.State).HasMaxLength(10);
            entity.Property(e => e.Status)
                .HasMaxLength(1)
                .IsFixedLength();
            entity.Property(e => e.TotalAmountIncl)
                .HasColumnType("numeric(2, 2)")
                .HasColumnName("total_amount_incl");
            entity.Property(e => e.TotalTaxAmount)
                .HasColumnType("numeric(2, 2)")
                .HasColumnName("total_tax_amount");
        });

        modelBuilder.Entity<SmsdpserviceContractItemAgreementsView>(entity =>
        {
            entity
                .HasNoKey()
                .ToView("SMSDPServiceContractItemAgreementsView");

            entity.Property(e => e.AddPartHour).HasMaxLength(38);
            entity.Property(e => e.AgreementDocument).HasMaxLength(38);
            entity.Property(e => e.AgreementType).HasMaxLength(1);
            entity.Property(e => e.Configuration).HasMaxLength(63);
            entity.Property(e => e.ConfigurationId).HasColumnName("ConfigurationID");
            entity.Property(e => e.ContractItemAgreement)
                .HasMaxLength(100)
                .HasColumnName("ContractItem_Agreement");
            entity.Property(e => e.ContractNumber).HasMaxLength(50);
            entity.Property(e => e.DefaultFrequency).HasMaxLength(1);
            entity.Property(e => e.DefaultRate).HasColumnType("numeric(10, 3)");
            entity.Property(e => e.EndDate).HasColumnType("datetime");
            entity.Property(e => e.InvoiceDate).HasColumnType("datetime");
            entity.Property(e => e.InvoiceFrequency).HasMaxLength(1);
            entity.Property(e => e.InvoiceRate).HasColumnType("numeric(10, 2)");
            entity.Property(e => e.InvoicedUntilDate).HasColumnType("datetime");
            entity.Property(e => e.PartHourAssortment).HasMaxLength(38);
            entity.Property(e => e.PartHourGroup).HasMaxLength(38);
            entity.Property(e => e.PartHourInclExcl).HasColumnName("PartHourIncl_Excl");
            entity.Property(e => e.PartHourPercentage).HasColumnType("numeric(10, 2)");
            entity.Property(e => e.PmtimeInterval).HasColumnName("PMTimeInterval");
            entity.Property(e => e.PmtimeUnits)
                .HasMaxLength(1)
                .HasColumnName("PMTimeUnits");
            entity.Property(e => e.PrepaidAmount).HasColumnType("numeric(10, 2)");
            entity.Property(e => e.PrepaidAmountRemain).HasColumnType("numeric(10, 2)");
            entity.Property(e => e.PrepaidType).HasMaxLength(1);
            entity.Property(e => e.ProlongationType).HasMaxLength(100);
            entity.Property(e => e.RateDiscount).HasColumnType("numeric(10, 2)");
            entity.Property(e => e.ResponseTimeUnit).HasMaxLength(1);
            entity.Property(e => e.ShortDescription).HasMaxLength(30);
            entity.Property(e => e.StartDate).HasColumnType("datetime");
            entity.Property(e => e.Vat).HasColumnName("VAT%");
            entity.Property(e => e.Vatcode)
                .HasMaxLength(3)
                .IsFixedLength()
                .HasColumnName("VATCode");
        });

        modelBuilder.Entity<SmsdpserviceContractLinksView>(entity =>
        {
            entity
                .HasNoKey()
                .ToView("SMSDPServiceContractLinksView");

            entity.Property(e => e.AlAddPartHour)
                .HasMaxLength(38)
                .HasColumnName("AL_AddPartHour");
            entity.Property(e => e.AlAgreement)
                .HasMaxLength(100)
                .HasColumnName("AL_Agreement");
            entity.Property(e => e.AlAgreementDocument)
                .HasMaxLength(38)
                .HasColumnName("AL_AgreementDocument");
            entity.Property(e => e.AlAgreementType)
                .HasMaxLength(1)
                .IsFixedLength()
                .HasColumnName("AL_AgreementType");
            entity.Property(e => e.AlDefaultFrequency)
                .HasMaxLength(1)
                .HasColumnName("AL_DefaultFrequency");
            entity.Property(e => e.AlDefaultRate)
                .HasColumnType("numeric(10, 2)")
                .HasColumnName("AL_DefaultRate");
            entity.Property(e => e.AlDefaultRatePeriod).HasColumnName("AL_DefaultRatePeriod");
            entity.Property(e => e.AlEndDate)
                .HasColumnType("datetime")
                .HasColumnName("AL_EndDate");
            entity.Property(e => e.AlInvoiceDate)
                .HasColumnType("datetime")
                .HasColumnName("AL_InvoiceDate");
            entity.Property(e => e.AlInvoiceFrequency)
                .HasMaxLength(1)
                .HasColumnName("AL_InvoiceFrequency");
            entity.Property(e => e.AlInvoiceRate)
                .HasColumnType("numeric(10, 2)")
                .HasColumnName("AL_InvoiceRate");
            entity.Property(e => e.AlInvoiceYesNo).HasColumnName("AL_InvoiceYesNo");
            entity.Property(e => e.AlInvoicedUntilDate)
                .HasColumnType("datetime")
                .HasColumnName("AL_InvoicedUntilDate");
            entity.Property(e => e.AlLongDescription).HasColumnName("AL_LongDescription");
            entity.Property(e => e.AlPartHourAssortment)
                .HasMaxLength(38)
                .HasColumnName("AL_PartHourAssortment");
            entity.Property(e => e.AlPartHourGroup)
                .HasMaxLength(38)
                .HasColumnName("AL_PartHourGroup");
            entity.Property(e => e.AlPartHourInclExcl).HasColumnName("AL_PartHourIncl_Excl");
            entity.Property(e => e.AlPartHourPercentage)
                .HasColumnType("numeric(10, 2)")
                .HasColumnName("AL_PartHourPercentage");
            entity.Property(e => e.AlPmtimeInterval).HasColumnName("AL_PMTimeInterval");
            entity.Property(e => e.AlPmtimeUnits)
                .HasMaxLength(1)
                .HasColumnName("AL_PMTimeUnits");
            entity.Property(e => e.AlPrepaidAmount)
                .HasColumnType("numeric(10, 2)")
                .HasColumnName("AL_PrepaidAmount");
            entity.Property(e => e.AlPrepaidAmountRemain)
                .HasColumnType("numeric(10, 2)")
                .HasColumnName("AL_PrepaidAmountRemain");
            entity.Property(e => e.AlPrepaidQuantity).HasColumnName("AL_PrepaidQuantity");
            entity.Property(e => e.AlPrepaidQuantityRemain).HasColumnName("AL_PrepaidQuantityRemain");
            entity.Property(e => e.AlPrepaidType)
                .HasMaxLength(1)
                .HasColumnName("AL_PrepaidType");
            entity.Property(e => e.AlProlongationType)
                .HasMaxLength(100)
                .HasColumnName("AL_ProlongationType");
            entity.Property(e => e.AlRateDiscount)
                .HasColumnType("numeric(10, 2)")
                .HasColumnName("AL_RateDiscount");
            entity.Property(e => e.AlResponseTime).HasColumnName("AL_ResponseTime");
            entity.Property(e => e.AlResponseTimeUnit)
                .HasMaxLength(1)
                .HasColumnName("AL_ResponseTimeUnit");
            entity.Property(e => e.AlShortDescription)
                .HasMaxLength(30)
                .HasColumnName("AL_ShortDescription");
            entity.Property(e => e.AlStartDate)
                .HasColumnType("datetime")
                .HasColumnName("AL_StartDate");
            entity.Property(e => e.AlVatcode)
                .HasMaxLength(3)
                .IsFixedLength()
                .HasColumnName("AL_VATCode");
            entity.Property(e => e.AlVatpercentage).HasColumnName("AL_VATPercentage");
            entity.Property(e => e.ConfigurationId).HasColumnName("ConfigurationID");
            entity.Property(e => e.ContractNumber).HasMaxLength(50);
        });

        modelBuilder.Entity<SmsdpserviceSlipHeadersView>(entity =>
        {
            entity
                .HasNoKey()
                .ToView("SMSDPServiceSlipHeadersView");

            entity.Property(e => e.AbsenceId).HasColumnName("AbsenceID");
            entity.Property(e => e.ContactFirstName)
                .HasMaxLength(50)
                .UseCollation("SQL_Latin1_General_CP1_CI_AI");
            entity.Property(e => e.ContactFullName)
                .HasMaxLength(100)
                .UseCollation("SQL_Latin1_General_CP1_CI_AI");
            entity.Property(e => e.ContactInitials)
                .HasMaxLength(20)
                .UseCollation("SQL_Latin1_General_CP1_CI_AI");
            entity.Property(e => e.ContactLastName)
                .HasMaxLength(100)
                .UseCollation("SQL_Latin1_General_CP1_CI_AI");
            entity.Property(e => e.ContactMiddleName)
                .HasMaxLength(50)
                .UseCollation("SQL_Latin1_General_CP1_CI_AI");
            entity.Property(e => e.ContactTitle).HasMaxLength(10);
            entity.Property(e => e.CustomerAddress1)
                .HasMaxLength(100)
                .UseCollation("SQL_Latin1_General_CP1_CI_AI");
            entity.Property(e => e.CustomerAddress2)
                .HasMaxLength(100)
                .UseCollation("SQL_Latin1_General_CP1_CI_AI");
            entity.Property(e => e.CustomerAddress3)
                .HasMaxLength(100)
                .UseCollation("SQL_Latin1_General_CP1_CI_AI");
            entity.Property(e => e.CustomerCity)
                .HasMaxLength(100)
                .UseCollation("SQL_Latin1_General_CP1_CI_AI");
            entity.Property(e => e.CustomerCode).HasMaxLength(20);
            entity.Property(e => e.CustomerCountry).HasMaxLength(10);
            entity.Property(e => e.CustomerCounty)
                .HasMaxLength(100)
                .UseCollation("SQL_Latin1_General_CP1_CI_AI");
            entity.Property(e => e.CustomerEmail).HasMaxLength(130);
            entity.Property(e => e.CustomerFax).HasMaxLength(30);
            entity.Property(e => e.CustomerName)
                .HasMaxLength(50)
                .UseCollation("SQL_Latin1_General_CP1_CI_AI");
            entity.Property(e => e.CustomerParent)
                .HasMaxLength(50)
                .UseCollation("SQL_Latin1_General_CP1_CI_AI");
            entity.Property(e => e.CustomerPhone).HasMaxLength(30);
            entity.Property(e => e.CustomerPostCode)
                .HasMaxLength(20)
                .UseCollation("SQL_Latin1_General_CP1_CI_AI");
            entity.Property(e => e.CustomerReseller)
                .HasMaxLength(50)
                .UseCollation("SQL_Latin1_General_CP1_CI_AI");
            entity.Property(e => e.CustomerState).HasMaxLength(10);
            entity.Property(e => e.FreeAmount1)
                .HasMaxLength(10)
                .HasColumnName("FreeAmount_1");
            entity.Property(e => e.FreeAmount2)
                .HasMaxLength(10)
                .HasColumnName("FreeAmount_2");
            entity.Property(e => e.FreeAmount3)
                .HasMaxLength(10)
                .HasColumnName("FreeAmount_3");
            entity.Property(e => e.FreeAmount4)
                .HasMaxLength(10)
                .HasColumnName("FreeAmount_4");
            entity.Property(e => e.FreeAmount5)
                .HasMaxLength(10)
                .HasColumnName("FreeAmount_5");
            entity.Property(e => e.FreeDate1)
                .HasColumnType("datetime")
                .HasColumnName("FreeDate_1");
            entity.Property(e => e.FreeDate2)
                .HasColumnType("datetime")
                .HasColumnName("FreeDate_2");
            entity.Property(e => e.FreeDate3)
                .HasColumnType("datetime")
                .HasColumnName("FreeDate_3");
            entity.Property(e => e.FreeDate4)
                .HasColumnType("datetime")
                .HasColumnName("FreeDate_4");
            entity.Property(e => e.FreeDate5)
                .HasColumnType("datetime")
                .HasColumnName("FreeDate_5");
            entity.Property(e => e.FreeGuid1)
                .HasMaxLength(100)
                .HasColumnName("FreeGuid_1");
            entity.Property(e => e.FreeGuid2)
                .HasMaxLength(100)
                .HasColumnName("FreeGuid_2");
            entity.Property(e => e.FreeGuid3)
                .HasMaxLength(100)
                .HasColumnName("FreeGuid_3");
            entity.Property(e => e.FreeGuid4)
                .HasMaxLength(100)
                .HasColumnName("FreeGuid_4");
            entity.Property(e => e.FreeGuid5)
                .HasMaxLength(100)
                .HasColumnName("FreeGuid_5");
            entity.Property(e => e.FreeNumber1)
                .HasMaxLength(30)
                .HasColumnName("FreeNumber_1");
            entity.Property(e => e.FreeNumber2)
                .HasMaxLength(30)
                .HasColumnName("FreeNumber_2");
            entity.Property(e => e.FreeNumber3)
                .HasMaxLength(30)
                .HasColumnName("FreeNumber_3");
            entity.Property(e => e.FreeNumber4)
                .HasMaxLength(30)
                .HasColumnName("FreeNumber_4");
            entity.Property(e => e.FreeNumber5)
                .HasMaxLength(30)
                .HasColumnName("FreeNumber_5");
            entity.Property(e => e.FreeText1)
                .HasMaxLength(60)
                .HasColumnName("FreeText_1");
            entity.Property(e => e.FreeText2)
                .HasMaxLength(60)
                .HasColumnName("FreeText_2");
            entity.Property(e => e.FreeText3)
                .HasMaxLength(60)
                .HasColumnName("FreeText_3");
            entity.Property(e => e.FreeText4)
                .HasMaxLength(60)
                .HasColumnName("FreeText_4");
            entity.Property(e => e.FreeText5)
                .HasMaxLength(60)
                .HasColumnName("FreeText_5");
            entity.Property(e => e.FreeYesNo1)
                .HasMaxLength(1)
                .HasColumnName("FreeYesNo_1");
            entity.Property(e => e.FreeYesNo2)
                .HasMaxLength(1)
                .HasColumnName("FreeYesNo_2");
            entity.Property(e => e.FreeYesNo3)
                .HasMaxLength(1)
                .HasColumnName("FreeYesNo_3");
            entity.Property(e => e.FreeYesNo4)
                .HasMaxLength(1)
                .HasColumnName("FreeYesNo_4");
            entity.Property(e => e.FreeYesNo5)
                .HasMaxLength(1)
                .HasColumnName("FreeYesNo_5");
            entity.Property(e => e.RefTypeGuid1).HasColumnName("RefType_GUID1");
            entity.Property(e => e.RefTypeGuid2).HasColumnName("RefType_GUID2");
            entity.Property(e => e.RefTypeGuid3).HasColumnName("RefType_GUID3");
            entity.Property(e => e.RefTypeGuid4).HasColumnName("RefType_GUID4");
            entity.Property(e => e.RefTypeGuid5).HasColumnName("RefType_GUID5");
            entity.Property(e => e.RequestDescription).HasMaxLength(255);
            entity.Property(e => e.Requestnumber).HasMaxLength(14);
            entity.Property(e => e.TotalAmountPlannedIncl)
                .HasColumnType("numeric(10, 2)")
                .HasColumnName("Total_Amount_Planned_Incl");
            entity.Property(e => e.TotalAmountRealizedIncl)
                .HasColumnType("numeric(10, 2)")
                .HasColumnName("Total_Amount_Realized_Incl");
        });

        modelBuilder.Entity<SmsdpserviceSlipLinesView>(entity =>
        {
            entity
                .HasNoKey()
                .ToView("SMSDPServiceSlipLinesView");

            entity.Property(e => e.ActivityType).HasMaxLength(13);
            entity.Property(e => e.Amount).HasColumnType("numeric(10, 2)");
            entity.Property(e => e.ContractContact)
                .HasMaxLength(50)
                .UseCollation("SQL_Latin1_General_CP1_CI_AI");
            entity.Property(e => e.ContractContactFirstName)
                .HasMaxLength(50)
                .UseCollation("SQL_Latin1_General_CP1_CI_AI");
            entity.Property(e => e.ContractContactFullName)
                .HasMaxLength(100)
                .UseCollation("SQL_Latin1_General_CP1_CI_AI");
            entity.Property(e => e.ContractContactInitials)
                .HasMaxLength(20)
                .UseCollation("SQL_Latin1_General_CP1_CI_AI");
            entity.Property(e => e.ContractContactKey)
                .HasMaxLength(50)
                .UseCollation("SQL_Latin1_General_CP1_CI_AI");
            entity.Property(e => e.ContractContactKeyFirstName)
                .HasMaxLength(50)
                .UseCollation("SQL_Latin1_General_CP1_CI_AI");
            entity.Property(e => e.ContractContactKeyFullName)
                .HasMaxLength(100)
                .UseCollation("SQL_Latin1_General_CP1_CI_AI");
            entity.Property(e => e.ContractContactKeyInitials)
                .HasMaxLength(20)
                .UseCollation("SQL_Latin1_General_CP1_CI_AI");
            entity.Property(e => e.ContractContactKeyLastName)
                .HasMaxLength(100)
                .UseCollation("SQL_Latin1_General_CP1_CI_AI");
            entity.Property(e => e.ContractContactKeyMiddleName)
                .HasMaxLength(50)
                .UseCollation("SQL_Latin1_General_CP1_CI_AI");
            entity.Property(e => e.ContractContactKeyTitle).HasMaxLength(10);
            entity.Property(e => e.ContractContactLastName)
                .HasMaxLength(100)
                .UseCollation("SQL_Latin1_General_CP1_CI_AI");
            entity.Property(e => e.ContractContactMiddleName)
                .HasMaxLength(50)
                .UseCollation("SQL_Latin1_General_CP1_CI_AI");
            entity.Property(e => e.ContractContactTitle).HasMaxLength(10);
            entity.Property(e => e.ContractCostCenter).HasMaxLength(50);
            entity.Property(e => e.ContractCostUnit).HasMaxLength(50);
            entity.Property(e => e.ContractNumber).HasMaxLength(50);
            entity.Property(e => e.ContractProject).HasMaxLength(50);
            entity.Property(e => e.ContractServiceAddress1)
                .HasMaxLength(100)
                .UseCollation("SQL_Latin1_General_CP1_CI_AI");
            entity.Property(e => e.ContractServiceAddress2)
                .HasMaxLength(100)
                .UseCollation("SQL_Latin1_General_CP1_CI_AI");
            entity.Property(e => e.ContractServiceAddress3)
                .HasMaxLength(100)
                .UseCollation("SQL_Latin1_General_CP1_CI_AI");
            entity.Property(e => e.ContractServiceAddressCity)
                .HasMaxLength(100)
                .UseCollation("SQL_Latin1_General_CP1_CI_AI");
            entity.Property(e => e.ContractServiceAddressCounty)
                .HasMaxLength(100)
                .UseCollation("SQL_Latin1_General_CP1_CI_AI");
            entity.Property(e => e.ContractServiceAddressFax).HasMaxLength(50);
            entity.Property(e => e.ContractServiceAddressPhone).HasMaxLength(50);
            entity.Property(e => e.ContractServiceAddressPostCode)
                .HasMaxLength(20)
                .UseCollation("SQL_Latin1_General_CP1_CI_AI");
            entity.Property(e => e.ContractServiceAddressRemarks).UseCollation("SQL_Latin1_General_CP1_CI_AI");
            entity.Property(e => e.ContractServiceAddressState).HasMaxLength(10);
            entity.Property(e => e.ContractVatcode).HasColumnName("ContractVATCode");
            entity.Property(e => e.CostPrice).HasColumnType("numeric(10, 2)");
            entity.Property(e => e.Discount)
                .HasColumnType("numeric(10, 2)")
                .HasColumnName("Discount%");
            entity.Property(e => e.EndDate).HasColumnType("datetime");
            entity.Property(e => e.EndTime).HasColumnType("datetime");
            entity.Property(e => e.InvAccountAddress1)
                .HasMaxLength(100)
                .UseCollation("SQL_Latin1_General_CP1_CI_AI")
                .HasColumnName("Inv_AccountAddress1");
            entity.Property(e => e.InvAccountAddress2)
                .HasMaxLength(100)
                .UseCollation("SQL_Latin1_General_CP1_CI_AI")
                .HasColumnName("Inv_AccountAddress2");
            entity.Property(e => e.InvAccountAddress3)
                .HasMaxLength(100)
                .UseCollation("SQL_Latin1_General_CP1_CI_AI")
                .HasColumnName("Inv_AccountAddress3");
            entity.Property(e => e.InvAccountCity)
                .HasMaxLength(100)
                .UseCollation("SQL_Latin1_General_CP1_CI_AI")
                .HasColumnName("Inv_AccountCity");
            entity.Property(e => e.InvAccountCode)
                .HasMaxLength(20)
                .HasColumnName("Inv_AccountCode");
            entity.Property(e => e.InvAccountContactFirstName)
                .HasMaxLength(50)
                .UseCollation("SQL_Latin1_General_CP1_CI_AI")
                .HasColumnName("Inv_AccountContactFirstName");
            entity.Property(e => e.InvAccountContactFullName)
                .HasMaxLength(100)
                .UseCollation("SQL_Latin1_General_CP1_CI_AI")
                .HasColumnName("Inv_AccountContactFullName");
            entity.Property(e => e.InvAccountContactInitials)
                .HasMaxLength(20)
                .UseCollation("SQL_Latin1_General_CP1_CI_AI")
                .HasColumnName("Inv_AccountContactInitials");
            entity.Property(e => e.InvAccountContactLastName)
                .HasMaxLength(100)
                .UseCollation("SQL_Latin1_General_CP1_CI_AI")
                .HasColumnName("Inv_AccountContactLastName");
            entity.Property(e => e.InvAccountContactMiddleName)
                .HasMaxLength(50)
                .UseCollation("SQL_Latin1_General_CP1_CI_AI")
                .HasColumnName("Inv_AccountContactMiddleName");
            entity.Property(e => e.InvAccountContactTitle)
                .HasMaxLength(10)
                .HasColumnName("Inv_AccountContactTitle");
            entity.Property(e => e.InvAccountCountry)
                .HasMaxLength(10)
                .HasColumnName("Inv_AccountCountry");
            entity.Property(e => e.InvAccountCounty)
                .HasMaxLength(100)
                .UseCollation("SQL_Latin1_General_CP1_CI_AI")
                .HasColumnName("Inv_AccountCounty");
            entity.Property(e => e.InvAccountEmail)
                .HasMaxLength(130)
                .HasColumnName("Inv_AccountEmail");
            entity.Property(e => e.InvAccountFax)
                .HasMaxLength(30)
                .HasColumnName("Inv_AccountFax");
            entity.Property(e => e.InvAccountName)
                .HasMaxLength(50)
                .UseCollation("SQL_Latin1_General_CP1_CI_AI")
                .HasColumnName("Inv_AccountName");
            entity.Property(e => e.InvAccountPhone)
                .HasMaxLength(30)
                .HasColumnName("Inv_AccountPhone");
            entity.Property(e => e.InvAccountPostCode)
                .HasMaxLength(20)
                .UseCollation("SQL_Latin1_General_CP1_CI_AI")
                .HasColumnName("Inv_AccountPostCode");
            entity.Property(e => e.InvAccountReseller)
                .HasMaxLength(255)
                .UseCollation("SQL_Latin1_General_CP1_CI_AI")
                .HasColumnName("Inv_AccountReseller");
            entity.Property(e => e.InvAccountState)
                .HasMaxLength(10)
                .HasColumnName("Inv_AccountState");
            entity.Property(e => e.ItemCode).HasMaxLength(30);
            entity.Property(e => e.ItemDescription)
                .HasMaxLength(60)
                .UseCollation("SQL_Latin1_General_CP1_CI_AI");
            entity.Property(e => e.JobDetailId).HasColumnName("JobDetailID");
            entity.Property(e => e.JobHeaderId).HasColumnName("JobHeaderID");
            entity.Property(e => e.NetPrice).HasColumnType("numeric(10, 2)");
            entity.Property(e => e.PartItemCode).HasMaxLength(30);
            entity.Property(e => e.PartItemDescription)
                .HasMaxLength(60)
                .UseCollation("SQL_Latin1_General_CP1_CI_AI");
            entity.Property(e => e.PartSerialNumber).HasMaxLength(30);
            entity.Property(e => e.PartSndescription)
                .HasMaxLength(60)
                .HasColumnName("PartSNDescription");
            entity.Property(e => e.ProblemCode).HasMaxLength(8);
            entity.Property(e => e.ProblemDescription).HasMaxLength(50);
            entity.Property(e => e.Resource)
                .HasMaxLength(100)
                .UseCollation("SQL_Latin1_General_CP1_CI_AI");
            entity.Property(e => e.SerialNumber).HasMaxLength(30);
            entity.Property(e => e.SerialNumberDescription).HasMaxLength(60);
            entity.Property(e => e.ServiceItemCode).HasMaxLength(30);
            entity.Property(e => e.ServiceItemDescription)
                .HasMaxLength(60)
                .UseCollation("SQL_Latin1_General_CP1_CI_AI");
            entity.Property(e => e.ServiceSerialNumber).HasMaxLength(30);
            entity.Property(e => e.ServiceSndescription)
                .HasMaxLength(60)
                .HasColumnName("ServiceSNDescription");
            entity.Property(e => e.SolutionCode).HasMaxLength(8);
            entity.Property(e => e.SolutionDescription).HasMaxLength(50);
            entity.Property(e => e.StartDate).HasColumnType("datetime");
            entity.Property(e => e.StartTime).HasColumnType("datetime");
            entity.Property(e => e.Type).HasMaxLength(11);
            entity.Property(e => e.UnitPrice).HasColumnType("numeric(10, 2)");
            entity.Property(e => e.WarehouseCode).HasMaxLength(20);
            entity.Property(e => e.WarehouseName).HasMaxLength(50);
        });

        modelBuilder.Entity<SmsinvoiceAttachment>(entity =>
        {
            entity.ToTable("SMSInvoiceAttachments");

            entity.HasIndex(e => new { e.ContractId, e.AttachmentId }, "IX_CtrAttach");

            entity.HasIndex(e => new { e.InvoiceHeaderId, e.AttachmentId }, "IX_HeaderAttach");

            entity.Property(e => e.Id)
                .ValueGeneratedNever()
                .HasColumnName("ID");
            entity.Property(e => e.AttachmentId).HasColumnName("AttachmentID");
            entity.Property(e => e.ContractDocType)
                .HasMaxLength(1)
                .IsFixedLength();
            entity.Property(e => e.ContractId).HasColumnName("ContractID");
            entity.Property(e => e.InvoiceHeaderId).HasColumnName("InvoiceHeaderID");
            entity.Property(e => e.Syscreated)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("syscreated");
            entity.Property(e => e.Syscreator).HasColumnName("syscreator");
            entity.Property(e => e.Sysmodified)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("sysmodified");
            entity.Property(e => e.Sysmodifier).HasColumnName("sysmodifier");
        });

        modelBuilder.Entity<SmsinvoiceDatum>(entity =>
        {
            entity.ToTable("SMSInvoiceData");

            entity.HasIndex(e => e.Account, "IX_Account");

            entity.HasIndex(e => new { e.InvoiceHeaderId, e.InvoiceLineId }, "IX_HeaderID");

            entity.HasIndex(e => new { e.InvoiceGroupNumber, e.InvoiceExported }, "IX_InvoiceGroupNumber");

            entity.HasIndex(e => e.InvoiceLineId, "IX_LineID");

            entity.HasIndex(e => new { e.MessageCode, e.InvoiceExported }, "IX_MEssageCode");

            entity.Property(e => e.Id)
                .ValueGeneratedNever()
                .HasColumnName("ID");
            entity.Property(e => e.ContractInvoicingStatus)
                .HasMaxLength(1)
                .IsFixedLength();
            entity.Property(e => e.CostUnitCode)
                .HasMaxLength(8)
                .IsFixedLength();
            entity.Property(e => e.CostcenterCode)
                .HasMaxLength(8)
                .IsFixedLength();
            entity.Property(e => e.Currency)
                .HasMaxLength(3)
                .IsFixedLength();
            entity.Property(e => e.DivisionCode).HasMaxLength(3);
            entity.Property(e => e.EndDate).HasColumnType("datetime");
            entity.Property(e => e.InvoiceFrequency)
                .HasMaxLength(1)
                .IsFixedLength();
            entity.Property(e => e.InvoiceHeaderId).HasColumnName("InvoiceHeaderID");
            entity.Property(e => e.InvoiceLineId).HasColumnName("InvoiceLineID");
            entity.Property(e => e.LineType)
                .HasMaxLength(1)
                .IsFixedLength();
            entity.Property(e => e.Origin)
                .HasMaxLength(1)
                .IsFixedLength();
            entity.Property(e => e.PaymentCondition)
                .HasMaxLength(5)
                .IsFixedLength();
            entity.Property(e => e.SelectionCode)
                .HasMaxLength(2)
                .IsFixedLength();
            entity.Property(e => e.StartDate).HasColumnType("datetime");
            entity.Property(e => e.Syscreated)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("syscreated");
            entity.Property(e => e.Syscreator).HasColumnName("syscreator");
            entity.Property(e => e.Sysmodified)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("sysmodified");
            entity.Property(e => e.Sysmodifier).HasColumnName("sysmodifier");
            entity.Property(e => e.Vatcode).HasColumnName("VATCode");
        });

        modelBuilder.Entity<SmsinvoiceExportHeadersView>(entity =>
        {
            entity
                .HasNoKey()
                .ToView("SMSInvoiceExportHeadersView");

            entity.Property(e => e.CostCenterCode)
                .HasMaxLength(8)
                .IsFixedLength();
            entity.Property(e => e.Currency)
                .HasMaxLength(3)
                .IsFixedLength();
            entity.Property(e => e.Division)
                .HasMaxLength(3)
                .IsFixedLength();
            entity.Property(e => e.InvoiceAccountCode).HasMaxLength(20);
            entity.Property(e => e.InvoiceAddressLine1)
                .HasMaxLength(100)
                .UseCollation("SQL_Latin1_General_CP1_CI_AI");
            entity.Property(e => e.InvoiceAddressLine2)
                .HasMaxLength(100)
                .UseCollation("SQL_Latin1_General_CP1_CI_AI");
            entity.Property(e => e.InvoiceAddressLine3)
                .HasMaxLength(100)
                .UseCollation("SQL_Latin1_General_CP1_CI_AI");
            entity.Property(e => e.InvoiceCity)
                .HasMaxLength(100)
                .UseCollation("SQL_Latin1_General_CP1_CI_AI");
            entity.Property(e => e.InvoiceCode)
                .HasMaxLength(3)
                .IsFixedLength();
            entity.Property(e => e.InvoiceContactInitials)
                .HasMaxLength(10)
                .UseCollation("SQL_Latin1_General_CP1_CI_AI");
            entity.Property(e => e.InvoiceContactJob)
                .HasMaxLength(50)
                .UseCollation("SQL_Latin1_General_CP1_CI_AI");
            entity.Property(e => e.InvoiceContactName)
                .HasMaxLength(81)
                .UseCollation("SQL_Latin1_General_CP1_CI_AI");
            entity.Property(e => e.InvoiceContactTitle)
                .HasMaxLength(4)
                .IsFixedLength();
            entity.Property(e => e.InvoiceCountryCode)
                .HasMaxLength(3)
                .IsFixedLength();
            entity.Property(e => e.InvoiceCounty)
                .HasMaxLength(100)
                .UseCollation("SQL_Latin1_General_CP1_CI_AI");
            entity.Property(e => e.InvoiceDebtorCode).HasMaxLength(20);
            entity.Property(e => e.InvoiceDebtorName)
                .HasMaxLength(50)
                .UseCollation("SQL_Latin1_General_CP1_CI_AI");
            entity.Property(e => e.InvoiceDebtorNumber)
                .HasMaxLength(6)
                .IsFixedLength();
            entity.Property(e => e.InvoiceFax).HasMaxLength(50);
            entity.Property(e => e.InvoicePhone).HasMaxLength(50);
            entity.Property(e => e.InvoicePostCode)
                .HasMaxLength(20)
                .UseCollation("SQL_Latin1_General_CP1_CI_AI");
            entity.Property(e => e.InvoiceStateCode)
                .HasMaxLength(3)
                .IsFixedLength();
            entity.Property(e => e.OrderAccountCode).HasMaxLength(20);
            entity.Property(e => e.OrderContactInitials)
                .HasMaxLength(10)
                .UseCollation("SQL_Latin1_General_CP1_CI_AI");
            entity.Property(e => e.OrderContactName)
                .HasMaxLength(81)
                .UseCollation("SQL_Latin1_General_CP1_CI_AI");
            entity.Property(e => e.OrderContactTitle)
                .HasMaxLength(4)
                .IsFixedLength();
            entity.Property(e => e.OrderDate).HasColumnType("datetime");
            entity.Property(e => e.OrderDebtorCode).HasMaxLength(20);
            entity.Property(e => e.OrderDebtorNumber)
                .HasMaxLength(6)
                .IsFixedLength();
            entity.Property(e => e.Refer).HasMaxLength(7);
            entity.Property(e => e.ServiceAddressLine1)
                .HasMaxLength(100)
                .UseCollation("SQL_Latin1_General_CP1_CI_AI");
            entity.Property(e => e.ServiceAddressLine2)
                .HasMaxLength(100)
                .UseCollation("SQL_Latin1_General_CP1_CI_AI");
            entity.Property(e => e.ServiceAddressLine3)
                .HasMaxLength(100)
                .UseCollation("SQL_Latin1_General_CP1_CI_AI");
            entity.Property(e => e.ServiceCity)
                .HasMaxLength(100)
                .UseCollation("SQL_Latin1_General_CP1_CI_AI");
            entity.Property(e => e.ServiceContactInitials)
                .HasMaxLength(10)
                .UseCollation("SQL_Latin1_General_CP1_CI_AI");
            entity.Property(e => e.ServiceContactJob)
                .HasMaxLength(50)
                .UseCollation("SQL_Latin1_General_CP1_CI_AI");
            entity.Property(e => e.ServiceContactName)
                .HasMaxLength(81)
                .UseCollation("SQL_Latin1_General_CP1_CI_AI");
            entity.Property(e => e.ServiceContactTitle)
                .HasMaxLength(4)
                .IsFixedLength();
            entity.Property(e => e.ServiceCountryCode)
                .HasMaxLength(3)
                .IsFixedLength();
            entity.Property(e => e.ServiceCounty)
                .HasMaxLength(100)
                .UseCollation("SQL_Latin1_General_CP1_CI_AI");
            entity.Property(e => e.ServiceDebtorName)
                .HasMaxLength(50)
                .UseCollation("SQL_Latin1_General_CP1_CI_AI");
            entity.Property(e => e.ServiceFax).HasMaxLength(50);
            entity.Property(e => e.ServicePhone).HasMaxLength(50);
            entity.Property(e => e.ServicePostCode)
                .HasMaxLength(20)
                .UseCollation("SQL_Latin1_General_CP1_CI_AI");
            entity.Property(e => e.ServiceStateCode)
                .HasMaxLength(3)
                .IsFixedLength();
        });

        modelBuilder.Entity<SmsinvoiceExportLinesView>(entity =>
        {
            entity
                .HasNoKey()
                .ToView("SMSInvoiceExportLinesView");

            entity.Property(e => e.AgreementDetail).HasMaxLength(170);
            entity.Property(e => e.AgreementType)
                .HasMaxLength(1)
                .IsFixedLength();
            entity.Property(e => e.AgreementTypeDescription).HasMaxLength(100);
            entity.Property(e => e.AmountFc).HasColumnName("AmountFC");
            entity.Property(e => e.CostCenterCode)
                .HasMaxLength(8)
                .IsFixedLength();
            entity.Property(e => e.CostUnitCode)
                .HasMaxLength(8)
                .IsFixedLength();
            entity.Property(e => e.DocNumber).HasMaxLength(50);
            entity.Property(e => e.EndDate).HasColumnType("datetime");
            entity.Property(e => e.InvoiceFrequency)
                .HasMaxLength(1)
                .IsFixedLength();
            entity.Property(e => e.InvoiceFrequencyDescription).HasMaxLength(100);
            entity.Property(e => e.InvoicedUntilDate).HasColumnType("datetime");
            entity.Property(e => e.ItemCode).HasMaxLength(30);
            entity.Property(e => e.ItemDescription)
                .HasMaxLength(60)
                .UseCollation("SQL_Latin1_General_CP1_CI_AI");
            entity.Property(e => e.LineEnddate).HasColumnType("datetime");
            entity.Property(e => e.LineStartdate).HasColumnType("datetime");
            entity.Property(e => e.LineType)
                .HasMaxLength(1)
                .IsFixedLength();
            entity.Property(e => e.LineTypeDescription).HasMaxLength(100);
            entity.Property(e => e.Origin)
                .HasMaxLength(1)
                .IsFixedLength();
            entity.Property(e => e.OriginDescription).HasMaxLength(100);
            entity.Property(e => e.ProjectNumber).HasMaxLength(20);
            entity.Property(e => e.SerialNumber).HasMaxLength(30);
            entity.Property(e => e.ServiceAddressLine1)
                .HasMaxLength(100)
                .UseCollation("SQL_Latin1_General_CP1_CI_AI");
            entity.Property(e => e.ServiceAddressLine2)
                .HasMaxLength(100)
                .UseCollation("SQL_Latin1_General_CP1_CI_AI");
            entity.Property(e => e.ServiceAddressLine3)
                .HasMaxLength(100)
                .UseCollation("SQL_Latin1_General_CP1_CI_AI");
            entity.Property(e => e.ServiceCity)
                .HasMaxLength(100)
                .UseCollation("SQL_Latin1_General_CP1_CI_AI");
            entity.Property(e => e.ServiceContactInitials)
                .HasMaxLength(10)
                .UseCollation("SQL_Latin1_General_CP1_CI_AI");
            entity.Property(e => e.ServiceContactJob)
                .HasMaxLength(50)
                .UseCollation("SQL_Latin1_General_CP1_CI_AI");
            entity.Property(e => e.ServiceContactName)
                .HasMaxLength(81)
                .UseCollation("SQL_Latin1_General_CP1_CI_AI");
            entity.Property(e => e.ServiceContactPredCode)
                .HasMaxLength(4)
                .IsFixedLength();
            entity.Property(e => e.ServiceCountry).HasMaxLength(60);
            entity.Property(e => e.ServiceCounty)
                .HasMaxLength(100)
                .UseCollation("SQL_Latin1_General_CP1_CI_AI");
            entity.Property(e => e.ServiceDebtorName)
                .HasMaxLength(50)
                .UseCollation("SQL_Latin1_General_CP1_CI_AI");
            entity.Property(e => e.ServiceFax).HasMaxLength(50);
            entity.Property(e => e.ServiceItem).HasMaxLength(30);
            entity.Property(e => e.ServicePhone).HasMaxLength(50);
            entity.Property(e => e.ServicePostCode)
                .HasMaxLength(20)
                .UseCollation("SQL_Latin1_General_CP1_CI_AI");
            entity.Property(e => e.ServiceSerialNumber).HasMaxLength(30);
            entity.Property(e => e.ServiceState).HasMaxLength(100);
            entity.Property(e => e.SmsinvoiceDataId).HasColumnName("SMSInvoiceDataID");
            entity.Property(e => e.StartDate).HasColumnType("datetime");
            entity.Property(e => e.VatCode)
                .HasMaxLength(3)
                .IsFixedLength();
            entity.Property(e => e.Warehouse)
                .HasMaxLength(4)
                .IsFixedLength();
        });

        modelBuilder.Entity<SmsinvoiceHeader>(entity =>
        {
            entity.ToTable("SMSInvoiceHeader");

            entity.Property(e => e.Id)
                .ValueGeneratedNever()
                .HasColumnName("ID");
            entity.Property(e => e.Currency)
                .HasMaxLength(3)
                .IsFixedLength();
            entity.Property(e => e.DivisionCode)
                .HasMaxLength(3)
                .IsFixedLength();
            entity.Property(e => e.EgcommunicationStatus).HasColumnName("EGCommunicationStatus");
            entity.Property(e => e.EgerrorMessage).HasColumnName("EGErrorMessage");
            entity.Property(e => e.InvoiceDescription).HasMaxLength(40);
            entity.Property(e => e.OrderNumber)
                .HasMaxLength(8)
                .IsFixedLength();
            entity.Property(e => e.PaymentCondition)
                .HasMaxLength(5)
                .IsFixedLength();
            entity.Property(e => e.SelectionCode)
                .HasMaxLength(2)
                .IsFixedLength();
            entity.Property(e => e.Syscreated)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("syscreated");
            entity.Property(e => e.Syscreator).HasColumnName("syscreator");
            entity.Property(e => e.Sysmodified)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("sysmodified");
            entity.Property(e => e.Sysmodifier).HasColumnName("sysmodifier");
        });

        modelBuilder.Entity<SmsinvoiceLine>(entity =>
        {
            entity.ToTable("SMSInvoiceLines");

            entity.Property(e => e.Id)
                .ValueGeneratedNever()
                .HasColumnName("ID");
            entity.Property(e => e.CostUnitCode)
                .HasMaxLength(8)
                .IsFixedLength();
            entity.Property(e => e.CostcenterCode)
                .HasMaxLength(8)
                .IsFixedLength();
            entity.Property(e => e.Description).HasMaxLength(60);
            entity.Property(e => e.InvoiceComments).HasMaxLength(160);
            entity.Property(e => e.InvoiceEndDate).HasColumnType("datetime");
            entity.Property(e => e.InvoiceHeaderId).HasColumnName("InvoiceHeaderID");
            entity.Property(e => e.InvoiceStartDate).HasColumnType("datetime");
            entity.Property(e => e.ItemCode).HasMaxLength(30);
            entity.Property(e => e.ItemId).HasColumnName("ItemID");
            entity.Property(e => e.LineType)
                .HasMaxLength(1)
                .IsFixedLength();
            entity.Property(e => e.ProjectNumber).HasMaxLength(20);
            entity.Property(e => e.Syscreated)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("syscreated");
            entity.Property(e => e.Syscreator).HasColumnName("syscreator");
            entity.Property(e => e.Sysmodified)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("sysmodified");
            entity.Property(e => e.Sysmodifier).HasColumnName("sysmodifier");
            entity.Property(e => e.Vatcode).HasColumnName("VATCode");
            entity.Property(e => e.Warehouse)
                .HasMaxLength(4)
                .IsUnicode(false)
                .IsFixedLength();
        });

        modelBuilder.Entity<SmsinvoiceScheduleView>(entity =>
        {
            entity
                .HasNoKey()
                .ToView("SMSInvoiceScheduleView");

            entity.Property(e => e.AgreementType)
                .HasMaxLength(1)
                .IsFixedLength();
            entity.Property(e => e.ConfigEndDate).HasColumnType("datetime");
            entity.Property(e => e.ConfigStartDate).HasColumnType("datetime");
            entity.Property(e => e.ContractInvoicingStatus)
                .HasMaxLength(1)
                .IsFixedLength();
            entity.Property(e => e.ContractNumber).HasMaxLength(50);
            entity.Property(e => e.ContractStatus)
                .HasMaxLength(1)
                .IsFixedLength();
            entity.Property(e => e.ContractTypeCode).HasMaxLength(20);
            entity.Property(e => e.CostCenter)
                .HasMaxLength(8)
                .IsFixedLength();
            entity.Property(e => e.CostUnit)
                .HasMaxLength(8)
                .IsFixedLength();
            entity.Property(e => e.Currency).HasMaxLength(255);
            entity.Property(e => e.EndDate).HasColumnType("datetime");
            entity.Property(e => e.InvoiceDate).HasColumnType("datetime");
            entity.Property(e => e.InvoiceFrequency)
                .HasMaxLength(1)
                .IsFixedLength();
            entity.Property(e => e.InvoicedUntil).HasColumnType("datetime");
            entity.Property(e => e.InvoicedUntilProposal).HasColumnType("datetime");
            entity.Property(e => e.ItemEndDate).HasColumnType("datetime");
            entity.Property(e => e.ItemStartDate).HasColumnType("datetime");
            entity.Property(e => e.LineType).HasMaxLength(1);
            entity.Property(e => e.Origin).HasMaxLength(1);
            entity.Property(e => e.StartDate).HasColumnType("datetime");
            entity.Property(e => e.Vatcode).HasColumnName("VATCode");
        });

        modelBuilder.Entity<SmsjobDetail>(entity =>
        {
            entity.ToTable("SMSJobDetails");

            entity.HasIndex(e => new { e.JobHeader, e.SmslineId }, "IX_JobHeader");

            entity.HasIndex(e => new { e.Type, e.EntryType, e.PlanningId }, "IX_Type_EntryType_PlanningID");

            entity.Property(e => e.Id)
                .ValueGeneratedNever()
                .HasColumnName("ID");
            entity.Property(e => e.AddPhagreement).HasColumnName("AddPHAgreement");
            entity.Property(e => e.CostEntryReference).HasMaxLength(30);
            entity.Property(e => e.CostUnitCode)
                .HasMaxLength(8)
                .IsFixedLength();
            entity.Property(e => e.CostcenterCode)
                .HasMaxLength(8)
                .IsFixedLength();
            entity.Property(e => e.EgcommunicationStatus).HasColumnName("EGCommunicationStatus");
            entity.Property(e => e.EgerrorMessage).HasColumnName("EGErrorMessage");
            entity.Property(e => e.EndDate).HasColumnType("datetime");
            entity.Property(e => e.EntryType)
                .HasMaxLength(1)
                .IsFixedLength();
            entity.Property(e => e.ItemCode).HasMaxLength(30);
            entity.Property(e => e.PartType)
                .HasMaxLength(1)
                .IsFixedLength();
            entity.Property(e => e.Phagreement).HasColumnName("PHAgreement");
            entity.Property(e => e.PlanningId).HasColumnName("PlanningID");
            entity.Property(e => e.PmstartDateOriginal)
                .HasColumnType("smalldatetime")
                .HasColumnName("PMStartDateOriginal");
            entity.Property(e => e.Signed).HasDefaultValue(false);
            entity.Property(e => e.SmslineId).HasColumnName("SMSLineID");
            entity.Property(e => e.StartDate).HasColumnType("datetime");
            entity.Property(e => e.Syscreated)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("syscreated");
            entity.Property(e => e.Syscreator).HasColumnName("syscreator");
            entity.Property(e => e.Sysmodified)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("sysmodified");
            entity.Property(e => e.Sysmodifier).HasColumnName("sysmodifier");
            entity.Property(e => e.Type)
                .HasMaxLength(1)
                .IsFixedLength();
            entity.Property(e => e.WarehouseCode)
                .HasMaxLength(4)
                .IsUnicode(false)
                .IsFixedLength();
        });

        modelBuilder.Entity<SmsjobHeader>(entity =>
        {
            entity.ToTable("SMSJobHeader");

            entity.HasIndex(e => e.Contract, "IX_Contract");

            entity.HasIndex(e => new { e.ServiceActivity, e.ServiceItem, e.Absence }, "IX_ServiceActivity");

            entity.Property(e => e.Id)
                .ValueGeneratedNever()
                .HasColumnName("ID");
            entity.Property(e => e.Pmbatch).HasColumnName("PMBatch");
            entity.Property(e => e.PmcontractOrigin).HasColumnName("PMContractOrigin");
            entity.Property(e => e.PmscheduleOrigin).HasColumnName("PMScheduleOrigin");
            entity.Property(e => e.PmtypeOrigin).HasColumnName("PMTypeOrigin");
            entity.Property(e => e.Syscreated)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("syscreated");
            entity.Property(e => e.Syscreator).HasColumnName("syscreator");
            entity.Property(e => e.Sysmodified)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("sysmodified");
            entity.Property(e => e.Sysmodifier).HasColumnName("sysmodifier");
        });

        modelBuilder.Entity<SmspmbatchLog>(entity =>
        {
            entity.ToTable("SMSPMBatchLog");

            entity.Property(e => e.Id)
                .ValueGeneratedNever()
                .HasColumnName("ID");
            entity.Property(e => e.ContractAccountEnd).HasMaxLength(20);
            entity.Property(e => e.ContractAccountStart).HasMaxLength(20);
            entity.Property(e => e.ContractNumberEnd).HasMaxLength(30);
            entity.Property(e => e.ContractNumberStart).HasMaxLength(30);
            entity.Property(e => e.ItemCode).HasMaxLength(30);
            entity.Property(e => e.ItemDescription).HasMaxLength(60);
            entity.Property(e => e.PlanUntil).HasColumnType("datetime");
            entity.Property(e => e.SerialNumberDescription).HasMaxLength(60);
            entity.Property(e => e.SerialNumberEnd).HasMaxLength(30);
            entity.Property(e => e.SerialNumberStart).HasMaxLength(30);
            entity.Property(e => e.SnUserDate01End)
                .HasColumnType("datetime")
                .HasColumnName("SN_UserDate_01_End");
            entity.Property(e => e.SnUserDate01Start)
                .HasColumnType("datetime")
                .HasColumnName("SN_UserDate_01_Start");
            entity.Property(e => e.SnUserDate02End)
                .HasColumnType("datetime")
                .HasColumnName("SN_UserDate_02_End");
            entity.Property(e => e.SnUserDate02Start)
                .HasColumnType("datetime")
                .HasColumnName("SN_UserDate_02_Start");
            entity.Property(e => e.SnUserDate03End)
                .HasColumnType("datetime")
                .HasColumnName("SN_UserDate_03_End");
            entity.Property(e => e.SnUserDate03Start)
                .HasColumnType("datetime")
                .HasColumnName("SN_UserDate_03_Start");
            entity.Property(e => e.SnUserDate04End)
                .HasColumnType("datetime")
                .HasColumnName("SN_UserDate_04_End");
            entity.Property(e => e.SnUserDate04Start)
                .HasColumnType("datetime")
                .HasColumnName("SN_UserDate_04_Start");
            entity.Property(e => e.SnUserDate05End)
                .HasColumnType("datetime")
                .HasColumnName("SN_UserDate_05_End");
            entity.Property(e => e.SnUserDate05Start)
                .HasColumnType("datetime")
                .HasColumnName("SN_UserDate_05_Start");
            entity.Property(e => e.SnUserField01)
                .HasMaxLength(255)
                .HasColumnName("SN_UserField_01");
            entity.Property(e => e.SnUserField01Toggle).HasColumnName("SN_UserField_01_Toggle");
            entity.Property(e => e.SnUserField02)
                .HasMaxLength(255)
                .HasColumnName("SN_UserField_02");
            entity.Property(e => e.SnUserField02Toggle).HasColumnName("SN_UserField_02_Toggle");
            entity.Property(e => e.SnUserField03)
                .HasMaxLength(255)
                .HasColumnName("SN_UserField_03");
            entity.Property(e => e.SnUserField03Toggle).HasColumnName("SN_UserField_03_Toggle");
            entity.Property(e => e.SnUserField04)
                .HasMaxLength(255)
                .HasColumnName("SN_UserField_04");
            entity.Property(e => e.SnUserField04Toggle).HasColumnName("SN_UserField_04_Toggle");
            entity.Property(e => e.SnUserField05)
                .HasMaxLength(255)
                .HasColumnName("SN_UserField_05");
            entity.Property(e => e.SnUserField05Toggle).HasColumnName("SN_UserField_05_Toggle");
            entity.Property(e => e.SnUserField06)
                .HasMaxLength(255)
                .HasColumnName("SN_UserField_06");
            entity.Property(e => e.SnUserField06Toggle).HasColumnName("SN_UserField_06_Toggle");
            entity.Property(e => e.SnUserField07)
                .HasMaxLength(255)
                .HasColumnName("SN_UserField_07");
            entity.Property(e => e.SnUserField07Toggle).HasColumnName("SN_UserField_07_Toggle");
            entity.Property(e => e.SnUserField08)
                .HasMaxLength(255)
                .HasColumnName("SN_UserField_08");
            entity.Property(e => e.SnUserField08Toggle).HasColumnName("SN_UserField_08_Toggle");
            entity.Property(e => e.SnUserField09)
                .HasMaxLength(255)
                .HasColumnName("SN_UserField_09");
            entity.Property(e => e.SnUserField09Toggle).HasColumnName("SN_UserField_09_Toggle");
            entity.Property(e => e.SnUserField10)
                .HasMaxLength(255)
                .HasColumnName("SN_UserField_10");
            entity.Property(e => e.SnUserField10Toggle).HasColumnName("SN_UserField_10_Toggle");
            entity.Property(e => e.SnUserNumber01End).HasColumnName("SN_UserNumber_01_End");
            entity.Property(e => e.SnUserNumber01Start).HasColumnName("SN_UserNumber_01_Start");
            entity.Property(e => e.SnUserNumber02End).HasColumnName("SN_UserNumber_02_End");
            entity.Property(e => e.SnUserNumber02Start).HasColumnName("SN_UserNumber_02_Start");
            entity.Property(e => e.SnUserNumber03End).HasColumnName("SN_UserNumber_03_End");
            entity.Property(e => e.SnUserNumber03Start).HasColumnName("SN_UserNumber_03_Start");
            entity.Property(e => e.SnUserNumber04End).HasColumnName("SN_UserNumber_04_End");
            entity.Property(e => e.SnUserNumber04Start).HasColumnName("SN_UserNumber_04_Start");
            entity.Property(e => e.SnUserNumber05End).HasColumnName("SN_UserNumber_05_End");
            entity.Property(e => e.SnUserNumber05Start).HasColumnName("SN_UserNumber_05_Start");
            entity.Property(e => e.SnUserYesNo01).HasColumnName("SN_UserYesNo_01");
            entity.Property(e => e.SnUserYesNo02).HasColumnName("SN_UserYesNo_02");
            entity.Property(e => e.SnUserYesNo03).HasColumnName("SN_UserYesNo_03");
            entity.Property(e => e.SnUserYesNo04).HasColumnName("SN_UserYesNo_04");
            entity.Property(e => e.SnUserYesNo05).HasColumnName("SN_UserYesNo_05");
            entity.Property(e => e.Syscreated)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("syscreated");
            entity.Property(e => e.Syscreator).HasColumnName("syscreator");
            entity.Property(e => e.Sysmodified)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("sysmodified");
            entity.Property(e => e.Sysmodifier).HasColumnName("sysmodifier");
        });

        modelBuilder.Entity<Smspmdatum>(entity =>
        {
            entity.ToTable("SMSPMData");

            entity.Property(e => e.Id)
                .ValueGeneratedNever()
                .HasColumnName("ID");
            entity.Property(e => e.AddressId).HasColumnName("AddressID");
            entity.Property(e => e.ContractId).HasColumnName("ContractID");
            entity.Property(e => e.CustomerId).HasColumnName("CustomerID");
            entity.Property(e => e.EndDateTime).HasColumnType("datetime");
            entity.Property(e => e.JobDetailId).HasColumnName("JobDetailID");
            entity.Property(e => e.RequestId).HasColumnName("RequestID");
            entity.Property(e => e.StartDateTime).HasColumnType("datetime");
            entity.Property(e => e.Status)
                .HasMaxLength(1)
                .IsFixedLength();
            entity.Property(e => e.Syscreated)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("syscreated");
            entity.Property(e => e.Syscreator).HasColumnName("syscreator");
            entity.Property(e => e.Sysmodified)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("sysmodified");
            entity.Property(e => e.Sysmodifier).HasColumnName("sysmodifier");
        });

        modelBuilder.Entity<Smspmlset>(entity =>
        {
            entity.ToTable("SMSPMLSets");

            entity.Property(e => e.Id)
                .ValueGeneratedNever()
                .HasColumnName("ID");
            entity.Property(e => e.Pmschedule).HasColumnName("PMSchedule");
            entity.Property(e => e.Pmtype).HasColumnName("PMType");
            entity.Property(e => e.Syscreated)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("syscreated");
            entity.Property(e => e.Syscreator).HasColumnName("syscreator");
            entity.Property(e => e.Sysmodified)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("sysmodified");
            entity.Property(e => e.Sysmodifier).HasColumnName("sysmodifier");
        });

        modelBuilder.Entity<SmspmplanView>(entity =>
        {
            entity
                .HasNoKey()
                .ToView("SMSPMPlanView");

            entity.Property(e => e.ActivityStartTime).HasColumnType("datetime");
            entity.Property(e => e.ContractId).HasColumnName("ContractID");
            entity.Property(e => e.ContractNumber).HasMaxLength(50);
            entity.Property(e => e.ContractSelection)
                .HasMaxLength(1)
                .IsFixedLength();
            entity.Property(e => e.Pmschedule).HasColumnName("PMSchedule");
            entity.Property(e => e.PmscheduleCode)
                .HasMaxLength(20)
                .HasColumnName("PMScheduleCode");
            entity.Property(e => e.PmscheduleDescription)
                .HasMaxLength(50)
                .HasColumnName("PMScheduleDescription");
            entity.Property(e => e.Pmtype).HasColumnName("PMType");
            entity.Property(e => e.StartDate).HasColumnType("datetime");
            entity.Property(e => e.StartNextRequest)
                .HasMaxLength(1)
                .IsFixedLength();
            entity.Property(e => e.TimeIntervalUnits)
                .HasMaxLength(1)
                .IsFixedLength();
        });

        modelBuilder.Entity<SmspmproposeView>(entity =>
        {
            entity
                .HasNoKey()
                .ToView("SMSPMProposeView");

            entity.Property(e => e.ActivityStartTime).HasColumnType("datetime");
            entity.Property(e => e.ActivityTypeDescription).HasMaxLength(50);
            entity.Property(e => e.Address)
                .HasMaxLength(100)
                .UseCollation("SQL_Latin1_General_CP1_CI_AI");
            entity.Property(e => e.AddressId).HasColumnName("AddressID");
            entity.Property(e => e.AgreementDescription).HasMaxLength(60);
            entity.Property(e => e.AgreementEndDate).HasColumnType("datetime");
            entity.Property(e => e.AgreementStartDate).HasColumnType("datetime");
            entity.Property(e => e.City)
                .HasMaxLength(100)
                .UseCollation("SQL_Latin1_General_CP1_CI_AI");
            entity.Property(e => e.ConfigurationDescription).HasMaxLength(30);
            entity.Property(e => e.ContractId).HasColumnName("ContractID");
            entity.Property(e => e.ContractNumber).HasMaxLength(50);
            entity.Property(e => e.CustomerId).HasColumnName("CustomerID");
            entity.Property(e => e.CustomerName)
                .HasMaxLength(50)
                .UseCollation("SQL_Latin1_General_CP1_CI_AI");
            entity.Property(e => e.Division)
                .HasMaxLength(3)
                .IsFixedLength();
            entity.Property(e => e.EngineerName)
                .HasMaxLength(64)
                .UseCollation("SQL_Latin1_General_CP1_CI_AI");
            entity.Property(e => e.GeneratedUntilDate).HasColumnType("datetime");
            entity.Property(e => e.OldGeneratedUntilDate).HasColumnType("datetime");
            entity.Property(e => e.Pmtype).HasColumnName("PMType");
            entity.Property(e => e.StartNextRequest)
                .HasMaxLength(1)
                .IsFixedLength();
            entity.Property(e => e.Status)
                .HasMaxLength(1)
                .IsUnicode(false);
            entity.Property(e => e.TimeUnit)
                .HasMaxLength(1)
                .IsFixedLength();
        });

        modelBuilder.Entity<Smspmschedule>(entity =>
        {
            entity.ToTable("SMSPMSchedules");

            entity.Property(e => e.Id)
                .ValueGeneratedNever()
                .HasColumnName("ID");
            entity.Property(e => e.Code).HasMaxLength(20);
            entity.Property(e => e.Contract)
                .HasMaxLength(1)
                .IsFixedLength();
            entity.Property(e => e.DefinedPer)
                .HasMaxLength(1)
                .IsFixedLength();
            entity.Property(e => e.Description).HasMaxLength(50);
            entity.Property(e => e.ItemCode).HasMaxLength(30);
            entity.Property(e => e.Pmtype).HasColumnName("PMType");
            entity.Property(e => e.StartDate).HasColumnType("datetime");
            entity.Property(e => e.StartNext)
                .HasMaxLength(1)
                .IsFixedLength();
            entity.Property(e => e.StartTime).HasColumnType("datetime");
            entity.Property(e => e.Syscreated)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("syscreated");
            entity.Property(e => e.Syscreator).HasColumnName("syscreator");
            entity.Property(e => e.Sysmodified)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("sysmodified");
            entity.Property(e => e.Sysmodifier).HasColumnName("sysmodifier");
            entity.Property(e => e.TimeUnits)
                .HasMaxLength(1)
                .IsFixedLength();
        });

        modelBuilder.Entity<Smspmtype>(entity =>
        {
            entity.HasKey(e => e.Id).IsClustered(false);

            entity.ToTable("SMSPMTypes");

            entity.HasIndex(e => e.Id, "SMSPMTypes_Index").IsClustered();

            entity.Property(e => e.Id)
                .ValueGeneratedNever()
                .HasColumnName("ID");
            entity.Property(e => e.ActivityTypeId).HasColumnName("ActivityTypeID");
            entity.Property(e => e.Bedrnr).HasMaxLength(3);
            entity.Property(e => e.Contract)
                .HasMaxLength(1)
                .IsFixedLength();
            entity.Property(e => e.Description).HasMaxLength(50);
            entity.Property(e => e.StartNext)
                .HasMaxLength(1)
                .IsFixedLength();
            entity.Property(e => e.StartTime).HasColumnType("datetime");
            entity.Property(e => e.Syscreated)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("syscreated");
            entity.Property(e => e.Syscreator).HasColumnName("syscreator");
            entity.Property(e => e.Sysmodified)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("sysmodified");
            entity.Property(e => e.Sysmodifier).HasColumnName("sysmodifier");
            entity.Property(e => e.TimeUnits)
                .HasMaxLength(1)
                .IsFixedLength();
            entity.Property(e => e.Type).HasMaxLength(20);
        });

        modelBuilder.Entity<Smsproblem>(entity =>
        {
            entity.ToTable("SMSProblems");

            entity.HasIndex(e => new { e.Code, e.Bedrnr }, "IX_Code").IsUnique();

            entity.Property(e => e.Id)
                .ValueGeneratedNever()
                .HasColumnName("ID");
            entity.Property(e => e.Bedrnr).HasMaxLength(3);
            entity.Property(e => e.Code).HasMaxLength(8);
            entity.Property(e => e.Description).HasMaxLength(50);
            entity.Property(e => e.Syscreated)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("syscreated");
            entity.Property(e => e.Syscreator).HasColumnName("syscreator");
            entity.Property(e => e.Sysmodified)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("sysmodified");
            entity.Property(e => e.Sysmodifier).HasColumnName("sysmodifier");
        });

        modelBuilder.Entity<SmsproblemSolutionLink>(entity =>
        {
            entity.ToTable("SMSProblemSolutionLinks");

            entity.Property(e => e.Id)
                .ValueGeneratedNever()
                .HasColumnName("ID");
            entity.Property(e => e.Syscreated)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("syscreated");
            entity.Property(e => e.Syscreator).HasColumnName("syscreator");
        });

        modelBuilder.Entity<SmsresourceGroup>(entity =>
        {
            entity.ToTable("SMSResourceGroups");

            entity.Property(e => e.Id)
                .HasDefaultValueSql("(newid())")
                .HasColumnName("ID");
            entity.Property(e => e.Bedrnr).HasMaxLength(3);
            entity.Property(e => e.GroupName).HasMaxLength(30);
            entity.Property(e => e.Syscreated)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime");
            entity.Property(e => e.Syscreator).HasDefaultValueSql("(user_name())");
            entity.Property(e => e.Sysmodified)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime");
            entity.Property(e => e.Sysmodifier).HasDefaultValueSql("(user_name())");
        });

        modelBuilder.Entity<SmsresourceGroupMember>(entity =>
        {
            entity.ToTable("SMSResourceGroupMembers");

            entity.HasIndex(e => new { e.GroupId, e.GroupMemberId }, "IX_GroupID");

            entity.Property(e => e.Id)
                .HasDefaultValueSql("(newid())")
                .HasColumnName("ID");
            entity.Property(e => e.GroupId).HasColumnName("GroupID");
            entity.Property(e => e.GroupMemberId).HasColumnName("GroupMemberID");
            entity.Property(e => e.Syscreated)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime");
            entity.Property(e => e.Syscreator).HasDefaultValueSql("(user_name())");
            entity.Property(e => e.Sysmodified)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime");
            entity.Property(e => e.Sysmodifier).HasDefaultValueSql("(user_name())");
        });

        modelBuilder.Entity<SmsresponseTime>(entity =>
        {
            entity.ToTable("SMSResponseTimes");

            entity.Property(e => e.Id)
                .ValueGeneratedNever()
                .HasColumnName("ID");
            entity.Property(e => e.Bedrnr).HasMaxLength(3);
            entity.Property(e => e.Syscreated)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("syscreated");
            entity.Property(e => e.Syscreator).HasColumnName("syscreator");
            entity.Property(e => e.Sysmodified)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("sysmodified");
            entity.Property(e => e.Sysmodifier).HasColumnName("sysmodifier");
            entity.Property(e => e.TimeUnit)
                .HasMaxLength(1)
                .IsFixedLength();
        });

        modelBuilder.Entity<SmsserviceActivity>(entity =>
        {
            entity.ToTable("SMSServiceActivity");

            entity.HasIndex(e => e.Absence, "IX_Absence");

            entity.Property(e => e.Id)
                .ValueGeneratedNever()
                .HasColumnName("ID");
            entity.Property(e => e.Bedrnr)
                .HasMaxLength(3)
                .HasColumnName("bedrnr");
            entity.Property(e => e.Pmtype).HasColumnName("PMType");
            entity.Property(e => e.Status)
                .HasMaxLength(1)
                .HasDefaultValue("O");
            entity.Property(e => e.Syscreated)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("syscreated");
            entity.Property(e => e.Syscreator).HasColumnName("syscreator");
            entity.Property(e => e.Sysmodified)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("sysmodified");
            entity.Property(e => e.Sysmodifier).HasColumnName("sysmodifier");
            entity.Property(e => e.Title).HasMaxLength(47);
        });

        modelBuilder.Entity<SmsserviceActivityDocLink>(entity =>
        {
            entity.ToTable("SMSServiceActivityDocLinks");

            entity.Property(e => e.Id)
                .ValueGeneratedNever()
                .HasColumnName("ID");
            entity.Property(e => e.DocumentId).HasColumnName("DocumentID");
            entity.Property(e => e.ServiceActivityId).HasColumnName("ServiceActivityID");
            entity.Property(e => e.Syscreated)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("syscreated");
            entity.Property(e => e.Syscreator).HasColumnName("syscreator");
            entity.Property(e => e.Sysmodified)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("sysmodified");
            entity.Property(e => e.Sysmodifier).HasColumnName("sysmodifier");
        });

        modelBuilder.Entity<Smssolution>(entity =>
        {
            entity.ToTable("SMSSolutions");

            entity.HasIndex(e => new { e.Code, e.Bedrnr }, "IX_Code").IsUnique();

            entity.Property(e => e.Id)
                .ValueGeneratedNever()
                .HasColumnName("ID");
            entity.Property(e => e.Bedrnr).HasMaxLength(3);
            entity.Property(e => e.Code).HasMaxLength(8);
            entity.Property(e => e.Description).HasMaxLength(50);
            entity.Property(e => e.Syscreated)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("syscreated");
            entity.Property(e => e.Syscreator).HasColumnName("syscreator");
            entity.Property(e => e.Sysmodified)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("sysmodified");
            entity.Property(e => e.Sysmodifier).HasColumnName("sysmodifier");
        });

        modelBuilder.Entity<SocialChatLine>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__SocialCh__3214EC273E74FAEE");

            entity.ToTable("SocialChatLine");

            entity.Property(e => e.Id)
                .HasDefaultValueSql("(newsequentialid())")
                .HasColumnName("ID");
            entity.Property(e => e.CreatedDate).HasColumnType("datetime");
        });

        modelBuilder.Entity<SocialChatRoom>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__SocialCh__3214EC27D5721ACF");

            entity.ToTable("SocialChatRoom");

            entity.Property(e => e.Id)
                .HasDefaultValueSql("(newsequentialid())")
                .HasColumnName("ID");
            entity.Property(e => e.InvitationToken).HasMaxLength(256);
            entity.Property(e => e.Title).HasMaxLength(500);
            entity.Property(e => e.Type).HasDefaultValue((short)1);
        });

        modelBuilder.Entity<SocialChatRoomMember>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__SocialCh__3214EC27241975B3");

            entity.ToTable("SocialChatRoomMember");

            entity.Property(e => e.Id)
                .HasDefaultValueSql("(newsequentialid())")
                .HasColumnName("ID");
            entity.Property(e => e.DateJoined).HasColumnType("datetime");
            entity.Property(e => e.Type).HasDefaultValue((short)3);
        });

        modelBuilder.Entity<SocialGroup>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__SocialGr__3214EC2728A2BB7C");

            entity.ToTable("SocialGroup");

            entity.Property(e => e.Id)
                .ValueGeneratedNever()
                .HasColumnName("ID");
            entity.Property(e => e.CreatorId).HasColumnName("CreatorID");
            entity.Property(e => e.ModifierId).HasColumnName("ModifierID");
            entity.Property(e => e.Name).HasMaxLength(255);
        });

        modelBuilder.Entity<SocialIdentity>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__SocialId__3214EC2738717406");

            entity.ToTable("SocialIdentity");

            entity.HasIndex(e => new { e.IdentityKey, e.IdentityType }, "IX_SocialIdentity_IdentityKeyType");

            entity.Property(e => e.Id)
                .ValueGeneratedNever()
                .HasColumnName("ID");
            entity.Property(e => e.IdentityKey).HasMaxLength(255);
        });

        modelBuilder.Entity<SocialLike>(entity =>
        {
            entity.ToTable("SocialLike");

            entity.HasIndex(e => new { e.OwnerId, e.CreatorId }, "IX_SocialLike_OwnerIDCreatorID");

            entity.Property(e => e.Id)
                .HasDefaultValueSql("(newsequentialid())")
                .HasColumnName("ID");
            entity.Property(e => e.CreatorId).HasColumnName("CreatorID");
            entity.Property(e => e.OwnerId).HasColumnName("OwnerID");
            entity.Property(e => e.OwnerType).HasDefaultValue((short)3);
        });

        modelBuilder.Entity<SocialMediaReference>(entity =>
        {
            entity.HasKey(e => e.Id).IsClustered(false);

            entity.HasIndex(e => new { e.EntityType, e.Person }, "EntityTypePerson");

            entity.HasIndex(e => new { e.Person, e.Type }, "IX_Clustered").IsClustered();

            entity.Property(e => e.Id)
                .HasDefaultValueSql("(newsequentialid())")
                .HasColumnName("ID");
            entity.Property(e => e.Link).HasMaxLength(120);
            entity.Property(e => e.Syscreated)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("syscreated");
            entity.Property(e => e.Syscreator).HasColumnName("syscreator");
            entity.Property(e => e.Sysmodified)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("sysmodified");
            entity.Property(e => e.Sysmodifier).HasColumnName("sysmodifier");
        });

        modelBuilder.Entity<SocialMediaType>(entity =>
        {
            entity.HasKey(e => e.Id).IsClustered(false);

            entity.HasIndex(e => e.Code, "IX_Clustered")
                .IsUnique()
                .IsClustered();

            entity.Property(e => e.Id)
                .HasDefaultValueSql("(newsequentialid())")
                .HasColumnName("ID");
            entity.Property(e => e.Code).HasMaxLength(10);
            entity.Property(e => e.Description).HasMaxLength(250);
            entity.Property(e => e.DescriptionTermId).HasColumnName("DescriptionTermID");
            entity.Property(e => e.FileName).HasMaxLength(128);
            entity.Property(e => e.Format).HasMaxLength(128);
            entity.Property(e => e.Syscreated)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("syscreated");
            entity.Property(e => e.Syscreator).HasColumnName("syscreator");
            entity.Property(e => e.Sysmodified)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("sysmodified");
            entity.Property(e => e.Sysmodifier).HasColumnName("sysmodifier");
        });

        modelBuilder.Entity<Source>(entity =>
        {
            entity.HasKey(e => e.Id).IsClustered(false);

            entity.ToTable("source");

            entity.HasIndex(e => new { e.IsUserDefined, e.SrcCode }, "IsUserDefinedSrc").IsUnique();

            entity.HasIndex(e => e.Id, "source_Index").IsClustered();

            entity.HasIndex(e => e.SrcCode, "source_code").IsUnique();

            entity.Property(e => e.Id).HasColumnName("ID");
            entity.Property(e => e.MlDesc0)
                .HasMaxLength(40)
                .HasColumnName("ml_desc_0");
            entity.Property(e => e.MlDesc1)
                .HasMaxLength(40)
                .HasColumnName("ml_desc_1");
            entity.Property(e => e.MlDesc2)
                .HasMaxLength(40)
                .HasColumnName("ml_desc_2");
            entity.Property(e => e.MlDesc3)
                .HasMaxLength(40)
                .HasColumnName("ml_desc_3");
            entity.Property(e => e.MlDesc4)
                .HasMaxLength(40)
                .HasColumnName("ml_desc_4");
            entity.Property(e => e.SrcCode)
                .HasMaxLength(3)
                .HasColumnName("src_code");
            entity.Property(e => e.Syscreated)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("syscreated");
            entity.Property(e => e.Syscreator).HasColumnName("syscreator");
            entity.Property(e => e.Sysguid)
                .HasDefaultValueSql("(newid())")
                .HasColumnName("sysguid");
            entity.Property(e => e.Sysmodified)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("sysmodified");
            entity.Property(e => e.Sysmodifier).HasColumnName("sysmodifier");
            entity.Property(e => e.Timestamp)
                .IsRowVersion()
                .IsConcurrencyToken()
                .HasColumnName("timestamp");
        });

        modelBuilder.Entity<Ssrsauthorization>(entity =>
        {
            entity.ToTable("SSRSAuthorization");

            entity.HasIndex(e => e.ItemId, "IX_SSRSAuthorization_ItemID");

            entity.Property(e => e.Id)
                .ValueGeneratedNever()
                .HasColumnName("ID");
            entity.Property(e => e.ItemId).HasColumnName("ItemID");
            entity.Property(e => e.RoleId).HasColumnName("RoleID");
        });

        modelBuilder.Entity<SsrsdataSource>(entity =>
        {
            entity.ToTable("SSRSDataSources");

            entity.HasIndex(e => e.Extension, "IX_SSRSDataSource_Extension");

            entity.HasIndex(e => e.Name, "IX_SSRSDataSource_Name");

            entity.Property(e => e.Id)
                .ValueGeneratedNever()
                .HasColumnName("ID");
            entity.Property(e => e.ConnectionString).HasMaxLength(100);
            entity.Property(e => e.DatabaseName).HasMaxLength(100);
            entity.Property(e => e.Description).HasMaxLength(100);
            entity.Property(e => e.Domain).HasMaxLength(100);
            entity.Property(e => e.Extension).HasMaxLength(20);
            entity.Property(e => e.Name).HasMaxLength(100);
            entity.Property(e => e.Password).HasMaxLength(100);
            entity.Property(e => e.ServerName).HasMaxLength(100);
            entity.Property(e => e.Syscreated)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("syscreated");
            entity.Property(e => e.Syscreator).HasColumnName("syscreator");
            entity.Property(e => e.Sysmodified)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("sysmodified");
            entity.Property(e => e.Sysmodifier).HasColumnName("sysmodifier");
            entity.Property(e => e.Timestamp)
                .IsRowVersion()
                .IsConcurrencyToken();
            entity.Property(e => e.UserName).HasMaxLength(100);
        });

        modelBuilder.Entity<Ssrsdrillthrough>(entity =>
        {
            entity.ToTable("SSRSDrillthroughs");

            entity.HasIndex(e => e.ParentReportPath, "IX_SSRSDrillthrough_ParentReportPath");

            entity.Property(e => e.Id)
                .ValueGeneratedNever()
                .HasColumnName("ID");
            entity.Property(e => e.Name)
                .HasMaxLength(500)
                .IsUnicode(false);
            entity.Property(e => e.ParentReportPath)
                .HasMaxLength(500)
                .IsUnicode(false);
            entity.Property(e => e.Syscreated)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("syscreated");
            entity.Property(e => e.Syscreator).HasColumnName("syscreator");
            entity.Property(e => e.Sysmodified)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("sysmodified");
            entity.Property(e => e.Sysmodifier).HasColumnName("sysmodifier");
        });

        modelBuilder.Entity<SsrsdrillthroughParameter>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK_SSRSDrillthroughParameter");

            entity.ToTable("SSRSDrillthroughParameters");

            entity.HasIndex(e => e.DrillthroughId, "IX_SSRSDrillthroughParameters_DrillthroughId");

            entity.Property(e => e.Id)
                .ValueGeneratedNever()
                .HasColumnName("ID");
            entity.Property(e => e.Name)
                .HasMaxLength(100)
                .IsUnicode(false);

            entity.HasOne(d => d.Drillthrough).WithMany(p => p.SsrsdrillthroughParameters)
                .HasForeignKey(d => d.DrillthroughId)
                .HasConstraintName("FK_SSRSDrillthroughParameter_SSRSDrillthroughs");
        });

        modelBuilder.Entity<SsrsmoduleSource>(entity =>
        {
            entity.ToTable("SSRSModuleSources");

            entity.Property(e => e.Id)
                .ValueGeneratedNever()
                .HasColumnName("ID");
            entity.Property(e => e.Idcaption).HasColumnName("IDCaption");
            entity.Property(e => e.Name).HasMaxLength(100);
        });

        modelBuilder.Entity<SsrsparameterSource>(entity =>
        {
            entity.ToTable("SSRSParameterSources");

            entity.HasIndex(e => e.Name, "IX_SSRSParameterSources_Name");

            entity.Property(e => e.Id)
                .ValueGeneratedNever()
                .HasColumnName("ID");
            entity.Property(e => e.Idcaption).HasColumnName("IDCaption");
            entity.Property(e => e.Name).HasMaxLength(150);
        });

        modelBuilder.Entity<SsrspersonAuthorization>(entity =>
        {
            entity.ToTable("SSRSPersonAuthorization");

            entity.HasIndex(e => e.ItemId, "IX_SSRSPersonAuthorization_ItemID");

            entity.HasIndex(e => e.ResId, "IX_SSRSPersonAuthorization_ResID");

            entity.Property(e => e.Id)
                .ValueGeneratedNever()
                .HasColumnName("ID");
            entity.Property(e => e.Divisions).HasMaxLength(255);
            entity.Property(e => e.ItemId).HasColumnName("ItemID");
            entity.Property(e => e.ResId).HasColumnName("ResID");
        });

        modelBuilder.Entity<Ssrsreport>(entity =>
        {
            entity.ToTable("SSRSReports");

            entity.Property(e => e.Id)
                .ValueGeneratedNever()
                .HasColumnName("ID");
            entity.Property(e => e.AllowExcel).HasDefaultValue(true);
            entity.Property(e => e.AllowPdf)
                .HasDefaultValue(true)
                .HasColumnName("AllowPDF");
            entity.Property(e => e.AllowWord).HasDefaultValue(true);
            entity.Property(e => e.IdparentReport).HasColumnName("IDParentReport");
            entity.Property(e => e.IdreportGroup).HasColumnName("IDReportGroup");
            entity.Property(e => e.LanguageCode)
                .HasMaxLength(3)
                .IsFixedLength();
            entity.Property(e => e.Name).HasMaxLength(100);
            entity.Property(e => e.NameTermId).HasColumnName("NameTermID");
            entity.Property(e => e.PolicyDocumentId).HasColumnName("PolicyDocumentID");
            entity.Property(e => e.Rdlcontent).HasColumnName("RDLContent");
            entity.Property(e => e.RdlfileName).HasColumnName("RDLFileName");
            entity.Property(e => e.Syscreated)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("syscreated");
            entity.Property(e => e.Syscreator).HasColumnName("syscreator");
            entity.Property(e => e.Sysmodified)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("sysmodified");
            entity.Property(e => e.Sysmodifier).HasColumnName("sysmodifier");
            entity.Property(e => e.Timestamp)
                .IsRowVersion()
                .IsConcurrencyToken();

            entity.HasOne(d => d.IdparentReportNavigation).WithMany(p => p.InverseIdparentReportNavigation)
                .HasForeignKey(d => d.IdparentReport)
                .HasConstraintName("FK_SSRSReports_SSRSReports");

            entity.HasOne(d => d.IdreportGroupNavigation).WithMany(p => p.Ssrsreports)
                .HasForeignKey(d => d.IdreportGroup)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_SSRSReports_SSRSReportGroups");
        });

        modelBuilder.Entity<SsrsreportDataSource>(entity =>
        {
            entity.ToTable("SSRSReportDataSources");

            entity.HasIndex(e => e.DataSourceId, "IX_SSRSReportDataSources_DataSourceId");

            entity.HasIndex(e => e.ReportId, "IX_SSRSReportDataSources_ReportId");

            entity.Property(e => e.Id)
                .ValueGeneratedNever()
                .HasColumnName("ID");
            entity.Property(e => e.Name)
                .HasMaxLength(500)
                .IsUnicode(false);
            entity.Property(e => e.Syscreated)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("syscreated");
            entity.Property(e => e.Syscreator).HasColumnName("syscreator");
            entity.Property(e => e.Sysmodified)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("sysmodified");
            entity.Property(e => e.Sysmodifier).HasColumnName("sysmodifier");
        });

        modelBuilder.Entity<SsrsreportGroup>(entity =>
        {
            entity.ToTable("SSRSReportGroups");

            entity.Property(e => e.Id)
                .ValueGeneratedNever()
                .HasColumnName("ID");
            entity.Property(e => e.AllowExcel).HasDefaultValue(true);
            entity.Property(e => e.AllowPdf)
                .HasDefaultValue(true)
                .HasColumnName("AllowPDF");
            entity.Property(e => e.AllowWord).HasDefaultValue(true);
            entity.Property(e => e.Name).HasMaxLength(100);
            entity.Property(e => e.NameTermId).HasColumnName("NameTermID");
            entity.Property(e => e.Syscreated)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("syscreated");
            entity.Property(e => e.Syscreator).HasColumnName("syscreator");
            entity.Property(e => e.Sysmodified)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("sysmodified");
            entity.Property(e => e.Sysmodifier).HasColumnName("sysmodifier");
            entity.Property(e => e.Timestamp)
                .IsRowVersion()
                .IsConcurrencyToken();
        });

        modelBuilder.Entity<SsrsreportParameter>(entity =>
        {
            entity.HasKey(e => e.Id).IsClustered(false);

            entity.ToTable("SSRSReportParameters");

            entity.HasIndex(e => e.Idreport, "IX_SSRSReportParameters_IDReport");

            entity.HasIndex(e => e.Mode, "IX_SSRSReportParameters_Mode");

            entity.HasIndex(e => e.ParamIndex, "IX_SSRSReportParameters_ParamIndex");

            entity.HasIndex(e => e.Idreport, "SSRSReportParameters_Index").IsClustered();

            entity.Property(e => e.Id)
                .ValueGeneratedNever()
                .HasColumnName("ID");
            entity.Property(e => e.Dependency).HasMaxLength(225);
            entity.Property(e => e.Idreport).HasColumnName("IDReport");
            entity.Property(e => e.Name).HasMaxLength(225);
            entity.Property(e => e.Prompt).HasMaxLength(225);
            entity.Property(e => e.PromptTermId).HasColumnName("PromptTermID");
            entity.Property(e => e.StandardBrowser).HasMaxLength(225);
            entity.Property(e => e.Syscreated)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("syscreated");
            entity.Property(e => e.Syscreator).HasColumnName("syscreator");
            entity.Property(e => e.Sysmodified)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("sysmodified");
            entity.Property(e => e.Sysmodifier).HasColumnName("sysmodifier");
            entity.Property(e => e.Timestamp)
                .IsRowVersion()
                .IsConcurrencyToken();
            entity.Property(e => e.ValueType).HasMaxLength(250);

            entity.HasOne(d => d.IdreportNavigation).WithMany(p => p.SsrsreportParameters)
                .HasForeignKey(d => d.Idreport)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_SSRSReportParameters_SSRSReports");
        });

        modelBuilder.Entity<Ssrsschedule>(entity =>
        {
            entity.ToTable("SSRSSchedules");

            entity.HasIndex(e => e.SsrsscheduleId, "IX_SSRSSchedules_SSRSScheduleId");

            entity.Property(e => e.Id)
                .ValueGeneratedNever()
                .HasColumnName("ID");
            entity.Property(e => e.EndDate).HasColumnType("datetime");
            entity.Property(e => e.Name)
                .HasMaxLength(500)
                .IsUnicode(false);
            entity.Property(e => e.ScheduleDefinition).HasColumnType("text");
            entity.Property(e => e.SsrsscheduleId).HasColumnName("SSRSScheduleId");
            entity.Property(e => e.StartDate).HasColumnType("datetime");
            entity.Property(e => e.Syscreated)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("syscreated");
            entity.Property(e => e.Syscreator).HasColumnName("syscreator");
            entity.Property(e => e.Sysmodified)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("sysmodified");
            entity.Property(e => e.Sysmodifier).HasColumnName("sysmodifier");
        });

        modelBuilder.Entity<Ssrssubscription>(entity =>
        {
            entity.ToTable("SSRSSubscriptions");

            entity.HasIndex(e => e.Description, "IX_SSRSSubscription_Description");

            entity.HasIndex(e => e.ReportPath, "IX_SSRSSubscription_ReportPath");

            entity.HasIndex(e => e.ScheduleId, "IX_SSRSSubscription_ScheduleId");

            entity.Property(e => e.Id)
                .ValueGeneratedNever()
                .HasColumnName("ID");
            entity.Property(e => e.Description)
                .HasMaxLength(500)
                .IsUnicode(false);
            entity.Property(e => e.ExtensionSettings).HasColumnType("xml");
            entity.Property(e => e.ParameterValues).HasColumnType("xml");
            entity.Property(e => e.ReportPath)
                .HasMaxLength(500)
                .IsUnicode(false);
            entity.Property(e => e.ScheduleId).HasColumnName("ScheduleID");
            entity.Property(e => e.SsrssubscriptionId).HasColumnName("SSRSSubscriptionId");
            entity.Property(e => e.Syscreated)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("syscreated");
            entity.Property(e => e.Syscreator).HasColumnName("syscreator");
            entity.Property(e => e.Sysmodified)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("sysmodified");
        });

        modelBuilder.Entity<Staffl>(entity =>
        {
            entity.HasKey(e => e.Id).IsClustered(false);

            entity.ToTable("staffl");

            entity.HasIndex(e => e.Timestamp, "IX_staffl_Timestamp");

            entity.HasIndex(e => new { e.AccountId, e.Artcode, e.Prijslijst, e.LineType, e.Id }, "artdeb").IsUnique();

            entity.HasIndex(e => new { e.Artcode, e.Prijslijst, e.AccountId, e.LineType, e.Id }, "artstf").IsUnique();

            entity.HasIndex(e => new { e.Prijslijst, e.Artcode, e.AccountId, e.Unitcode, e.Validfrom, e.Validto }, "staffl")
                .IsUnique()
                .IsClustered();

            entity.HasIndex(e => new { e.Artcode, e.Unitcode, e.Id }, "stfunc").IsUnique();

            entity.Property(e => e.Id).HasColumnName("ID");
            entity.Property(e => e.Aantal1).HasColumnName("aantal1");
            entity.Property(e => e.Aantal2).HasColumnName("aantal2");
            entity.Property(e => e.Aantal3).HasColumnName("aantal3");
            entity.Property(e => e.Aantal4).HasColumnName("aantal4");
            entity.Property(e => e.Aantal5).HasColumnName("aantal5");
            entity.Property(e => e.AccountId).HasColumnName("AccountID");
            entity.Property(e => e.Artcode)
                .HasMaxLength(30)
                .HasColumnName("artcode");
            entity.Property(e => e.Bedr1).HasColumnName("bedr1");
            entity.Property(e => e.Bedr2).HasColumnName("bedr2");
            entity.Property(e => e.Bedr3).HasColumnName("bedr3");
            entity.Property(e => e.Bedr4).HasColumnName("bedr4");
            entity.Property(e => e.Bedrag5).HasColumnName("bedrag5");
            entity.Property(e => e.KortPbn)
                .HasMaxLength(1)
                .IsFixedLength()
                .HasColumnName("kort_pbn");
            entity.Property(e => e.LineType)
                .HasMaxLength(1)
                .HasDefaultValue("1")
                .IsFixedLength();
            entity.Property(e => e.Price10).HasColumnName("price10");
            entity.Property(e => e.Price6).HasColumnName("price6");
            entity.Property(e => e.Price7).HasColumnName("price7");
            entity.Property(e => e.Price8).HasColumnName("price8");
            entity.Property(e => e.Price9).HasColumnName("price9");
            entity.Property(e => e.Prijs83).HasColumnName("prijs83");
            entity.Property(e => e.Prijslijst)
                .HasMaxLength(15)
                .HasColumnName("prijslijst");
            entity.Property(e => e.Project).HasMaxLength(20);
            entity.Property(e => e.Quantity10).HasColumnName("quantity10");
            entity.Property(e => e.Quantity6).HasColumnName("quantity6");
            entity.Property(e => e.Quantity7).HasColumnName("quantity7");
            entity.Property(e => e.Quantity8).HasColumnName("quantity8");
            entity.Property(e => e.Quantity9).HasColumnName("quantity9");
            entity.Property(e => e.Syscreated)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("syscreated");
            entity.Property(e => e.Syscreator).HasColumnName("syscreator");
            entity.Property(e => e.Sysguid)
                .HasDefaultValueSql("(newid())")
                .HasColumnName("sysguid");
            entity.Property(e => e.Sysmodified)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("sysmodified");
            entity.Property(e => e.Sysmodifier).HasColumnName("sysmodifier");
            entity.Property(e => e.Timestamp)
                .IsRowVersion()
                .IsConcurrencyToken()
                .HasColumnName("timestamp");
            entity.Property(e => e.Unitcode)
                .HasMaxLength(8)
                .IsFixedLength()
                .HasColumnName("unitcode");
            entity.Property(e => e.Unitfactor)
                .HasDefaultValue(1.0)
                .HasColumnName("unitfactor");
            entity.Property(e => e.Validfrom)
                .HasColumnType("datetime")
                .HasColumnName("validfrom");
            entity.Property(e => e.Validto)
                .HasColumnType("datetime")
                .HasColumnName("validto");
        });

        modelBuilder.Entity<StepRelation>(entity =>
        {
            entity.HasKey(e => e.Id).IsClustered(false);

            entity.HasIndex(e => new { e.ItemCode, e.Version, e.Step, e.Predecessor }, "IX_StepRelations_StepRelation")
                .IsUnique()
                .IsClustered();

            entity.Property(e => e.Id).HasColumnName("ID");
            entity.Property(e => e.DependencyType)
                .HasMaxLength(2)
                .HasDefaultValue("FS");
            entity.Property(e => e.ItemCode).HasMaxLength(30);
            entity.Property(e => e.LagType)
                .HasMaxLength(10)
                .HasDefaultValue("H");
            entity.Property(e => e.Predecessor).HasDefaultValue(10);
            entity.Property(e => e.Routing).HasMaxLength(10);
            entity.Property(e => e.Step).HasDefaultValue(10);
            entity.Property(e => e.Syscreated)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("syscreated");
            entity.Property(e => e.Syscreator).HasColumnName("syscreator");
            entity.Property(e => e.Sysguid)
                .HasDefaultValueSql("(newid())")
                .HasColumnName("sysguid");
            entity.Property(e => e.Sysmodified)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("sysmodified");
            entity.Property(e => e.Sysmodifier).HasColumnName("sysmodifier");
            entity.Property(e => e.Timestamp)
                .IsRowVersion()
                .IsConcurrencyToken()
                .HasColumnName("timestamp");
            entity.Property(e => e.Version)
                .HasMaxLength(8)
                .IsFixedLength();
        });

        modelBuilder.Entity<Stfom>(entity =>
        {
            entity.HasKey(e => e.Id).IsClustered(false);

            entity.ToTable("stfoms");

            entity.HasIndex(e => e.Timestamp, "IX_stfoms_Timestamp");

            entity.HasIndex(e => new { e.Country, e.Valcode }, "IX_stfoms_country");

            entity.HasIndex(e => new { e.Valcode, e.Id }, "stfeca").IsUnique();

            entity.HasIndex(e => e.Prijslijst, "stfoms")
                .IsUnique()
                .IsClustered();

            entity.Property(e => e.Id).HasColumnName("ID");
            entity.Property(e => e.AccountClassificationId)
                .HasMaxLength(3)
                .IsFixedLength();
            entity.Property(e => e.AccountStatus)
                .HasMaxLength(1)
                .IsFixedLength();
            entity.Property(e => e.AccountType)
                .HasMaxLength(1)
                .IsFixedLength();
            entity.Property(e => e.Country)
                .HasMaxLength(3)
                .IsFixedLength()
                .HasColumnName("country");
            entity.Property(e => e.MainPricelist).HasColumnName("main_pricelist");
            entity.Property(e => e.Oms300)
                .HasMaxLength(30)
                .HasColumnName("oms30_0");
            entity.Property(e => e.Oms301)
                .HasMaxLength(30)
                .HasColumnName("oms30_1");
            entity.Property(e => e.Oms302)
                .HasMaxLength(30)
                .HasColumnName("oms30_2");
            entity.Property(e => e.Oms303)
                .HasMaxLength(30)
                .HasColumnName("oms30_3");
            entity.Property(e => e.Oms304)
                .HasMaxLength(30)
                .HasColumnName("oms30_4");
            entity.Property(e => e.Prijslijst)
                .HasMaxLength(15)
                .HasColumnName("prijslijst");
            entity.Property(e => e.Syscreated)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("syscreated");
            entity.Property(e => e.Syscreator).HasColumnName("syscreator");
            entity.Property(e => e.Sysguid)
                .HasDefaultValueSql("(newid())")
                .HasColumnName("sysguid");
            entity.Property(e => e.Sysmodified)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("sysmodified");
            entity.Property(e => e.Sysmodifier).HasColumnName("sysmodifier");
            entity.Property(e => e.Timestamp)
                .IsRowVersion()
                .IsConcurrencyToken()
                .HasColumnName("timestamp");
            entity.Property(e => e.Type)
                .HasMaxLength(1)
                .IsFixedLength()
                .HasColumnName("type");
            entity.Property(e => e.Valcode)
                .HasMaxLength(3)
                .IsFixedLength()
                .HasColumnName("valcode");
        });

        modelBuilder.Entity<StockOption>(entity =>
        {
            entity.HasKey(e => e.Id).IsClustered(false);

            entity.HasIndex(e => e.EmpId, "EmpID").IsClustered();

            entity.Property(e => e.Id).HasColumnName("ID");
            entity.Property(e => e.CompanyName).HasMaxLength(255);
            entity.Property(e => e.Currency).HasMaxLength(3);
            entity.Property(e => e.EmpId).HasColumnName("EmpID");
            entity.Property(e => e.EndDate).HasColumnType("datetime");
            entity.Property(e => e.Syscreated)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("syscreated");
            entity.Property(e => e.Syscreator).HasColumnName("syscreator");
            entity.Property(e => e.Sysmodified)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("sysmodified");
            entity.Property(e => e.Sysmodifier).HasColumnName("sysmodifier");
            entity.Property(e => e.TransactionDate).HasColumnType("datetime");
            entity.Property(e => e.TransactionType)
                .HasMaxLength(1)
                .IsFixedLength();
            entity.Property(e => e.VestingDate).HasColumnType("datetime");
        });

        modelBuilder.Entity<StringRelation>(entity =>
        {
            entity.HasKey(e => new { e.Type, e.Parent, e.Code });

            entity.HasIndex(e => new { e.Type, e.Code }, "StringRelations_ID");

            entity.Property(e => e.Parent).HasMaxLength(30);
            entity.Property(e => e.Code).HasMaxLength(30);
        });

        modelBuilder.Entity<SubSector>(entity =>
        {
            entity.HasKey(e => e.SubSectorId).IsClustered(false);

            entity.HasIndex(e => e.Description, "Description");

            entity.HasIndex(e => e.PolicyDocId, "PolicyDoc");

            entity.HasIndex(e => e.SectorId, "SectorID").IsClustered();

            entity.Property(e => e.SubSectorId)
                .HasMaxLength(10)
                .HasDefaultValueSql("((1))")
                .IsFixedLength()
                .HasColumnName("SubSectorID");
            entity.Property(e => e.Description).HasMaxLength(100);
            entity.Property(e => e.Id)
                .ValueGeneratedOnAdd()
                .HasColumnName("ID");
            entity.Property(e => e.SectorId).HasColumnName("SectorID");
            entity.Property(e => e.Syscreated)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("syscreated");
            entity.Property(e => e.Syscreator).HasColumnName("syscreator");
            entity.Property(e => e.Sysguid)
                .HasDefaultValueSql("(newid())")
                .HasColumnName("sysguid");
            entity.Property(e => e.Sysmodified)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("sysmodified");
            entity.Property(e => e.Sysmodifier).HasColumnName("sysmodifier");
        });

        modelBuilder.Entity<Subledgermasterview>(entity =>
        {
            entity
                .HasNoKey()
                .ToView("subledgermasterview");

            entity.Property(e => e.Adres1)
                .HasMaxLength(100)
                .HasColumnName("ADRES1");
            entity.Property(e => e.Cntpers1)
                .HasMaxLength(112)
                .HasColumnName("CNTPERS1");
            entity.Property(e => e.Functie1)
                .HasMaxLength(50)
                .HasColumnName("FUNCTIE1");
            entity.Property(e => e.Kredlimiet).HasColumnName("KREDLIMIET");
            entity.Property(e => e.Landcode)
                .HasMaxLength(3)
                .IsFixedLength()
                .HasColumnName("LANDCODE");
            entity.Property(e => e.Mv1)
                .HasMaxLength(1)
                .IsFixedLength()
                .HasColumnName("MV1");
            entity.Property(e => e.Naam)
                .HasMaxLength(50)
                .HasColumnName("NAAM");
            entity.Property(e => e.Postcode)
                .HasMaxLength(20)
                .HasColumnName("POSTCODE");
            entity.Property(e => e.SearchCode)
                .HasMaxLength(6)
                .IsFixedLength();
            entity.Property(e => e.SubledgerNo)
                .HasMaxLength(6)
                .IsFixedLength();
            entity.Property(e => e.SubledgerType).HasMaxLength(1);
            entity.Property(e => e.Tegreknr)
                .HasMaxLength(9)
                .IsFixedLength()
                .HasColumnName("tegreknr");
            entity.Property(e => e.Telnr)
                .HasMaxLength(25)
                .HasColumnName("TELNR");
            entity.Property(e => e.Telnrcp1)
                .HasMaxLength(25)
                .HasColumnName("TELNRCP1");
            entity.Property(e => e.Woonpl)
                .HasMaxLength(100)
                .HasColumnName("WOONPL");
        });

        modelBuilder.Entity<SynchronizationLog>(entity =>
        {
            entity.ToTable("SynchronizationLog");

            entity.Property(e => e.Id).HasColumnName("ID");
            entity.Property(e => e.Action).HasMaxLength(30);
            entity.Property(e => e.Destination).HasMaxLength(20);
            entity.Property(e => e.EntityName).HasMaxLength(30);
            entity.Property(e => e.LogDate).HasColumnType("datetime");
            entity.Property(e => e.LogicalKey).HasMaxLength(128);
            entity.Property(e => e.MessageId).HasColumnName("MessageID");
            entity.Property(e => e.TransactionId).HasColumnName("TransactionID");
        });

        modelBuilder.Entity<Syscrc>(entity =>
        {
            entity.ToTable("syscrc");

            entity.Property(e => e.Id)
                .ValueGeneratedNever()
                .HasColumnName("id");
            entity.Property(e => e.EwfCrc).HasColumnName("ewfCrc");
            entity.Property(e => e.OptionsCrc).HasColumnName("optionsCrc");
            entity.Property(e => e.RightsCrc).HasColumnName("rightsCrc");
            entity.Property(e => e.SettingsCrc).HasColumnName("settingsCrc");
            entity.Property(e => e.Syscreated)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("syscreated");
            entity.Property(e => e.Syscreator).HasColumnName("syscreator");
            entity.Property(e => e.Sysguid)
                .HasDefaultValueSql("(newid())")
                .HasColumnName("sysguid");
            entity.Property(e => e.Sysmodified)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("sysmodified");
            entity.Property(e => e.Sysmodifier).HasColumnName("sysmodifier");
        });

        modelBuilder.Entity<Sysmnu>(entity =>
        {
            entity.HasKey(e => e.MnuId);

            entity.ToTable("sysmnu");

            entity.HasIndex(e => e.FncId, "IxFuncID");

            entity.HasIndex(e => new { e.PrntId, e.SeqNo, e.MnuId }, "sysmn2").IsUnique();

            entity.HasIndex(e => new { e.RootId, e.MnuId }, "sysmn3").IsUnique();

            entity.HasIndex(e => new { e.MType, e.RootId, e.MnuId }, "sysmn4").IsUnique();

            entity.Property(e => e.MnuId).HasColumnName("mnu_id");
            entity.Property(e => e.Descr64)
                .HasMaxLength(64)
                .HasColumnName("descr64");
            entity.Property(e => e.FncId)
                .HasMaxLength(20)
                .HasColumnName("fnc_id");
            entity.Property(e => e.Keyshortcut)
                .HasMaxLength(2)
                .IsFixedLength()
                .HasColumnName("keyshortcut");
            entity.Property(e => e.MType)
                .HasMaxLength(1)
                .IsFixedLength()
                .HasColumnName("m_type");
            entity.Property(e => e.MenuNumber).HasColumnName("menu_number");
            entity.Property(e => e.OptionExp)
                .HasMaxLength(128)
                .HasColumnName("option_exp");
            entity.Property(e => e.PrntId).HasColumnName("prnt_id");
            entity.Property(e => e.RootId).HasColumnName("root_id");
            entity.Property(e => e.SeqNo).HasColumnName("seq_no");
            entity.Property(e => e.Settings)
                .HasMaxLength(100)
                .HasColumnName("settings");
            entity.Property(e => e.Syscreated)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("syscreated");
            entity.Property(e => e.Syscreator).HasColumnName("syscreator");
            entity.Property(e => e.Sysguid)
                .HasDefaultValueSql("(newid())")
                .HasColumnName("sysguid");
            entity.Property(e => e.Sysmodified)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("sysmodified");
            entity.Property(e => e.Sysmodifier).HasColumnName("sysmodifier");
            entity.Property(e => e.Timestamp)
                .IsRowVersion()
                .IsConcurrencyToken()
                .HasColumnName("timestamp");
            entity.Property(e => e.TreeLevel).HasColumnName("tree_level");
        });

        modelBuilder.Entity<Sysmnuusr>(entity =>
        {
            entity.HasKey(e => e.MnuId);

            entity.ToTable("sysmnuusr");

            entity.Property(e => e.MnuId)
                .ValueGeneratedNever()
                .HasColumnName("mnu_id");
            entity.Property(e => e.Arguments)
                .HasMaxLength(255)
                .HasColumnName("arguments");
            entity.Property(e => e.Checked).HasColumnName("checked");
            entity.Property(e => e.Emailcc)
                .HasMaxLength(255)
                .HasColumnName("emailcc");
            entity.Property(e => e.Emailmessage).HasColumnName("emailmessage");
            entity.Property(e => e.Emailnotify).HasColumnName("emailnotify");
            entity.Property(e => e.Emailsubject)
                .HasMaxLength(255)
                .HasColumnName("emailsubject");
            entity.Property(e => e.Emailto)
                .HasMaxLength(255)
                .HasColumnName("emailto");
            entity.Property(e => e.Icon)
                .HasMaxLength(70)
                .HasColumnName("icon");
            entity.Property(e => e.Iconindex).HasColumnName("iconindex");
            entity.Property(e => e.Iconpath)
                .HasMaxLength(255)
                .HasColumnName("iconpath");
            entity.Property(e => e.Lastrun)
                .HasColumnType("datetime")
                .HasColumnName("lastrun");
            entity.Property(e => e.Note).HasColumnName("note");
            entity.Property(e => e.Syscommand)
                .HasMaxLength(255)
                .HasColumnName("syscommand");
        });

        modelBuilder.Entity<Taal>(entity =>
        {
            entity.HasKey(e => e.Id).IsClustered(false);

            entity.ToTable("taal");

            entity.HasIndex(e => e.Taalcode, "taal")
                .IsUnique()
                .IsClustered();

            entity.Property(e => e.Id).HasColumnName("ID");
            entity.Property(e => e.Active).HasColumnName("active");
            entity.Property(e => e.Oms300)
                .HasMaxLength(30)
                .HasColumnName("oms30_0");
            entity.Property(e => e.Oms301)
                .HasMaxLength(30)
                .HasColumnName("oms30_1");
            entity.Property(e => e.Oms302)
                .HasMaxLength(30)
                .HasColumnName("oms30_2");
            entity.Property(e => e.Oms303)
                .HasMaxLength(30)
                .HasColumnName("oms30_3");
            entity.Property(e => e.Oms304)
                .HasMaxLength(30)
                .HasColumnName("oms30_4");
            entity.Property(e => e.OmsOrg)
                .HasMaxLength(30)
                .HasColumnName("oms_org");
            entity.Property(e => e.Syscreated)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("syscreated");
            entity.Property(e => e.Syscreator).HasColumnName("syscreator");
            entity.Property(e => e.Sysguid)
                .HasDefaultValueSql("(newid())")
                .HasColumnName("sysguid");
            entity.Property(e => e.Sysmodified)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("sysmodified");
            entity.Property(e => e.Sysmodifier).HasColumnName("sysmodifier");
            entity.Property(e => e.Taalcode)
                .HasMaxLength(3)
                .IsFixedLength()
                .HasColumnName("taalcode");
            entity.Property(e => e.Timestamp)
                .IsRowVersion()
                .IsConcurrencyToken()
                .HasColumnName("timestamp");
        });

        modelBuilder.Entity<Tag>(entity =>
        {
            entity.HasKey(e => e.Id).IsClustered(false);

            entity.HasIndex(e => new { e.Id, e.Tag1 }, "IX_Tags").IsClustered();

            entity.Property(e => e.Id).HasColumnName("ID");
            entity.Property(e => e.CreatedDate)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime");
            entity.Property(e => e.Tag1)
                .HasMaxLength(100)
                .UseCollation("SQL_Latin1_General_CP1_CI_AI")
                .HasColumnName("Tag");
        });

        modelBuilder.Entity<TagIndividualWeight>(entity =>
        {
            entity.HasKey(e => e.Id)
                .HasName("PK_TagWeights")
                .IsClustered(false);

            entity.HasIndex(e => e.Entity, "IX_TagIndividualWeights");

            entity.HasIndex(e => e.Id, "TagIndividualWeights_Index").IsClustered();

            entity.Property(e => e.Id).HasColumnName("ID");
            entity.Property(e => e.WordId).HasColumnName("WordID");
        });

        modelBuilder.Entity<TagReference>(entity =>
        {
            entity.HasKey(e => e.Id).IsClustered(false);

            entity.HasIndex(e => e.Tag, "IX_Tag").IsClustered();

            entity.HasIndex(e => e.Division, "IX_TagDivisionReference");

            entity.HasIndex(e => e.Entity, "IX_TagReferenceEntity");

            entity.Property(e => e.Id).HasColumnName("ID");
            entity.Property(e => e.CreatedDate)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime");
            entity.Property(e => e.Tag).HasMaxLength(100);
            entity.Property(e => e.TagId).HasColumnName("TagID");
            entity.Property(e => e.TimeStamp)
                .IsRowVersion()
                .IsConcurrencyToken();
        });

        modelBuilder.Entity<TaxSchedule>(entity =>
        {
            entity.HasKey(e => e.Id).IsClustered(false);

            entity.ToTable("TaxSchedule");

            entity.HasIndex(e => new { e.ItemCode, e.Account }, "IX_ItemCodeAccount");

            entity.HasIndex(e => new { e.TaxItemClassification, e.Country, e.State }, "IX_TaxItemClassification");

            entity.HasIndex(e => new { e.Country, e.State, e.County, e.City, e.Postcode, e.TaxItemClassification }, "TaxSchedule").IsClustered();

            entity.Property(e => e.Id).HasColumnName("ID");
            entity.Property(e => e.City).HasMaxLength(100);
            entity.Property(e => e.CompanyCode)
                .HasMaxLength(3)
                .IsFixedLength();
            entity.Property(e => e.Country)
                .HasMaxLength(3)
                .IsFixedLength();
            entity.Property(e => e.County).HasMaxLength(100);
            entity.Property(e => e.ItemCode).HasMaxLength(30);
            entity.Property(e => e.Postcode).HasMaxLength(20);
            entity.Property(e => e.State)
                .HasMaxLength(3)
                .IsFixedLength();
            entity.Property(e => e.Syscreated)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("syscreated");
            entity.Property(e => e.Syscreator).HasColumnName("syscreator");
            entity.Property(e => e.Sysguid)
                .HasDefaultValueSql("(newid())")
                .HasColumnName("sysguid");
            entity.Property(e => e.Sysmodified)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("sysmodified");
            entity.Property(e => e.Sysmodifier).HasColumnName("sysmodifier");
            entity.Property(e => e.TaxCode1)
                .HasMaxLength(3)
                .IsFixedLength();
            entity.Property(e => e.TaxCode2)
                .HasMaxLength(3)
                .IsFixedLength();
            entity.Property(e => e.TaxCode3)
                .HasMaxLength(3)
                .IsFixedLength();
            entity.Property(e => e.TaxCode4)
                .HasMaxLength(3)
                .IsFixedLength();
            entity.Property(e => e.TaxCode5)
                .HasMaxLength(3)
                .IsFixedLength();
            entity.Property(e => e.Timestamp)
                .IsRowVersion()
                .IsConcurrencyToken()
                .HasColumnName("timestamp");
            entity.Property(e => e.Type)
                .HasMaxLength(1)
                .IsFixedLength();
        });

        modelBuilder.Entity<Taxcod>(entity =>
        {
            entity.HasKey(e => e.Id).IsClustered(false);

            entity.ToTable("taxcod");

            entity.HasIndex(e => new { e.Country, e.Taxtype, e.Taxcode }, "taxcod")
                .IsUnique()
                .IsClustered();

            entity.Property(e => e.Id).HasColumnName("ID");
            entity.Property(e => e.Amount).HasColumnName("amount");
            entity.Property(e => e.Country)
                .HasMaxLength(3)
                .IsFixedLength()
                .HasColumnName("country");
            entity.Property(e => e.Curamount)
                .HasMaxLength(1)
                .IsFixedLength()
                .HasColumnName("curamount");
            entity.Property(e => e.Dateregister)
                .HasMaxLength(1)
                .IsFixedLength()
                .HasColumnName("dateregister");
            entity.Property(e => e.Descr400)
                .HasMaxLength(40)
                .HasColumnName("descr40_0");
            entity.Property(e => e.Descr401)
                .HasMaxLength(40)
                .HasColumnName("descr40_1");
            entity.Property(e => e.Descr402)
                .HasMaxLength(40)
                .HasColumnName("descr40_2");
            entity.Property(e => e.Descr403)
                .HasMaxLength(40)
                .HasColumnName("descr40_3");
            entity.Property(e => e.Descr404)
                .HasMaxLength(40)
                .HasColumnName("descr40_4");
            entity.Property(e => e.Freefield1)
                .HasMaxLength(75)
                .HasColumnName("freefield1");
            entity.Property(e => e.Freefield10).HasColumnName("freefield10");
            entity.Property(e => e.Freefield11).HasColumnName("freefield11");
            entity.Property(e => e.Freefield12).HasColumnName("freefield12");
            entity.Property(e => e.Freefield13).HasColumnName("freefield13");
            entity.Property(e => e.Freefield14)
                .HasColumnType("datetime")
                .HasColumnName("freefield14");
            entity.Property(e => e.Freefield15)
                .HasColumnType("datetime")
                .HasColumnName("freefield15");
            entity.Property(e => e.Freefield16)
                .HasColumnType("datetime")
                .HasColumnName("freefield16");
            entity.Property(e => e.Freefield17).HasColumnName("freefield17");
            entity.Property(e => e.Freefield18).HasColumnName("freefield18");
            entity.Property(e => e.Freefield19).HasColumnName("freefield19");
            entity.Property(e => e.Freefield2)
                .HasMaxLength(75)
                .HasColumnName("freefield2");
            entity.Property(e => e.Freefield20).HasColumnName("freefield20");
            entity.Property(e => e.Freefield3)
                .HasMaxLength(75)
                .HasColumnName("freefield3");
            entity.Property(e => e.Freefield4)
                .HasMaxLength(75)
                .HasColumnName("freefield4");
            entity.Property(e => e.Freefield5)
                .HasMaxLength(75)
                .HasColumnName("freefield5");
            entity.Property(e => e.Freefield6)
                .HasMaxLength(75)
                .HasColumnName("freefield6");
            entity.Property(e => e.Freefield7)
                .HasMaxLength(75)
                .HasColumnName("freefield7");
            entity.Property(e => e.Freefield8).HasColumnName("freefield8");
            entity.Property(e => e.Freefield9).HasColumnName("freefield9");
            entity.Property(e => e.Glextra1)
                .HasMaxLength(9)
                .IsFixedLength()
                .HasColumnName("glextra1");
            entity.Property(e => e.Glextra2)
                .HasMaxLength(9)
                .IsFixedLength()
                .HasColumnName("glextra2");
            entity.Property(e => e.Glextra3)
                .HasMaxLength(9)
                .IsFixedLength()
                .HasColumnName("glextra3");
            entity.Property(e => e.Glpayable)
                .HasMaxLength(9)
                .IsFixedLength()
                .HasColumnName("glpayable");
            entity.Property(e => e.Glreceivable)
                .HasMaxLength(9)
                .IsFixedLength()
                .HasColumnName("glreceivable");
            entity.Property(e => e.Glspayable)
                .HasMaxLength(9)
                .IsFixedLength()
                .HasColumnName("glspayable");
            entity.Property(e => e.Glsreceivable)
                .HasMaxLength(9)
                .IsFixedLength()
                .HasColumnName("glsreceivable");
            entity.Property(e => e.Inclexcl)
                .HasMaxLength(1)
                .IsFixedLength()
                .HasColumnName("inclexcl");
            entity.Property(e => e.Invoicetype)
                .HasMaxLength(1)
                .IsFixedLength()
                .HasColumnName("invoicetype");
            entity.Property(e => e.Invoiceuse)
                .HasMaxLength(1)
                .IsFixedLength()
                .HasColumnName("invoiceuse");
            entity.Property(e => e.Origdest)
                .HasMaxLength(1)
                .IsFixedLength()
                .HasColumnName("origdest");
            entity.Property(e => e.Percentage).HasColumnName("percentage");
            entity.Property(e => e.Percnonded).HasColumnName("percnonded");
            entity.Property(e => e.Returnbox)
                .HasMaxLength(8)
                .IsFixedLength()
                .HasColumnName("returnbox");
            entity.Property(e => e.SeqNr).HasColumnName("seq_nr");
            entity.Property(e => e.Syscreated)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("syscreated");
            entity.Property(e => e.Syscreator).HasColumnName("syscreator");
            entity.Property(e => e.Sysguid)
                .HasDefaultValueSql("(newid())")
                .HasColumnName("sysguid");
            entity.Property(e => e.Sysmodified)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("sysmodified");
            entity.Property(e => e.Sysmodifier).HasColumnName("sysmodifier");
            entity.Property(e => e.Taxcharged).HasColumnName("taxcharged");
            entity.Property(e => e.Taxcode)
                .HasMaxLength(8)
                .IsFixedLength()
                .HasColumnName("taxcode");
            entity.Property(e => e.Taxcorrection).HasColumnName("taxcorrection");
            entity.Property(e => e.Taxexempt).HasColumnName("taxexempt");
            entity.Property(e => e.Taxtype)
                .HasMaxLength(8)
                .IsFixedLength()
                .HasColumnName("taxtype");
            entity.Property(e => e.Timestamp)
                .IsRowVersion()
                .IsConcurrencyToken()
                .HasColumnName("timestamp");
            entity.Property(e => e.Varpercentage).HasColumnName("varpercentage");
            entity.Property(e => e.Varpercnonded).HasColumnName("varpercnonded");
            entity.Property(e => e.Vat).HasColumnName("vat");
            entity.Property(e => e.Withholding).HasColumnName("withholding");
        });

        modelBuilder.Entity<Taxdef>(entity =>
        {
            entity.HasKey(e => e.Id).IsClustered(false);

            entity.ToTable("taxdef");

            entity.HasIndex(e => e.Crdnr, "ix_crdnr");

            entity.HasIndex(e => e.Debnr, "ix_debnr");

            entity.HasIndex(e => new { e.Typedefault, e.Reknr, e.SeqNr, e.Id }, "tdfacc")
                .IsUnique()
                .IsClustered();

            entity.HasIndex(e => new { e.Typedefault, e.Artcode, e.SeqNr, e.Id }, "tdfart").IsUnique();

            entity.HasIndex(e => new { e.Typedefault, e.Crdnr, e.SeqNr, e.Id }, "tdfcrd").IsUnique();

            entity.HasIndex(e => new { e.Typedefault, e.Debnr, e.SeqNr, e.Id }, "tdfdeb").IsUnique();

            entity.HasIndex(e => new { e.Typedefault, e.Artcode, e.Crdnr, e.SeqNr, e.Id }, "tdflev").IsUnique();

            entity.Property(e => e.Id).HasColumnName("ID");
            entity.Property(e => e.Amount).HasColumnName("amount");
            entity.Property(e => e.Artcode)
                .HasMaxLength(30)
                .HasColumnName("artcode");
            entity.Property(e => e.Crdnr)
                .HasMaxLength(6)
                .IsFixedLength()
                .HasColumnName("crdnr");
            entity.Property(e => e.Debnr)
                .HasMaxLength(6)
                .IsFixedLength()
                .HasColumnName("debnr");
            entity.Property(e => e.Invoicetype)
                .HasMaxLength(1)
                .IsFixedLength()
                .HasColumnName("invoicetype");
            entity.Property(e => e.Percentage).HasColumnName("percentage");
            entity.Property(e => e.Percnonded).HasColumnName("percnonded");
            entity.Property(e => e.Reknr)
                .HasMaxLength(9)
                .IsFixedLength()
                .HasColumnName("reknr");
            entity.Property(e => e.SeqNr).HasColumnName("seq_nr");
            entity.Property(e => e.Syscreated)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("syscreated");
            entity.Property(e => e.Syscreator).HasColumnName("syscreator");
            entity.Property(e => e.Sysguid)
                .HasDefaultValueSql("(newid())")
                .HasColumnName("sysguid");
            entity.Property(e => e.Sysmodified)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("sysmodified");
            entity.Property(e => e.Sysmodifier).HasColumnName("sysmodifier");
            entity.Property(e => e.Taxcode)
                .HasMaxLength(8)
                .IsFixedLength()
                .HasColumnName("taxcode");
            entity.Property(e => e.Taxtype)
                .HasMaxLength(8)
                .IsFixedLength()
                .HasColumnName("taxtype");
            entity.Property(e => e.Timestamp)
                .IsRowVersion()
                .IsConcurrencyToken()
                .HasColumnName("timestamp");
            entity.Property(e => e.Typedefault)
                .HasMaxLength(1)
                .IsFixedLength()
                .HasColumnName("typedefault");
        });

        modelBuilder.Entity<Taxtransactionsview>(entity =>
        {
            entity
                .HasNoKey()
                .ToView("taxtransactionsview");

            entity.Property(e => e.Account)
                .HasMaxLength(9)
                .IsFixedLength();
            entity.Property(e => e.Afldat)
                .HasColumnType("datetime")
                .HasColumnName("afldat");
            entity.Property(e => e.Companycode)
                .HasMaxLength(3)
                .IsFixedLength()
                .HasColumnName("companycode");
            entity.Property(e => e.CostAccount).HasMaxLength(9);
            entity.Property(e => e.Currency)
                .HasMaxLength(3)
                .IsFixedLength();
            entity.Property(e => e.DebCountryCode)
                .HasMaxLength(3)
                .IsFixedLength()
                .HasColumnName("Deb_CountryCode");
            entity.Property(e => e.DebCrdName).HasMaxLength(50);
            entity.Property(e => e.DebCrdNumber).HasMaxLength(20);
            entity.Property(e => e.DebVatCode)
                .HasMaxLength(3)
                .IsFixedLength()
                .HasColumnName("Deb_VatCode");
            entity.Property(e => e.Description).HasMaxLength(60);
            entity.Property(e => e.DocumentDate).HasColumnType("datetime");
            entity.Property(e => e.EntryDate).HasColumnType("datetime");
            entity.Property(e => e.EntryNumber).HasMaxLength(20);
            entity.Property(e => e.Entryguid).HasColumnName("entryguid");
            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.Idgbkmut).HasColumnName("IDGbkmut");
            entity.Property(e => e.Journal)
                .HasMaxLength(10)
                .IsFixedLength();
            entity.Property(e => e.JournalType).HasMaxLength(1);
            entity.Property(e => e.OurRef)
                .HasMaxLength(8)
                .IsFixedLength();
            entity.Property(e => e.Period)
                .HasMaxLength(3)
                .IsFixedLength();
            entity.Property(e => e.ReportNumberIct)
                .HasMaxLength(6)
                .IsFixedLength()
                .HasColumnName("ReportNumberICT");
            entity.Property(e => e.ReportNumberTax)
                .HasMaxLength(6)
                .IsFixedLength();
            entity.Property(e => e.TaxCode)
                .HasMaxLength(6)
                .IsFixedLength();
            entity.Property(e => e.TaxDescription).HasMaxLength(30);
            entity.Property(e => e.Vatnumber)
                .HasMaxLength(20)
                .HasColumnName("VATnumber");
            entity.Property(e => e.YourRef).HasMaxLength(30);
        });

        modelBuilder.Entity<TempBalGraph>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("tempBalGraph");

            entity.HasIndex(e => e.Currency, "IX_tempBalGraph_Currency").IsClustered();

            entity.Property(e => e.CurrDesc).HasMaxLength(20);
            entity.Property(e => e.Currency).HasMaxLength(5);
            entity.Property(e => e.SessionId)
                .HasMaxLength(36)
                .IsUnicode(false)
                .HasDefaultValue("")
                .HasColumnName("session_id");
        });

        modelBuilder.Entity<TempCount>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("TempCount");

            entity.HasIndex(e => e.ResId, "IX_TempCount_res_id").IsClustered();

            entity.Property(e => e.ContEndDate)
                .HasColumnType("datetime")
                .HasColumnName("cont_end_date");
            entity.Property(e => e.EndDate).HasColumnType("datetime");
            entity.Property(e => e.Fte).HasColumnName("FTE");
            entity.Property(e => e.Fte2).HasColumnName("FTE2");
            entity.Property(e => e.HreffectiveDate)
                .HasColumnType("datetime")
                .HasColumnName("HREffectiveDate");
            entity.Property(e => e.Ldatuitdienst)
                .HasColumnType("datetime")
                .HasColumnName("ldatuitdienst");
            entity.Property(e => e.NewValue).HasMaxLength(100);
            entity.Property(e => e.NewValue2).HasMaxLength(100);
            entity.Property(e => e.OldValue).HasMaxLength(100);
            entity.Property(e => e.OldValue2).HasMaxLength(100);
            entity.Property(e => e.ResId).HasColumnName("res_id");
            entity.Property(e => e.SessionId)
                .HasMaxLength(36)
                .IsUnicode(false)
                .HasDefaultValue("")
                .HasColumnName("session_id");
            entity.Property(e => e.StartDate).HasColumnType("datetime");
        });

        modelBuilder.Entity<TempFinChart>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("TempFinChart");

            entity.HasIndex(e => e.LinkCode, "IX_TempFinChart_LinkCode").IsClustered();

            entity.Property(e => e.Amount1).HasMaxLength(60);
            entity.Property(e => e.Amount2).HasMaxLength(60);
            entity.Property(e => e.Code).HasMaxLength(60);
            entity.Property(e => e.Description).HasMaxLength(100);
            entity.Property(e => e.LinkCode).HasMaxLength(50);
            entity.Property(e => e.Parent).HasMaxLength(50);
            entity.Property(e => e.PeriodPic)
                .HasMaxLength(50)
                .IsFixedLength();
            entity.Property(e => e.PeriodTitle)
                .HasMaxLength(100)
                .IsFixedLength()
                .HasColumnName("periodTitle");
            entity.Property(e => e.ReplicatePic)
                .HasMaxLength(50)
                .IsFixedLength();
            entity.Property(e => e.ReplicateTitle)
                .HasMaxLength(100)
                .IsFixedLength();
            entity.Property(e => e.SessionId)
                .HasMaxLength(36)
                .IsUnicode(false)
                .HasDefaultValue("")
                .HasColumnName("session_id");
        });

        modelBuilder.Entity<TempFinMap>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("TempFinMap");

            entity.HasIndex(e => e.CountryCode, "IX_TempFinMap_CountryCode").IsClustered();

            entity.Property(e => e.ColumnType).HasMaxLength(50);
            entity.Property(e => e.CountryCode).HasMaxLength(10);
            entity.Property(e => e.SessionId)
                .HasMaxLength(36)
                .IsUnicode(false)
                .HasDefaultValue("")
                .HasColumnName("session_id");
        });

        modelBuilder.Entity<TempMonthPeriod>(entity =>
        {
            entity.HasNoKey();

            entity.HasIndex(e => e.Period, "IX_TempMonthPeriods_Period").IsClustered();

            entity.Property(e => e.Description).HasMaxLength(60);
            entity.Property(e => e.EndDate).HasColumnType("datetime");
            entity.Property(e => e.SessionId)
                .HasMaxLength(36)
                .IsUnicode(false)
                .HasDefaultValue("")
                .HasColumnName("session_id");
            entity.Property(e => e.StartDate).HasColumnType("datetime");
        });

        modelBuilder.Entity<TempPeriod>(entity =>
        {
            entity.HasNoKey();

            entity.HasIndex(e => e.Period, "IX_TempPeriods_Period").IsClustered();

            entity.Property(e => e.Description).HasMaxLength(60);
            entity.Property(e => e.EndDate).HasColumnType("datetime");
            entity.Property(e => e.SessionId)
                .HasMaxLength(36)
                .IsUnicode(false)
                .HasDefaultValue("")
                .HasColumnName("session_id");
            entity.Property(e => e.StartDate).HasColumnType("datetime");
        });

        modelBuilder.Entity<TempPeriodDate>(entity =>
        {
            entity.HasNoKey();

            entity.HasIndex(e => e.Period, "IX_TempPeriodDates_Period").IsClustered();

            entity.Property(e => e.EndDate).HasColumnType("datetime");
            entity.Property(e => e.SessionId)
                .HasMaxLength(36)
                .IsUnicode(false)
                .HasDefaultValue("")
                .HasColumnName("session_id");
            entity.Property(e => e.StartDate).HasColumnType("datetime");
        });

        modelBuilder.Entity<TempPeriodsPivotAnalysis>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("TempPeriodsPivotAnalysis");

            entity.HasIndex(e => e.Period, "IX_TempPeriodsPivotAnalysis_Period").IsClustered();

            entity.Property(e => e.Description).HasMaxLength(60);
            entity.Property(e => e.EndDate).HasColumnType("datetime");
            entity.Property(e => e.SessionId)
                .HasMaxLength(36)
                .IsUnicode(false)
                .HasDefaultValue("")
                .HasColumnName("session_id");
            entity.Property(e => e.StartDate).HasColumnType("datetime");
        });

        modelBuilder.Entity<TempPeriodsPivotAnalysisDetail>(entity =>
        {
            entity.HasNoKey();

            entity.HasIndex(e => e.Period, "IX_TempPeriodsPivotAnalysisDetails_Period").IsClustered();

            entity.Property(e => e.Description).HasMaxLength(60);
            entity.Property(e => e.EndDate).HasColumnType("datetime");
            entity.Property(e => e.SessionId)
                .HasMaxLength(36)
                .IsUnicode(false)
                .HasDefaultValue("")
                .HasColumnName("session_id");
            entity.Property(e => e.StartDate).HasColumnType("datetime");
        });

        modelBuilder.Entity<TempPsascheduledTable>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("tempPSAScheduledTable");

            entity.HasIndex(e => e.StartDate, "IX_tempPSAScheduledTable_StartDate").IsClustered();

            entity.Property(e => e.EndDate).HasColumnType("datetime");
            entity.Property(e => e.SessionId)
                .HasMaxLength(36)
                .IsUnicode(false)
                .HasDefaultValue("")
                .HasColumnName("session_id");
            entity.Property(e => e.StartDate).HasColumnType("datetime");
        });

        modelBuilder.Entity<TempSchedule>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("TempSchedule");

            entity.HasIndex(e => e.ScheduleEntryDate, "IX_TempSchedule_ScheduleEntryDate").IsClustered();

            entity.Property(e => e.ScheduleEndTime).HasColumnType("datetime");
            entity.Property(e => e.ScheduleEntryDate).HasColumnType("datetime");
            entity.Property(e => e.ScheduleStartTime).HasColumnType("datetime");
            entity.Property(e => e.SessionId)
                .HasMaxLength(36)
                .IsUnicode(false)
                .HasDefaultValue("")
                .HasColumnName("session_id");
        });

        modelBuilder.Entity<TempTable1>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("tempTable1");

            entity.Property(e => e.Bunew)
                .HasMaxLength(255)
                .HasColumnName("BUNew");
            entity.Property(e => e.BunewCode)
                .HasMaxLength(255)
                .HasColumnName("BUNewCode");
            entity.Property(e => e.Datum2).HasColumnName("datum2");
            entity.Property(e => e.TabN).HasMaxLength(255);
            entity.Property(e => e.TitleNewCode).HasMaxLength(255);
        });

        modelBuilder.Entity<Template>(entity =>
        {
            entity.HasKey(e => e.Id).IsClustered(false);

            entity.HasIndex(e => e.Id, "Templates_Index").IsClustered();

            entity.HasIndex(e => new { e.Topic, e.Resource, e.Description }, "ix_Templates_1").IsUnique();

            entity.HasIndex(e => e.Creator, "ix_Templates_2");

            entity.Property(e => e.Id)
                .HasDefaultValueSql("(newid())")
                .HasColumnName("ID");
            entity.Property(e => e.Created)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime");
            entity.Property(e => e.Description).HasMaxLength(60);
            entity.Property(e => e.DescriptionTermId).HasColumnName("DescriptionTermID");
            entity.Property(e => e.Modified)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime");
            entity.Property(e => e.Topic).HasMaxLength(60);
            entity.Property(e => e.Xmlvalue).HasColumnName("XMLValue");
        });

        modelBuilder.Entity<Term>(entity =>
        {
            entity.HasKey(e => new { e.Id, e.LanguageCode });

            entity.Property(e => e.Id).HasColumnName("ID");
            entity.Property(e => e.LanguageCode)
                .HasMaxLength(3)
                .IsFixedLength();
            entity.Property(e => e.Description).HasMaxLength(255);
        });

        //modelBuilder.Entity<TimeZone>(entity =>
        //{
        //    entity.Property(e => e.Id)
        //        .ValueGeneratedNever()
        //        .HasColumnName("ID");
        //    entity.Property(e => e.Description).HasMaxLength(100);
        //});

        modelBuilder.Entity<TimelineCoverPhoto>(entity =>
        {
            entity.HasIndex(e => e.ResourceId, "IX_TimelineCoverPhotos_ResourceID");

            entity.Property(e => e.Id).HasColumnName("ID");
            entity.Property(e => e.Picturefilename).HasMaxLength(128);
            entity.Property(e => e.ResourceId).HasColumnName("ResourceID");
        });

        modelBuilder.Entity<TimelinePersonalInfo>(entity =>
        {
            entity.ToTable("TimelinePersonalInfo");

            entity.HasIndex(e => e.ResourceId, "IX_TimelinePersonalInfo_ResourceID");

            entity.Property(e => e.Id).HasColumnName("ID");
            entity.Property(e => e.PersonalInfoXml)
                .HasColumnType("xml")
                .HasColumnName("PersonalInfoXML");
            entity.Property(e => e.ResourceId).HasColumnName("ResourceID");
        });

        modelBuilder.Entity<TimesheetBulkPlanning>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("TimesheetBulkPlanning");

            entity.HasIndex(e => e.Id, "TimesheetBulkPlanning_Index").IsClustered();

            entity.Property(e => e.DeliverableCode).HasMaxLength(30);
            entity.Property(e => e.Description).HasMaxLength(255);
            entity.Property(e => e.EndDate).HasColumnType("datetime");
            entity.Property(e => e.Id).HasColumnName("ID");
            entity.Property(e => e.ItemCode).HasMaxLength(30);
            entity.Property(e => e.ItemCode2).HasMaxLength(30);
            entity.Property(e => e.Location).HasMaxLength(40);
            entity.Property(e => e.ProjectNumber).HasMaxLength(20);
            entity.Property(e => e.Startdate).HasColumnType("datetime");
            entity.Property(e => e.Syscreated)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("syscreated");
            entity.Property(e => e.Syscreator).HasColumnName("syscreator");
            entity.Property(e => e.Sysguid)
                .HasDefaultValueSql("(newid())")
                .HasColumnName("sysguid");
            entity.Property(e => e.Sysmodified)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("sysmodified");
            entity.Property(e => e.Sysmodifier).HasColumnName("sysmodifier");
        });

        modelBuilder.Entity<TimesheetCustomerRate>(entity =>
        {
            entity.HasIndex(e => e.CmpWwn, "IX_TimesheetCustomerRates");

            entity.Property(e => e.Id)
                .HasDefaultValueSql("(newsequentialid())")
                .HasColumnName("ID");
            entity.Property(e => e.CmpWwn).HasColumnName("cmp_wwn");
            entity.Property(e => e.CurrencyCost)
                .HasMaxLength(3)
                .IsFixedLength();
            entity.Property(e => e.CurrencySalesPrice)
                .HasMaxLength(3)
                .IsFixedLength();
            entity.Property(e => e.EndDate).HasColumnType("datetime");
            entity.Property(e => e.Itemcode).HasMaxLength(30);
            entity.Property(e => e.StartDate).HasColumnType("datetime");
            entity.Property(e => e.Syscreated)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("syscreated");
            entity.Property(e => e.Syscreator).HasColumnName("syscreator");
            entity.Property(e => e.Sysguid)
                .HasDefaultValueSql("(newid())")
                .HasColumnName("sysguid");
            entity.Property(e => e.Sysmodified)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("sysmodified");
            entity.Property(e => e.Sysmodifier).HasColumnName("sysmodifier");
            entity.Property(e => e.UseSalesRate).HasDefaultValue(true);
        });

        modelBuilder.Entity<TimesheetDivisionSetting>(entity =>
        {
            entity.HasKey(e => e.Id).IsClustered(false);

            entity.HasIndex(e => e.Id, "TimesheetDivisionSettings_Index").IsClustered();

            entity.Property(e => e.Id)
                .HasDefaultValueSql("(newid())")
                .HasColumnName("ID");
            entity.Property(e => e.Created)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime");
            entity.Property(e => e.Division)
                .HasMaxLength(3)
                .IsFixedLength();
            entity.Property(e => e.GeneralJournal)
                .HasMaxLength(3)
                .IsFixedLength();
            entity.Property(e => e.LedgerWip)
                .HasMaxLength(9)
                .IsFixedLength()
                .HasColumnName("LedgerWIP");
            entity.Property(e => e.LedgerWipchange)
                .HasMaxLength(9)
                .IsFixedLength()
                .HasColumnName("LedgerWIPChange");
            entity.Property(e => e.Modified)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime");
            entity.Property(e => e.PurchaseJournal)
                .HasMaxLength(3)
                .IsFixedLength();
            entity.Property(e => e.Sysguid)
                .HasDefaultValueSql("(newid())")
                .HasColumnName("sysguid");
            entity.Property(e => e.Wipjournal)
                .HasMaxLength(3)
                .IsFixedLength()
                .HasColumnName("WIPJournal");
        });

        modelBuilder.Entity<TimesheetIcsetting>(entity =>
        {
            entity.HasKey(e => e.Id).IsClustered(false);

            entity.ToTable("TimesheetICSettings");

            entity.HasIndex(e => e.Id, "TimesheetICSettings_Index").IsClustered();

            entity.Property(e => e.Id)
                .HasDefaultValueSql("(newid())")
                .HasColumnName("ID");
            entity.Property(e => e.CostCenter)
                .HasMaxLength(8)
                .IsFixedLength();
            entity.Property(e => e.CostUnit)
                .HasMaxLength(8)
                .IsFixedLength();
            entity.Property(e => e.Created)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime");
            entity.Property(e => e.DivisionProject)
                .HasMaxLength(3)
                .IsFixedLength();
            entity.Property(e => e.DivisionResource)
                .HasMaxLength(3)
                .IsFixedLength();
            entity.Property(e => e.Iccosts)
                .HasMaxLength(9)
                .IsFixedLength()
                .HasColumnName("ICCosts");
            entity.Property(e => e.IcinvTbr)
                .HasMaxLength(9)
                .IsFixedLength()
                .HasColumnName("ICInvTBR");
            entity.Property(e => e.Modified)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime");
            entity.Property(e => e.ProjectNr)
                .HasMaxLength(30)
                .IsFixedLength();
            entity.Property(e => e.Sysguid)
                .HasDefaultValueSql("(newid())")
                .HasColumnName("sysguid");
        });

        modelBuilder.Entity<TimesheetInternalRate>(entity =>
        {
            entity.HasIndex(e => e.ResId, "IX_TimesheetInternalRates");

            entity.Property(e => e.Id)
                .HasDefaultValueSql("(newsequentialid())")
                .HasColumnName("ID");
            entity.Property(e => e.CurrencyCost)
                .HasMaxLength(3)
                .IsFixedLength();
            entity.Property(e => e.CurrencyIntercompany)
                .HasMaxLength(3)
                .IsFixedLength();
            entity.Property(e => e.CurrencySalesPrice)
                .HasMaxLength(3)
                .IsFixedLength();
            entity.Property(e => e.EndDate).HasColumnType("datetime");
            entity.Property(e => e.ItemCode).HasMaxLength(30);
            entity.Property(e => e.ResId).HasColumnName("Res_id");
            entity.Property(e => e.StartDate).HasColumnType("datetime");
            entity.Property(e => e.Syscreated)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("syscreated");
            entity.Property(e => e.Syscreator).HasColumnName("syscreator");
            entity.Property(e => e.Sysguid)
                .HasDefaultValueSql("(newid())")
                .HasColumnName("sysguid");
            entity.Property(e => e.Sysmodified)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("sysmodified");
            entity.Property(e => e.Sysmodifier).HasColumnName("sysmodifier");
            entity.Property(e => e.UseCostRate).HasDefaultValue(true);
            entity.Property(e => e.UseSalesRate).HasDefaultValue(true);
        });

        modelBuilder.Entity<TimesheetProjectRate>(entity =>
        {
            entity.HasIndex(e => e.ProjectNr, "IX_TimesheetProjectRates");

            entity.Property(e => e.Id)
                .HasDefaultValueSql("(newsequentialid())")
                .HasColumnName("ID");
            entity.Property(e => e.CurrencyCost)
                .HasMaxLength(3)
                .IsFixedLength();
            entity.Property(e => e.CurrencyIntercompany)
                .HasMaxLength(3)
                .IsFixedLength();
            entity.Property(e => e.CurrencySalesPrice)
                .HasMaxLength(3)
                .IsFixedLength();
            entity.Property(e => e.EndDate).HasColumnType("datetime");
            entity.Property(e => e.Itemcode).HasMaxLength(30);
            entity.Property(e => e.ProjectNr).HasMaxLength(20);
            entity.Property(e => e.ResourceId).HasColumnName("ResourceID");
            entity.Property(e => e.StartDate).HasColumnType("datetime");
            entity.Property(e => e.Syscreated)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("syscreated");
            entity.Property(e => e.Syscreator).HasColumnName("syscreator");
            entity.Property(e => e.Sysguid)
                .HasDefaultValueSql("(newid())")
                .HasColumnName("sysguid");
            entity.Property(e => e.Sysmodified)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("sysmodified");
            entity.Property(e => e.Sysmodifier).HasColumnName("sysmodifier");
            entity.Property(e => e.UseCostRate).HasDefaultValue(true);
            entity.Property(e => e.UseSalesRate).HasDefaultValue(true);
        });

        modelBuilder.Entity<TransactionType>(entity =>
        {
            entity.HasKey(e => e.TransactionType1);

            entity.Property(e => e.TransactionType1)
                .ValueGeneratedNever()
                .HasColumnName("TransactionType");
            entity.Property(e => e.Description).HasMaxLength(60);
            entity.Property(e => e.DescriptionSuffix).HasMaxLength(60);
            entity.Property(e => e.DescriptionSuffixTermId).HasColumnName("DescriptionSuffixTermID");
            entity.Property(e => e.DescriptionTermId).HasColumnName("DescriptionTermID");
            entity.Property(e => e.Timestamp)
                .IsRowVersion()
                .IsConcurrencyToken()
                .HasColumnName("timestamp");
        });

        modelBuilder.Entity<TransactionsPending>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("TransactionsPending");

            entity.HasIndex(e => new { e.CompanyCode, e.FinYear, e.FinPeriod }, "IE_TransactionsPending_CompanyCodeYearPeriod");

            entity.HasIndex(e => new { e.CompanyCode, e.FinYear, e.FinPeriod, e.JournalNumber, e.EntryNumber }, "IE_TransactionsPending_CompanyCodeYearPeriodJournalEntry");

            entity.HasIndex(e => e.Id, "IX_ID").IsUnique();

            entity.HasIndex(e => new { e.CompanyCode, e.Status, e.Transtype }, "IX_TransactionsPending_CompStatusTransType");

            entity.HasIndex(e => e.EntryGuid, "IX_TransactionsPending_EntryGuid");

            entity.HasIndex(e => e.TransactionGuid, "IX_TransactionsPending_TransactionGuid").IsUnique();

            entity.HasIndex(e => e.CompanyCode, "TransactionsPending_Index").IsClustered();

            entity.Property(e => e.Afldat)
                .HasColumnType("datetime")
                .HasColumnName("afldat");
            entity.Property(e => e.AmountCreditAc).HasColumnName("AmountCreditAC");
            entity.Property(e => e.AmountCreditFc).HasColumnName("AmountCreditFC");
            entity.Property(e => e.AmountDebitAc).HasColumnName("AmountDebitAC");
            entity.Property(e => e.AmountDebitFc).HasColumnName("AmountDebitFC");
            entity.Property(e => e.Artcode)
                .HasMaxLength(30)
                .HasColumnName("artcode");
            entity.Property(e => e.BankTransactionGuid).HasColumnName("BankTransactionGUID");
            entity.Property(e => e.Bankacc)
                .HasMaxLength(34)
                .HasColumnName("bankacc");
            entity.Property(e => e.BdrHfl).HasColumnName("bdr_hfl");
            entity.Property(e => e.BdrVal).HasColumnName("bdr_val");
            entity.Property(e => e.Bdrkredbep).HasColumnName("bdrkredbep");
            entity.Property(e => e.Bdrkredbp2).HasColumnName("bdrkredbp2");
            entity.Property(e => e.Betaalref)
                .HasMaxLength(35)
                .HasColumnName("betaalref");
            entity.Property(e => e.BtwNummer)
                .HasMaxLength(20)
                .HasColumnName("btw_nummer");
            entity.Property(e => e.BudVers)
                .HasMaxLength(30)
                .HasColumnName("bud_vers");
            entity.Property(e => e.CashRegisterAccount).HasMaxLength(34);
            entity.Property(e => e.CompCode)
                .HasMaxLength(8)
                .IsFixedLength()
                .HasColumnName("comp_code");
            entity.Property(e => e.CompanyAccountCode)
                .HasMaxLength(9)
                .IsFixedLength();
            entity.Property(e => e.CompanyCode)
                .HasMaxLength(6)
                .IsFixedLength();
            entity.Property(e => e.CompanyCodeFrom)
                .HasMaxLength(6)
                .IsFixedLength();
            entity.Property(e => e.CompanyCodeTo)
                .HasMaxLength(6)
                .IsFixedLength();
            entity.Property(e => e.CompanyContraAccountCode)
                .HasMaxLength(9)
                .IsFixedLength();
            entity.Property(e => e.CompanyCostcenterCode).HasMaxLength(30);
            entity.Property(e => e.CompanyCostunitCode).HasMaxLength(30);
            entity.Property(e => e.CreditorCode).HasMaxLength(30);
            entity.Property(e => e.CurrencyAliasAc)
                .HasMaxLength(3)
                .IsFixedLength()
                .HasColumnName("CurrencyAliasAC");
            entity.Property(e => e.CurrencyAliasFc)
                .HasMaxLength(3)
                .IsFixedLength()
                .HasColumnName("CurrencyAliasFC");
            entity.Property(e => e.CurrencyCode)
                .HasMaxLength(3)
                .IsFixedLength();
            entity.Property(e => e.DbkVerwnr).HasColumnName("dbk_verwnr");
            entity.Property(e => e.DebtorCode).HasMaxLength(30);
            entity.Property(e => e.Description).HasMaxLength(60);
            entity.Property(e => e.DocAttachmentId).HasColumnName("DocAttachmentID");
            entity.Property(e => e.Docdate)
                .HasColumnType("datetime")
                .HasColumnName("docdate");
            entity.Property(e => e.Docnumber)
                .HasMaxLength(30)
                .HasColumnName("docnumber");
            entity.Property(e => e.DocumentId).HasColumnName("DocumentID");
            entity.Property(e => e.EndTime).HasColumnType("datetime");
            entity.Property(e => e.EntryNumber).HasMaxLength(20);
            entity.Property(e => e.Entryid).HasColumnName("entryid");
            entity.Property(e => e.Entryorigin)
                .HasMaxLength(1)
                .IsFixedLength()
                .HasColumnName("entryorigin");
            entity.Property(e => e.Exvalbdr).HasColumnName("exvalbdr");
            entity.Property(e => e.Exvalcode)
                .HasMaxLength(3)
                .IsFixedLength()
                .HasColumnName("exvalcode");
            entity.Property(e => e.Facode)
                .HasMaxLength(20)
                .HasColumnName("facode");
            entity.Property(e => e.Faktuurnr)
                .HasMaxLength(8)
                .IsFixedLength()
                .HasColumnName("faktuurnr");
            entity.Property(e => e.Freefield1)
                .HasMaxLength(75)
                .HasColumnName("freefield1");
            entity.Property(e => e.Freefield2)
                .HasMaxLength(75)
                .HasColumnName("freefield2");
            entity.Property(e => e.Freefield3)
                .HasMaxLength(75)
                .HasColumnName("freefield3");
            entity.Property(e => e.Freefield4).HasColumnName("freefield4");
            entity.Property(e => e.Freefield5).HasColumnName("freefield5");
            entity.Property(e => e.Id)
                .ValueGeneratedOnAdd()
                .HasColumnName("ID");
            entity.Property(e => e.ImportDate)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime");
            entity.Property(e => e.IntArea).HasMaxLength(10);
            entity.Property(e => e.IntDeliveryMethod).HasMaxLength(10);
            entity.Property(e => e.IntLandAssembly).HasMaxLength(3);
            entity.Property(e => e.IntLandDestOrig)
                .HasMaxLength(3)
                .IsFixedLength();
            entity.Property(e => e.IntLandIso)
                .HasMaxLength(3)
                .IsFixedLength()
                .HasColumnName("IntLandISO");
            entity.Property(e => e.IntPort).HasMaxLength(10);
            entity.Property(e => e.IntStandardCode).HasMaxLength(10);
            entity.Property(e => e.IntStatNr).HasMaxLength(9);
            entity.Property(e => e.IntSystem).HasMaxLength(10);
            entity.Property(e => e.IntTransA).HasMaxLength(10);
            entity.Property(e => e.IntTransB).HasMaxLength(10);
            entity.Property(e => e.IntTransShipment).HasMaxLength(10);
            entity.Property(e => e.IntTransportMethod).HasMaxLength(10);
            entity.Property(e => e.Invoice).HasMaxLength(20);
            entity.Property(e => e.JournalNumber).HasMaxLength(20);
            entity.Property(e => e.Koers3).HasColumnName("koers3");
            entity.Property(e => e.Kredbep)
                .HasMaxLength(1)
                .IsFixedLength()
                .HasColumnName("kredbep");
            entity.Property(e => e.LastReminderDate).HasColumnType("datetime");
            entity.Property(e => e.Message).HasMaxLength(256);
            entity.Property(e => e.Oorsprong)
                .HasMaxLength(1)
                .IsFixedLength()
                .HasColumnName("oorsprong");
            entity.Property(e => e.Orderdebtor).HasColumnName("orderdebtor");
            entity.Property(e => e.OriginalQuantity).HasColumnName("Original_Quantity");
            entity.Property(e => e.PaymentMethod)
                .HasMaxLength(1)
                .HasDefaultValueSql("((0))")
                .IsFixedLength();
            entity.Property(e => e.PaymentTermCode).HasMaxLength(20);
            entity.Property(e => e.PayrollSubtype)
                .HasMaxLength(4)
                .IsFixedLength();
            entity.Property(e => e.Pricelist).HasMaxLength(15);
            entity.Property(e => e.ProcessLineCode)
                .HasMaxLength(1)
                .IsFixedLength();
            entity.Property(e => e.Project)
                .HasMaxLength(20)
                .HasColumnName("project");
            entity.Property(e => e.Raplist)
                .HasMaxLength(6)
                .IsFixedLength()
                .HasColumnName("raplist");
            entity.Property(e => e.Rapnr)
                .HasMaxLength(6)
                .IsFixedLength()
                .HasColumnName("rapnr");
            entity.Property(e => e.Rate).HasDefaultValue(1.0);
            entity.Property(e => e.RateFc)
                .HasDefaultValue(1.0)
                .HasColumnName("RateFC");
            entity.Property(e => e.ReportingDate).HasColumnType("datetime");
            entity.Property(e => e.ResId).HasColumnName("res_id");
            entity.Property(e => e.Selcode)
                .HasMaxLength(2)
                .IsFixedLength();
            entity.Property(e => e.Serialnumber)
                .HasMaxLength(30)
                .HasColumnName("serialnumber");
            entity.Property(e => e.Shipment).HasMaxLength(30);
            entity.Property(e => e.StartTime).HasColumnType("datetime");
            entity.Property(e => e.StatNr).HasColumnName("stat_nr");
            entity.Property(e => e.StockTrackingNumber)
                .HasMaxLength(8)
                .IsFixedLength();
            entity.Property(e => e.Syscreated)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("syscreated");
            entity.Property(e => e.Syscreator).HasColumnName("syscreator");
            entity.Property(e => e.Sysguid)
                .HasDefaultValueSql("(newid())")
                .HasColumnName("sysguid");
            entity.Property(e => e.Sysmodified)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("sysmodified");
            entity.Property(e => e.Sysmodifier).HasColumnName("sysmodifier");
            entity.Property(e => e.TaxCode2)
                .HasMaxLength(3)
                .IsFixedLength();
            entity.Property(e => e.TaxCode3)
                .HasMaxLength(3)
                .IsFixedLength();
            entity.Property(e => e.TaxCode4)
                .HasMaxLength(3)
                .IsFixedLength();
            entity.Property(e => e.TaxCode5)
                .HasMaxLength(3)
                .IsFixedLength();
            entity.Property(e => e.Timestamp)
                .IsRowVersion()
                .IsConcurrencyToken()
                .HasColumnName("timestamp");
            entity.Property(e => e.TransactionDate).HasColumnType("datetime");
            entity.Property(e => e.TransactionGuid).HasDefaultValueSql("(newid())");
            entity.Property(e => e.TransactionImported)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime");
            entity.Property(e => e.Transsubtype)
                .HasMaxLength(1)
                .HasDefaultValue("N")
                .IsFixedLength()
                .HasColumnName("transsubtype");
            entity.Property(e => e.Transtype)
                .HasMaxLength(1)
                .HasDefaultValue("N")
                .IsFixedLength()
                .HasColumnName("transtype");
            entity.Property(e => e.Unitcode)
                .HasMaxLength(8)
                .IsFixedLength();
            entity.Property(e => e.Vatamount).HasColumnName("VATAmount");
            entity.Property(e => e.VatamountAc).HasColumnName("VATAmountAC");
            entity.Property(e => e.VatbaseAmount).HasColumnName("VATBaseAmount");
            entity.Property(e => e.VatbaseAmountAc).HasColumnName("VATBaseAmountAC");
            entity.Property(e => e.VatbaseAmountFc).HasColumnName("VATBaseAmountFC");
            entity.Property(e => e.Vatcode)
                .HasMaxLength(20)
                .HasColumnName("VATCode");
            entity.Property(e => e.Vatpercentage).HasColumnName("VATPercentage");
            entity.Property(e => e.Vervdatfak)
                .HasColumnType("datetime")
                .HasColumnName("vervdatfak");
            entity.Property(e => e.Vervdatkrd)
                .HasColumnType("datetime")
                .HasColumnName("vervdatkrd");
            entity.Property(e => e.Vervdtkrd2)
                .HasColumnType("datetime")
                .HasColumnName("vervdtkrd2");
            entity.Property(e => e.VlgnGbk2)
                .HasMaxLength(30)
                .HasColumnName("vlgn_gbk2");
            entity.Property(e => e.Warehouse)
                .HasMaxLength(4)
                .IsFixedLength()
                .HasColumnName("warehouse");
            entity.Property(e => e.WarehouseLocation)
                .HasMaxLength(10)
                .IsFixedLength()
                .HasColumnName("warehouse_location");
            entity.Property(e => e.Wisselkrs).HasColumnName("wisselkrs");
        });

        modelBuilder.Entity<UserPreference>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__UserPref__3214EC07EEEE6AD3");

            entity.ToTable("UserPreference");

            entity.HasIndex(e => new { e.OwnerId, e.Category }, "IX_UserPreference_OwnerId_Category");

            entity.Property(e => e.Id).HasDefaultValueSql("(newid())");
        });

        modelBuilder.Entity<Ushrpayroll>(entity =>
        {
            entity
                .HasNoKey()
                .ToView("ushrpayroll");

            entity.Property(e => e.AdjustedDate)
                .HasColumnType("datetime")
                .HasColumnName("adjusted_date");
            entity.Property(e => e.Contract).HasColumnName("contract");
            entity.Property(e => e.Country)
                .HasMaxLength(3)
                .IsFixedLength();
            entity.Property(e => e.Description)
                .HasMaxLength(50)
                .HasColumnName("description");
            entity.Property(e => e.DocAttachmentId).HasColumnName("DocAttachmentID");
            entity.Property(e => e.EicCurrentAmount).HasColumnName("eic_current_amount");
            entity.Property(e => e.EicStatus)
                .HasMaxLength(1)
                .IsFixedLength()
                .HasColumnName("eic_status");
            entity.Property(e => e.EmpType)
                .HasMaxLength(1)
                .IsFixedLength()
                .HasColumnName("emp_type");
            entity.Property(e => e.EmpTypeDate)
                .HasColumnType("datetime")
                .HasColumnName("emp_type_date");
            entity.Property(e => e.Enddate)
                .HasColumnType("datetime")
                .HasColumnName("enddate");
            entity.Property(e => e.FicaCode)
                .HasMaxLength(1)
                .IsFixedLength()
                .HasColumnName("fica_code");
            entity.Property(e => e.FuiCode)
                .HasMaxLength(1)
                .IsFixedLength()
                .HasColumnName("fui_code");
            entity.Property(e => e.FwtCalculation)
                .HasMaxLength(1)
                .IsFixedLength()
                .HasColumnName("fwt_calculation");
            entity.Property(e => e.Fwtextra).HasColumnName("FWTExtra");
            entity.Property(e => e.Id)
                .ValueGeneratedOnAdd()
                .HasColumnName("ID");
            entity.Property(e => e.InsuranceFaceValue).HasColumnName("insurance_face_value");
            entity.Property(e => e.JobTitle)
                .HasMaxLength(12)
                .HasColumnName("job_title");
            entity.Property(e => e.Marital)
                .HasMaxLength(1)
                .IsFixedLength();
            entity.Property(e => e.MotorvehType)
                .HasMaxLength(8)
                .IsFixedLength()
                .HasColumnName("motorveh_type");
            entity.Property(e => e.OtherTax)
                .HasMaxLength(1)
                .IsFixedLength()
                .HasColumnName("other_tax");
            entity.Property(e => e.PaymentPeriod)
                .HasMaxLength(1)
                .IsFixedLength()
                .HasColumnName("payment_period");
            entity.Property(e => e.Period).HasColumnName("period");
            entity.Property(e => e.ResId).HasColumnName("Res_id");
            entity.Property(e => e.SalaryIndicator)
                .HasMaxLength(1)
                .IsFixedLength()
                .HasColumnName("salary_indicator");
            entity.Property(e => e.Sliptext1).HasMaxLength(70);
            entity.Property(e => e.Sliptext2).HasMaxLength(70);
            entity.Property(e => e.Sliptext3).HasMaxLength(70);
            entity.Property(e => e.Startdate)
                .HasColumnType("datetime")
                .HasColumnName("startdate");
            entity.Property(e => e.Syscreated)
                .HasColumnType("datetime")
                .HasColumnName("syscreated");
            entity.Property(e => e.Syscreator).HasColumnName("syscreator");
            entity.Property(e => e.Sysguid).HasColumnName("sysguid");
            entity.Property(e => e.Sysmodified)
                .HasColumnType("datetime")
                .HasColumnName("sysmodified");
            entity.Property(e => e.Sysmodifier).HasColumnName("sysmodifier");
            entity.Property(e => e.TimeIndicator)
                .HasMaxLength(1)
                .IsFixedLength()
                .HasColumnName("time_indicator");
            entity.Property(e => e.Timestamp)
                .IsRowVersion()
                .IsConcurrencyToken()
                .HasColumnName("timestamp");
            entity.Property(e => e.Type)
                .HasMaxLength(1)
                .IsFixedLength()
                .HasColumnName("type");
            entity.Property(e => e.Workshift)
                .HasMaxLength(1)
                .IsFixedLength()
                .HasColumnName("workshift");
        });

        modelBuilder.Entity<Usrbar>(entity =>
        {
            entity.HasKey(e => new { e.ResId, e.MnuId });

            entity.ToTable("usrbar");

            entity.Property(e => e.ResId).HasColumnName("res_id");
            entity.Property(e => e.MnuId).HasColumnName("mnu_id");
            entity.Property(e => e.Type)
                .HasMaxLength(1)
                .IsFixedLength()
                .HasColumnName("type");
        });

        modelBuilder.Entity<Usrmnu>(entity =>
        {
            entity.HasKey(e => new { e.ResId, e.Type });

            entity.ToTable("usrmnu");

            entity.Property(e => e.ResId).HasColumnName("res_id");
            entity.Property(e => e.Type).HasColumnName("type");
            entity.Property(e => e.EwfCrc).HasColumnName("ewfCrc");
            entity.Property(e => e.OptionsCrc).HasColumnName("optionsCrc");
            entity.Property(e => e.RightsCrc).HasColumnName("rightsCrc");
            entity.Property(e => e.SettingsCrc).HasColumnName("settingsCrc");
            entity.Property(e => e.Syscreated)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("syscreated");
            entity.Property(e => e.Syscreator).HasColumnName("syscreator");
            entity.Property(e => e.Sysguid)
                .HasDefaultValueSql("(newid())")
                .HasColumnName("sysguid");
            entity.Property(e => e.Sysmodified)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("sysmodified");
            entity.Property(e => e.Sysmodifier).HasColumnName("sysmodifier");
        });

        modelBuilder.Entity<Valutum>(entity =>
        {
            entity.HasKey(e => e.Id).IsClustered(false);

            entity.ToTable("valuta");

            entity.HasIndex(e => new { e.Active, e.Valcode }, "ActiveValcode").IsUnique();

            entity.HasIndex(e => new { e.Swiftvalcd, e.Id }, "isoswf").IsUnique();

            entity.HasIndex(e => e.Valcode, "valuta")
                .IsUnique()
                .IsClustered();

            entity.Property(e => e.Id).HasColumnName("ID");
            entity.Property(e => e.Active).HasColumnName("active");
            entity.Property(e => e.AfkVal)
                .HasMaxLength(5)
                .IsFixedLength()
                .HasColumnName("afk_val");
            entity.Property(e => e.AmountPrec).HasColumnName("amount_prec");
            entity.Property(e => e.BlwiValcd)
                .HasMaxLength(3)
                .IsFixedLength()
                .HasColumnName("blwi_valcd");
            entity.Property(e => e.Btwhoogink)
                .HasMaxLength(3)
                .IsFixedLength()
                .HasColumnName("btwhoogink");
            entity.Property(e => e.Btwhoogvrk)
                .HasMaxLength(3)
                .IsFixedLength()
                .HasColumnName("btwhoogvrk");
            entity.Property(e => e.Btwlaagink)
                .HasMaxLength(3)
                .IsFixedLength()
                .HasColumnName("btwlaagink");
            entity.Property(e => e.Btwlaagvrk)
                .HasMaxLength(3)
                .IsFixedLength()
                .HasColumnName("btwlaagvrk");
            entity.Property(e => e.CurLetter)
                .HasMaxLength(1)
                .IsFixedLength()
                .HasColumnName("cur_letter");
            entity.Property(e => e.Dagkoers).HasColumnName("dagkoers");
            entity.Property(e => e.Doorbkvali)
                .HasDefaultValue((byte)1)
                .HasColumnName("doorbkvali");
            entity.Property(e => e.Doorbkvalv)
                .HasDefaultValue((byte)1)
                .HasColumnName("doorbkvalv");
            entity.Property(e => e.EmuCurrency).HasColumnName("emu_currency");
            entity.Property(e => e.EmuDate)
                .HasColumnType("datetime")
                .HasColumnName("emu_date");
            entity.Property(e => e.Enabled).HasDefaultValue((byte)1);
            entity.Property(e => e.Freefield1)
                .HasMaxLength(75)
                .HasColumnName("freefield1");
            entity.Property(e => e.Freefield10).HasColumnName("freefield10");
            entity.Property(e => e.Freefield11).HasColumnName("freefield11");
            entity.Property(e => e.Freefield12).HasColumnName("freefield12");
            entity.Property(e => e.Freefield13).HasColumnName("freefield13");
            entity.Property(e => e.Freefield14)
                .HasColumnType("datetime")
                .HasColumnName("freefield14");
            entity.Property(e => e.Freefield15)
                .HasColumnType("datetime")
                .HasColumnName("freefield15");
            entity.Property(e => e.Freefield16)
                .HasColumnType("datetime")
                .HasColumnName("freefield16");
            entity.Property(e => e.Freefield17).HasColumnName("freefield17");
            entity.Property(e => e.Freefield18).HasColumnName("freefield18");
            entity.Property(e => e.Freefield19).HasColumnName("freefield19");
            entity.Property(e => e.Freefield2)
                .HasMaxLength(75)
                .HasColumnName("freefield2");
            entity.Property(e => e.Freefield20).HasColumnName("freefield20");
            entity.Property(e => e.Freefield3)
                .HasMaxLength(75)
                .HasColumnName("freefield3");
            entity.Property(e => e.Freefield4)
                .HasMaxLength(75)
                .HasColumnName("freefield4");
            entity.Property(e => e.Freefield5)
                .HasMaxLength(75)
                .HasColumnName("freefield5");
            entity.Property(e => e.Freefield6)
                .HasMaxLength(75)
                .HasColumnName("freefield6");
            entity.Property(e => e.Freefield7)
                .HasMaxLength(75)
                .HasColumnName("freefield7");
            entity.Property(e => e.Freefield8).HasColumnName("freefield8");
            entity.Property(e => e.Freefield9).HasColumnName("freefield9");
            entity.Property(e => e.Invvalink)
                .HasDefaultValue((byte)1)
                .HasColumnName("invvalink");
            entity.Property(e => e.Invvalvrk)
                .HasDefaultValue((byte)1)
                .HasColumnName("invvalvrk");
            entity.Property(e => e.Omrekfact).HasColumnName("omrekfact");
            entity.Property(e => e.Oms300)
                .HasMaxLength(30)
                .HasColumnName("oms30_0");
            entity.Property(e => e.Oms301)
                .HasMaxLength(30)
                .HasColumnName("oms30_1");
            entity.Property(e => e.Oms302)
                .HasMaxLength(30)
                .HasColumnName("oms30_2");
            entity.Property(e => e.Oms303)
                .HasMaxLength(30)
                .HasColumnName("oms30_3");
            entity.Property(e => e.Oms304)
                .HasMaxLength(30)
                .HasColumnName("oms30_4");
            entity.Property(e => e.Omzetcode)
                .HasMaxLength(1)
                .IsFixedLength()
                .HasColumnName("omzetcode");
            entity.Property(e => e.PricePrec).HasColumnName("price_prec");
            entity.Property(e => e.RatePrec).HasColumnName("rate_prec");
            entity.Property(e => e.Rekherw)
                .HasMaxLength(9)
                .IsFixedLength()
                .HasColumnName("rekherw");
            entity.Property(e => e.Rekherww)
                .HasMaxLength(9)
                .IsFixedLength()
                .HasColumnName("rekherww");
            entity.Property(e => e.Rekkrsvink)
                .HasMaxLength(9)
                .IsFixedLength()
                .HasColumnName("rekkrsvink");
            entity.Property(e => e.Rekkrsvvrk)
                .HasMaxLength(9)
                .IsFixedLength()
                .HasColumnName("rekkrsvvrk");
            entity.Property(e => e.Rekkrswink)
                .HasMaxLength(9)
                .IsFixedLength()
                .HasColumnName("rekkrswink");
            entity.Property(e => e.Rekkrswvrk)
                .HasMaxLength(9)
                .IsFixedLength()
                .HasColumnName("rekkrswvrk");
            entity.Property(e => e.Swiftvalcd)
                .HasMaxLength(3)
                .IsFixedLength()
                .HasColumnName("swiftvalcd");
            entity.Property(e => e.Syscreated)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("syscreated");
            entity.Property(e => e.Syscreator).HasColumnName("syscreator");
            entity.Property(e => e.Sysguid)
                .HasDefaultValueSql("(newid())")
                .HasColumnName("sysguid");
            entity.Property(e => e.Sysmodified)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("sysmodified");
            entity.Property(e => e.Sysmodifier).HasColumnName("sysmodifier");
            entity.Property(e => e.Timestamp)
                .IsRowVersion()
                .IsConcurrencyToken()
                .HasColumnName("timestamp");
            entity.Property(e => e.Valcode)
                .HasMaxLength(3)
                .IsFixedLength()
                .HasColumnName("valcode");
            entity.Property(e => e.XtraRates).HasColumnName("xtra_rates");
        });

        modelBuilder.Entity<Verslg>(entity =>
        {
            entity.HasKey(e => e.Id).IsClustered(false);

            entity.ToTable("verslg");

            entity.HasIndex(e => new { e.Bkjrcode, e.Periode, e.Dagbknr, e.Id }, "vslbjr").IsUnique();

            entity.HasIndex(e => new { e.Datum, e.Verwerknr, e.Id }, "vsldat").IsUnique();

            entity.HasIndex(e => e.Verwerknr, "vslnr")
                .IsUnique()
                .IsClustered();

            entity.HasIndex(e => new { e.UserId, e.Datum, e.Verwerknr, e.Id }, "vsluid").IsUnique();

            entity.Property(e => e.Id).HasColumnName("ID");
            entity.Property(e => e.AantAfgdr).HasColumnName("aant_afgdr");
            entity.Property(e => e.Bkjrcode).HasColumnName("bkjrcode");
            entity.Property(e => e.Dagbknr)
                .HasMaxLength(3)
                .IsFixedLength()
                .HasColumnName("dagbknr");
            entity.Property(e => e.Datum)
                .HasColumnType("datetime")
                .HasColumnName("datum");
            entity.Property(e => e.Oms40)
                .HasMaxLength(40)
                .HasColumnName("oms40");
            entity.Property(e => e.Periode)
                .HasMaxLength(3)
                .IsFixedLength()
                .HasColumnName("periode");
            entity.Property(e => e.Syscreated)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("syscreated");
            entity.Property(e => e.Syscreator).HasColumnName("syscreator");
            entity.Property(e => e.Sysguid)
                .HasDefaultValueSql("(newid())")
                .HasColumnName("sysguid");
            entity.Property(e => e.Sysmodified)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("sysmodified");
            entity.Property(e => e.Sysmodifier).HasColumnName("sysmodifier");
            entity.Property(e => e.Timestamp)
                .IsRowVersion()
                .IsConcurrencyToken()
                .HasColumnName("timestamp");
            entity.Property(e => e.TotCredit).HasColumnName("tot_credit");
            entity.Property(e => e.TotDebet).HasColumnName("tot_debet");
            entity.Property(e => e.UserId)
                .HasMaxLength(8)
                .IsFixedLength()
                .HasColumnName("user_id");
            entity.Property(e => e.Verwerknr)
                .HasMaxLength(10)
                .IsFixedLength()
                .HasColumnName("verwerknr");
        });

        modelBuilder.Entity<Viesresult>(entity =>
        {
            entity.ToTable("VIESResult");

            entity.HasIndex(e => e.ValidationId, "IX_VIESResult_ValidationID");

            entity.HasIndex(e => e.ValidationStatus, "IX_VIESResult_ValidationStatus");

            entity.Property(e => e.Id)
                .HasDefaultValueSql("(newid())")
                .HasColumnName("ID");
            entity.Property(e => e.CountryCode)
                .HasMaxLength(3)
                .IsFixedLength();
            entity.Property(e => e.RequestIdentifier)
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.Syscreated)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("syscreated");
            entity.Property(e => e.Syscreator).HasColumnName("syscreator");
            entity.Property(e => e.Sysmodified)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("sysmodified");
            entity.Property(e => e.Sysmodifier).HasColumnName("sysmodifier");
            entity.Property(e => e.ValidationDate).HasColumnType("datetime");
            entity.Property(e => e.ValidationId).HasColumnName("ValidationID");
            entity.Property(e => e.ValidationStatus)
                .HasMaxLength(2)
                .IsFixedLength();
            entity.Property(e => e.VatNumber).HasMaxLength(40);
        });

        modelBuilder.Entity<Viesvalidation>(entity =>
        {
            entity.ToTable("VIESValidation");

            entity.HasIndex(e => e.Hid, "IX_VIESValidation_HID");

            entity.Property(e => e.Id)
                .HasDefaultValueSql("(newid())")
                .HasColumnName("ID");
            entity.Property(e => e.DateProcessed).HasColumnType("datetime");
            entity.Property(e => e.DateStarted).HasColumnType("datetime");
            entity.Property(e => e.Hid)
                .ValueGeneratedOnAdd()
                .HasColumnName("HID");
            entity.Property(e => e.Syscreated)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("syscreated");
            entity.Property(e => e.Syscreator).HasColumnName("syscreator");
            entity.Property(e => e.Viesinput).HasColumnName("VIESInput");
        });

        modelBuilder.Entity<Voorrd>(entity =>
        {
            entity.HasKey(e => e.Id).IsClustered(false);

            entity.ToTable("voorrd");

            entity.HasIndex(e => new { e.Artcode, e.Magcode }, "artmag").IsUnique();

            entity.HasIndex(e => new { e.Magcode, e.Maglok, e.Artcode }, "invlst").IsUnique();

            entity.HasIndex(e => new { e.Magcode, e.Artcode }, "voorrd")
                .IsUnique()
                .IsClustered();

            entity.Property(e => e.Id).HasColumnName("ID");
            entity.Property(e => e.Artcode)
                .HasMaxLength(30)
                .HasColumnName("artcode");
            entity.Property(e => e.Bestniv).HasColumnName("bestniv");
            entity.Property(e => e.Blokkeer).HasColumnName("blokkeer");
            entity.Property(e => e.DateLastCounted).HasColumnType("datetime");
            entity.Property(e => e.Magcode)
                .HasMaxLength(4)
                .IsFixedLength()
                .HasColumnName("magcode");
            entity.Property(e => e.Maglok)
                .HasMaxLength(10)
                .IsFixedLength()
                .HasColumnName("maglok");
            entity.Property(e => e.Maxvrd).HasColumnName("maxvrd");
            entity.Property(e => e.Minvrd).HasColumnName("minvrd");
            entity.Property(e => e.OrderPolicyCode)
                .HasMaxLength(1)
                .IsFixedLength();
            entity.Property(e => e.ResId).HasColumnName("res_id");
            entity.Property(e => e.Syscreated)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("syscreated");
            entity.Property(e => e.Syscreator).HasColumnName("syscreator");
            entity.Property(e => e.Sysguid)
                .HasDefaultValueSql("(newid())")
                .HasColumnName("sysguid");
            entity.Property(e => e.Sysmodified)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("sysmodified");
            entity.Property(e => e.Sysmodifier).HasColumnName("sysmodifier");
            entity.Property(e => e.Timestamp)
                .IsRowVersion()
                .IsConcurrencyToken()
                .HasColumnName("timestamp");
            entity.Property(e => e.Veilvrd).HasColumnName("veilvrd");
        });

        modelBuilder.Entity<WbslineVersion>(entity =>
        {
            entity.ToTable("WBSLineVersions");

            entity.HasIndex(e => e.DeliverableVersionId, "IX_WBSLineVersions_DeliverableVersionID");

            entity.Property(e => e.Id)
                .ValueGeneratedNever()
                .HasColumnName("ID");
            entity.Property(e => e.CostCurrency)
                .HasMaxLength(3)
                .IsFixedLength();
            entity.Property(e => e.DeliverableVersionId).HasColumnName("DeliverableVersionID");
            entity.Property(e => e.Description).HasMaxLength(255);
            entity.Property(e => e.EndDate).HasColumnType("datetime");
            entity.Property(e => e.IsPurchased).HasDefaultValue(false);
            entity.Property(e => e.ItemCode).HasMaxLength(30);
            entity.Property(e => e.ProjectNumber).HasMaxLength(20);
            entity.Property(e => e.SalesCurrency)
                .HasMaxLength(3)
                .IsFixedLength();
            entity.Property(e => e.StartDate).HasColumnType("datetime");
            entity.Property(e => e.Syscreated)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("syscreated");
            entity.Property(e => e.Syscreator).HasColumnName("syscreator");
            entity.Property(e => e.Sysmodified)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("sysmodified");
            entity.Property(e => e.Sysmodifier).HasColumnName("sysmodifier");
            entity.Property(e => e.TotalCostCurrency)
                .HasMaxLength(3)
                .IsFixedLength();
            entity.Property(e => e.TotalSalesCurrency)
                .HasMaxLength(3)
                .IsFixedLength();
            entity.Property(e => e.Type)
                .HasMaxLength(1)
                .IsFixedLength();
            entity.Property(e => e.WbslineId).HasColumnName("WBSLineID");
        });

        modelBuilder.Entity<WebContent>(entity =>
        {
            entity.ToTable("WebContent");

            entity.Property(e => e.Id)
                .HasDefaultValueSql("(newid())")
                .HasColumnName("ID");
            entity.Property(e => e.Htmltext).HasColumnName("HTMLText");
            entity.Property(e => e.LeftLinkColor)
                .HasMaxLength(10)
                .IsFixedLength();
            entity.Property(e => e.LinkAlignment)
                .HasMaxLength(10)
                .IsFixedLength();
            entity.Property(e => e.LinkFontFace)
                .HasMaxLength(10)
                .IsFixedLength();
            entity.Property(e => e.LinkFontSize)
                .HasMaxLength(10)
                .IsFixedLength();
            entity.Property(e => e.TabColor)
                .HasMaxLength(10)
                .IsFixedLength();
            entity.Property(e => e.TabSelectedColor)
                .HasMaxLength(10)
                .IsFixedLength();
            entity.Property(e => e.TextColor)
                .HasMaxLength(10)
                .IsFixedLength();
            entity.Property(e => e.TextFontFace)
                .HasMaxLength(10)
                .IsFixedLength();
            entity.Property(e => e.TextFontSize)
                .HasMaxLength(10)
                .IsFixedLength();
            entity.Property(e => e.WebFrameObject).HasMaxLength(20);
            entity.Property(e => e.WebFrameType).HasMaxLength(30);
            entity.Property(e => e.WebHlink)
                .HasMaxLength(255)
                .HasColumnName("WebHLink");
            entity.Property(e => e.WebInputLink).HasMaxLength(255);
            entity.Property(e => e.WebStyleId).HasColumnName("WebStyleID");
            entity.Property(e => e.WebTarget).HasMaxLength(30);
            entity.Property(e => e.WebText).HasMaxLength(20);
        });

        modelBuilder.Entity<WebStyle>(entity =>
        {
            entity.ToTable("WebStyle");

            entity.Property(e => e.Id)
                .HasDefaultValueSql("(newid())")
                .HasColumnName("ID");
            entity.Property(e => e.ActiveDate).HasColumnType("datetime");
            entity.Property(e => e.AspleftFrame)
                .HasMaxLength(255)
                .HasColumnName("ASPLeftFrame");
            entity.Property(e => e.AsptopFrame)
                .HasMaxLength(255)
                .HasColumnName("ASPTopFrame");
            entity.Property(e => e.Bedrnr)
                .HasMaxLength(3)
                .IsFixedLength();
            entity.Property(e => e.BgcolourBanner)
                .HasMaxLength(20)
                .HasColumnName("BGColourBanner");
            entity.Property(e => e.BgcolourTopFrame)
                .HasMaxLength(20)
                .HasColumnName("BGColourTopFrame");
            entity.Property(e => e.Bgimage).HasColumnName("BGImage");
            entity.Property(e => e.BgimageBottom).HasColumnName("BGImageBottom");
            entity.Property(e => e.BgimageTop).HasColumnName("BGImageTop");
            entity.Property(e => e.BgimageTopFrame).HasColumnName("BGImageTopFrame");
            entity.Property(e => e.Classification)
                .HasMaxLength(3)
                .IsFixedLength();
            entity.Property(e => e.DomainName).HasMaxLength(2048);
            entity.Property(e => e.FrontPage).HasMaxLength(255);
            entity.Property(e => e.HeightTopFrame).HasDefaultValue(70);
            entity.Property(e => e.Htmltext).HasColumnName("HTMLText");
            entity.Property(e => e.HtmltextLeftFrame).HasColumnName("HTMLTextLeftFrame");
            entity.Property(e => e.HtmltextTopFrame).HasColumnName("HTMLTextTopFrame");
            entity.Property(e => e.IsEnabled).HasDefaultValue(true);
            entity.Property(e => e.ItemSearchType)
                .HasMaxLength(1)
                .IsFixedLength();
            entity.Property(e => e.LeftFontFace)
                .HasMaxLength(10)
                .IsFixedLength();
            entity.Property(e => e.LeftFontSize)
                .HasMaxLength(10)
                .IsFixedLength();
            entity.Property(e => e.LeftFrameDocId).HasColumnName("LeftFrameDocID");
            entity.Property(e => e.MetatagKeyword).HasMaxLength(190);
            entity.Property(e => e.Rbgimage).HasColumnName("RBGImage");
            entity.Property(e => e.Sector)
                .HasMaxLength(10)
                .IsFixedLength();
            entity.Property(e => e.ShowMenuBar).HasDefaultValue((byte)1);
            entity.Property(e => e.SiteBgcolour)
                .HasMaxLength(20)
                .HasColumnName("SiteBGColour");
            entity.Property(e => e.SiteLanguage)
                .HasMaxLength(3)
                .IsFixedLength();
            entity.Property(e => e.SiteLayout).HasMaxLength(30);
            entity.Property(e => e.SiteName).HasMaxLength(65);
            entity.Property(e => e.SiteTextColour).HasMaxLength(20);
            entity.Property(e => e.TabColorTopFrame).HasMaxLength(20);
            entity.Property(e => e.TbgcolourTopFrame)
                .HasMaxLength(20)
                .HasColumnName("TBGColourTopFrame");
            entity.Property(e => e.TbgimageTopFrame).HasColumnName("TBGImageTopFrame");
            entity.Property(e => e.TextAlignment)
                .HasMaxLength(10)
                .IsFixedLength();
            entity.Property(e => e.TextColourBanner).HasMaxLength(20);
            entity.Property(e => e.TopFrameDocId).HasColumnName("TopFrameDocID");
            entity.Property(e => e.WidthLeftFrame).HasDefaultValue(175);
            entity.Property(e => e.Wstype).HasColumnName("WSType");
        });

        modelBuilder.Entity<WeekTimesheet>(entity =>
        {
            entity.ToTable("WeekTimesheet");

            entity.HasIndex(e => e.TimesheetRequestId, "IX_WeekTimesheet");

            entity.Property(e => e.Id)
                .HasDefaultValueSql("(newsequentialid())")
                .HasColumnName("ID");
            entity.Property(e => e.Created)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime");
            entity.Property(e => e.Modified)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime");
            entity.Property(e => e.RequestId).HasColumnName("RequestID");
            entity.Property(e => e.TimesheetRequestId).HasColumnName("TimesheetRequestID");
        });

        modelBuilder.Entity<Widget>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK_Widgets_1");

            entity.HasIndex(e => new { e.WidgetType, e.EntityType, e.EntityKey }, "NonClusteredIndex-20180731-102351");

            entity.Property(e => e.Id).ValueGeneratedNever();
            entity.Property(e => e.EntityKey).HasMaxLength(60);
            entity.Property(e => e.Syscreated)
                .HasColumnType("datetime")
                .HasColumnName("syscreated");
            entity.Property(e => e.Syscreator).HasColumnName("syscreator");
            entity.Property(e => e.Sysmodified)
                .HasColumnType("datetime")
                .HasColumnName("sysmodified");
            entity.Property(e => e.Sysmodifier).HasColumnName("sysmodifier");
        });

        modelBuilder.Entity<Word>(entity =>
        {
            entity.HasKey(e => e.Word1);

            entity.HasIndex(e => e.Id, "IX_WordsID");

            entity.Property(e => e.Word1)
                .HasMaxLength(64)
                .UseCollation("SQL_Latin1_General_CP1_CI_AI")
                .HasColumnName("Word");
            entity.Property(e => e.Id)
                .ValueGeneratedOnAdd()
                .HasColumnName("ID");
            entity.Property(e => e.UsedCount).HasDefaultValue(0);
        });

        modelBuilder.Entity<WordMergeAuthorization>(entity =>
        {
            entity.HasIndex(e => e.ItemId, "IX_WordMergeAuthorizations_ItemID");

            entity.Property(e => e.Id)
                .ValueGeneratedNever()
                .HasColumnName("ID");
            entity.Property(e => e.ItemId).HasColumnName("ItemID");
            entity.Property(e => e.RoleId).HasColumnName("RoleID");
            entity.Property(e => e.Syscreated)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("syscreated");
            entity.Property(e => e.Syscreator).HasColumnName("syscreator");
            entity.Property(e => e.Sysmodified)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("sysmodified");
            entity.Property(e => e.Sysmodifier).HasColumnName("sysmodifier");
        });

        modelBuilder.Entity<WordMergeDocument>(entity =>
        {
            entity.HasIndex(e => e.GroupId, "IX_WordMergeDocuments_GroupID");

            entity.HasIndex(e => e.Name, "IX_WordMergeDocuments_Name");

            entity.Property(e => e.Id)
                .ValueGeneratedNever()
                .HasColumnName("ID");
            entity.Property(e => e.GroupId).HasColumnName("GroupID");
            entity.Property(e => e.Language)
                .HasMaxLength(3)
                .IsFixedLength();
            entity.Property(e => e.Name).HasMaxLength(100);
            entity.Property(e => e.Syscreated)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("syscreated");
            entity.Property(e => e.Syscreator).HasColumnName("syscreator");
            entity.Property(e => e.Sysmodified)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("sysmodified");
            entity.Property(e => e.Sysmodifier).HasColumnName("sysmodifier");
            entity.Property(e => e.Timestamp)
                .IsRowVersion()
                .IsConcurrencyToken();

            entity.HasOne(d => d.Group).WithMany(p => p.WordMergeDocuments)
                .HasForeignKey(d => d.GroupId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_WordMergeDocuments_WordMergeGroups");
        });

        modelBuilder.Entity<WordMergeGroup>(entity =>
        {
            entity.HasIndex(e => e.Name, "IX_WordMergeGroups_Name");

            entity.Property(e => e.Id)
                .ValueGeneratedNever()
                .HasColumnName("ID");
            entity.Property(e => e.Name).HasMaxLength(100);
            entity.Property(e => e.Syscreated)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("syscreated");
            entity.Property(e => e.Syscreator).HasColumnName("syscreator");
            entity.Property(e => e.Sysmodified)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("sysmodified");
            entity.Property(e => e.Sysmodifier).HasColumnName("sysmodifier");
            entity.Property(e => e.Timestamp)
                .IsRowVersion()
                .IsConcurrencyToken();
        });

        modelBuilder.Entity<WordMergeLog>(entity =>
        {
            entity.ToTable("WordMergeLog");

            entity.Property(e => e.Id)
                .HasDefaultValueSql("(newid())")
                .HasColumnName("ID");
            entity.Property(e => e.AttachmentId).HasColumnName("AttachmentID");
            entity.Property(e => e.DocumentId).HasColumnName("DocumentID");
            entity.Property(e => e.Email).HasMaxLength(100);
            entity.Property(e => e.MailMergePendingId).HasColumnName("MailMergePendingID");
            entity.Property(e => e.SysCreated)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("sysCreated");
        });

        modelBuilder.Entity<WordMergePersonAuthorization>(entity =>
        {
            entity.HasIndex(e => e.ItemId, "IX_WordMergePersonAuthorizations_ItemID");

            entity.Property(e => e.Id)
                .ValueGeneratedNever()
                .HasColumnName("ID");
            entity.Property(e => e.Divisions).HasMaxLength(255);
            entity.Property(e => e.ItemId).HasColumnName("ItemID");
            entity.Property(e => e.ResId).HasColumnName("ResID");
            entity.Property(e => e.Syscreated)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("syscreated");
            entity.Property(e => e.Syscreator).HasColumnName("syscreator");
            entity.Property(e => e.Sysmodified)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("sysmodified");
            entity.Property(e => e.Sysmodifier).HasColumnName("sysmodifier");
        });

        modelBuilder.Entity<WordReference>(entity =>
        {
            entity.HasKey(e => new { e.Word, e.EntityType, e.Entity });

            entity.HasIndex(e => new { e.Entity, e.EntityType }, "IX_Entity");

            entity.HasIndex(e => new { e.EntityType, e.Entity, e.SubEntity }, "IX_Entitytype");

            entity.HasIndex(e => new { e.Word, e.Score, e.Entity, e.EntityType, e.SecurityLevel }, "IX_Score");

            entity.Property(e => e.InAttachmentCount).HasDefaultValue(0);
            entity.Property(e => e.InDocCount).HasDefaultValue(0);
            entity.Property(e => e.InSubject).HasDefaultValue(false);
            entity.Property(e => e.InSummary).HasDefaultValue(false);
            entity.Property(e => e.Language)
                .HasMaxLength(3)
                .IsFixedLength();
            entity.Property(e => e.Score).HasDefaultValue(0);
        });

        modelBuilder.Entity<WordSynonym>(entity =>
        {
            entity.HasIndex(e => e.SynonymGroup, "IX_SynonymGroup");

            entity.HasIndex(e => e.Word, "IX_Word");

            entity.Property(e => e.Id).HasColumnName("ID");
            entity.Property(e => e.Created).HasColumnType("datetime");
        });

        modelBuilder.Entity<WorkBreakdownStructureLine>(entity =>
        {
            entity.HasIndex(e => e.DeliverableCode, "IX_WorkBreakdownStructureLines_DeliverableCode");

            entity.HasIndex(e => e.ItemCode, "IX_WorkBreakdownStructureLines_ItemCode");

            entity.HasIndex(e => e.ProjectNumber, "IX_WorkBreakdownStructureLines_ProjectNumber");

            entity.HasIndex(e => e.Type, "IX_WorkBreakdownStructureLines_Type");

            entity.Property(e => e.Id)
                .ValueGeneratedNever()
                .HasColumnName("ID");
            entity.Property(e => e.AmountFc).HasColumnName("AmountFC");
            entity.Property(e => e.Currency)
                .HasMaxLength(3)
                .IsFixedLength();
            entity.Property(e => e.CustomerId).HasColumnName("CustomerID");
            entity.Property(e => e.DeliverableCode).HasMaxLength(30);
            entity.Property(e => e.Description).HasMaxLength(255);
            entity.Property(e => e.EndDate).HasColumnType("datetime");
            entity.Property(e => e.IsPurchased).HasDefaultValue(false);
            entity.Property(e => e.ItemCode).HasMaxLength(30);
            entity.Property(e => e.ProjectNumber).HasMaxLength(20);
            entity.Property(e => e.SalesAmountFc).HasColumnName("SalesAmountFC");
            entity.Property(e => e.SalesCurrency)
                .HasMaxLength(3)
                .IsFixedLength();
            entity.Property(e => e.StartDate).HasColumnType("datetime");
            entity.Property(e => e.Syscreated)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("syscreated");
            entity.Property(e => e.Syscreator).HasColumnName("syscreator");
            entity.Property(e => e.Sysmodified)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("sysmodified");
            entity.Property(e => e.Sysmodifier).HasColumnName("sysmodifier");
            entity.Property(e => e.Timestamp)
                .IsRowVersion()
                .IsConcurrencyToken();
            entity.Property(e => e.Type)
                .HasMaxLength(1)
                .IsFixedLength();
            entity.Property(e => e.UseTotalAmount).HasDefaultValue(false);
        });

        modelBuilder.Entity<WorkSchedule>(entity =>
        {
            entity.HasKey(e => e.Id).IsClustered(false);

            entity.HasIndex(e => e.CompanyCode, "CompanyCode").IsClustered();

            entity.HasIndex(e => e.EmpId, "EmpID");

            entity.HasIndex(e => e.ShiftId, "IX_WorkSchedules_Shiftid");

            entity.Property(e => e.Id)
                .ValueGeneratedNever()
                .HasColumnName("ID");
            entity.Property(e => e.CompanyCode)
                .HasMaxLength(3)
                .IsFixedLength();
            entity.Property(e => e.DayType)
                .HasMaxLength(1)
                .HasDefaultValue("N")
                .IsFixedLength();
            entity.Property(e => e.Description)
                .HasMaxLength(100)
                .HasDefaultValue("");
            entity.Property(e => e.EmpId).HasColumnName("EmpID");
            entity.Property(e => e.EndTime).HasColumnType("datetime");
            entity.Property(e => e.ScheduleType)
                .HasMaxLength(1)
                .IsFixedLength();
            entity.Property(e => e.ShiftId).HasColumnName("ShiftID");
            entity.Property(e => e.StartTime).HasColumnType("datetime");
            entity.Property(e => e.Syscreated)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("syscreated");
            entity.Property(e => e.Syscreator).HasColumnName("syscreator");
            entity.Property(e => e.Sysmodified)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("sysmodified");
            entity.Property(e => e.Sysmodifier).HasColumnName("sysmodifier");
        });

        modelBuilder.Entity<WorkScheduleGroup>(entity =>
        {
            entity.HasKey(e => e.Id).IsClustered(false);

            entity.HasIndex(e => e.Code, "IX_Code").IsClustered();

            entity.Property(e => e.Id)
                .HasDefaultValueSql("(newid())")
                .HasColumnName("ID");
            entity.Property(e => e.Code).HasMaxLength(15);
            entity.Property(e => e.CompanyCode)
                .HasMaxLength(3)
                .IsFixedLength();
            entity.Property(e => e.Created)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime");
            entity.Property(e => e.Description).HasMaxLength(100);
            entity.Property(e => e.Modified)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime");
            entity.Property(e => e.ParentId).HasColumnName("ParentID");
            entity.Property(e => e.ShiftId).HasColumnName("ShiftID");
            entity.Property(e => e.Status)
                .HasMaxLength(1)
                .IsFixedLength();
        });

        modelBuilder.Entity<WorkScheduleLink>(entity =>
        {
            entity.HasKey(e => e.Id).IsClustered(false);

            entity.HasIndex(e => e.Resource, "IX_Resource").IsClustered();

            entity.Property(e => e.Id)
                .HasDefaultValueSql("(newid())")
                .HasColumnName("ID");
            entity.Property(e => e.Created)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime");
            entity.Property(e => e.DayStart).HasDefaultValue(1);
            entity.Property(e => e.EndDate).HasColumnType("datetime");
            entity.Property(e => e.GroupCode).HasMaxLength(15);
            entity.Property(e => e.Modified)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime");
            entity.Property(e => e.ShiftId).HasColumnName("ShiftID");
            entity.Property(e => e.StartDate).HasColumnType("datetime");
            entity.Property(e => e.Status)
                .HasMaxLength(1)
                .IsFixedLength();
        });

        modelBuilder.Entity<Workcenter>(entity =>
        {
            entity.HasKey(e => e.Id)
                .HasName("PK_WORKCENTERS")
                .IsClustered(false);

            entity.HasIndex(e => e.Workcenter1, "IX_Workcenters_WorkCenter")
                .IsUnique()
                .IsClustered();

            entity.Property(e => e.Id).HasColumnName("ID");
            entity.Property(e => e.Blocked).HasDefaultValue((byte)0);
            entity.Property(e => e.Description).HasMaxLength(30);
            entity.Property(e => e.LaborHourOperating).HasMaxLength(30);
            entity.Property(e => e.LaborHourSetup).HasMaxLength(30);
            entity.Property(e => e.MachineHour).HasMaxLength(30);
            entity.Property(e => e.Syscreated)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("syscreated");
            entity.Property(e => e.Syscreator).HasColumnName("syscreator");
            entity.Property(e => e.Sysguid)
                .HasDefaultValueSql("(newid())")
                .HasColumnName("sysguid");
            entity.Property(e => e.Sysmodified)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("sysmodified");
            entity.Property(e => e.Sysmodifier).HasColumnName("sysmodifier");
            entity.Property(e => e.Timestamp)
                .IsRowVersion()
                .IsConcurrencyToken()
                .HasColumnName("timestamp");
            entity.Property(e => e.Workcenter1)
                .HasMaxLength(10)
                .IsFixedLength()
                .HasColumnName("Workcenter");
        });

        modelBuilder.Entity<WorkflowOwnershipOption>(entity =>
        {
            entity.Property(e => e.Id)
                .ValueGeneratedNever()
                .HasColumnName("ID");
            entity.Property(e => e.Description).HasMaxLength(100);
            entity.Property(e => e.TermId).HasColumnName("TermID");
        });

        modelBuilder.Entity<Workspace>(entity =>
        {
            entity.HasIndex(e => new { e.OwnerId, e.WorkspaceType }, "IX_Workspaces_OwnerID_WorkspaceType");

            entity.Property(e => e.Id).HasColumnName("ID");
            entity.Property(e => e.CheckedOut).HasColumnType("datetime");
            entity.Property(e => e.Name).HasMaxLength(200);
            entity.Property(e => e.OwnerId).HasColumnName("OwnerID");
            entity.Property(e => e.Syscreated)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("syscreated");
            entity.Property(e => e.Syscreator).HasColumnName("syscreator");
            entity.Property(e => e.Sysmodified)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("sysmodified");
            entity.Property(e => e.Sysmodifier).HasColumnName("sysmodifier");
            entity.Property(e => e.ThumbnailModifiedDate).HasColumnType("datetime");
            entity.Property(e => e.WorkspaceType).HasDefaultValue(1);
        });

        modelBuilder.Entity<WorkspaceCustomization>(entity =>
        {
            entity.ToTable("WorkspaceCustomization");

            entity.Property(e => e.Id).HasColumnName("ID");
            entity.Property(e => e.Syscreated)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("syscreated");
            entity.Property(e => e.Syscreator).HasColumnName("syscreator");
            entity.Property(e => e.Sysmodified)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("sysmodified");
            entity.Property(e => e.Sysmodifier).HasColumnName("sysmodifier");
            entity.Property(e => e.Type).HasMaxLength(255);
        });

        modelBuilder.Entity<WorkspaceNotification>(entity =>
        {
            entity.HasIndex(e => new { e.WorkspaceSharingId, e.WorkspaceSharingType, e.NotificationType }, "IX_WorkspaceNotifications_NotificationType");

            entity.Property(e => e.Id).HasColumnName("ID");
            entity.Property(e => e.WorkspaceSharingId).HasColumnName("WorkspaceSharingID");
        });

        modelBuilder.Entity<WorkspacePin>(entity =>
        {
            entity.HasIndex(e => new { e.Person, e.Workspace, e.PinnedBy }, "IX_WorkspacePins_Person_Workspace_PinnedBy");

            entity.Property(e => e.Id).HasColumnName("ID");
            entity.Property(e => e.Syscreated)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("syscreated");
            entity.Property(e => e.Syscreator).HasColumnName("syscreator");
            entity.Property(e => e.Sysmodified)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("sysmodified");
            entity.Property(e => e.Sysmodifier).HasColumnName("sysmodifier");
        });

        modelBuilder.Entity<WorkspaceSharedAccount>(entity =>
        {
            entity.HasIndex(e => new { e.Account, e.SecurityLevel, e.Workspace, e.Rights }, "IX_WorkspaceSharedAccounts_Account_SecurityLevel_Workspace_Rights");

            entity.HasIndex(e => new { e.Workspace, e.Rights }, "IX_WorkspaceSharedAccounts_Workspace_Rights");

            entity.Property(e => e.Id).HasColumnName("ID");
            entity.Property(e => e.Syscreated)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("syscreated");
            entity.Property(e => e.Syscreator).HasColumnName("syscreator");
            entity.Property(e => e.Sysmodified)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("sysmodified");
            entity.Property(e => e.Sysmodifier).HasColumnName("sysmodifier");
        });

        modelBuilder.Entity<WorkspaceSharedCostCenter>(entity =>
        {
            entity.HasIndex(e => new { e.CostCenter, e.SecurityLevel, e.Workspace, e.Rights }, "IX_WorkspaceSharedCostCenters_CostCenter_SecurityLevel_Workspace_Rights");

            entity.HasIndex(e => new { e.Workspace, e.Rights }, "IX_WorkspaceSharedCostCenters_Workspace_Rights");

            entity.Property(e => e.Id).HasColumnName("ID");
            entity.Property(e => e.CostCenter)
                .HasMaxLength(8)
                .IsFixedLength();
            entity.Property(e => e.Syscreated)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("syscreated");
            entity.Property(e => e.Syscreator).HasColumnName("syscreator");
            entity.Property(e => e.Sysmodified)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("sysmodified");
            entity.Property(e => e.Sysmodifier).HasColumnName("sysmodifier");
        });

        modelBuilder.Entity<WorkspaceSharedCostCenterGroup>(entity =>
        {
            entity.HasIndex(e => new { e.CostCenterGroup, e.SecurityLevel, e.Workspace, e.Rights }, "IX_WorkspaceSharedCostCenterGroups_CostCenterGroup_SecurityLevel_Workspace_Rights");

            entity.HasIndex(e => new { e.Workspace, e.Rights }, "IX_WorkspaceSharedCostCenterGroups_Workspace_Rights");

            entity.Property(e => e.Id).HasColumnName("ID");
            entity.Property(e => e.CostCenterGroup).HasMaxLength(30);
            entity.Property(e => e.Syscreated)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("syscreated");
            entity.Property(e => e.Syscreator).HasColumnName("syscreator");
            entity.Property(e => e.Sysmodified)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("sysmodified");
            entity.Property(e => e.Sysmodifier).HasColumnName("sysmodifier");
        });

        modelBuilder.Entity<WorkspaceSharedDivision>(entity =>
        {
            entity.HasIndex(e => new { e.Division, e.SecurityLevel, e.Workspace, e.Rights }, "IX_WorkspaceSharedDivisions_Division_SecurityLevel_Workspace_Rights");

            entity.HasIndex(e => new { e.Workspace, e.Rights }, "IX_WorkspaceSharedDivisions_Workspace_Rights");

            entity.Property(e => e.Id).HasColumnName("ID");
            entity.Property(e => e.Division)
                .HasMaxLength(3)
                .IsFixedLength();
            entity.Property(e => e.Syscreated)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("syscreated");
            entity.Property(e => e.Syscreator).HasColumnName("syscreator");
            entity.Property(e => e.Sysmodified)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("sysmodified");
            entity.Property(e => e.Sysmodifier).HasColumnName("sysmodifier");
        });

        modelBuilder.Entity<WorkspaceSharedJobGroup>(entity =>
        {
            entity.HasIndex(e => new { e.JobGroup, e.SecurityLevel, e.Workspace, e.Rights }, "IX_WorkspaceSharedJobGroups_JobGroup_SecurityLevel_Workspace_Rights");

            entity.HasIndex(e => new { e.Workspace, e.Rights }, "IX_WorkspaceSharedJobGroups_Workspace_Rights");

            entity.Property(e => e.Id).HasColumnName("ID");
            entity.Property(e => e.JobGroup)
                .HasMaxLength(10)
                .IsFixedLength();
            entity.Property(e => e.Syscreated)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("syscreated");
            entity.Property(e => e.Syscreator).HasColumnName("syscreator");
            entity.Property(e => e.Sysmodified)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("sysmodified");
            entity.Property(e => e.Sysmodifier).HasColumnName("sysmodifier");
        });

        modelBuilder.Entity<WorkspaceSharedJobTitle>(entity =>
        {
            entity.HasIndex(e => new { e.JobTitle, e.SecurityLevel, e.Workspace, e.Rights }, "IX_WorkspaceSharedJobTitles_JobTitle_SecurityLevel_Workspace_Rights");

            entity.HasIndex(e => new { e.Workspace, e.Rights }, "IX_WorkspaceSharedJobTitles_Workspace_Rights");

            entity.Property(e => e.Id).HasColumnName("ID");
            entity.Property(e => e.JobTitle).HasMaxLength(12);
            entity.Property(e => e.Syscreated)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("syscreated");
            entity.Property(e => e.Syscreator).HasColumnName("syscreator");
            entity.Property(e => e.Sysmodified)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("sysmodified");
            entity.Property(e => e.Sysmodifier).HasColumnName("sysmodifier");
        });

        modelBuilder.Entity<WorkspaceSharedPerson>(entity =>
        {
            entity.HasIndex(e => new { e.Workspace, e.Rights }, "IX_WorkspaceSharedPeople_Workspace_Rights");

            entity.HasIndex(e => new { e.Person, e.SecurityLevel, e.Workspace, e.Rights }, "IX_WorkspaceSharedPoeple_Person_SecurityLevel_Workspace_Rights");

            entity.Property(e => e.Id).HasColumnName("ID");
            entity.Property(e => e.Syscreated)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("syscreated");
            entity.Property(e => e.Syscreator).HasColumnName("syscreator");
            entity.Property(e => e.Sysmodified)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("sysmodified");
            entity.Property(e => e.Sysmodifier).HasColumnName("sysmodifier");
        });

        modelBuilder.Entity<WorkspaceSharedProject>(entity =>
        {
            entity.HasIndex(e => new { e.Project, e.SecurityLevel, e.Workspace, e.Rights }, "IX_WorkspaceSharedProjects_Projects_SecurityLevel_Workspace_Rights");

            entity.HasIndex(e => new { e.Workspace, e.Rights }, "IX_WorkspaceSharedProjects_Workspace_Rights");

            entity.Property(e => e.Id).HasColumnName("ID");
            entity.Property(e => e.Project).HasMaxLength(20);
            entity.Property(e => e.Syscreated)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("syscreated");
            entity.Property(e => e.Syscreator).HasColumnName("syscreator");
            entity.Property(e => e.Sysmodified)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("sysmodified");
            entity.Property(e => e.Sysmodifier).HasColumnName("sysmodifier");
        });

        modelBuilder.Entity<WorkspaceSharedRole>(entity =>
        {
            entity.HasIndex(e => new { e.RoleId, e.RoleLevel, e.SecurityLevel, e.Workspace, e.Rights }, "IX_WorkspaceSharedRoles_RoleID_RoleLevel_SecurityLevel_Workspace_Rights");

            entity.HasIndex(e => new { e.Workspace, e.Rights }, "IX_WorkspaceSharedRoles_Workspace_Rights");

            entity.Property(e => e.Id).HasColumnName("ID");
            entity.Property(e => e.RoleId).HasColumnName("RoleID");
            entity.Property(e => e.Syscreated)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("syscreated");
            entity.Property(e => e.Syscreator).HasColumnName("syscreator");
            entity.Property(e => e.Sysmodified)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("sysmodified");
            entity.Property(e => e.Sysmodifier).HasColumnName("sysmodifier");
        });

        modelBuilder.Entity<Xmldatum>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("XMLData");

            entity.HasIndex(e => e.Id, "PK_XMLData").IsClustered();

            entity.Property(e => e.Id).HasColumnName("ID");
            entity.Property(e => e.Syscreated)
                .HasColumnType("datetime")
                .HasColumnName("syscreated");
            entity.Property(e => e.Syscreator).HasColumnName("syscreator");
            entity.Property(e => e.Sysmodified)
                .HasColumnType("datetime")
                .HasColumnName("sysmodified");
            entity.Property(e => e.Sysmodifier).HasColumnName("sysmodifier");
        });

        modelBuilder.Entity<Xmldefinition>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("XMLDefinitions");

            entity.HasIndex(e => e.Description, "IX_XMLDefinitions");

            entity.HasIndex(e => e.Id, "PK_XMLDefinitions").IsClustered();

            entity.Property(e => e.Description).HasMaxLength(255);
            entity.Property(e => e.Id).HasColumnName("ID");
            entity.Property(e => e.Syscreated)
                .HasColumnType("datetime")
                .HasColumnName("syscreated");
            entity.Property(e => e.Syscreator).HasColumnName("syscreator");
            entity.Property(e => e.Sysmodified)
                .HasColumnType("datetime")
                .HasColumnName("sysmodified");
            entity.Property(e => e.Sysmodifier).HasColumnName("sysmodifier");
        });

        modelBuilder.Entity<XmldefinitionsTemplate>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("XMLDefinitionsTemplates");

            entity.HasIndex(e => e.Code, "IX_XMLDefinitionsTemplates");

            entity.HasIndex(e => e.Id, "PK_XMLDefinitionsTemplates").IsClustered();

            entity.HasIndex(e => e.Code, "UQ__XMLDefin__A25C5AA7A1699B1A").IsUnique();

            entity.Property(e => e.Active).HasDefaultValue(true);
            entity.Property(e => e.Description).HasMaxLength(60);
            entity.Property(e => e.Id).HasColumnName("ID");
            entity.Property(e => e.Name).HasMaxLength(60);
            entity.Property(e => e.Syscreated)
                .HasColumnType("datetime")
                .HasColumnName("syscreated");
            entity.Property(e => e.Syscreator).HasColumnName("syscreator");
            entity.Property(e => e.Sysmodified)
                .HasColumnType("datetime")
                .HasColumnName("sysmodified");
            entity.Property(e => e.Sysmodifier).HasColumnName("sysmodifier");
            entity.Property(e => e.Version).HasMaxLength(60);
        });

        modelBuilder.Entity<Xmlevent>(entity =>
        {
            entity.HasKey(e => e.Id).IsClustered(false);

            entity.ToTable("XMLEvents");

            entity.HasIndex(e => new { e.CompanyCode, e.BatchId }, "IX_XMLEvents_CompanyBatch").IsClustered();

            entity.HasIndex(e => new { e.CompanyCode, e.Topic, e.ImportExport, e.EventDate }, "IX_XMLEvents_CompanyTopic");

            entity.HasIndex(e => new { e.HumresId, e.CompanyCode }, "IX_XMLEvents_HumresCompany");

            entity.Property(e => e.Id)
                .HasDefaultValueSql("(newid())")
                .HasColumnName("ID");
            entity.Property(e => e.BatchId).HasColumnName("BatchID");
            entity.Property(e => e.CompanyCode)
                .HasMaxLength(3)
                .IsFixedLength();
            entity.Property(e => e.DataKey).HasMaxLength(40);
            entity.Property(e => e.DataKeyAlt).HasMaxLength(40);
            entity.Property(e => e.EventDate)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime");
            entity.Property(e => e.EventDescription).HasMaxLength(1000);
            entity.Property(e => e.HumresId).HasColumnName("HumresID");
            entity.Property(e => e.ImportExport)
                .HasMaxLength(1)
                .IsFixedLength();
            entity.Property(e => e.Node).HasMaxLength(30);
            entity.Property(e => e.Topic).HasMaxLength(30);
            entity.Property(e => e.Xmlnode).HasColumnName("XMLNode");
        });

        modelBuilder.Entity<Xmlfile>(entity =>
        {
            entity.HasKey(e => e.Name);

            entity.ToTable("XMLFiles");

            entity.Property(e => e.Name).HasMaxLength(60);
            entity.Property(e => e.ModifiedDate).HasColumnType("datetime");
        });

        modelBuilder.Entity<XmlgltransactionsLog>(entity =>
        {
            entity.HasKey(e => e.Id).IsClustered(false);

            entity.ToTable("XMLGLTransactionsLog");

            entity.HasIndex(e => new { e.CompanyCode, e.ImportDate }, "IX_XMLGLTransLog_CompanyDate").IsClustered();

            entity.HasIndex(e => new { e.CompanyCode, e.HumresId }, "IX_XMLGLTransLog_CompanyHumres");

            entity.Property(e => e.Id)
                .HasDefaultValueSql("(newid())")
                .HasColumnName("ID");
            entity.Property(e => e.CompanyCode)
                .HasMaxLength(3)
                .IsFixedLength();
            entity.Property(e => e.HumresId).HasColumnName("HumresID");
            entity.Property(e => e.ImportDate)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime");
            entity.Property(e => e.Status)
                .HasMaxLength(1)
                .HasDefaultValue("P")
                .IsFixedLength();
        });

        modelBuilder.Entity<Xmlreplication>(entity =>
        {
            entity.ToTable("XMLReplications");

            entity.Property(e => e.Id)
                .HasDefaultValueSql("(newid())")
                .HasColumnName("ID");
            entity.Property(e => e.Division)
                .HasMaxLength(3)
                .IsFixedLength();
            entity.Property(e => e.EndDate).HasColumnType("datetime");
            entity.Property(e => e.StartDate)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime");
            entity.Property(e => e.Syscreated)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("syscreated");
            entity.Property(e => e.Syscreator).HasColumnName("syscreator");
            entity.Property(e => e.Sysmodified)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("sysmodified");
            entity.Property(e => e.Sysmodifier).HasColumnName("sysmodifier");
            entity.Property(e => e.Topic).HasMaxLength(30);
        });

        modelBuilder.Entity<XmlreplicationSource>(entity =>
        {
            entity.ToTable("XMLReplicationSources");

            entity.Property(e => e.Id)
                .HasDefaultValueSql("(newid())")
                .HasColumnName("ID");
            entity.Property(e => e.Name).HasMaxLength(30);
            entity.Property(e => e.Syscreated)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("syscreated");
            entity.Property(e => e.Syscreator).HasColumnName("syscreator");
            entity.Property(e => e.Sysmodified)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("sysmodified");
            entity.Property(e => e.Sysmodifier).HasColumnName("sysmodifier");
            entity.Property(e => e.WebSite).HasMaxLength(256);
        });

        modelBuilder.Entity<Xmltopic>(entity =>
        {
            entity.HasKey(e => e.Id).IsClustered(false);

            entity.ToTable("XMLTopics");

            entity.HasIndex(e => new { e.CompanyCode, e.Topic }, "UQ_XMLTopics_CompanyTopic")
                .IsUnique()
                .IsClustered();

            entity.Property(e => e.Id)
                .ValueGeneratedNever()
                .HasColumnName("ID");
            entity.Property(e => e.CompanyCode).HasMaxLength(3);
            entity.Property(e => e.Topic).HasMaxLength(30);
            entity.Property(e => e.TopicSm)
                .HasColumnType("datetime")
                .HasColumnName("TopicSM");
            entity.Property(e => e.TopicTs)
                .HasMaxLength(8)
                .IsFixedLength()
                .HasColumnName("TopicTS");
        });

        modelBuilder.Entity<XmltopicDefinition>(entity =>
        {
            entity.HasKey(e => e.Id).IsClustered(false);

            entity.ToTable("XMLTopicDefinitions");

            entity.HasIndex(e => new { e.Code, e.Type }, "IX_XMLTopicDefs_CodeType")
                .IsUnique()
                .IsClustered();

            entity.Property(e => e.Id)
                .HasDefaultValueSql("(newid())")
                .HasColumnName("ID");
            entity.Property(e => e.AllowCreate).HasDefaultValue(true);
            entity.Property(e => e.AllowUpdate).HasDefaultValue(true);
            entity.Property(e => e.Assembly).HasMaxLength(60);
            entity.Property(e => e.Class).HasMaxLength(60);
            entity.Property(e => e.Code).HasMaxLength(30);
            entity.Property(e => e.Description).HasMaxLength(60);
            entity.Property(e => e.DescriptionTermId).HasColumnName("DescriptionTermID");
            entity.Property(e => e.List).HasMaxLength(30);
            entity.Property(e => e.PageSize).HasDefaultValue(100);
        });

        modelBuilder.Entity<XmltopicHistory>(entity =>
        {
            entity.HasKey(e => e.Id).IsClustered(false);

            entity.ToTable("XMLTopicHistory");

            entity.HasIndex(e => new { e.CompanyCode, e.Topic }, "UQ_XMLTopicHistory_CompanyTopic")
                .IsUnique()
                .IsClustered();

            entity.Property(e => e.Id)
                .ValueGeneratedNever()
                .HasColumnName("ID");
            entity.Property(e => e.CompanyCode).HasMaxLength(3);
            entity.Property(e => e.Topic).HasMaxLength(30);
            entity.Property(e => e.TsD)
                .HasMaxLength(8)
                .IsFixedLength()
                .HasColumnName("ts_d");
            entity.Property(e => e.TsU)
                .HasMaxLength(8)
                .IsFixedLength()
                .HasColumnName("ts_u");
        });

        modelBuilder.Entity<XmltopicsDefinition>(entity =>
        {
            entity.HasKey(e => e.Topic);

            entity.ToTable("XMLTopicsDefinition");

            entity.Property(e => e.Topic).HasMaxLength(30);
            entity.Property(e => e.CsvprogId)
                .HasMaxLength(30)
                .HasColumnName("CSVProgID");
            entity.Property(e => e.FunctionId).HasColumnName("FunctionID");
            entity.Property(e => e.Mode).HasDefaultValue(1);
            entity.Property(e => e.Options).HasMaxLength(100);
            entity.Property(e => e.PageSize).HasDefaultValue(100);
            entity.Property(e => e.ProgId)
                .HasMaxLength(30)
                .HasColumnName("ProgID");
            entity.Property(e => e.SecurityLevel).HasDefaultValue(10);
            entity.Property(e => e.SelectionAsp)
                .HasMaxLength(60)
                .HasColumnName("SelectionASP");
            entity.Property(e => e.SelectionSlc)
                .HasMaxLength(60)
                .HasColumnName("SelectionSLC");
            entity.Property(e => e.TermId).HasColumnName("TermID");
            entity.Property(e => e.Xmlnode)
                .HasMaxLength(60)
                .HasColumnName("XMLNode");
        });

        modelBuilder.Entity<_1Add6m>(entity =>
        {
            entity
                .HasNoKey()
                .ToView("1_add6m");

            entity.Property(e => e.Bunew)
                .HasMaxLength(255)
                .HasColumnName("BUNew");
            entity.Property(e => e.Datum2).HasColumnName("datum2");
            entity.Property(e => e.TabN).HasMaxLength(255);
            entity.Property(e => e.TitleNewCode).HasMaxLength(255);
        });

        modelBuilder.Entity<_1Hrview>(entity =>
        {
            entity
                .HasNoKey()
                .ToView("1_HRView");

            entity.Property(e => e.DocType).HasMaxLength(255);
            entity.Property(e => e.Expr1).HasMaxLength(255);
            entity.Property(e => e.Expr2).HasMaxLength(255);
            entity.Property(e => e.F18).HasMaxLength(255);
            entity.Property(e => e.FirstName)
                .HasMaxLength(255)
                .HasColumnName("first_name");
            entity.Property(e => e.Freefield1)
                .HasMaxLength(50)
                .UseCollation("SQL_Latin1_General_CP1_CI_AI")
                .HasColumnName("freefield1");
            entity.Property(e => e.Fullname)
                .HasMaxLength(64)
                .UseCollation("SQL_Latin1_General_CP1_CI_AI")
                .HasColumnName("fullname");
            entity.Property(e => e.Id).HasColumnName("ID");
            entity.Property(e => e.IssueDate).HasMaxLength(255);
            entity.Property(e => e.IssuedBy).HasMaxLength(255);
            entity.Property(e => e.JobCodeold).HasMaxLength(255);
            entity.Property(e => e.JobDescription).HasMaxLength(255);
            entity.Property(e => e.Ppcode)
                .HasMaxLength(255)
                .HasColumnName("PPCode");
            entity.Property(e => e.ResId).HasColumnName("res_id");
            entity.Property(e => e.Schedule).HasMaxLength(255);
            entity.Property(e => e.Scurrency).HasMaxLength(255);
            entity.Property(e => e.Sn)
                .HasMaxLength(255)
                .HasColumnName("SN");
            entity.Property(e => e.SocsecNr)
                .HasMaxLength(50)
                .HasColumnName("socsec_nr");
            entity.Property(e => e.SurName)
                .HasMaxLength(255)
                .HasColumnName("sur_name");
            entity.Property(e => e.TabNo).HasMaxLength(255);
            entity.Property(e => e._1oldBu)
                .HasMaxLength(255)
                .HasColumnName("1OldBU");
        });

        modelBuilder.Entity<_1manager>(entity =>
        {
            entity
                .HasNoKey()
                .ToView("1Managers");

            entity.Property(e => e.Costcenter)
                .HasMaxLength(8)
                .IsFixedLength()
                .HasColumnName("costcenter");
            entity.Property(e => e.EmpStat)
                .HasMaxLength(1)
                .IsFixedLength()
                .HasColumnName("emp_stat");
            entity.Property(e => e.Fullname)
                .HasMaxLength(64)
                .UseCollation("SQL_Latin1_General_CP1_CI_AI")
                .HasColumnName("fullname");
            entity.Property(e => e.JobTitle)
                .HasMaxLength(12)
                .HasColumnName("job_title");
            entity.Property(e => e.ResId).HasColumnName("res_id");
        });
        modelBuilder.HasSequence<int>("SEQ_actlogCode")
            .StartsAt(1000L)
            .HasMin(0L);
        modelBuilder.HasSequence<int>("SEQ_actrequestCode")
            .StartsAt(1000L)
            .HasMin(0L);

        OnModelCreatingPartial(modelBuilder);
    }

    partial void OnModelCreatingPartial(ModelBuilder modelBuilder);
}
